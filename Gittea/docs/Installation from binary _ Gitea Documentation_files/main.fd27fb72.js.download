/*! For license information please see main.fd27fb72.js.LICENSE.txt */
(self.webpackChunkgitea_docs=self.webpackChunkgitea_docs||[]).push([[179],{1728:(e,t,n)=>{"use strict";function r(e){var t,n,s="";if("string"==typeof e||"number"==typeof e)s+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(s&&(s+=" "),s+=n);else for(t in e)e[t]&&(s&&(s+=" "),s+=t);return s}n.d(t,{Z:()=>s});const s=function(){for(var e,t,n=0,s="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(s&&(s+=" "),s+=t);return s}},723:(e,t,n)=>{"use strict";n.d(t,{Z:()=>u});n(67294);var r=n(68356),s=n.n(r),o=n(16887);const i={"000362fe":[()=>n.e(192).then(n.bind(n,93137)),"@site/versioned_docs/version-1.20/usage/issue-pull-request-templates.md",93137],"001d867d":[()=>n.e(4996).then(n.bind(n,88004)),"@site/versioned_docs/version-1.20/usage/packages/swift.md",88004],"02a99f81":[()=>n.e(9074).then(n.bind(n,20287)),"@site/versioned_docs/version-1.20/contributing/guidelines-frontend.md",20287],"036204f0":[()=>n.e(8470).then(n.bind(n,15658)),"@site/versioned_docs/version-1.20/usage/actions/quickstart.md",15658],"04039183":[()=>n.e(1390).then(n.bind(n,62880)),"@site/versioned_docs/version-1.19/installation/upgrade-from-gitea.md",62880],"042da145":[()=>n.e(2387).then(n.bind(n,25986)),"@site/versioned_docs/version-1.21/usage/profile-readme.md",25986],"0452e3d0":[()=>n.e(8868).then(n.bind(n,36234)),"@site/docs/usage/profile-readme.md",36234],"0466c8a8":[()=>n.e(1613).then(n.t.bind(n,89711,19)),"~docs/default/category-120-docs-category-contributing-eb7.json",89711],"0493ab7a":[()=>n.e(6256).then(n.bind(n,70943)),"@site/versioned_docs/version-1.21/administration/repo-indexer.md",70943],"059a855e":[()=>n.e(8001).then(n.bind(n,88063)),"@site/versioned_docs/version-1.19/administration/https-support.md",88063],"05f42a77":[()=>n.e(4116).then(n.bind(n,83479)),"@site/versioned_docs/version-1.20/usage/secrets.md",83479],"06242fb8":[()=>n.e(3178).then(n.t.bind(n,41837,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/redocApiSpecV1.2-plugin-redoc-0.json",41837],"07143415":[()=>n.e(8973).then(n.bind(n,79703)),"@site/docs/usage/packages/nuget.md",79703],"071e3419":[()=>n.e(1206).then(n.bind(n,30665)),"@site/versioned_docs/version-1.21/usage/merge-message-templates.md",30665],"07d54999":[()=>n.e(5465).then(n.bind(n,18648)),"@site/versioned_docs/version-1.21/usage/pull-request.md",18648],"08bce0ce":[()=>n.e(5054).then(n.bind(n,96284)),"@site/versioned_docs/version-1.19/usage/labels.md",96284],"08bd884c":[()=>n.e(3667).then(n.bind(n,28232)),"@site/versioned_docs/version-1.20/administration/config-cheat-sheet.md",28232],"0a84bc75":[()=>n.e(199).then(n.bind(n,88678)),"@site/versioned_docs/version-1.21/installation/run-as-service-in-ubuntu.md",88678],"0ab7a841":[()=>n.e(5496).then(n.bind(n,98392)),"@site/versioned_docs/version-1.20/installation/from-binary.md",98392],"0bcabe4c":[()=>n.e(7920).then(n.bind(n,81146)),"@site/docs/installation/on-cloud-provider.md",81146],"0bfac75f":[()=>n.e(9500).then(n.bind(n,62473)),"@site/versioned_docs/version-1.20/usage/agit-support.md",62473],"0c5922f9":[()=>n.e(8130).then(n.bind(n,83686)),"@site/versioned_docs/version-1.19/usage/clone-filter.md",83686],"0d410649":[()=>n.e(5989).then(n.bind(n,17446)),"@site/versioned_docs/version-1.20/installation/with-docker-rootless.md",17446],"0e384e19":[()=>n.e(9671).then(n.bind(n,47876)),"@site/docs/intro.md",47876],"0e632177":[()=>n.e(6869).then(n.bind(n,62379)),"@site/docs/usage/actions/faq.md",62379],"0eb98170":[()=>n.e(9672).then(n.bind(n,47469)),"@site/versioned_docs/version-1.20/installation/from-package.md",47469],"0ec93a14":[()=>n.e(6427).then(n.bind(n,16639)),"@site/versioned_docs/version-1.21/usage/repo-mirror.md",16639],"0f7b856e":[()=>n.e(5435).then(n.bind(n,32309)),"@site/versioned_docs/version-1.20/contributing/guidelines-refactoring.md",32309],"0fbf5e9a":[()=>n.e(6244).then(n.bind(n,89722)),"@site/versioned_docs/version-1.20/installation/upgrade-from-gitea.md",89722],"1051ae5b":[()=>n.e(425).then(n.bind(n,5851)),"@site/docs/usage/webhooks.md",5851],11042982:[()=>n.e(718).then(n.bind(n,74188)),"@site/versioned_docs/version-1.21/usage/actions/quickstart.md",74188],"113c7499":[()=>n.e(8231).then(n.bind(n,46058)),"@site/versioned_docs/version-1.19/development/migrations.md",46058],"125282d8":[()=>n.e(2939).then(n.bind(n,47468)),"@site/versioned_docs/version-1.21/installation/on-cloud-provider.md",47468],"12a62887":[()=>n.e(9167).then(n.bind(n,80040)),"@site/docs/usage/agit-support.md",80040],"13bdfb05":[()=>n.e(8358).then(n.bind(n,37234)),"@site/versioned_docs/version-1.21/usage/actions/comparison.md",37234],"14b152b5":[()=>n.e(3205).then(n.t.bind(n,71626,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-1/plugin-route-context-module-100.json",71626],"14eb3368":[()=>Promise.all([n.e(532),n.e(9817)]).then(n.bind(n,34228)),"@theme/DocCategoryGeneratedIndexPage",34228],"15018e36":[()=>n.e(271).then(n.bind(n,24692)),"@site/versioned_docs/version-1.19/development/hacking-on-gitea.md",24692],"156eb5fc":[()=>n.e(2357).then(n.t.bind(n,62750,19)),"~docs/default/category-next-docs-category-usage-4e6.json",62750],16727632:[()=>n.e(3999).then(n.bind(n,90789)),"@site/versioned_docs/version-1.19/packages/overview.md",90789],"169cf1c0":[()=>n.e(9686).then(n.t.bind(n,68486,19)),"~docs/default/category-next-docs-category-development-6cc.json",68486],"16acc14c":[()=>n.e(6870).then(n.bind(n,48411)),"@site/docs/usage/actions/act-runner.md",48411],"16b26bc3":[()=>n.e(574).then(n.bind(n,90118)),"@site/versioned_docs/version-1.20/help/faq.md",90118],"16e122d4":[()=>n.e(9076).then(n.bind(n,69680)),"@site/versioned_docs/version-1.21/usage/packages/composer.md",69680],17896441:[()=>Promise.all([n.e(532),n.e(6472),n.e(7918)]).then(n.bind(n,70385)),"@theme/DocItem",70385],17963394:[()=>n.e(528).then(n.t.bind(n,21294,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/redocApiLayoutV1-plugin-redoc-0.json",21294],"18371c31":[()=>n.e(3644).then(n.bind(n,68523)),"@site/docs/usage/secrets.md",68523],18438858:[()=>n.e(1378).then(n.bind(n,4540)),"@site/docs/usage/packages/storage.md",4540],"194ee777":[()=>n.e(2488).then(n.bind(n,8092)),"@site/versioned_docs/version-1.19/administration/signing.md",8092],"198e3d52":[()=>n.e(653).then(n.bind(n,91663)),"@site/versioned_docs/version-1.21/usage/packages/swift.md",91663],"1a4e3797":[()=>Promise.all([n.e(532),n.e(1321)]).then(n.bind(n,42027)),"@theme/SearchPage",42027],"1c5c83a8":[()=>n.e(7208).then(n.bind(n,3185)),"@site/versioned_docs/version-1.20/usage/packages/helm.md",3185],"1d2620c7":[()=>n.e(5719).then(n.bind(n,39302)),"@site/docs/usage/labels.md",39302],"1e87c929":[()=>n.e(2290).then(n.bind(n,41292)),"@site/docs/contributing/guidelines-refactoring.md",41292],"1f858c42":[()=>n.e(9242).then(n.bind(n,33740)),"@site/versioned_docs/version-1.21/administration/environment-variables.md",33740],"2003db85":[()=>n.e(3186).then(n.bind(n,99652)),"@site/versioned_docs/version-1.20/usage/actions/act-runner.md",99652],"216b5378":[()=>n.e(1490).then(n.bind(n,98936)),"@site/docs/administration/reverse-proxies.md",98936],"23dd491f":[()=>n.e(1740).then(n.bind(n,2477)),"@site/versioned_docs/version-1.20/usage/packages/conan.md",2477],"24093f05":[()=>n.e(3161).then(n.bind(n,52415)),"@site/versioned_docs/version-1.19/packages/composer.md",52415],"247a242c":[()=>n.e(4632).then(n.t.bind(n,84730,19)),"~docs/default/category-next-docs-category-help-bc8.json",84730],"249ae2b3":[()=>n.e(8391).then(n.bind(n,48881)),"@site/docs/usage/blame.md",48881],"24a894e3":[()=>n.e(4770).then(n.bind(n,39192)),"@site/versioned_docs/version-1.20/usage/packages/rubygems.md",39192],"2562df19":[()=>n.e(1307).then(n.t.bind(n,82962,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-2/redocApiLayoutV1-plugin-redoc-2.json",82962],"25b99520":[()=>n.e(2159).then(n.bind(n,68787)),"@site/versioned_docs/version-1.21/usage/actions/faq.md",68787],"25d9d665":[()=>n.e(9141).then(n.bind(n,34329)),"@site/docs/usage/multi-factor-authentication.md",34329],26407152:[()=>n.e(4119).then(n.bind(n,6310)),"@site/docs/usage/packages/npm.md",6310],"273e2073":[()=>n.e(9579).then(n.t.bind(n,97831,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-1/redocApiLayoutV1-plugin-redoc-1.json",97831],"27861d15":[()=>n.e(4375).then(n.bind(n,38113)),"@site/versioned_docs/version-1.20/usage/packages/pypi.md",38113],"27b224e8":[()=>n.e(1423).then(n.bind(n,59021)),"@site/docs/installation/with-docker.md",59021],"27e65a37":[()=>n.e(3302).then(n.bind(n,75930)),"@site/versioned_docs/version-1.19/administration/reverse-proxies.md",75930],"2aaee83e":[()=>n.e(5085).then(n.bind(n,73038)),"@site/versioned_docs/version-1.21/help/faq.md",73038],"2b156e00":[()=>n.e(8581).then(n.bind(n,53716)),"@site/versioned_docs/version-1.21/usage/secrets.md",53716],"2b1dc527":[()=>n.e(5605).then(n.bind(n,3473)),"@site/versioned_docs/version-1.21/usage/authentication.md",3473],"2bc02c69":[()=>n.e(6124).then(n.t.bind(n,65089,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-2/redocApiSpecV1.2-plugin-redoc-2.json",65089],"2cb10e59":[()=>n.e(7363).then(n.bind(n,14749)),"@site/docs/usage/badge.md",14749],"2cf9491b":[()=>n.e(7327).then(n.bind(n,92810)),"@site/versioned_docs/version-1.20/administration/fail2ban-setup.md",92810],"2d81ea8e":[()=>n.e(4133).then(n.bind(n,7730)),"@site/docs/installation/on-kubernetes.md",7730],"2df8c9b4":[()=>n.e(8950).then(n.bind(n,72027)),"@site/versioned_docs/version-1.19/awesome.md",72027],"2e3ddd13":[()=>n.e(7412).then(n.bind(n,65420)),"@site/versioned_docs/version-1.21/awesome.md",65420],"2ed92642":[()=>n.e(1940).then(n.bind(n,86067)),"@site/versioned_docs/version-1.20/installation/on-kubernetes.md",86067],"2ffb1194":[()=>n.e(849).then(n.bind(n,42868)),"@site/versioned_docs/version-1.21/administration/backup-and-restore.md",42868],"30a63dfc":[()=>n.e(6682).then(n.bind(n,56493)),"@site/versioned_docs/version-1.19/development/api-usage.md",56493],"30eddb98":[()=>n.e(8996).then(n.bind(n,92367)),"@site/docs/administration/external-renderers.md",92367],"32703ca7":[()=>n.e(3310).then(n.bind(n,2461)),"@site/versioned_docs/version-1.20/usage/packages/chef.md",2461],"348c8e41":[()=>n.e(1772).then(n.bind(n,5740)),"@site/versioned_docs/version-1.20/usage/actions/comparison.md",5740],"34e0fd35":[()=>n.e(1675).then(n.bind(n,17571)),"@site/versioned_docs/version-1.19/installation/with-docker.md",17571],"34fbd004":[()=>n.e(4704).then(n.bind(n,44456)),"@site/versioned_docs/version-1.19/packages/pypi.md",44456],"3588b438":[()=>n.e(9624).then(n.bind(n,58041)),"@site/docs/administration/backup-and-restore.md",58041],"35f5d803":[()=>n.e(6925).then(n.bind(n,88752)),"@site/versioned_docs/version-1.21/usage/packages/npm.md",88752],"3637f1a8":[()=>n.e(8813).then(n.bind(n,73473)),"@site/docs/usage/packages/rpm.md",73473],"36de4e63":[()=>n.e(8710).then(n.t.bind(n,44912,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-2/plugin-route-context-module-100.json",44912],"3711d97f":[()=>n.e(3119).then(n.bind(n,6676)),"@site/versioned_docs/version-1.20/usage/merge-message-templates.md",6676],"37ac2042":[()=>n.e(4040).then(n.bind(n,22142)),"@site/docs/administration/signing.md",22142],"38267a38":[()=>n.e(1524).then(n.bind(n,91652)),"@site/versioned_docs/version-1.21/administration/adding-legal-pages.md",91652],"38e83e54":[()=>n.e(8339).then(n.t.bind(n,18422,19)),"~docs/default/category-120-docs-category-usage-b68.json",18422],"390dad64":[()=>n.e(7130).then(n.bind(n,75473)),"@site/versioned_docs/version-1.21/development/migrations.md",75473],"392a01f4":[()=>n.e(2132).then(n.bind(n,55782)),"@site/versioned_docs/version-1.20/usage/packages/npm.md",55782],"39f93a3c":[()=>n.e(6481).then(n.bind(n,67344)),"@site/versioned_docs/version-1.20/help/support.md",67344],"3bfc0cf6":[()=>n.e(8732).then(n.bind(n,9192)),"@site/versioned_docs/version-1.20/administration/signing.md",9192],"3c5bb31d":[()=>n.e(3672).then(n.bind(n,55360)),"@site/docs/installation/database-preparation.md",55360],"3c6ed33a":[()=>n.e(748).then(n.bind(n,31813)),"@site/versioned_docs/version-1.21/installation/from-package.md",31813],"3ce3cf2e":[()=>n.e(5477).then(n.bind(n,90436)),"@site/versioned_docs/version-1.21/installation/comparison.md",90436],"3ce40352":[()=>n.e(5486).then(n.bind(n,96352)),"@site/versioned_docs/version-1.21/usage/packages/maven.md",96352],"3ddc5947":[()=>n.e(5272).then(n.bind(n,47317)),"@site/versioned_docs/version-1.21/usage/packages/conan.md",47317],"3f6a647d":[()=>n.e(8378).then(n.bind(n,59533)),"@site/versioned_docs/version-1.21/administration/external-renderers.md",59533],40019866:[()=>n.e(5124).then(n.t.bind(n,62637,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-3/redocApiSpecV1.2-plugin-redoc-3.json",62637],"40aa5a46":[()=>n.e(8909).then(n.bind(n,54840)),"@site/versioned_docs/version-1.21/development/hacking-on-gitea.md",54840],"40d76992":[()=>n.e(626).then(n.bind(n,98389)),"@site/versioned_docs/version-1.21/installation/from-source.md",98389],"41b60461":[()=>n.e(6083).then(n.bind(n,90544)),"@site/versioned_docs/version-1.19/installation/on-kubernetes.md",90544],"41f2b789":[()=>n.e(5088).then(n.bind(n,73791)),"@site/versioned_docs/version-1.20/contributing/guidelines-backend.md",73791],"4287cdd6":[()=>n.e(3472).then(n.bind(n,27713)),"@site/docs/development/oauth2-provider.md",27713],"438b2836":[()=>n.e(9927).then(n.bind(n,58642)),"@site/versioned_docs/version-1.20/usage/packages/nuget.md",58642],"43c5c804":[()=>n.e(5034).then(n.bind(n,53787)),"@site/docs/administration/git-lfs-support.md",53787],"43cb725b":[()=>n.e(8234).then(n.bind(n,41833)),"@site/versioned_docs/version-1.20/usage/packages/debian.md",41833],"44d4472e":[()=>n.e(1768).then(n.bind(n,85024)),"@site/versioned_docs/version-1.20/usage/webhooks.md",85024],"4697d8bb":[()=>n.e(1969).then(n.bind(n,79113)),"@site/docs/usage/packages/cargo.md",79113],"46daa9e8":[()=>n.e(2208).then(n.bind(n,7574)),"@site/versioned_docs/version-1.19/packages/helm.md",7574],"474a1488":[()=>n.e(8342).then(n.bind(n,5120)),"@site/docs/installation/comparison.md",5120],"47597fea":[()=>n.e(431).then(n.bind(n,72502)),"@site/docs/usage/packages/conda.md",72502],"47dfdbcc":[()=>n.e(819).then(n.t.bind(n,52346,19)),"~docs/default/category-120-docs-category-development-e33.json",52346],"48323df8":[()=>n.e(5129).then(n.bind(n,1210)),"@site/docs/usage/packages/rubygems.md",1210],"4ac88cac":[()=>n.e(6886).then(n.bind(n,21388)),"@site/versioned_docs/version-1.21/usage/actions/act-runner.md",21388],"4b63b62b":[()=>n.e(4943).then(n.bind(n,13321)),"@site/versioned_docs/version-1.21/usage/packages/alpine.md",13321],"4d2a9747":[()=>n.e(2779).then(n.bind(n,28056)),"@site/versioned_docs/version-1.21/usage/agit-support.md",28056],"4eef9a57":[()=>n.e(1172).then(n.t.bind(n,61253,19)),"~docs/default/category-docs-category-usage-305.json",61253],"4f06938f":[()=>n.e(4428).then(n.bind(n,81606)),"@site/versioned_docs/version-1.21/usage/packages/nuget.md",81606],"4f195978":[()=>n.e(4688).then(n.bind(n,1177)),"@site/docs/development/migrations.md",1177],"4fc8d11f":[()=>n.e(8482).then(n.bind(n,57396)),"@site/versioned_docs/version-1.19/administration/customizing-gitea.md",57396],"532bb3c9":[()=>n.e(9812).then(n.t.bind(n,97423,19)),"~docs/default/category-119-docs-category-usage-d94.json",97423],"534b2f09":[()=>n.e(9613).then(n.t.bind(n,9635,19)),"~docs/default/category-docs-category-contributing-278.json",9635],"5453c04d":[()=>n.e(4854).then(n.bind(n,77004)),"@site/versioned_docs/version-1.21/usage/incoming-email.md",77004],"5494109f":[()=>n.e(4710).then(n.bind(n,23161)),"@site/versioned_docs/version-1.21/usage/actions/design.md",23161],"554d3568":[()=>n.e(1701).then(n.bind(n,65826)),"@site/versioned_docs/version-1.21/help/support.md",65826],"5565945b":[()=>n.e(7212).then(n.bind(n,6794)),"@site/versioned_docs/version-1.21/usage/packages/storage.md",6794],55905395:[()=>n.e(3662).then(n.bind(n,50623)),"@site/versioned_docs/version-1.21/administration/search-engines-indexation.md",50623],"55b26081":[()=>n.e(5931).then(n.bind(n,87367)),"@site/versioned_docs/version-1.21/contributing/guidelines-frontend.md",87367],"570e41d1":[()=>n.e(6828).then(n.bind(n,735)),"@site/docs/usage/pull-request.md",735],"576b7ba8":[()=>n.e(6564).then(n.bind(n,63295)),"@site/docs/development/hacking-on-gitea.md",63295],"57de87ea":[()=>n.e(1801).then(n.bind(n,20966)),"@site/versioned_docs/version-1.19/usage/repo-mirror.md",20966],"594529d6":[()=>n.e(9865).then(n.bind(n,18911)),"@site/versioned_docs/version-1.20/usage/packages/cargo.md",18911],"59a079a5":[()=>n.e(7547).then(n.bind(n,83710)),"@site/versioned_docs/version-1.19/administration/email-setup.md",83710],"5acdc6b9":[()=>n.e(8014).then(n.bind(n,28200)),"@site/versioned_docs/version-1.21/administration/fail2ban-setup.md",28200],"5b713ba6":[()=>n.e(466).then(n.bind(n,33875)),"@site/versioned_docs/version-1.20/administration/logging-config.md",33875],"5ba34e2a":[()=>n.e(2378).then(n.bind(n,49285)),"@site/versioned_docs/version-1.21/usage/packages/pypi.md",49285],"5bcc7ba2":[()=>n.e(4954).then(n.bind(n,77373)),"@site/docs/development/integrations.md",77373],"5be7f51a":[()=>n.e(6614).then(n.bind(n,51624)),"@site/docs/administration/email-setup.md",51624],"5caed40e":[()=>n.e(3431).then(n.bind(n,92469)),"@site/versioned_docs/version-1.19/usage/secrets.md",92469],"5d26d66f":[()=>n.e(3962).then(n.bind(n,56605)),"@site/versioned_docs/version-1.19/packages/conda.md",56605],"5d63a1bf":[()=>n.e(6406).then(n.bind(n,84499)),"@site/versioned_docs/version-1.20/installation/upgrade-from-gogs.md",84499],"5df3bec4":[()=>n.e(1177).then(n.bind(n,15235)),"@site/docs/usage/blocking-users.md",15235],"5e95c892":[()=>n.e(9661).then(n.bind(n,41892)),"@theme/DocsRoot",41892],"5f3636b8":[()=>n.e(6432).then(n.bind(n,97339)),"@site/versioned_docs/version-1.19/packages/container.md",97339],"5fb069b2":[()=>n.e(3392).then(n.bind(n,64374)),"@site/versioned_docs/version-1.19/installation/upgrade-from-gogs.md",64374],"602975fd":[()=>n.e(3804).then(n.bind(n,26390)),"@site/versioned_docs/version-1.19/usage/agit-support.md",26390],"603cac7f":[()=>n.e(3915).then(n.bind(n,70556)),"@site/docs/usage/issue-pull-request-templates.md",70556],"60640a74":[()=>n.e(9723).then(n.bind(n,5462)),"@site/versioned_docs/version-1.21/administration/logging-config.md",5462],"61ced07c":[()=>n.e(9077).then(n.bind(n,80766)),"@site/versioned_docs/version-1.19/administration/cmd-embedded.md",80766],"63c6e713":[()=>n.e(2048).then(n.bind(n,21054)),"@site/versioned_docs/version-1.20/usage/actions/design.md",21054],"654acdae":[()=>n.e(7301).then(n.bind(n,57003)),"@site/docs/usage/packages/pypi.md",57003],"6585d26f":[()=>n.e(5181).then(n.bind(n,14451)),"@site/versioned_docs/version-1.19/usage/push.md",14451],"65ad8d44":[()=>n.e(1558).then(n.bind(n,9585)),"@site/docs/administration/repo-indexer.md",9585],"66bddc39":[()=>n.e(4198).then(n.t.bind(n,90070,19)),"~docs/default/category-120-docs-category-administration-8aa.json",90070],"66d7571d":[()=>n.e(1170).then(n.t.bind(n,69162,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-0/plugin-route-context-module-100.json",69162],"66fef31f":[()=>n.e(5944).then(n.bind(n,47706)),"@site/versioned_docs/version-1.20/development/migrations.md",47706],68069920:[()=>n.e(6092).then(n.bind(n,13858)),"@site/versioned_docs/version-1.21/installation/upgrade-from-gitea.md",13858],"680c602c":[()=>n.e(4556).then(n.bind(n,58419)),"@site/versioned_docs/version-1.20/installation/database-preparation.md",58419],"6951dc00":[()=>n.e(7157).then(n.bind(n,1902)),"@site/versioned_docs/version-1.20/administration/adding-legal-pages.md",1902],"699157c4":[()=>n.e(9885).then(n.bind(n,74085)),"@site/versioned_docs/version-1.21/administration/reverse-proxies.md",74085],"69d53082":[()=>n.e(5159).then(n.bind(n,8081)),"@site/docs/contributing/localization.md",8081],"6ad1c635":[()=>n.e(430).then(n.bind(n,23118)),"@site/versioned_docs/version-1.21/usage/packages/pub.md",23118],"6b5553ee":[()=>n.e(2638).then(n.bind(n,10068)),"@site/versioned_docs/version-1.20/usage/packages/pub.md",10068],"6c8959ee":[()=>n.e(1237).then(n.bind(n,34738)),"@site/versioned_docs/version-1.20/administration/https-support.md",34738],"6ced0ed6":[()=>n.e(3082).then(n.bind(n,6980)),"@site/docs/administration/config-cheat-sheet.md",6980],"6d976c0e":[()=>n.e(3074).then(n.bind(n,61909)),"@site/versioned_docs/version-1.20/usage/packages/go.md",61909],"6e0571e5":[()=>n.e(1615).then(n.t.bind(n,995,19)),"~docs/default/category-119-docs-category-contributing-f1c.json",995],"6e23cbc0":[()=>n.e(6007).then(n.bind(n,41386)),"@site/versioned_docs/version-1.20/usage/authentication.md",41386],"6e66bba0":[()=>n.e(3951).then(n.bind(n,66963)),"@site/versioned_docs/version-1.20/awesome.md",66963],"6f809003":[()=>n.e(8296).then(n.bind(n,42987)),"@site/versioned_docs/version-1.19/installation/comparison.md",42987],"6f8c3a2f":[()=>n.e(8240).then(n.bind(n,23583)),"@site/docs/usage/packages/maven.md",23583],"700d5b74":[()=>n.e(218).then(n.bind(n,29771)),"@site/versioned_docs/version-1.19/administration/search-engines-indexation.md",29771],"707a1404":[()=>n.e(5831).then(n.bind(n,24304)),"@site/versioned_docs/version-1.21/usage/clone-filter.md",24304],"70e1815c":[()=>n.e(2929).then(n.bind(n,59193)),"@site/versioned_docs/version-1.20/usage/profile-readme.md",59193],"710e4696":[()=>n.e(8289).then(n.bind(n,3564)),"@site/versioned_docs/version-1.20/administration/command-line.md",3564],"7137783a":[()=>n.e(7995).then(n.bind(n,85751)),"@site/versioned_docs/version-1.20/usage/pull-request.md",85751],"714644c7":[()=>n.e(3590).then(n.bind(n,97196)),"@site/versioned_docs/version-1.20/usage/packages/alpine.md",97196],"71e46916":[()=>n.e(9520).then(n.bind(n,98052)),"@site/versioned_docs/version-1.21/administration/command-line.md",98052],"723455e5":[()=>n.e(7474).then(n.bind(n,65680)),"@site/versioned_docs/version-1.20/installation/with-docker.md",65680],"7354335f":[()=>n.e(1925).then(n.bind(n,36074)),"@site/docs/usage/code-owners.md",36074],73781270:[()=>n.e(6490).then(n.t.bind(n,67010,19)),"~docs/default/category-docs-category-development-1a2.json",67010],"744fcbeb":[()=>n.e(2781).then(n.bind(n,37327)),"@site/versioned_docs/version-1.19/packages/npm.md",37327],"746e4d32":[()=>n.e(6344).then(n.bind(n,56745)),"@site/docs/usage/repo-mirror.md",56745],"751ec2e6":[()=>n.e(8233).then(n.bind(n,93073)),"@site/versioned_docs/version-1.20/administration/reverse-proxies.md",93073],"753e65cb":[()=>n.e(4337).then(n.bind(n,97085)),"@site/versioned_docs/version-1.20/installation/comparison.md",97085],"7564934c":[()=>n.e(8317).then(n.bind(n,32002)),"@site/docs/installation/run-as-service-in-ubuntu.md",32002],"7591a37d":[()=>n.e(3971).then(n.bind(n,63678)),"@site/docs/awesome.md",63678],"75ce391f":[()=>n.e(4214).then(n.bind(n,26286)),"@site/docs/usage/protected-tags.md",26286],"760d6d76":[()=>n.e(8150).then(n.bind(n,61764)),"@site/docs/installation/from-source.md",61764],"7776a1cf":[()=>n.e(293).then(n.bind(n,28731)),"@site/versioned_docs/version-1.20/contributing/localization.md",28731],"780d9fe9":[()=>n.e(6351).then(n.bind(n,36403)),"@site/versioned_docs/version-1.21/installation/windows-service.md",36403],"784e89ed":[()=>n.e(9460).then(n.bind(n,89990)),"@site/docs/usage/merge-message-templates.md",89990],"797f46a4":[()=>n.e(4504).then(n.bind(n,61053)),"@site/versioned_docs/version-1.20/usage/template-repositories.md",61053],"7a4779c3":[()=>n.e(9908).then(n.bind(n,67589)),"@site/versioned_docs/version-1.21/installation/from-binary.md",67589],"7b309948":[()=>n.e(6944).then(n.t.bind(n,47757,19)),"~docs/default/category-119-docs-category-administration-9a4.json",47757],"7b3ead16":[()=>n.e(9642).then(n.bind(n,69121)),"@site/versioned_docs/version-1.20/usage/permissions.md",69121],"7bc40000":[()=>n.e(3846).then(n.bind(n,26969)),"@site/versioned_docs/version-1.21/usage/actions/overview.md",26969],"7bdfaf2f":[()=>n.e(5078).then(n.bind(n,26031)),"@site/docs/usage/packages/alpine.md",26031],"7d01a34e":[()=>n.e(101).then(n.bind(n,65188)),"@site/versioned_docs/version-1.19/administration/command-line.md",65188],"7dd12aef":[()=>n.e(4225).then(n.bind(n,26606)),"@site/versioned_docs/version-1.19/usage/pull-request.md",26606],"7f3bb4b3":[()=>n.e(2957).then(n.bind(n,12128)),"@site/versioned_docs/version-1.21/administration/cmd-embedded.md",12128],"8195639c":[()=>n.e(7304).then(n.bind(n,70144)),"@site/versioned_docs/version-1.19/administration/fail2ban-setup.md",70144],"82860bb7":[()=>n.e(7227).then(n.bind(n,30728)),"@site/versioned_docs/version-1.19/installation/from-binary.md",30728],"8292acd7":[()=>n.e(8178).then(n.bind(n,61730)),"@site/docs/administration/command-line.md",61730],"831c01eb":[()=>n.e(3350).then(n.bind(n,822)),"@site/versioned_docs/version-1.21/development/oauth2-provider.md",822],"83fb5b4c":[()=>n.e(9786).then(n.bind(n,84247)),"@site/versioned_docs/version-1.20/usage/labels.md",84247],"8443d0fa":[()=>n.e(6969).then(n.bind(n,50610)),"@site/docs/administration/customizing-gitea.md",50610],"8452fddc":[()=>n.e(150).then(n.bind(n,16872)),"@site/docs/usage/clone-filter.md",16872],"84ce3de8":[()=>n.e(8511).then(n.bind(n,24181)),"@site/docs/usage/actions/design.md",24181],"8604e8a9":[()=>n.e(9855).then(n.bind(n,32031)),"@site/versioned_docs/version-1.19/administration/git-lfs-support.md",32031],"86efe990":[()=>n.e(3574).then(n.bind(n,19067)),"@site/versioned_docs/version-1.19/administration/backup-and-restore.md",19067],"8712c912":[()=>n.e(3203).then(n.bind(n,43830)),"@site/docs/usage/packages/swift.md",43830],"873ac124":[()=>n.e(1316).then(n.bind(n,81305)),"@site/docs/contributing/guidelines-backend.md",81305],"87b03a67":[()=>n.e(8050).then(n.bind(n,34450)),"@site/versioned_docs/version-1.21/installation/with-docker-rootless.md",34450],"8832b266":[()=>n.e(7522).then(n.bind(n,59802)),"@site/versioned_docs/version-1.19/administration/config-cheat-sheet.md",59802],"885a2396":[()=>n.e(8799).then(n.bind(n,98427)),"@site/versioned_docs/version-1.19/packages/pub.md",98427],"88dba292":[()=>n.e(2372).then(n.bind(n,58052)),"@site/docs/usage/packages/composer.md",58052],"89efebda":[()=>n.e(290).then(n.bind(n,1446)),"@site/docs/usage/actions/quickstart.md",1446],"8af8fe3b":[()=>n.e(3365).then(n.bind(n,67513)),"@site/versioned_docs/version-1.19/usage/merge-message-templates.md",67513],"8b00d406":[()=>n.e(7815).then(n.bind(n,82163)),"@site/versioned_docs/version-1.20/installation/run-as-service-in-ubuntu.md",82163],"8b61cc63":[()=>n.e(7217).then(n.bind(n,33673)),"@site/versioned_docs/version-1.21/contributing/guidelines-refactoring.md",33673],"8ce82b6c":[()=>n.e(5440).then(n.bind(n,72900)),"@site/versioned_docs/version-1.19/installation/windows-service.md",72900],"8cfc883c":[()=>n.e(1150).then(n.bind(n,71122)),"@site/versioned_docs/version-1.20/usage/repo-mirror.md",71122],"8daf625c":[()=>n.e(493).then(n.bind(n,20784)),"@site/versioned_docs/version-1.21/usage/packages/rubygems.md",20784],"8e3a3215":[()=>n.e(9718).then(n.bind(n,59352)),"@site/versioned_docs/version-1.20/development/api-usage.md",59352],"8e7e9059":[()=>n.e(3641).then(n.bind(n,1472)),"@site/versioned_docs/version-1.20/usage/packages/storage.md",1472],"8ebea00a":[()=>n.e(5201).then(n.bind(n,8330)),"@site/versioned_docs/version-1.19/packages/maven.md",8330],"8f08a653":[()=>n.e(8099).then(n.bind(n,26104)),"@site/versioned_docs/version-1.19/packages/nuget.md",26104],"8f18cd45":[()=>n.e(1096).then(n.t.bind(n,24598,19)),"~docs/default/version-1-19-metadata-prop-299.json",24598],"8fc8a981":[()=>n.e(4144).then(n.bind(n,71674)),"@site/versioned_docs/version-1.21/installation/on-kubernetes.md",71674],"907d8239":[()=>n.e(7473).then(n.bind(n,73523)),"@site/versioned_docs/version-1.20/usage/actions/faq.md",73523],"90ea94ce":[()=>n.e(7097).then(n.t.bind(n,38652,19)),"~docs/default/category-119-docs-category-installation-537.json",38652],91368007:[()=>n.e(9107).then(n.bind(n,39371)),"@site/docs/installation/with-docker-rootless.md",39371],"9193df5c":[()=>n.e(9224).then(n.bind(n,65662)),"@site/versioned_docs/version-1.19/packages/vagrant.md",65662],"920aa75b":[()=>n.e(1418).then(n.bind(n,17982)),"@site/versioned_docs/version-1.19/packages/conan.md",17982],"920e1310":[()=>n.e(5275).then(n.bind(n,48569)),"@site/versioned_docs/version-1.20/administration/environment-variables.md",48569],"929cff94":[()=>n.e(8761).then(n.bind(n,86859)),"@site/versioned_docs/version-1.21/usage/code-owners.md",86859],"92ac261f":[()=>n.e(5992).then(n.bind(n,94248)),"@site/versioned_docs/version-1.21/usage/template-repositories.md",94248],"92cd856b":[()=>n.e(8204).then(n.t.bind(n,99501,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-3/plugin-route-context-module-100.json",99501],"92d184bf":[()=>n.e(2540).then(n.bind(n,89667)),"@site/docs/administration/logging-config.md",89667],"935f2afb":[()=>n.e(53).then(n.t.bind(n,1109,19)),"~docs/default/version-current-metadata-prop-751.json",1109],"9367abaa":[()=>n.e(1857).then(n.bind(n,42781)),"@site/docs/administration/fail2ban-setup.md",42781],"940d9b8b":[()=>n.e(362).then(n.bind(n,89057)),"@site/docs/help/support.md",89057],"946202e7":[()=>n.e(7990).then(n.bind(n,21510)),"@site/docs/usage/packages/pub.md",21510],"95308d65":[()=>n.e(5606).then(n.bind(n,32806)),"@site/docs/administration/cmd-embedded.md",32806],"953b571c":[()=>n.e(28).then(n.bind(n,76267)),"@site/versioned_docs/version-1.20/usage/incoming-email.md",76267],"958fc5d1":[()=>n.e(694).then(n.t.bind(n,18943,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-1/redocApiSpecV1.2-plugin-redoc-1.json",18943],"95c568fa":[()=>n.e(8611).then(n.bind(n,6690)),"@site/versioned_docs/version-1.20/administration/customizing-gitea.md",6690],"95d4cf19":[()=>n.e(7689).then(n.bind(n,65123)),"@site/versioned_docs/version-1.20/development/hacking-on-gitea.md",65123],"988f1d90":[()=>n.e(6898).then(n.bind(n,62198)),"@site/versioned_docs/version-1.21/development/api-usage.md",62198],"98b4336e":[()=>n.e(8140).then(n.bind(n,84717)),"@site/versioned_docs/version-1.21/administration/mail-templates.md",84717],"98e3fb2f":[()=>n.e(8073).then(n.bind(n,71603)),"@site/versioned_docs/version-1.19/usage/webhooks.md",71603],"9a89b528":[()=>n.e(7972).then(n.bind(n,61067)),"@site/versioned_docs/version-1.21/usage/packages/helm.md",61067],"9adc65f7":[()=>n.e(1190).then(n.bind(n,16349)),"@site/versioned_docs/version-1.19/usage/protected-tags.md",16349],"9c074485":[()=>n.e(8953).then(n.bind(n,86300)),"@site/versioned_docs/version-1.19/packages/cargo.md",86300],"9cc98a13":[()=>n.e(924).then(n.bind(n,93540)),"@site/versioned_docs/version-1.19/usage/permissions.md",93540],"9cf31786":[()=>n.e(7828).then(n.bind(n,74674)),"@site/versioned_docs/version-1.20/usage/protected-tags.md",74674],"9d2956dd":[()=>n.e(2666).then(n.bind(n,18077)),"@site/versioned_docs/version-1.21/administration/customizing-gitea.md",18077],"9d611edf":[()=>n.e(6780).then(n.bind(n,67249)),"@site/docs/administration/adding-legal-pages.md",67249],"9dcf599a":[()=>n.e(7080).then(n.bind(n,54544)),"@site/versioned_docs/version-1.20/usage/push.md",54544],"9f138b7e":[()=>n.e(5708).then(n.bind(n,17291)),"@site/versioned_docs/version-1.20/usage/clone-filter.md",17291],"9f8e640c":[()=>n.e(2984).then(n.bind(n,73476)),"@site/versioned_docs/version-1.19/administration/environment-variables.md",73476],a112137f:[()=>n.e(4103).then(n.bind(n,38014)),"@site/versioned_docs/version-1.19/contributing/guidelines-frontend.md",38014],a12ec3c7:[()=>n.e(8898).then(n.bind(n,16259)),"@site/versioned_docs/version-1.21/usage/multi-factor-authentication.md",16259],a19a33f8:[()=>n.e(5135).then(n.bind(n,7243)),"@site/versioned_docs/version-1.19/administration/adding-legal-pages.md",7243],a2993832:[()=>n.e(3595).then(n.bind(n,46390)),"@site/versioned_docs/version-1.20/installation/windows-service.md",46390],a2c151bd:[()=>n.e(3694).then(n.bind(n,41571)),"@site/versioned_docs/version-1.21/usage/packages/container.md",41571],a2e2f47c:[()=>n.e(4724).then(n.bind(n,13134)),"@site/docs/usage/incoming-email.md",13134],a369fff5:[()=>n.e(2174).then(n.bind(n,19760)),"@site/docs/installation/windows-service.md",19760],a4214402:[()=>n.e(9645).then(n.bind(n,97486)),"@site/versioned_docs/version-1.19/usage/template-repositories.md",97486],a4230b24:[()=>n.e(4151).then(n.t.bind(n,127,19)),"~docs/default/version-1-21-metadata-prop-92d.json",127],a4a66c55:[()=>n.e(8766).then(n.bind(n,64160)),"@site/versioned_docs/version-1.21/development/integrations.md",64160],a625ad90:[()=>n.e(9603).then(n.bind(n,15010)),"@site/versioned_docs/version-1.20/usage/packages/conda.md",15010],a65c7c34:[()=>n.e(4056).then(n.bind(n,79899)),"@site/versioned_docs/version-1.21/usage/packages/conda.md",79899],a6ca09ab:[()=>n.e(5812).then(n.bind(n,23582)),"@site/versioned_docs/version-1.20/administration/search-engines-indexation.md",23582],a75fd143:[()=>n.e(8804).then(n.bind(n,84649)),"@site/versioned_docs/version-1.21/contributing/guidelines-backend.md",84649],a76b4ce7:[()=>n.e(704).then(n.bind(n,56823)),"@site/versioned_docs/version-1.20/usage/packages/composer.md",56823],a7bd4aaa:[()=>n.e(8518).then(n.bind(n,8564)),"@theme/DocVersionRoot",8564],a88e1293:[()=>n.e(9623).then(n.bind(n,82312)),"@site/docs/usage/packages/chef.md",82312],a8929721:[()=>n.e(6669).then(n.t.bind(n,55438,19)),"~docs/default/category-docs-category-administration-784.json",55438],a94703ab:[()=>Promise.all([n.e(532),n.e(4368)]).then(n.bind(n,12674)),"@theme/DocRoot",12674],aa26ec4d:[()=>n.e(9675).then(n.t.bind(n,10957,19)),"~docs/default/category-next-docs-category-installation-37e.json",10957],aa8b4040:[()=>n.e(4310).then(n.bind(n,66276)),"@site/versioned_docs/version-1.19/packages/storage.md",66276],ab5b0163:[()=>n.e(4376).then(n.bind(n,18267)),"@site/versioned_docs/version-1.21/usage/packages/debian.md",18267],adb4af0e:[()=>n.e(8089).then(n.bind(n,58262)),"@site/versioned_docs/version-1.21/contributing/localization.md",58262],adde7d79:[()=>n.e(5937).then(n.bind(n,27869)),"@site/versioned_docs/version-1.19/installation/database-preparation.md",27869],ae545160:[()=>n.e(3558).then(n.bind(n,69075)),"@site/versioned_docs/version-1.20/administration/repo-indexer.md",69075],ae8ddd70:[()=>n.e(8923).then(n.bind(n,45443)),"@site/versioned_docs/version-1.21/installation/upgrade-from-gogs.md",45443],aec4d2df:[()=>n.e(1529).then(n.bind(n,10144)),"@site/versioned_docs/version-1.20/usage/packages/container.md",10144],af5b3356:[()=>n.e(7252).then(n.bind(n,73946)),"@site/versioned_docs/version-1.20/administration/backup-and-restore.md",73946],b03837a4:[()=>n.e(3778).then(n.bind(n,12114)),"@site/docs/usage/packages/helm.md",12114],b1199117:[()=>n.e(8180).then(n.bind(n,50785)),"@site/versioned_docs/version-1.21/administration/signing.md",50785],b2f1d193:[()=>n.e(6941).then(n.t.bind(n,42442,19)),"~docs/default/category-120-docs-category-installation-24c.json",42442],b34e5478:[()=>n.e(7699).then(n.bind(n,89041)),"@site/docs/usage/push.md",89041],b37b966a:[()=>n.e(6076).then(n.bind(n,322)),"@site/docs/usage/actions/comparison.md",322],b3cb41e2:[()=>n.e(7717).then(n.t.bind(n,12125,19)),"~docs/default/category-119-docs-category-help-635.json",12125],b4366ef7:[()=>n.e(8843).then(n.bind(n,29259)),"@site/docs/installation/from-package.md",29259],b469afc7:[()=>n.e(3270).then(n.bind(n,25633)),"@site/versioned_docs/version-1.19/usage/issue-pull-request-templates.md",25633],b678728a:[()=>n.e(5943).then(n.bind(n,66675)),"@site/versioned_docs/version-1.21/administration/email-setup.md",66675],b8d52b5a:[()=>n.e(7312).then(n.bind(n,34963)),"@site/versioned_docs/version-1.21/installation/database-preparation.md",34963],b9233c9b:[()=>n.e(641).then(n.bind(n,52294)),"@site/versioned_docs/version-1.21/usage/packages/chef.md",52294],bae42c17:[()=>n.e(10).then(n.bind(n,17558)),"@site/versioned_docs/version-1.20/usage/packages/cran.md",17558],bb23ad94:[()=>n.e(2331).then(n.t.bind(n,83769,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-content-docs/default/plugin-route-context-module-100.json",83769],bb723893:[()=>n.e(7424).then(n.bind(n,33276)),"@site/versioned_docs/version-1.21/usage/webhooks.md",33276],bd7b2764:[()=>n.e(7742).then(n.bind(n,53987)),"@site/versioned_docs/version-1.20/usage/packages/generic.md",53987],bdf20421:[()=>n.e(4394).then(n.bind(n,13892)),"@site/versioned_docs/version-1.21/usage/blame.md",13892],be8d9f32:[()=>n.e(9361).then(n.bind(n,73199)),"@site/versioned_docs/version-1.20/usage/packages/maven.md",73199],c02af4fe:[()=>n.e(1482).then(n.bind(n,92825)),"@site/versioned_docs/version-1.20/usage/packages/overview.md",92825],c5baefc7:[()=>n.e(1607).then(n.bind(n,15159)),"@site/versioned_docs/version-1.19/contributing/localization.md",15159],c6d812e9:[()=>n.e(6764).then(n.bind(n,78987)),"@site/versioned_docs/version-1.19/help/seek-help.md",78987],c7217017:[()=>n.e(4326).then(n.bind(n,54211)),"@site/docs/usage/template-repositories.md",54211],c8bae931:[()=>n.e(7793).then(n.bind(n,59711)),"@site/versioned_docs/version-1.21/usage/packages/cran.md",59711],c8f20b29:[()=>n.e(5299).then(n.t.bind(n,30978,19)),"~docs/default/category-120-docs-category-help-b7c.json",30978],caf8a924:[()=>n.e(8876).then(n.t.bind(n,63006,19)),"~docs/default/category-next-docs-category-administration-3be.json",63006],cbe4b508:[()=>n.e(6093).then(n.bind(n,63348)),"@site/versioned_docs/version-1.21/usage/packages/overview.md",63348],cc6b40b0:[()=>n.e(9753).then(n.bind(n,48288)),"@site/versioned_docs/version-1.21/usage/labels.md",48288],cd038e25:[()=>n.e(5802).then(n.bind(n,9586)),"@site/versioned_docs/version-1.20/intro.md",9586],ce7c9d24:[()=>n.e(735).then(n.bind(n,98748)),"@site/versioned_docs/version-1.21/usage/permissions.md",98748],cee8abde:[()=>n.e(6785).then(n.bind(n,52080)),"@site/versioned_docs/version-1.20/development/oauth2-provider.md",52080],cf56a783:[()=>n.e(8442).then(n.bind(n,82255)),"@site/versioned_docs/version-1.19/administration/logging-documentation.md",82255],cfc41d03:[()=>n.e(8304).then(n.bind(n,18043)),"@site/versioned_docs/version-1.20/usage/packages/vagrant.md",18043],d01e7954:[()=>n.e(837).then(n.t.bind(n,53600,19)),"~docs/default/category-119-docs-category-development-a7d.json",53600],d0425aae:[()=>n.e(4171).then(n.bind(n,10699)),"@site/versioned_docs/version-1.21/usage/push.md",10699],d043615f:[()=>n.e(4061).then(n.bind(n,95783)),"@site/versioned_docs/version-1.20/usage/multi-factor-authentication.md",95783],d04ffe0e:[()=>n.e(7009).then(n.bind(n,2298)),"@site/versioned_docs/version-1.19/packages/chef.md",2298],d05a8fe2:[()=>n.e(5788).then(n.bind(n,49651)),"@site/versioned_docs/version-1.19/installation/on-cloud-provider.md",49651],d0c053d4:[()=>n.e(5787).then(n.bind(n,58509)),"@site/versioned_docs/version-1.20/usage/packages/rpm.md",58509],d302b7e9:[()=>n.e(9018).then(n.bind(n,21653)),"@site/versioned_docs/version-1.20/installation/from-source.md",21653],d3a0e119:[()=>n.e(2652).then(n.bind(n,96778)),"@site/versioned_docs/version-1.21/administration/git-lfs-support.md",96778],d49da0b2:[()=>n.e(3860).then(n.bind(n,66953)),"@site/versioned_docs/version-1.19/packages/generic.md",66953],d70dbc46:[()=>n.e(6397).then(n.bind(n,36060)),"@site/versioned_docs/version-1.21/administration/https-support.md",36060],d7daa0c0:[()=>n.e(5903).then(n.t.bind(n,85344,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/docusaurus-plugin-redoc/plugin-redoc-3/redocApiLayoutV1-plugin-redoc-3.json",85344],d7e5089f:[()=>n.e(8718).then(n.bind(n,12174)),"@site/versioned_docs/version-1.20/administration/cmd-embedded.md",12174],d83da57e:[()=>n.e(9499).then(n.bind(n,82073)),"@site/versioned_docs/version-1.19/usage/authentication.md",82073],d8f77595:[()=>n.e(258).then(n.bind(n,49272)),"@site/versioned_docs/version-1.19/intro.md",49272],d91173b9:[()=>n.e(1251).then(n.bind(n,5318)),"@site/versioned_docs/version-1.19/development/oauth2-provider.md",5318],d99e1e92:[()=>n.e(7572).then(n.bind(n,38193)),"@site/versioned_docs/version-1.20/administration/external-renderers.md",38193],dab090a2:[()=>n.e(2399).then(n.bind(n,2043)),"@site/docs/administration/environment-variables.md",2043],db6d46d8:[()=>n.e(6902).then(n.bind(n,76070)),"@site/versioned_docs/version-1.21/usage/packages/generic.md",76070],dcafb87d:[()=>n.e(5445).then(n.bind(n,40876)),"@site/docs/usage/authentication.md",40876],dcbd0cd6:[()=>n.e(596).then(n.bind(n,52260)),"@site/docs/usage/packages/conan.md",52260],dcd04afa:[()=>n.e(4300).then(n.t.bind(n,48148,19)),"~docs/default/version-1-20-metadata-prop-2d3.json",48148],dd1ba7ba:[()=>n.e(4360).then(n.bind(n,40277)),"@site/versioned_docs/version-1.19/contributing/guidelines-backend.md",40277],dd53d751:[()=>n.e(1752).then(n.bind(n,39264)),"@site/docs/help/faq.md",39264],ded9c0d2:[()=>n.e(523).then(n.bind(n,68535)),"@site/versioned_docs/version-1.19/usage/linked-references.md",68535],df620f49:[()=>n.e(4732).then(n.t.bind(n,14373,19)),"~docs/default/category-docs-category-help-daf.json",14373],df9610ac:[()=>n.e(8920).then(n.bind(n,43876)),"@site/docs/usage/packages/overview.md",43876],e05220f4:[()=>n.e(2597).then(n.bind(n,66918)),"@site/versioned_docs/version-1.19/contributing/guidelines-refactoring.md",66918],e08cd76a:[()=>n.e(1570).then(n.bind(n,19692)),"@site/docs/usage/packages/cran.md",19692],e1a20509:[()=>n.e(3214).then(n.bind(n,19802)),"@site/versioned_docs/version-1.20/administration/email-setup.md",19802],e1ca6579:[()=>n.e(7289).then(n.bind(n,1488)),"@site/versioned_docs/version-1.19/administration/repo-indexer.md",1488],e266c2f6:[()=>n.e(3358).then(n.bind(n,38463)),"@site/docs/usage/linked-references.md",38463],e26776dc:[()=>n.e(8871).then(n.bind(n,56548)),"@site/docs/contributing/guidelines-frontend.md",56548],e29fd564:[()=>n.e(9887).then(n.bind(n,55312)),"@site/docs/administration/search-engines-indexation.md",55312],e2dc104f:[()=>n.e(4039).then(n.bind(n,48622)),"@site/versioned_docs/version-1.20/development/integrations.md",48622],e337cd6c:[()=>n.e(5202).then(n.bind(n,9037)),"@site/versioned_docs/version-1.19/installation/run-as-service-in-ubuntu.md",9037],e416db75:[()=>n.e(9707).then(n.bind(n,13992)),"@site/docs/usage/permissions.md",13992],e43ea8b4:[()=>n.e(7558).then(n.bind(n,25614)),"@site/versioned_docs/version-1.19/help/faq.md",25614],e5723490:[()=>n.e(8160).then(n.bind(n,5820)),"@site/versioned_docs/version-1.19/installation/with-docker-rootless.md",5820],e57b131c:[()=>n.e(2451).then(n.bind(n,60258)),"@site/versioned_docs/version-1.21/administration/config-cheat-sheet.md",60258],e5a7a8a4:[()=>n.e(7330).then(n.bind(n,17093)),"@site/docs/installation/from-binary.md",17093],e5b7a486:[()=>n.e(4687).then(n.bind(n,37865)),"@site/versioned_docs/version-1.20/usage/actions/overview.md",37865],e643a4d5:[()=>n.e(449).then(n.bind(n,94992)),"@site/versioned_docs/version-1.21/intro.md",94992],e660d2b0:[()=>n.e(7573).then(n.bind(n,33889)),"@site/docs/usage/packages/debian.md",33889],e67e88da:[()=>n.e(4522).then(n.bind(n,85477)),"@site/docs/development/api-usage.md",85477],e6a144cf:[()=>n.e(9736).then(n.bind(n,19566)),"@site/versioned_docs/version-1.20/installation/on-cloud-provider.md",19566],e79608e2:[()=>n.e(2761).then(n.bind(n,86946)),"@site/versioned_docs/version-1.19/installation/from-package.md",86946],e9754248:[()=>n.e(8630).then(n.bind(n,87332)),"@site/versioned_docs/version-1.19/packages/rubygems.md",87332],eb697d10:[()=>n.e(9853).then(n.bind(n,98217)),"@site/versioned_docs/version-1.21/usage/packages/go.md",98217],ecf50d92:[()=>n.e(7521).then(n.bind(n,74069)),"@site/docs/installation/upgrade-from-gitea.md",74069],ed51f2a0:[()=>n.e(3122).then(n.bind(n,2033)),"@site/versioned_docs/version-1.20/administration/mail-templates.md",2033],ef5555b0:[()=>n.e(7033).then(n.bind(n,1771)),"@site/docs/administration/https-support.md",1771],f02cd9d5:[()=>n.e(149).then(n.bind(n,9073)),"@site/versioned_docs/version-1.19/usage/incoming-email.md",9073],f0a1cce3:[()=>n.e(2798).then(n.t.bind(n,48318,19)),"~docs/default/category-docs-category-installation-622.json",48318],f0ad3fbb:[()=>Promise.all([n.e(532),n.e(2207),n.e(8612)]).then(n.bind(n,12713)),"@theme/ApiDoc",12713],f0ad9594:[()=>n.e(7885).then(n.bind(n,12266)),"@site/versioned_docs/version-1.21/usage/protected-tags.md",12266],f16eac64:[()=>n.e(8558).then(n.bind(n,94102)),"@site/versioned_docs/version-1.19/installation/from-source.md",94102],f2793c32:[()=>n.e(9282).then(n.bind(n,97807)),"@site/docs/usage/packages/container.md",97807],f3327d0e:[()=>n.e(824).then(n.bind(n,59091)),"@site/docs/usage/packages/vagrant.md",59091],f34d5b3a:[()=>n.e(62).then(n.bind(n,58518)),"@site/versioned_docs/version-1.19/development/integrations.md",58518],f3ff5df3:[()=>n.e(7209).then(n.bind(n,79036)),"@site/versioned_docs/version-1.20/administration/git-lfs-support.md",79036],f4b2686f:[()=>n.e(621).then(n.bind(n,37238)),"@site/versioned_docs/version-1.21/usage/issue-pull-request-templates.md",37238],f50c1d06:[()=>n.e(9729).then(n.bind(n,28730)),"@site/docs/administration/mail-templates.md",28730],f57d3cfa:[()=>n.e(7374).then(n.bind(n,17739)),"@site/versioned_docs/version-1.19/administration/mail-templates.md",17739],f58bc905:[()=>n.e(2240).then(n.bind(n,9901)),"@site/versioned_docs/version-1.19/administration/external-renderers.md",9901],f5c6fd5d:[()=>n.e(7357).then(n.bind(n,2543)),"@site/docs/usage/packages/go.md",2543],f7f9d9cb:[()=>n.e(5255).then(n.bind(n,31352)),"@site/versioned_docs/version-1.21/usage/packages/vagrant.md",31352],f907de38:[()=>n.e(726).then(n.bind(n,40806)),"@site/versioned_docs/version-1.21/usage/packages/rpm.md",40806],f90a9751:[()=>n.e(2723).then(n.bind(n,97751)),"@site/docs/usage/actions/overview.md",97751],fa9bda4f:[()=>n.e(2528).then(n.bind(n,77359)),"@site/docs/usage/packages/generic.md",77359],fb65ec83:[()=>n.e(531).then(n.bind(n,53218)),"@site/versioned_docs/version-1.21/installation/with-docker.md",53218],fc2378f2:[()=>n.e(6864).then(n.t.bind(n,90691,19)),"~docs/default/category-next-docs-category-contributing-24c.json",90691],fc9a06f4:[()=>n.e(7746).then(n.bind(n,77023)),"@site/versioned_docs/version-1.21/usage/packages/cargo.md",77023],fd450dee:[()=>n.e(4617).then(n.bind(n,35517)),"@site/versioned_docs/version-1.20/usage/linked-references.md",35517],fe0bce20:[()=>n.e(1216).then(n.t.bind(n,12776,19)),"/workspace/gitea/gitea-docusaurus/.docusaurus/@easyops-cn/docusaurus-search-local/default/plugin-route-context-module-100.json",12776],fed8654c:[()=>n.e(9562).then(n.bind(n,58582)),"@site/versioned_docs/version-1.21/usage/linked-references.md",58582]};var a=n(85893);function p(e){let{error:t,retry:n,pastDelay:r}=e;return t?(0,a.jsxs)("div",{style:{textAlign:"center",color:"#fff",backgroundColor:"#fa383e",borderColor:"#fa383e",borderStyle:"solid",borderRadius:"0.25rem",borderWidth:"1px",boxSizing:"border-box",display:"block",padding:"1rem",flex:"0 0 50%",marginLeft:"25%",marginRight:"25%",marginTop:"5rem",maxWidth:"50%",width:"100%"},children:[(0,a.jsx)("p",{children:String(t)}),(0,a.jsx)("div",{children:(0,a.jsx)("button",{type:"button",onClick:n,children:"Retry"})})]}):r?(0,a.jsx)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",height:"100vh"},children:(0,a.jsx)("svg",{id:"loader",style:{width:128,height:110,position:"absolute",top:"calc(100vh - 64%)"},viewBox:"0 0 45 45",xmlns:"http://www.w3.org/2000/svg",stroke:"#61dafb",children:(0,a.jsxs)("g",{fill:"none",fillRule:"evenodd",transform:"translate(1 1)",strokeWidth:"2",children:[(0,a.jsxs)("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0",children:[(0,a.jsx)("animate",{attributeName:"r",begin:"1.5s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),(0,a.jsx)("animate",{attributeName:"stroke-opacity",begin:"1.5s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),(0,a.jsx)("animate",{attributeName:"stroke-width",begin:"1.5s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})]}),(0,a.jsxs)("circle",{cx:"22",cy:"22",r:"6",strokeOpacity:"0",children:[(0,a.jsx)("animate",{attributeName:"r",begin:"3s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),(0,a.jsx)("animate",{attributeName:"stroke-opacity",begin:"3s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),(0,a.jsx)("animate",{attributeName:"stroke-width",begin:"3s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})]}),(0,a.jsx)("circle",{cx:"22",cy:"22",r:"8",children:(0,a.jsx)("animate",{attributeName:"r",begin:"0s",dur:"1.5s",values:"6;1;2;3;4;5;6",calcMode:"linear",repeatCount:"indefinite"})})]})})}):null}var c=n(99670),m=n(30226);function d(e,t){if("*"===e)return s()({loading:p,loader:()=>n.e(7856).then(n.bind(n,51772)),modules:["@theme/NotFound"],webpack:()=>[51772],render(e,t){const n=e.default;return(0,a.jsx)(m.z,{value:{plugin:{name:"native",id:"default"}},children:(0,a.jsx)(n,{...t})})}});const r=o[`${e}-${t}`],d={},u=[],l=[],g=(0,c.Z)(r);return Object.entries(g).forEach((e=>{let[t,n]=e;const r=i[n];r&&(d[t]=r[0],u.push(r[1]),l.push(r[2]))})),s().Map({loading:p,loader:d,modules:u,webpack:()=>l,render(t,n){const s=JSON.parse(JSON.stringify(r));Object.entries(t).forEach((t=>{let[n,r]=t;const o=r.default;if(!o)throw new Error(`The page component at ${e} doesn't have a default export. This makes it impossible to render anything. Consider default-exporting a React component.`);"object"!=typeof o&&"function"!=typeof o||Object.keys(r).filter((e=>"default"!==e)).forEach((e=>{o[e]=r[e]}));let i=s;const a=n.split(".");a.slice(0,-1).forEach((e=>{i=i[e]})),i[a[a.length-1]]=o}));const o=s.__comp;delete s.__comp;const i=s.__context;return delete s.__context,(0,a.jsx)(m.z,{value:i,children:(0,a.jsx)(o,{...s,...n})})}})}const u=[{path:"/api/1.19/",component:d("/api/1.19/","02e"),exact:!0},{path:"/api/1.20/",component:d("/api/1.20/","4b3"),exact:!0},{path:"/api/1.21/",component:d("/api/1.21/","3d4"),exact:!0},{path:"/api/next/",component:d("/api/next/","3f6"),exact:!0},{path:"/search",component:d("/search","af1"),exact:!0},{path:"/",component:d("/","f67"),routes:[{path:"/1.19",component:d("/1.19","c8b"),routes:[{path:"/1.19",component:d("/1.19","0e7"),routes:[{path:"/1.19/",component:d("/1.19/","7e4"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/adding-legal-pages",component:d("/1.19/administration/adding-legal-pages","4f9"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/backup-and-restore",component:d("/1.19/administration/backup-and-restore","57a"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/cmd-embedded",component:d("/1.19/administration/cmd-embedded","9b3"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/command-line",component:d("/1.19/administration/command-line","578"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/config-cheat-sheet",component:d("/1.19/administration/config-cheat-sheet","eda"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/customizing-gitea",component:d("/1.19/administration/customizing-gitea","604"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/email-setup",component:d("/1.19/administration/email-setup","4c3"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/environment-variables",component:d("/1.19/administration/environment-variables","761"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/external-renderers",component:d("/1.19/administration/external-renderers","dd8"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/fail2ban-setup",component:d("/1.19/administration/fail2ban-setup","741"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/git-lfs-setup",component:d("/1.19/administration/git-lfs-setup","c3a"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/https-setup",component:d("/1.19/administration/https-setup","410"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/logging-configuration",component:d("/1.19/administration/logging-configuration","817"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/mail-templates",component:d("/1.19/administration/mail-templates","44c"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/repo-indexer",component:d("/1.19/administration/repo-indexer","d6b"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/reverse-proxies",component:d("/1.19/administration/reverse-proxies","391"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/search-engines-indexation",component:d("/1.19/administration/search-engines-indexation","4e5"),exact:!0,sidebar:"docs"},{path:"/1.19/administration/signing",component:d("/1.19/administration/signing","4ee"),exact:!0,sidebar:"docs"},{path:"/1.19/awesome",component:d("/1.19/awesome","513"),exact:!0},{path:"/1.19/category/administration",component:d("/1.19/category/administration","84c"),exact:!0,sidebar:"docs"},{path:"/1.19/category/contributing",component:d("/1.19/category/contributing","601"),exact:!0,sidebar:"docs"},{path:"/1.19/category/development",component:d("/1.19/category/development","543"),exact:!0,sidebar:"docs"},{path:"/1.19/category/help",component:d("/1.19/category/help","e10"),exact:!0,sidebar:"docs"},{path:"/1.19/category/installation",component:d("/1.19/category/installation","b39"),exact:!0,sidebar:"docs"},{path:"/1.19/category/usage",component:d("/1.19/category/usage","b27"),exact:!0,sidebar:"docs"},{path:"/1.19/contributing/guidelines-backend",component:d("/1.19/contributing/guidelines-backend","984"),exact:!0,sidebar:"docs"},{path:"/1.19/contributing/guidelines-frontend",component:d("/1.19/contributing/guidelines-frontend","340"),exact:!0,sidebar:"docs"},{path:"/1.19/contributing/guidelines-refactoring",component:d("/1.19/contributing/guidelines-refactoring","fe1"),exact:!0,sidebar:"docs"},{path:"/1.19/contributing/localization",component:d("/1.19/contributing/localization","71c"),exact:!0,sidebar:"docs"},{path:"/1.19/development/api-usage",component:d("/1.19/development/api-usage","630"),exact:!0,sidebar:"docs"},{path:"/1.19/development/hacking-on-gitea",component:d("/1.19/development/hacking-on-gitea","e25"),exact:!0,sidebar:"docs"},{path:"/1.19/development/integrations",component:d("/1.19/development/integrations","8fe"),exact:!0,sidebar:"docs"},{path:"/1.19/development/migrations-interfaces",component:d("/1.19/development/migrations-interfaces","97a"),exact:!0,sidebar:"docs"},{path:"/1.19/development/oauth2-provider",component:d("/1.19/development/oauth2-provider","c93"),exact:!0,sidebar:"docs"},{path:"/1.19/help/faq",component:d("/1.19/help/faq","d15"),exact:!0,sidebar:"docs"},{path:"/1.19/help/seek-help",component:d("/1.19/help/seek-help","38b"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/comparison",component:d("/1.19/installation/comparison","788"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/database-prep",component:d("/1.19/installation/database-prep","87c"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/install-from-binary",component:d("/1.19/installation/install-from-binary","208"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/install-from-package",component:d("/1.19/installation/install-from-package","67e"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/install-from-source",component:d("/1.19/installation/install-from-source","c51"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/install-on-cloud-provider",component:d("/1.19/installation/install-on-cloud-provider","7e0"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/install-on-kubernetes",component:d("/1.19/installation/install-on-kubernetes","2fe"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/install-with-docker",component:d("/1.19/installation/install-with-docker","f93"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/install-with-docker-rootless",component:d("/1.19/installation/install-with-docker-rootless","19d"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/linux-service",component:d("/1.19/installation/linux-service","76a"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/upgrade-from-gitea",component:d("/1.19/installation/upgrade-from-gitea","64d"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/upgrade-from-gogs",component:d("/1.19/installation/upgrade-from-gogs","ce0"),exact:!0,sidebar:"docs"},{path:"/1.19/installation/windows-service",component:d("/1.19/installation/windows-service","ed8"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/cargo",component:d("/1.19/packages/usage/packages/cargo","2a7"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/chef",component:d("/1.19/packages/usage/packages/chef","791"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/composer",component:d("/1.19/packages/usage/packages/composer","38f"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/conan",component:d("/1.19/packages/usage/packages/conan","18f"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/conda",component:d("/1.19/packages/usage/packages/conda","b40"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/container",component:d("/1.19/packages/usage/packages/container","3ab"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/generic",component:d("/1.19/packages/usage/packages/generic","2bf"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/helm",component:d("/1.19/packages/usage/packages/helm","319"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/maven",component:d("/1.19/packages/usage/packages/maven","a34"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/npm",component:d("/1.19/packages/usage/packages/npm","cf3"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/nuget",component:d("/1.19/packages/usage/packages/nuget","fae"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/overview",component:d("/1.19/packages/usage/packages/overview","425"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/pub",component:d("/1.19/packages/usage/packages/pub","028"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/pypi",component:d("/1.19/packages/usage/packages/pypi","cd5"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/rubygems",component:d("/1.19/packages/usage/packages/rubygems","404"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/storage",component:d("/1.19/packages/usage/packages/storage","cb7"),exact:!0,sidebar:"docs"},{path:"/1.19/packages/usage/packages/vagrant",component:d("/1.19/packages/usage/packages/vagrant","eb1"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/agit-setup",component:d("/1.19/usage/agit-setup","8ce"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/authentication",component:d("/1.19/usage/authentication","4b1"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/automatically-linked-references",component:d("/1.19/usage/automatically-linked-references","c2b"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/clone-filters",component:d("/1.19/usage/clone-filters","7be"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/incoming-email",component:d("/1.19/usage/incoming-email","01b"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/issue-pull-request-templates",component:d("/1.19/usage/issue-pull-request-templates","7b8"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/labels",component:d("/1.19/usage/labels","bc4"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/merge-message-templates",component:d("/1.19/usage/merge-message-templates","761"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/permissions",component:d("/1.19/usage/permissions","221"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/protected-tags",component:d("/1.19/usage/protected-tags","e3b"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/pull-request",component:d("/1.19/usage/pull-request","c84"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/push",component:d("/1.19/usage/push","975"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/repo-mirror",component:d("/1.19/usage/repo-mirror","0b0"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/template-repositories",component:d("/1.19/usage/template-repositories","173"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/usage/secrets",component:d("/1.19/usage/usage/secrets","95d"),exact:!0,sidebar:"docs"},{path:"/1.19/usage/webhooks",component:d("/1.19/usage/webhooks","f09"),exact:!0,sidebar:"docs"}]}]},{path:"/1.20",component:d("/1.20","fe0"),routes:[{path:"/1.20",component:d("/1.20","87b"),routes:[{path:"/1.20/",component:d("/1.20/","011"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/adding-legal-pages",component:d("/1.20/administration/adding-legal-pages","176"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/backup-and-restore",component:d("/1.20/administration/backup-and-restore","911"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/cmd-embedded",component:d("/1.20/administration/cmd-embedded","859"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/command-line",component:d("/1.20/administration/command-line","888"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/config-cheat-sheet",component:d("/1.20/administration/config-cheat-sheet","921"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/customizing-gitea",component:d("/1.20/administration/customizing-gitea","e6d"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/email-setup",component:d("/1.20/administration/email-setup","108"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/environment-variables",component:d("/1.20/administration/environment-variables","2fd"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/external-renderers",component:d("/1.20/administration/external-renderers","3bd"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/fail2ban-setup",component:d("/1.20/administration/fail2ban-setup","0e8"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/git-lfs-setup",component:d("/1.20/administration/git-lfs-setup","439"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/https-setup",component:d("/1.20/administration/https-setup","342"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/logging-config",component:d("/1.20/administration/logging-config","b95"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/mail-templates",component:d("/1.20/administration/mail-templates","073"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/repo-indexer",component:d("/1.20/administration/repo-indexer","2ec"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/reverse-proxies",component:d("/1.20/administration/reverse-proxies","d34"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/search-engines-indexation",component:d("/1.20/administration/search-engines-indexation","ff9"),exact:!0,sidebar:"docs"},{path:"/1.20/administration/signing",component:d("/1.20/administration/signing","d22"),exact:!0,sidebar:"docs"},{path:"/1.20/awesome",component:d("/1.20/awesome","5a1"),exact:!0},{path:"/1.20/category/administration",component:d("/1.20/category/administration","11c"),exact:!0,sidebar:"docs"},{path:"/1.20/category/contributing",component:d("/1.20/category/contributing","a6c"),exact:!0,sidebar:"docs"},{path:"/1.20/category/development",component:d("/1.20/category/development","599"),exact:!0,sidebar:"docs"},{path:"/1.20/category/help",component:d("/1.20/category/help","cbe"),exact:!0,sidebar:"docs"},{path:"/1.20/category/installation",component:d("/1.20/category/installation","713"),exact:!0,sidebar:"docs"},{path:"/1.20/category/usage",component:d("/1.20/category/usage","4ab"),exact:!0,sidebar:"docs"},{path:"/1.20/contributing/guidelines-backend",component:d("/1.20/contributing/guidelines-backend","c6b"),exact:!0,sidebar:"docs"},{path:"/1.20/contributing/guidelines-frontend",component:d("/1.20/contributing/guidelines-frontend","ab8"),exact:!0,sidebar:"docs"},{path:"/1.20/contributing/guidelines-refactoring",component:d("/1.20/contributing/guidelines-refactoring","8a6"),exact:!0,sidebar:"docs"},{path:"/1.20/contributing/localization",component:d("/1.20/contributing/localization","980"),exact:!0,sidebar:"docs"},{path:"/1.20/development/api-usage",component:d("/1.20/development/api-usage","cd1"),exact:!0,sidebar:"docs"},{path:"/1.20/development/hacking-on-gitea",component:d("/1.20/development/hacking-on-gitea","9c2"),exact:!0,sidebar:"docs"},{path:"/1.20/development/integrations",component:d("/1.20/development/integrations","afd"),exact:!0,sidebar:"docs"},{path:"/1.20/development/migrations-interfaces",component:d("/1.20/development/migrations-interfaces","97e"),exact:!0,sidebar:"docs"},{path:"/1.20/development/oauth2-provider",component:d("/1.20/development/oauth2-provider","892"),exact:!0,sidebar:"docs"},{path:"/1.20/help/faq",component:d("/1.20/help/faq","d27"),exact:!0,sidebar:"docs"},{path:"/1.20/help/support",component:d("/1.20/help/support","3af"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/comparison",component:d("/1.20/installation/comparison","d55"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/database-prep",component:d("/1.20/installation/database-prep","b6b"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/install-from-binary",component:d("/1.20/installation/install-from-binary","11f"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/install-from-package",component:d("/1.20/installation/install-from-package","8ae"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/install-from-source",component:d("/1.20/installation/install-from-source","888"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/install-on-cloud-provider",component:d("/1.20/installation/install-on-cloud-provider","bd7"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/install-on-kubernetes",component:d("/1.20/installation/install-on-kubernetes","370"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/install-with-docker",component:d("/1.20/installation/install-with-docker","33a"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/install-with-docker-rootless",component:d("/1.20/installation/install-with-docker-rootless","1ed"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/linux-service",component:d("/1.20/installation/linux-service","a5a"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/upgrade-from-gitea",component:d("/1.20/installation/upgrade-from-gitea","7c2"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/upgrade-from-gogs",component:d("/1.20/installation/upgrade-from-gogs","da2"),exact:!0,sidebar:"docs"},{path:"/1.20/installation/windows-service",component:d("/1.20/installation/windows-service","d68"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/actions/act-runner",component:d("/1.20/usage/actions/act-runner","ef3"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/actions/comparison",component:d("/1.20/usage/actions/comparison","34c"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/actions/design",component:d("/1.20/usage/actions/design","73b"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/actions/faq",component:d("/1.20/usage/actions/faq","879"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/actions/overview",component:d("/1.20/usage/actions/overview","262"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/actions/quickstart",component:d("/1.20/usage/actions/quickstart","97f"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/agit-setup",component:d("/1.20/usage/agit-setup","9c3"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/authentication",component:d("/1.20/usage/authentication","cab"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/automatically-linked-references",component:d("/1.20/usage/automatically-linked-references","38f"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/clone-filters",component:d("/1.20/usage/clone-filters","8bb"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/incoming-email",component:d("/1.20/usage/incoming-email","f97"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/issue-pull-request-templates",component:d("/1.20/usage/issue-pull-request-templates","08c"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/labels",component:d("/1.20/usage/labels","e8b"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/merge-message-templates",component:d("/1.20/usage/merge-message-templates","1a0"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/multi-factor-authentication",component:d("/1.20/usage/multi-factor-authentication","838"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/alpine",component:d("/1.20/usage/packages/alpine","ade"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/cargo",component:d("/1.20/usage/packages/cargo","c9a"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/chef",component:d("/1.20/usage/packages/chef","3df"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/composer",component:d("/1.20/usage/packages/composer","cce"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/conan",component:d("/1.20/usage/packages/conan","51e"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/conda",component:d("/1.20/usage/packages/conda","323"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/container",component:d("/1.20/usage/packages/container","5da"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/cran",component:d("/1.20/usage/packages/cran","33e"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/debian",component:d("/1.20/usage/packages/debian","d63"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/generic",component:d("/1.20/usage/packages/generic","eba"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/go",component:d("/1.20/usage/packages/go","6fe"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/helm",component:d("/1.20/usage/packages/helm","805"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/maven",component:d("/1.20/usage/packages/maven","387"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/npm",component:d("/1.20/usage/packages/npm","efb"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/nuget",component:d("/1.20/usage/packages/nuget","f90"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/overview",component:d("/1.20/usage/packages/overview","129"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/pub",component:d("/1.20/usage/packages/pub","4b1"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/pypi",component:d("/1.20/usage/packages/pypi","67f"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/rpm",component:d("/1.20/usage/packages/rpm","d73"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/rubygems",component:d("/1.20/usage/packages/rubygems","e3d"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/storage",component:d("/1.20/usage/packages/storage","759"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/swift",component:d("/1.20/usage/packages/swift","b39"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/packages/vagrant",component:d("/1.20/usage/packages/vagrant","2f1"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/permissions",component:d("/1.20/usage/permissions","bc0"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/profile-readme",component:d("/1.20/usage/profile-readme","530"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/protected-tags",component:d("/1.20/usage/protected-tags","8f6"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/pull-request",component:d("/1.20/usage/pull-request","0d2"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/push",component:d("/1.20/usage/push","90b"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/repo-mirror",component:d("/1.20/usage/repo-mirror","15c"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/secrets",component:d("/1.20/usage/secrets","432"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/template-repositories",component:d("/1.20/usage/template-repositories","061"),exact:!0,sidebar:"docs"},{path:"/1.20/usage/webhooks",component:d("/1.20/usage/webhooks","eb4"),exact:!0,sidebar:"docs"}]}]},{path:"/next",component:d("/next","b19"),routes:[{path:"/next",component:d("/next","5be"),routes:[{path:"/next/",component:d("/next/","520"),exact:!0,sidebar:"docs"},{path:"/next/administration/adding-legal-pages",component:d("/next/administration/adding-legal-pages","1e8"),exact:!0,sidebar:"docs"},{path:"/next/administration/backup-and-restore",component:d("/next/administration/backup-and-restore","d04"),exact:!0,sidebar:"docs"},{path:"/next/administration/cmd-embedded",component:d("/next/administration/cmd-embedded","5d7"),exact:!0,sidebar:"docs"},{path:"/next/administration/command-line",component:d("/next/administration/command-line","d6f"),exact:!0,sidebar:"docs"},{path:"/next/administration/config-cheat-sheet",component:d("/next/administration/config-cheat-sheet","12f"),exact:!0,sidebar:"docs"},{path:"/next/administration/customizing-gitea",component:d("/next/administration/customizing-gitea","18f"),exact:!0,sidebar:"docs"},{path:"/next/administration/email-setup",component:d("/next/administration/email-setup","ad0"),exact:!0,sidebar:"docs"},{path:"/next/administration/environment-variables",component:d("/next/administration/environment-variables","408"),exact:!0,sidebar:"docs"},{path:"/next/administration/external-renderers",component:d("/next/administration/external-renderers","79e"),exact:!0,sidebar:"docs"},{path:"/next/administration/fail2ban-setup",component:d("/next/administration/fail2ban-setup","b8c"),exact:!0,sidebar:"docs"},{path:"/next/administration/git-lfs-setup",component:d("/next/administration/git-lfs-setup","8f1"),exact:!0,sidebar:"docs"},{path:"/next/administration/https-setup",component:d("/next/administration/https-setup","446"),exact:!0,sidebar:"docs"},{path:"/next/administration/logging-config",component:d("/next/administration/logging-config","faf"),exact:!0,sidebar:"docs"},{path:"/next/administration/mail-templates",component:d("/next/administration/mail-templates","55d"),exact:!0,sidebar:"docs"},{path:"/next/administration/repo-indexer",component:d("/next/administration/repo-indexer","90b"),exact:!0,sidebar:"docs"},{path:"/next/administration/reverse-proxies",component:d("/next/administration/reverse-proxies","604"),exact:!0,sidebar:"docs"},{path:"/next/administration/search-engines-indexation",component:d("/next/administration/search-engines-indexation","2c7"),exact:!0,sidebar:"docs"},{path:"/next/administration/signing",component:d("/next/administration/signing","ecb"),exact:!0,sidebar:"docs"},{path:"/next/awesome",component:d("/next/awesome","f43"),exact:!0},{path:"/next/category/administration",component:d("/next/category/administration","24f"),exact:!0,sidebar:"docs"},{path:"/next/category/contributing",component:d("/next/category/contributing","8b2"),exact:!0,sidebar:"docs"},{path:"/next/category/development",component:d("/next/category/development","ccc"),exact:!0,sidebar:"docs"},{path:"/next/category/help",component:d("/next/category/help","baa"),exact:!0,sidebar:"docs"},{path:"/next/category/installation",component:d("/next/category/installation","179"),exact:!0,sidebar:"docs"},{path:"/next/category/usage",component:d("/next/category/usage","c00"),exact:!0,sidebar:"docs"},{path:"/next/contributing/guidelines-backend",component:d("/next/contributing/guidelines-backend","e22"),exact:!0,sidebar:"docs"},{path:"/next/contributing/guidelines-frontend",component:d("/next/contributing/guidelines-frontend","c52"),exact:!0,sidebar:"docs"},{path:"/next/contributing/guidelines-refactoring",component:d("/next/contributing/guidelines-refactoring","e7e"),exact:!0,sidebar:"docs"},{path:"/next/contributing/localization",component:d("/next/contributing/localization","9df"),exact:!0,sidebar:"docs"},{path:"/next/development/api-usage",component:d("/next/development/api-usage","1ce"),exact:!0,sidebar:"docs"},{path:"/next/development/hacking-on-gitea",component:d("/next/development/hacking-on-gitea","fff"),exact:!0,sidebar:"docs"},{path:"/next/development/integrations",component:d("/next/development/integrations","dbe"),exact:!0,sidebar:"docs"},{path:"/next/development/migrations-interfaces",component:d("/next/development/migrations-interfaces","2bb"),exact:!0,sidebar:"docs"},{path:"/next/development/oauth2-provider",component:d("/next/development/oauth2-provider","23c"),exact:!0,sidebar:"docs"},{path:"/next/help/faq",component:d("/next/help/faq","228"),exact:!0,sidebar:"docs"},{path:"/next/help/support",component:d("/next/help/support","099"),exact:!0,sidebar:"docs"},{path:"/next/installation/comparison",component:d("/next/installation/comparison","cdf"),exact:!0,sidebar:"docs"},{path:"/next/installation/database-prep",component:d("/next/installation/database-prep","96a"),exact:!0,sidebar:"docs"},{path:"/next/installation/install-from-binary",component:d("/next/installation/install-from-binary","5de"),exact:!0,sidebar:"docs"},{path:"/next/installation/install-from-package",component:d("/next/installation/install-from-package","57f"),exact:!0,sidebar:"docs"},{path:"/next/installation/install-from-source",component:d("/next/installation/install-from-source","58d"),exact:!0,sidebar:"docs"},{path:"/next/installation/install-on-cloud-provider",component:d("/next/installation/install-on-cloud-provider","251"),exact:!0,sidebar:"docs"},{path:"/next/installation/install-on-kubernetes",component:d("/next/installation/install-on-kubernetes","ba9"),exact:!0,sidebar:"docs"},{path:"/next/installation/install-with-docker",component:d("/next/installation/install-with-docker","c62"),exact:!0,sidebar:"docs"},{path:"/next/installation/install-with-docker-rootless",component:d("/next/installation/install-with-docker-rootless","5be"),exact:!0,sidebar:"docs"},{path:"/next/installation/linux-service",component:d("/next/installation/linux-service","eb4"),exact:!0,sidebar:"docs"},{path:"/next/installation/upgrade-from-gitea",component:d("/next/installation/upgrade-from-gitea","312"),exact:!0,sidebar:"docs"},{path:"/next/installation/windows-service",component:d("/next/installation/windows-service","a05"),exact:!0,sidebar:"docs"},{path:"/next/usage/actions/act-runner",component:d("/next/usage/actions/act-runner","277"),exact:!0,sidebar:"docs"},{path:"/next/usage/actions/comparison",component:d("/next/usage/actions/comparison","ef6"),exact:!0,sidebar:"docs"},{path:"/next/usage/actions/design",component:d("/next/usage/actions/design","613"),exact:!0,sidebar:"docs"},{path:"/next/usage/actions/faq",component:d("/next/usage/actions/faq","12c"),exact:!0,sidebar:"docs"},{path:"/next/usage/actions/overview",component:d("/next/usage/actions/overview","747"),exact:!0,sidebar:"docs"},{path:"/next/usage/actions/quickstart",component:d("/next/usage/actions/quickstart","1dd"),exact:!0,sidebar:"docs"},{path:"/next/usage/agit-setup",component:d("/next/usage/agit-setup","922"),exact:!0,sidebar:"docs"},{path:"/next/usage/authentication",component:d("/next/usage/authentication","bf8"),exact:!0,sidebar:"docs"},{path:"/next/usage/automatically-linked-references",component:d("/next/usage/automatically-linked-references","54e"),exact:!0,sidebar:"docs"},{path:"/next/usage/badge",component:d("/next/usage/badge","215"),exact:!0,sidebar:"docs"},{path:"/next/usage/blame",component:d("/next/usage/blame","0e7"),exact:!0,sidebar:"docs"},{path:"/next/usage/blocking-user",component:d("/next/usage/blocking-user","4c6"),exact:!0,sidebar:"docs"},{path:"/next/usage/clone-filters",component:d("/next/usage/clone-filters","d35"),exact:!0,sidebar:"docs"},{path:"/next/usage/code-owners",component:d("/next/usage/code-owners","3ba"),exact:!0,sidebar:"docs"},{path:"/next/usage/incoming-email",component:d("/next/usage/incoming-email","86a"),exact:!0,sidebar:"docs"},{path:"/next/usage/issue-pull-request-templates",component:d("/next/usage/issue-pull-request-templates","58d"),exact:!0,sidebar:"docs"},{path:"/next/usage/labels",component:d("/next/usage/labels","792"),exact:!0,sidebar:"docs"},{path:"/next/usage/merge-message-templates",component:d("/next/usage/merge-message-templates","509"),exact:!0,sidebar:"docs"},{path:"/next/usage/multi-factor-authentication",component:d("/next/usage/multi-factor-authentication","29a"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/alpine",component:d("/next/usage/packages/alpine","de1"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/cargo",component:d("/next/usage/packages/cargo","a79"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/chef",component:d("/next/usage/packages/chef","4d9"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/composer",component:d("/next/usage/packages/composer","6df"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/conan",component:d("/next/usage/packages/conan","130"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/conda",component:d("/next/usage/packages/conda","453"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/container",component:d("/next/usage/packages/container","b54"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/cran",component:d("/next/usage/packages/cran","b78"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/debian",component:d("/next/usage/packages/debian","96e"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/generic",component:d("/next/usage/packages/generic","3b0"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/go",component:d("/next/usage/packages/go","ce2"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/helm",component:d("/next/usage/packages/helm","3ed"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/maven",component:d("/next/usage/packages/maven","625"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/npm",component:d("/next/usage/packages/npm","3f4"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/nuget",component:d("/next/usage/packages/nuget","258"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/overview",component:d("/next/usage/packages/overview","eb8"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/pub",component:d("/next/usage/packages/pub","d64"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/pypi",component:d("/next/usage/packages/pypi","536"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/rpm",component:d("/next/usage/packages/rpm","818"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/rubygems",component:d("/next/usage/packages/rubygems","675"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/storage",component:d("/next/usage/packages/storage","f16"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/swift",component:d("/next/usage/packages/swift","44a"),exact:!0,sidebar:"docs"},{path:"/next/usage/packages/vagrant",component:d("/next/usage/packages/vagrant","b98"),exact:!0,sidebar:"docs"},{path:"/next/usage/permissions",component:d("/next/usage/permissions","c7c"),exact:!0,sidebar:"docs"},{path:"/next/usage/profile-readme",component:d("/next/usage/profile-readme","e55"),exact:!0,sidebar:"docs"},{path:"/next/usage/protected-tags",component:d("/next/usage/protected-tags","479"),exact:!0,sidebar:"docs"},{path:"/next/usage/pull-request",component:d("/next/usage/pull-request","bca"),exact:!0,sidebar:"docs"},{path:"/next/usage/push",component:d("/next/usage/push","164"),exact:!0,sidebar:"docs"},{path:"/next/usage/repo-mirror",component:d("/next/usage/repo-mirror","da1"),exact:!0,sidebar:"docs"},{path:"/next/usage/secrets",component:d("/next/usage/secrets","43e"),exact:!0,sidebar:"docs"},{path:"/next/usage/template-repositories",component:d("/next/usage/template-repositories","f9c"),exact:!0,sidebar:"docs"},{path:"/next/usage/webhooks",component:d("/next/usage/webhooks","753"),exact:!0,sidebar:"docs"}]}]},{path:"/",component:d("/","baf"),routes:[{path:"/",component:d("/","a4d"),routes:[{path:"/administration/adding-legal-pages",component:d("/administration/adding-legal-pages","0d0"),exact:!0,sidebar:"docs"},{path:"/administration/backup-and-restore",component:d("/administration/backup-and-restore","db6"),exact:!0,sidebar:"docs"},{path:"/administration/cmd-embedded",component:d("/administration/cmd-embedded","6d3"),exact:!0,sidebar:"docs"},{path:"/administration/command-line",component:d("/administration/command-line","416"),exact:!0,sidebar:"docs"},{path:"/administration/config-cheat-sheet",component:d("/administration/config-cheat-sheet","0e6"),exact:!0,sidebar:"docs"},{path:"/administration/customizing-gitea",component:d("/administration/customizing-gitea","b2d"),exact:!0,sidebar:"docs"},{path:"/administration/email-setup",component:d("/administration/email-setup","f74"),exact:!0,sidebar:"docs"},{path:"/administration/environment-variables",component:d("/administration/environment-variables","206"),exact:!0,sidebar:"docs"},{path:"/administration/external-renderers",component:d("/administration/external-renderers","eb3"),exact:!0,sidebar:"docs"},{path:"/administration/fail2ban-setup",component:d("/administration/fail2ban-setup","561"),exact:!0,sidebar:"docs"},{path:"/administration/git-lfs-setup",component:d("/administration/git-lfs-setup","415"),exact:!0,sidebar:"docs"},{path:"/administration/https-setup",component:d("/administration/https-setup","066"),exact:!0,sidebar:"docs"},{path:"/administration/logging-config",component:d("/administration/logging-config","a30"),exact:!0,sidebar:"docs"},{path:"/administration/mail-templates",component:d("/administration/mail-templates","f8d"),exact:!0,sidebar:"docs"},{path:"/administration/repo-indexer",component:d("/administration/repo-indexer","74d"),exact:!0,sidebar:"docs"},{path:"/administration/reverse-proxies",component:d("/administration/reverse-proxies","e8a"),exact:!0,sidebar:"docs"},{path:"/administration/search-engines-indexation",component:d("/administration/search-engines-indexation","503"),exact:!0,sidebar:"docs"},{path:"/administration/signing",component:d("/administration/signing","cfb"),exact:!0,sidebar:"docs"},{path:"/awesome",component:d("/awesome","84c"),exact:!0},{path:"/category/administration",component:d("/category/administration","305"),exact:!0,sidebar:"docs"},{path:"/category/contributing",component:d("/category/contributing","a52"),exact:!0,sidebar:"docs"},{path:"/category/development",component:d("/category/development","549"),exact:!0,sidebar:"docs"},{path:"/category/help",component:d("/category/help","9f7"),exact:!0,sidebar:"docs"},{path:"/category/installation",component:d("/category/installation","e8b"),exact:!0,sidebar:"docs"},{path:"/category/usage",component:d("/category/usage","73d"),exact:!0,sidebar:"docs"},{path:"/contributing/guidelines-backend",component:d("/contributing/guidelines-backend","9f1"),exact:!0,sidebar:"docs"},{path:"/contributing/guidelines-frontend",component:d("/contributing/guidelines-frontend","70f"),exact:!0,sidebar:"docs"},{path:"/contributing/guidelines-refactoring",component:d("/contributing/guidelines-refactoring","a83"),exact:!0,sidebar:"docs"},{path:"/contributing/localization",component:d("/contributing/localization","805"),exact:!0,sidebar:"docs"},{path:"/development/api-usage",component:d("/development/api-usage","5f4"),exact:!0,sidebar:"docs"},{path:"/development/hacking-on-gitea",component:d("/development/hacking-on-gitea","2ab"),exact:!0,sidebar:"docs"},{path:"/development/integrations",component:d("/development/integrations","d6c"),exact:!0,sidebar:"docs"},{path:"/development/migrations-interfaces",component:d("/development/migrations-interfaces","1fc"),exact:!0,sidebar:"docs"},{path:"/development/oauth2-provider",component:d("/development/oauth2-provider","0e5"),exact:!0,sidebar:"docs"},{path:"/help/faq",component:d("/help/faq","dc5"),exact:!0,sidebar:"docs"},{path:"/help/support",component:d("/help/support","9b8"),exact:!0,sidebar:"docs"},{path:"/installation/comparison",component:d("/installation/comparison","e42"),exact:!0,sidebar:"docs"},{path:"/installation/database-prep",component:d("/installation/database-prep","a61"),exact:!0,sidebar:"docs"},{path:"/installation/install-from-binary",component:d("/installation/install-from-binary","814"),exact:!0,sidebar:"docs"},{path:"/installation/install-from-package",component:d("/installation/install-from-package","e70"),exact:!0,sidebar:"docs"},{path:"/installation/install-from-source",component:d("/installation/install-from-source","886"),exact:!0,sidebar:"docs"},{path:"/installation/install-on-cloud-provider",component:d("/installation/install-on-cloud-provider","afb"),exact:!0,sidebar:"docs"},{path:"/installation/install-on-kubernetes",component:d("/installation/install-on-kubernetes","a8b"),exact:!0,sidebar:"docs"},{path:"/installation/install-with-docker",component:d("/installation/install-with-docker","27e"),exact:!0,sidebar:"docs"},{path:"/installation/install-with-docker-rootless",component:d("/installation/install-with-docker-rootless","209"),exact:!0,sidebar:"docs"},{path:"/installation/linux-service",component:d("/installation/linux-service","71a"),exact:!0,sidebar:"docs"},{path:"/installation/upgrade-from-gitea",component:d("/installation/upgrade-from-gitea","c5a"),exact:!0,sidebar:"docs"},{path:"/installation/upgrade-from-gogs",component:d("/installation/upgrade-from-gogs","0db"),exact:!0,sidebar:"docs"},{path:"/installation/windows-service",component:d("/installation/windows-service","6fd"),exact:!0,sidebar:"docs"},{path:"/usage/actions/act-runner",component:d("/usage/actions/act-runner","6d9"),exact:!0,sidebar:"docs"},{path:"/usage/actions/comparison",component:d("/usage/actions/comparison","f76"),exact:!0,sidebar:"docs"},{path:"/usage/actions/design",component:d("/usage/actions/design","412"),exact:!0,sidebar:"docs"},{path:"/usage/actions/faq",component:d("/usage/actions/faq","f85"),exact:!0,sidebar:"docs"},{path:"/usage/actions/overview",component:d("/usage/actions/overview","933"),exact:!0,sidebar:"docs"},{path:"/usage/actions/quickstart",component:d("/usage/actions/quickstart","bb9"),exact:!0,sidebar:"docs"},{path:"/usage/agit-setup",component:d("/usage/agit-setup","f89"),exact:!0,sidebar:"docs"},{path:"/usage/authentication",component:d("/usage/authentication","55e"),exact:!0,sidebar:"docs"},{path:"/usage/automatically-linked-references",component:d("/usage/automatically-linked-references","f26"),exact:!0,sidebar:"docs"},{path:"/usage/blame",component:d("/usage/blame","99c"),exact:!0,sidebar:"docs"},{path:"/usage/clone-filters",component:d("/usage/clone-filters","b2a"),exact:!0,sidebar:"docs"},{path:"/usage/code-owners",component:d("/usage/code-owners","046"),exact:!0,sidebar:"docs"},{path:"/usage/incoming-email",component:d("/usage/incoming-email","925"),exact:!0,sidebar:"docs"},{path:"/usage/issue-pull-request-templates",component:d("/usage/issue-pull-request-templates","49e"),exact:!0,sidebar:"docs"},{path:"/usage/labels",component:d("/usage/labels","787"),exact:!0,sidebar:"docs"},{path:"/usage/merge-message-templates",component:d("/usage/merge-message-templates","61a"),exact:!0,sidebar:"docs"},{path:"/usage/multi-factor-authentication",component:d("/usage/multi-factor-authentication","1ad"),exact:!0,sidebar:"docs"},{path:"/usage/packages/alpine",component:d("/usage/packages/alpine","128"),exact:!0,sidebar:"docs"},{path:"/usage/packages/cargo",component:d("/usage/packages/cargo","3f7"),exact:!0,sidebar:"docs"},{path:"/usage/packages/chef",component:d("/usage/packages/chef","54b"),exact:!0,sidebar:"docs"},{path:"/usage/packages/composer",component:d("/usage/packages/composer","05d"),exact:!0,sidebar:"docs"},{path:"/usage/packages/conan",component:d("/usage/packages/conan","54d"),exact:!0,sidebar:"docs"},{path:"/usage/packages/conda",component:d("/usage/packages/conda","433"),exact:!0,sidebar:"docs"},{path:"/usage/packages/container",component:d("/usage/packages/container","468"),exact:!0,sidebar:"docs"},{path:"/usage/packages/cran",component:d("/usage/packages/cran","181"),exact:!0,sidebar:"docs"},{path:"/usage/packages/debian",component:d("/usage/packages/debian","d14"),exact:!0,sidebar:"docs"},{path:"/usage/packages/generic",component:d("/usage/packages/generic","710"),exact:!0,sidebar:"docs"},{path:"/usage/packages/go",component:d("/usage/packages/go","7ad"),exact:!0,sidebar:"docs"},{path:"/usage/packages/helm",component:d("/usage/packages/helm","ef1"),exact:!0,sidebar:"docs"},{path:"/usage/packages/maven",component:d("/usage/packages/maven","e4b"),exact:!0,sidebar:"docs"},{path:"/usage/packages/npm",component:d("/usage/packages/npm","05e"),exact:!0,sidebar:"docs"},{path:"/usage/packages/nuget",component:d("/usage/packages/nuget","26f"),exact:!0,sidebar:"docs"},{path:"/usage/packages/overview",component:d("/usage/packages/overview","ccd"),exact:!0,sidebar:"docs"},{path:"/usage/packages/pub",component:d("/usage/packages/pub","27d"),exact:!0,sidebar:"docs"},{path:"/usage/packages/pypi",component:d("/usage/packages/pypi","420"),exact:!0,sidebar:"docs"},{path:"/usage/packages/rpm",component:d("/usage/packages/rpm","cbe"),exact:!0,sidebar:"docs"},{path:"/usage/packages/rubygems",component:d("/usage/packages/rubygems","a5d"),exact:!0,sidebar:"docs"},{path:"/usage/packages/storage",component:d("/usage/packages/storage","392"),exact:!0,sidebar:"docs"},{path:"/usage/packages/swift",component:d("/usage/packages/swift","45d"),exact:!0,sidebar:"docs"},{path:"/usage/packages/vagrant",component:d("/usage/packages/vagrant","b9c"),exact:!0,sidebar:"docs"},{path:"/usage/permissions",component:d("/usage/permissions","fec"),exact:!0,sidebar:"docs"},{path:"/usage/profile-readme",component:d("/usage/profile-readme","353"),exact:!0,sidebar:"docs"},{path:"/usage/protected-tags",component:d("/usage/protected-tags","59a"),exact:!0,sidebar:"docs"},{path:"/usage/pull-request",component:d("/usage/pull-request","452"),exact:!0,sidebar:"docs"},{path:"/usage/push",component:d("/usage/push","8f3"),exact:!0,sidebar:"docs"},{path:"/usage/repo-mirror",component:d("/usage/repo-mirror","fad"),exact:!0,sidebar:"docs"},{path:"/usage/secrets",component:d("/usage/secrets","9f6"),exact:!0,sidebar:"docs"},{path:"/usage/template-repositories",component:d("/usage/template-repositories","875"),exact:!0,sidebar:"docs"},{path:"/usage/webhooks",component:d("/usage/webhooks","d50"),exact:!0,sidebar:"docs"},{path:"/",component:d("/","3db"),exact:!0,sidebar:"docs"}]}]}]},{path:"*",component:d("*")}]},98934:(e,t,n)=>{"use strict";n.d(t,{_:()=>o,t:()=>i});var r=n(67294),s=n(85893);const o=r.createContext(!1);function i(e){let{children:t}=e;const[n,i]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{i(!0)}),[]),(0,s.jsx)(o.Provider,{value:n,children:t})}},97221:(e,t,n)=>{"use strict";var r=n(67294),s=n(20745),o=n(73727),i=n(70405),a=n(10412);const p=[n(56657),n(32497),n(3310),n(18320),n(52295),n(41304),n(4750),n(34838)];var c=n(723),m=n(16550),d=n(18790),u=n(85893);function l(e){let{children:t}=e;return(0,u.jsx)(u.Fragment,{children:t})}var g=n(35742),h=n(52263),f=n(44996),y=n(86668),b=n(1944),x=n(94711),w=n(19727),v=n(43320),k=n(18780),q=n(90197);function $(){const{i18n:{currentLocale:e,defaultLocale:t,localeConfigs:n}}=(0,h.Z)(),r=(0,x.l)(),s=n[e].htmlLang,o=e=>e.replace("-","_");return(0,u.jsxs)(g.Z,{children:[Object.entries(n).map((e=>{let[t,{htmlLang:n}]=e;return(0,u.jsx)("link",{rel:"alternate",href:r.createUrl({locale:t,fullyQualified:!0}),hrefLang:n},t)})),(0,u.jsx)("link",{rel:"alternate",href:r.createUrl({locale:t,fullyQualified:!0}),hrefLang:"x-default"}),(0,u.jsx)("meta",{property:"og:locale",content:o(s)}),Object.values(n).filter((e=>s!==e.htmlLang)).map((e=>(0,u.jsx)("meta",{property:"og:locale:alternate",content:o(e.htmlLang)},`meta-og-${e.htmlLang}`)))]})}function _(e){let{permalink:t}=e;const{siteConfig:{url:n}}=(0,h.Z)(),r=function(){const{siteConfig:{url:e,baseUrl:t,trailingSlash:n}}=(0,h.Z)(),{pathname:r}=(0,m.TH)();return e+(0,k.applyTrailingSlash)((0,f.Z)(r),{trailingSlash:n,baseUrl:t})}(),s=t?`${n}${t}`:r;return(0,u.jsxs)(g.Z,{children:[(0,u.jsx)("meta",{property:"og:url",content:s}),(0,u.jsx)("link",{rel:"canonical",href:s})]})}function I(){const{i18n:{currentLocale:e}}=(0,h.Z)(),{metadata:t,image:n}=(0,y.L)();return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsxs)(g.Z,{children:[(0,u.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,u.jsx)("body",{className:w.h})]}),n&&(0,u.jsx)(b.d,{image:n}),(0,u.jsx)(_,{}),(0,u.jsx)($,{}),(0,u.jsx)(q.Z,{tag:v.HX,locale:e}),(0,u.jsx)(g.Z,{children:t.map(((e,t)=>(0,u.jsx)("meta",{...e},t)))})]})}const C=new Map;function R(e){if(C.has(e.pathname))return{...e,pathname:C.get(e.pathname)};if((0,d.f)(c.Z,e.pathname).some((e=>{let{route:t}=e;return!0===t.exact})))return C.set(e.pathname,e.pathname),e;const t=e.pathname.trim().replace(/(?:\/index)?\.html$/,"")||"/";return C.set(e.pathname,t),{...e,pathname:t}}var L=n(98934),T=n(58940),S=n(20469);function P(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const s=p.map((t=>{const r=t.default?.[e]??t[e];return r?.(...n)}));return()=>s.forEach((e=>e?.()))}const A=function(e){let{children:t,location:n,previousLocation:r}=e;return(0,S.Z)((()=>{r!==n&&(!function(e){let{location:t,previousLocation:n}=e;if(!n)return;const r=t.pathname===n.pathname,s=t.hash===n.hash,o=t.search===n.search;if(r&&s&&!o)return;const{hash:i}=t;if(i){const e=decodeURIComponent(i.substring(1)),t=document.getElementById(e);t?.scrollIntoView()}else window.scrollTo(0,0)}({location:n,previousLocation:r}),P("onRouteDidUpdate",{previousLocation:r,location:n}))}),[r,n]),t};function O(e){const t=Array.from(new Set([e,decodeURI(e)])).map((e=>(0,d.f)(c.Z,e))).flat();return Promise.all(t.map((e=>e.route.component.preload?.())))}class j extends r.Component{previousLocation;routeUpdateCleanupCb;constructor(e){super(e),this.previousLocation=null,this.routeUpdateCleanupCb=a.default.canUseDOM?P("onRouteUpdate",{previousLocation:null,location:this.props.location}):()=>{},this.state={nextRouteHasLoaded:!0}}shouldComponentUpdate(e,t){if(e.location===this.props.location)return t.nextRouteHasLoaded;const n=e.location;return this.previousLocation=this.props.location,this.setState({nextRouteHasLoaded:!1}),this.routeUpdateCleanupCb=P("onRouteUpdate",{previousLocation:this.previousLocation,location:n}),O(n.pathname).then((()=>{this.routeUpdateCleanupCb(),this.setState({nextRouteHasLoaded:!0})})).catch((e=>{console.warn(e),window.location.reload()})),!1}render(){const{children:e,location:t}=this.props;return(0,u.jsx)(A,{previousLocation:this.previousLocation,location:t,children:(0,u.jsx)(m.AW,{location:t,render:()=>e})})}}const E=j,F="__docusaurus-base-url-issue-banner-container",D="__docusaurus-base-url-issue-banner",U="__docusaurus-base-url-issue-banner-suggestion-container";function G(e){return`\ndocument.addEventListener('DOMContentLoaded', function maybeInsertBanner() {\n  var shouldInsert = typeof window['docusaurus'] === 'undefined';\n  shouldInsert && insertBanner();\n});\n\nfunction insertBanner() {\n  var bannerContainer = document.createElement('div');\n  bannerContainer.id = '${F}';\n  var bannerHtml = ${JSON.stringify(function(e){return`\n<div id="${D}" style="border: thick solid red; background-color: rgb(255, 230, 179); margin: 20px; padding: 20px; font-size: 20px;">\n   <p style="font-weight: bold; font-size: 30px;">Your Docusaurus site did not load properly.</p>\n   <p>A very common reason is a wrong site <a href="https://docusaurus.io/docs/docusaurus.config.js/#baseUrl" style="font-weight: bold;">baseUrl configuration</a>.</p>\n   <p>Current configured baseUrl = <span style="font-weight: bold; color: red;">${e}</span> ${"/"===e?" (default value)":""}</p>\n   <p>We suggest trying baseUrl = <span id="${U}" style="font-weight: bold; color: green;"></span></p>\n</div>\n`}(e)).replace(/</g,"\\<")};\n  bannerContainer.innerHTML = bannerHtml;\n  document.body.prepend(bannerContainer);\n  var suggestionContainer = document.getElementById('${U}');\n  var actualHomePagePath = window.location.pathname;\n  var suggestedBaseUrl = actualHomePagePath.substr(-1) === '/'\n        ? actualHomePagePath\n        : actualHomePagePath + '/';\n  suggestionContainer.innerHTML = suggestedBaseUrl;\n}\n`}function N(){const{siteConfig:{baseUrl:e}}=(0,h.Z)();return(0,u.jsx)(u.Fragment,{children:!a.default.canUseDOM&&(0,u.jsx)(g.Z,{children:(0,u.jsx)("script",{children:G(e)})})})}function z(){const{siteConfig:{baseUrl:e,baseUrlIssueBanner:t}}=(0,h.Z)(),{pathname:n}=(0,m.TH)();return t&&n===e?(0,u.jsx)(N,{}):null}function B(){const{siteConfig:{favicon:e,title:t,noIndex:n},i18n:{currentLocale:r,localeConfigs:s}}=(0,h.Z)(),o=(0,f.Z)(e),{htmlLang:i,direction:a}=s[r];return(0,u.jsxs)(g.Z,{children:[(0,u.jsx)("html",{lang:i,dir:a}),(0,u.jsx)("title",{children:t}),(0,u.jsx)("meta",{property:"og:title",content:t}),(0,u.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1.0"}),n&&(0,u.jsx)("meta",{name:"robots",content:"noindex, nofollow"}),e&&(0,u.jsx)("link",{rel:"icon",href:o})]})}var M=n(44763),H=n(72389);function W(){const e=(0,H.Z)();return(0,u.jsx)(g.Z,{children:(0,u.jsx)("html",{"data-has-hydrated":e})})}function K(){const e=(0,d.H)(c.Z),t=(0,m.TH)();return(0,u.jsx)(M.Z,{children:(0,u.jsx)(T.M,{children:(0,u.jsxs)(L.t,{children:[(0,u.jsxs)(l,{children:[(0,u.jsx)(B,{}),(0,u.jsx)(I,{}),(0,u.jsx)(z,{}),(0,u.jsx)(E,{location:R(t),children:e})]}),(0,u.jsx)(W,{})]})})})}var V=n(16887);const Q=function(e){try{return document.createElement("link").relList.supports(e)}catch{return!1}}("prefetch")?function(e){return new Promise(((t,n)=>{if("undefined"==typeof document)return void n();const r=document.createElement("link");r.setAttribute("rel","prefetch"),r.setAttribute("href",e),r.onload=()=>t(),r.onerror=()=>n();const s=document.getElementsByTagName("head")[0]??document.getElementsByName("script")[0]?.parentNode;s?.appendChild(r)}))}:function(e){return new Promise(((t,n)=>{const r=new XMLHttpRequest;r.open("GET",e,!0),r.withCredentials=!0,r.onload=()=>{200===r.status?t():n()},r.send(null)}))};var Z=n(99670);const X=new Set,Y=new Set,J=()=>navigator.connection?.effectiveType.includes("2g")||navigator.connection?.saveData,ee={prefetch(e){if(!(e=>!J()&&!Y.has(e)&&!X.has(e))(e))return!1;X.add(e);const t=(0,d.f)(c.Z,e).flatMap((e=>{return t=e.route.path,Object.entries(V).filter((e=>{let[n]=e;return n.replace(/-[^-]+$/,"")===t})).flatMap((e=>{let[,t]=e;return Object.values((0,Z.Z)(t))}));var t}));return Promise.all(t.map((e=>{const t=n.gca(e);return t&&!t.includes("undefined")?Q(t).catch((()=>{})):Promise.resolve()})))},preload:e=>!!(e=>!J()&&!Y.has(e))(e)&&(Y.add(e),O(e))},te=Object.freeze(ee),ne=Boolean(!0);if(a.default.canUseDOM){window.docusaurus=te;const e=document.getElementById("__docusaurus"),t=(0,u.jsx)(i.B6,{children:(0,u.jsx)(o.VK,{children:(0,u.jsx)(K,{})})}),n=(e,t)=>{console.error("Docusaurus React Root onRecoverableError:",e,t)},a=()=>{if(ne)r.startTransition((()=>{s.hydrateRoot(e,t,{onRecoverableError:n})}));else{const o=s.createRoot(e,{onRecoverableError:n});r.startTransition((()=>{o.render(t)}))}};O(window.location.pathname).then(a)}},58940:(e,t,n)=>{"use strict";n.d(t,{_:()=>d,M:()=>u});var r=n(67294),s=n(36809);const o=JSON.parse('{"docusaurus-plugin-google-gtag":{"default":{"trackingID":["G-KHM0KYT506"],"anonymizeIP":false,"id":"default"}},"docusaurus-plugin-redoc":{"plugin-redoc-0":{"url":"redocusaurus/plugin-redoc-0.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"description":"This documentation describes the Gitea API.","title":"Gitea API","license":{"name":"MIT","url":"http://opensource.org/licenses/MIT"},"version":"{{AppVer | JSEscape}}"},"paths":{"/activitypub/user-id/{user-id}":{"get":{"tags":["activitypub"],"summary":"Returns the Person actor for a user","operationId":"activitypubPerson","parameters":[{"description":"user ID of the user","name":"user-id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityPub"}}}},"/activitypub/user-id/{user-id}/inbox":{"post":{"tags":["activitypub"],"summary":"Send to the inbox","operationId":"activitypubPersonInbox","parameters":[{"description":"user ID of the user","name":"user-id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/admin/cron":{"get":{"tags":["admin"],"summary":"List cron tasks","operationId":"adminCronList","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CronList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/cron/{task}":{"post":{"tags":["admin"],"summary":"Run cron task","operationId":"adminCronRun","parameters":[{"description":"task to run","name":"task","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/admin/emails":{"get":{"tags":["admin"],"summary":"List all emails","operationId":"adminGetAllEmails","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/EmailList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/emails/search":{"get":{"tags":["admin"],"summary":"Search all emails","operationId":"adminSearchEmails","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/EmailList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/hooks":{"get":{"tags":["admin"],"summary":"List system\'s webhooks","operationId":"adminListHooks","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["admin"],"summary":"Create a hook","operationId":"adminCreateHook","requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/admin/hooks/{id}":{"get":{"tags":["admin"],"summary":"Get a hook","operationId":"adminGetHook","parameters":[{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"}}},"delete":{"tags":["admin"],"summary":"Delete a hook","operationId":"adminDeleteHook","parameters":[{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["admin"],"summary":"Update a hook","operationId":"adminEditHook","parameters":[{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/admin/orgs":{"get":{"tags":["admin"],"summary":"List all organizations","operationId":"adminGetAllOrgs","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/runners/registration-token":{"get":{"tags":["admin"],"summary":"Get an global actions runner registration token","operationId":"adminGetRunnerRegistrationToken","responses":{"200":{"$ref":"#/components/responses/RegistrationToken"}}}},"/admin/unadopted":{"get":{"tags":["admin"],"summary":"List unadopted repositories","operationId":"adminUnadoptedList","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"pattern of repositories to search for","name":"pattern","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/StringSlice"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/unadopted/{owner}/{repo}":{"post":{"tags":["admin"],"summary":"Adopt unadopted files as a repository","operationId":"adminAdoptRepository","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["admin"],"summary":"Delete unadopted files","operationId":"adminDeleteUnadoptedRepository","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/users":{"get":{"tags":["admin"],"summary":"Search users according filter conditions","operationId":"adminSearchUsers","parameters":[{"description":"ID of the user\'s login source to search for","name":"source_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"user\'s login name to search for","name":"login_name","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["admin"],"summary":"Create a user","operationId":"adminCreateUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserOption"}}}},"responses":{"201":{"$ref":"#/components/responses/User"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}":{"delete":{"tags":["admin"],"summary":"Delete a user","operationId":"adminDeleteUser","parameters":[{"description":"username of user to delete","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"purge the user from the system completely","name":"purge","in":"query","schema":{"type":"boolean"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"patch":{"tags":["admin"],"summary":"Edit an existing user","operationId":"adminEditUser","parameters":[{"description":"username of user to edit","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditUserOption"}}}},"responses":{"200":{"$ref":"#/components/responses/User"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/badges":{"get":{"tags":["admin"],"summary":"List a user\'s badges","operationId":"adminListUserBadges","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/BadgeList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["admin"],"summary":"Add a badge to a user","operationId":"adminAddUserBadges","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserBadgeOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["admin"],"summary":"Remove a badge from a user","operationId":"adminDeleteUserBadges","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserBadgeOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/UserBadgeOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/keys":{"post":{"tags":["admin"],"summary":"Add a public key on behalf of a user","operationId":"adminCreatePublicKey","parameters":[{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/PublicKey"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/keys/{id}":{"delete":{"tags":["admin"],"summary":"Delete a user\'s public key","operationId":"adminDeleteUserPublicKey","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/admin/users/{username}/orgs":{"post":{"tags":["admin"],"summary":"Create an organization","operationId":"adminCreateOrg","parameters":[{"description":"username of the user that will own the created organization","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOrgOption"},"responses":{"201":{"$ref":"#/components/responses/Organization"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/rename":{"post":{"tags":["admin"],"summary":"Rename a user","operationId":"adminRenameUser","parameters":[{"description":"existing username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RenameUserOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/RenameUserOption"}}},"required":true},"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/repos":{"post":{"tags":["admin"],"summary":"Create a repository on behalf of a user","operationId":"adminCreateRepo","parameters":[{"description":"username of the user. This user will own the created repository","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRepoOption"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/gitignore/templates":{"get":{"tags":["miscellaneous"],"summary":"Returns a list of all gitignore templates","operationId":"listGitignoresTemplates","responses":{"200":{"$ref":"#/components/responses/GitignoreTemplateList"}}}},"/gitignore/templates/{name}":{"get":{"tags":["miscellaneous"],"summary":"Returns information about a gitignore template","operationId":"getGitignoreTemplateInfo","parameters":[{"description":"name of the template","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitignoreTemplateInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/label/templates":{"get":{"tags":["miscellaneous"],"summary":"Returns a list of all label templates","operationId":"listLabelTemplates","responses":{"200":{"$ref":"#/components/responses/LabelTemplateList"}}}},"/label/templates/{name}":{"get":{"tags":["miscellaneous"],"summary":"Returns all labels in a template","operationId":"getLabelTemplateInfo","parameters":[{"description":"name of the template","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/LabelTemplateInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/licenses":{"get":{"tags":["miscellaneous"],"summary":"Returns a list of all license templates","operationId":"listLicenseTemplates","responses":{"200":{"$ref":"#/components/responses/LicenseTemplateList"}}}},"/licenses/{name}":{"get":{"tags":["miscellaneous"],"summary":"Returns information about a license template","operationId":"getLicenseTemplateInfo","parameters":[{"description":"name of the license","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/LicenseTemplateInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/markdown":{"post":{"tags":["miscellaneous"],"summary":"Render a markdown document as HTML","operationId":"renderMarkdown","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MarkdownOption"}}}},"responses":{"200":{"$ref":"#/components/responses/MarkdownRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/markdown/raw":{"post":{"tags":["miscellaneous"],"summary":"Render raw markdown as HTML","operationId":"renderMarkdownRaw","requestBody":{"content":{"text/plain":{"schema":{"type":"string"}}},"description":"Request body to render","required":true},"responses":{"200":{"$ref":"#/components/responses/MarkdownRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/markup":{"post":{"tags":["miscellaneous"],"summary":"Render a markup document as HTML","operationId":"renderMarkup","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MarkupOption"}}}},"responses":{"200":{"$ref":"#/components/responses/MarkupRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/nodeinfo":{"get":{"tags":["miscellaneous"],"summary":"Returns the nodeinfo of the Gitea application","operationId":"getNodeInfo","responses":{"200":{"$ref":"#/components/responses/NodeInfo"}}}},"/notifications":{"get":{"tags":["notification"],"summary":"List users\'s notification threads","operationId":"notifyGetList","parameters":[{"description":"If true, show notifications marked as read. Default value is false","name":"all","in":"query","schema":{"type":"boolean"}},{"description":"Show notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread & pinned.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"filter notifications by subject type","name":"subject-type","in":"query","explode":true,"schema":{"type":"array","items":{"enum":["issue","pull","commit","repository"],"type":"string"}}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThreadList"}}},"put":{"tags":["notification"],"summary":"Mark notification threads as read, pinned or unread","operationId":"notifyReadList","parameters":[{"description":"Describes the last point that notifications were checked. Anything updated since this time will not be updated.","name":"last_read_at","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"If true, mark all notifications on this repo. Default value is false","name":"all","in":"query","schema":{"type":"string"}},{"description":"Mark notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Status to mark notifications as, Defaults to read.","name":"to-status","in":"query","schema":{"type":"string"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThreadList"}}}},"/notifications/new":{"get":{"tags":["notification"],"summary":"Check if unread notifications exist","operationId":"notifyNewAvailable","responses":{"200":{"$ref":"#/components/responses/NotificationCount"}}}},"/notifications/threads/{id}":{"get":{"tags":["notification"],"summary":"Get notification thread by ID","operationId":"notifyGetThread","parameters":[{"description":"id of notification thread","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThread"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["notification"],"summary":"Mark notification thread as read by ID","operationId":"notifyReadThread","parameters":[{"description":"id of notification thread","name":"id","in":"path","required":true,"schema":{"type":"string"}},{"description":"Status to mark notifications as","name":"to-status","in":"query","schema":{"type":"string","default":"read"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThread"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/org/{org}/repos":{"post":{"tags":["organization"],"summary":"Create a repository in an organization","operationId":"createOrgRepoDeprecated","deprecated":true,"parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs":{"get":{"tags":["organization"],"summary":"Get list of organizations","operationId":"orgGetAll","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"}}},"post":{"tags":["organization"],"summary":"Create an organization","operationId":"orgCreate","requestBody":{"$ref":"#/components/requestBodies/CreateOrgOption"},"responses":{"201":{"$ref":"#/components/responses/Organization"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}":{"get":{"tags":["organization"],"summary":"Get an organization","operationId":"orgGet","parameters":[{"description":"name of the organization to get","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Organization"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete an organization","operationId":"orgDelete","parameters":[{"description":"organization that is to be deleted","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["organization"],"summary":"Edit an organization","operationId":"orgEdit","parameters":[{"description":"name of the organization to edit","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditOrgOption"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/Organization"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/actions/runners/registration-token":{"get":{"tags":["organization"],"summary":"Get an organization\'s actions runner registration token","operationId":"orgGetRunnerRegistrationToken","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RegistrationToken"}}}},"/orgs/{org}/actions/secrets":{"get":{"tags":["organization"],"summary":"List an organization\'s actions secrets","operationId":"orgListActionsSecrets","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/SecretList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/actions/secrets/{secretname}":{"put":{"tags":["organization"],"summary":"Create or Update a secret value in an organization","operationId":"updateOrgSecret","parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOrUpdateSecretOption"},"responses":{"201":{"description":"response when creating a secret"},"204":{"description":"response when updating a secret"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete a secret in an organization","operationId":"deleteOrgSecret","parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"delete one secret of the organization"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/activities/feeds":{"get":{"tags":["organization"],"summary":"List an organization\'s activity feeds","operationId":"orgListActivityFeeds","parameters":[{"description":"name of the org","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/avatar":{"post":{"tags":["organization"],"summary":"Update Avatar","operationId":"orgUpdateAvatar","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/UpdateUserAvatarOption"},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete Avatar","operationId":"orgDeleteAvatar","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/blocks":{"get":{"tags":["organization"],"summary":"List users blocked by the organization","operationId":"organizationListBlocks","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/orgs/{org}/blocks/{username}":{"get":{"tags":["organization"],"summary":"Check if a user is blocked by the organization","operationId":"organizationCheckUserBlock","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"user to check","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["organization"],"summary":"Block a user","operationId":"organizationBlockUser","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"user to block","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"optional note for the block","name":"note","in":"query","schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["organization"],"summary":"Unblock a user","operationId":"organizationUnblockUser","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"user to unblock","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/hooks":{"get":{"tags":["organization"],"summary":"List an organization\'s webhooks","operationId":"orgListHooks","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["organization"],"summary":"Create a hook","operationId":"orgCreateHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/hooks/{id}":{"get":{"tags":["organization"],"summary":"Get a hook","operationId":"orgGetHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete a hook","operationId":"orgDeleteHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["organization"],"summary":"Update a hook","operationId":"orgEditHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/labels":{"get":{"tags":["organization"],"summary":"List an organization\'s labels","operationId":"orgListLabels","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["organization"],"summary":"Create a label for an organization","operationId":"orgCreateLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateLabelOption"},"responses":{"201":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/labels/{id}":{"get":{"tags":["organization"],"summary":"Get a single label","operationId":"orgGetLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete a label","operationId":"orgDeleteLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["organization"],"summary":"Update a label","operationId":"orgEditLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditLabelOption"},"responses":{"200":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/members":{"get":{"tags":["organization"],"summary":"List an organization\'s members","operationId":"orgListMembers","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/members/{username}":{"get":{"tags":["organization"],"summary":"Check if a user is a member of an organization","operationId":"orgIsMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"user is a member"},"303":{"description":"redirection to /orgs/{org}/public_members/{username}"},"404":{"description":"user is not a member"}}},"delete":{"tags":["organization"],"summary":"Remove a member from an organization","operationId":"orgDeleteMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"member removed"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/public_members":{"get":{"tags":["organization"],"summary":"List an organization\'s public members","operationId":"orgListPublicMembers","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/public_members/{username}":{"get":{"tags":["organization"],"summary":"Check if a user is a public member of an organization","operationId":"orgIsPublicMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"user is a public member"},"404":{"description":"user is not a public member"}}},"put":{"tags":["organization"],"summary":"Publicize a user\'s membership","operationId":"orgPublicizeMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"membership publicized"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Conceal a user\'s membership","operationId":"orgConcealMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/repos":{"get":{"tags":["organization"],"summary":"List an organization\'s repos","operationId":"orgListRepos","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["organization"],"summary":"Create a repository in an organization","operationId":"createOrgRepo","parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/teams":{"get":{"tags":["organization"],"summary":"List an organization\'s teams","operationId":"orgListTeams","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["organization"],"summary":"Create a team","operationId":"orgCreateTeam","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTeamOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Team"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/teams/search":{"get":{"tags":["organization"],"summary":"Search for teams within an organization","operationId":"teamSearch","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"keywords to search","name":"q","in":"query","schema":{"type":"string"}},{"description":"include search within team description (defaults to true)","name":"include_desc","in":"query","schema":{"type":"boolean"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"description":"SearchResults of a successful search","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Team"}},"ok":{"type":"boolean"}}}}}},"404":{"$ref":"#/components/responses/notFound"}}}},"/packages/{owner}":{"get":{"tags":["package"],"summary":"Gets all packages of an owner","operationId":"listPackages","parameters":[{"description":"owner of the packages","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"package type filter","name":"type","in":"query","schema":{"type":"string","enum":["alpine","cargo","chef","composer","conan","conda","container","cran","debian","generic","go","helm","maven","npm","nuget","pub","pypi","rpm","rubygems","swift","vagrant"]}},{"description":"name filter","name":"q","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PackageList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/packages/{owner}/{type}/{name}/{version}":{"get":{"tags":["package"],"summary":"Gets a package","operationId":"getPackage","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Package"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["package"],"summary":"Delete a package","operationId":"deletePackage","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/packages/{owner}/{type}/{name}/{version}/files":{"get":{"tags":["package"],"summary":"Gets all files of a package","operationId":"listPackageFiles","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PackageFileList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/issues/search":{"get":{"tags":["issue"],"summary":"Search for issues across the repositories that the user has access to","operationId":"issueSearchIssues","parameters":[{"description":"whether issue is open or closed","name":"state","in":"query","schema":{"type":"string"}},{"description":"comma separated list of labels. Fetch only issues that have any of this labels. Non existent labels are discarded","name":"labels","in":"query","schema":{"type":"string"}},{"description":"comma separated list of milestone names. Fetch only issues that have any of this milestones. Non existent are discarded","name":"milestones","in":"query","schema":{"type":"string"}},{"description":"search string","name":"q","in":"query","schema":{"type":"string"}},{"description":"repository to prioritize in the results","name":"priority_repo_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"filter by type (issues / pulls) if set","name":"type","in":"query","schema":{"type":"string"}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"filter (issues / pulls) assigned to you, default is false","name":"assigned","in":"query","schema":{"type":"boolean"}},{"description":"filter (issues / pulls) created by you, default is false","name":"created","in":"query","schema":{"type":"boolean"}},{"description":"filter (issues / pulls) mentioning you, default is false","name":"mentioned","in":"query","schema":{"type":"boolean"}},{"description":"filter pulls requesting your review, default is false","name":"review_requested","in":"query","schema":{"type":"boolean"}},{"description":"filter pulls reviewed by you, default is false","name":"reviewed","in":"query","schema":{"type":"boolean"}},{"description":"filter by owner","name":"owner","in":"query","schema":{"type":"string"}},{"description":"filter by team (requires organization owner parameter to be provided)","name":"team","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"}}}},"/repos/migrate":{"post":{"tags":["repository"],"summary":"Migrate a remote git repository","operationId":"repoMigrate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MigrateRepoOptions"}}}},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/search":{"get":{"tags":["repository"],"summary":"Search for repositories","operationId":"repoSearch","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"Limit search to repositories with keyword as topic","name":"topic","in":"query","schema":{"type":"boolean"}},{"description":"include search of keyword within repository description","name":"includeDesc","in":"query","schema":{"type":"boolean"}},{"description":"search only for repos that the user with the given id owns or contributes to","name":"uid","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"repo owner to prioritize in the results","name":"priority_owner_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"search only for repos that belong to the given team id","name":"team_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"search only for repos that the user with the given id has starred","name":"starredBy","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"include private repositories this user has access to (defaults to true)","name":"private","in":"query","schema":{"type":"boolean"}},{"description":"show only pubic, private or all repositories (defaults to all)","name":"is_private","in":"query","schema":{"type":"boolean"}},{"description":"include template repositories this user has access to (defaults to true)","name":"template","in":"query","schema":{"type":"boolean"}},{"description":"show only archived, non-archived or all repositories (defaults to all)","name":"archived","in":"query","schema":{"type":"boolean"}},{"description":"type of repository to search for. Supported values are \\"fork\\", \\"source\\", \\"mirror\\" and \\"collaborative\\"","name":"mode","in":"query","schema":{"type":"string"}},{"description":"if `uid` is given, search only for repos that the user owns","name":"exclusive","in":"query","schema":{"type":"boolean"}},{"description":"sort repos by attribute. Supported values are \\"alpha\\", \\"created\\", \\"updated\\", \\"size\\", and \\"id\\". Default is \\"alpha\\"","name":"sort","in":"query","schema":{"type":"string"}},{"description":"sort order, either \\"asc\\" (ascending) or \\"desc\\" (descending). Default is \\"asc\\", ignored if \\"sort\\" is not specified.","name":"order","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/SearchResults"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}":{"get":{"tags":["repository"],"summary":"Get a repository","operationId":"repoGet","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a repository","operationId":"repoDelete","parameters":[{"description":"owner of the repo to delete","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to delete","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a repository\'s properties. Only fields that are set will be changed.","operationId":"repoEdit","parameters":[{"description":"owner of the repo to edit","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to edit","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditRepoOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditRepoOption"}}},"description":"Properties of a repo that you can edit"},"responses":{"200":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/actions/secrets/{secretname}":{"put":{"tags":["repository"],"summary":"Create or Update a secret value in a repository","operationId":"updateRepoSecret","parameters":[{"description":"owner of the repository","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repository","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOrUpdateSecretOption"},"responses":{"201":{"description":"response when creating a secret"},"204":{"description":"response when updating a secret"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a secret in a repository","operationId":"deleteRepoSecret","parameters":[{"description":"owner of the repository","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repository","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"delete one secret of the organization"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/activities/feeds":{"get":{"tags":["repository"],"summary":"List a repository\'s activity feeds","operationId":"repoListActivityFeeds","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/archive/{archive}":{"get":{"tags":["repository"],"summary":"Get an archive of a repository","operationId":"repoGetArchive","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the git reference for download with attached archive format (e.g. master.zip)","name":"archive","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"success"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/assignees":{"get":{"tags":["repository"],"summary":"Return all users that have write access and can be assigned to issues","operationId":"repoGetAssignees","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/avatar":{"post":{"tags":["repository"],"summary":"Update avatar","operationId":"repoUpdateAvatar","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateRepoAvatarOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/UpdateRepoAvatarOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete avatar","operationId":"repoDeleteAvatar","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/branch_protections":{"get":{"tags":["repository"],"summary":"List branch protections for a repository","operationId":"repoListBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/BranchProtectionList"}}},"post":{"tags":["repository"],"summary":"Create a branch protections for a repository","operationId":"repoCreateBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateBranchProtectionOption"}}}},"responses":{"201":{"$ref":"#/components/responses/BranchProtection"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/branch_protections/{name}":{"get":{"tags":["repository"],"summary":"Get a specific branch protection for the repository","operationId":"repoGetBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/BranchProtection"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a specific branch protection for the repository","operationId":"repoDeleteBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a branch protections for a repository. Only fields that are set will be changed","operationId":"repoEditBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditBranchProtectionOption"}}}},"responses":{"200":{"$ref":"#/components/responses/BranchProtection"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/branches":{"get":{"tags":["repository"],"summary":"List a repository\'s branches","operationId":"repoListBranches","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/BranchList"}}},"post":{"tags":["repository"],"summary":"Create a branch","operationId":"repoCreateBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateBranchRepoOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Branch"},"403":{"description":"The branch is archived or a mirror."},"404":{"description":"The old branch does not exist."},"409":{"description":"The branch with the same name already exists."},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/branches/{branch}":{"get":{"tags":["repository"],"summary":"Retrieve a specific branch from a repository, including its effective branch protection","operationId":"repoGetBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"branch to get","name":"branch","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Branch"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a specific branch from a repository","operationId":"repoDeleteBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"branch to delete","name":"branch","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/collaborators":{"get":{"tags":["repository"],"summary":"List a repository\'s collaborators","operationId":"repoListCollaborators","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/collaborators/{collaborator}":{"get":{"tags":["repository"],"summary":"Check if a user is a collaborator of a repository","operationId":"repoCheckCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"put":{"tags":["repository"],"summary":"Add a collaborator to a repository","operationId":"repoAddCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator to add","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddCollaboratorOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/AddCollaboratorOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a collaborator from a repository","operationId":"repoDeleteCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator to delete","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/collaborators/{collaborator}/permission":{"get":{"tags":["repository"],"summary":"Get repository permissions for a user","operationId":"repoGetRepoPermissions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoCollaboratorPermission"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/commits":{"get":{"tags":["repository"],"summary":"Get a list of all commits from a repository","operationId":"repoGetAllCommits","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"SHA or branch to start listing commits from (usually \'master\')","name":"sha","in":"query","schema":{"type":"string"}},{"description":"filepath of a file/dir","name":"path","in":"query","schema":{"type":"string"}},{"description":"include diff stats for every commit (disable for speedup, default \'true\')","name":"stat","in":"query","schema":{"type":"boolean"}},{"description":"include verification for every commit (disable for speedup, default \'true\')","name":"verification","in":"query","schema":{"type":"boolean"}},{"description":"include a list of affected files for every commit (disable for speedup, default \'true\')","name":"files","in":"query","schema":{"type":"boolean"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results (ignored if used with \'path\')","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"commits that match the given specifier will not be listed.","name":"not","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/CommitList"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/EmptyRepository"}}}},"/repos/{owner}/{repo}/commits/{ref}/status":{"get":{"tags":["repository"],"summary":"Get a commit\'s combined status, by branch/tag/commit reference","operationId":"repoGetCombinedStatusByRef","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of branch/tag/commit","name":"ref","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CombinedStatus"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/commits/{ref}/statuses":{"get":{"tags":["repository"],"summary":"Get a commit\'s statuses, by branch/tag/commit reference","operationId":"repoListStatusesByRef","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of branch/tag/commit","name":"ref","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","leastindex","highestindex"]}},{"description":"type of state","name":"state","in":"query","schema":{"type":"string","enum":["pending","success","error","failure","warning"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitStatusList"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/commits/{sha}/pull":{"get":{"tags":["repository"],"summary":"Get the pull request of the commit","operationId":"repoGetCommitPullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"SHA of the commit to get","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequest"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/contents":{"get":{"tags":["repository"],"summary":"Gets the metadata of all the entries of the root dir","operationId":"repoGetContentsList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ContentsListResponse"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Modify multiple files in a repository","operationId":"repoChangeFiles","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangeFilesOptions"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/FilesResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/contents/{filepath}":{"get":{"tags":["repository"],"summary":"Gets the metadata and contents (if a file) of an entry in a repository, or a list of entries if a dir","operationId":"repoGetContents","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the dir, file, symlink or submodule in the repo","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ContentsResponse"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["repository"],"summary":"Update a file in a repository","operationId":"repoUpdateFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to update","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/UpdateFileOptions"},"responses":{"200":{"$ref":"#/components/responses/FileResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}},"post":{"tags":["repository"],"summary":"Create a file in a repository","operationId":"repoCreateFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to create","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFileOptions"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/FileResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}},"delete":{"tags":["repository"],"summary":"Delete a file in a repository","operationId":"repoDeleteFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to delete","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteFileOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/FileDeleteResponse"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/diffpatch":{"post":{"tags":["repository"],"summary":"Apply diff patch to repository","operationId":"repoApplyDiffPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/UpdateFileOptions"},"responses":{"200":{"$ref":"#/components/responses/FileResponse"},"404":{"$ref":"#/components/responses/notFound"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/editorconfig/{filepath}":{"get":{"tags":["repository"],"summary":"Get the EditorConfig definitions of a file in a repository","operationId":"repoGetEditorConfig","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"success"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/forks":{"get":{"tags":["repository"],"summary":"List a repository\'s forks","operationId":"listForks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Fork a repository","operationId":"createFork","parameters":[{"description":"owner of the repo to fork","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to fork","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateForkOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateForkOption"}}}},"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/blobs/{sha}":{"get":{"tags":["repository"],"summary":"Gets the blob of a repository.","operationId":"GetBlob","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitBlobResponse"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/commits/{sha}":{"get":{"tags":["repository"],"summary":"Get a single commit from a repository","operationId":"repoGetSingleCommit","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"a git ref or commit sha","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"include diff stats for every commit (disable for speedup, default \'true\')","name":"stat","in":"query","schema":{"type":"boolean"}},{"description":"include verification for every commit (disable for speedup, default \'true\')","name":"verification","in":"query","schema":{"type":"boolean"}},{"description":"include a list of affected files for every commit (disable for speedup, default \'true\')","name":"files","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/Commit"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/commits/{sha}.{diffType}":{"get":{"tags":["repository"],"summary":"Get a commit\'s diff or patch","operationId":"repoDownloadCommitDiffOrPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"SHA of the commit to get","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"whether the output is diff or patch","name":"diffType","in":"path","required":true,"schema":{"type":"string","enum":["diff","patch"]}}],"responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/notes/{sha}":{"get":{"tags":["repository"],"summary":"Get a note corresponding to a single commit from a repository","operationId":"repoGetNote","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"a git ref or commit sha","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"include verification for every commit (disable for speedup, default \'true\')","name":"verification","in":"query","schema":{"type":"boolean"}},{"description":"include a list of affected files for every commit (disable for speedup, default \'true\')","name":"files","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/Note"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/refs":{"get":{"tags":["repository"],"summary":"Get specified ref or filtered repository\'s refs","operationId":"repoListAllGitRefs","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ReferenceList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/refs/{ref}":{"get":{"tags":["repository"],"summary":"Get specified ref or filtered repository\'s refs","operationId":"repoListGitRefs","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"part or full name of the ref","name":"ref","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ReferenceList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/tags/{sha}":{"get":{"tags":["repository"],"summary":"Gets the tag object of an annotated tag (not lightweight tags)","operationId":"GetAnnotatedTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the tag. The Git tags API only supports annotated tag objects, not lightweight tags.","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/AnnotatedTag"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/trees/{sha}":{"get":{"tags":["repository"],"summary":"Gets the tree of a repository.","operationId":"GetTree","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"show all directories and files","name":"recursive","in":"query","schema":{"type":"boolean"}},{"description":"page number; the \'truncated\' field in the response will be true if there are still more items after this page, false if the last page","name":"page","in":"query","schema":{"type":"integer"}},{"description":"number of items per page","name":"per_page","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GitTreeResponse"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks":{"get":{"tags":["repository"],"summary":"List the hooks in a repository","operationId":"repoListHooks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a hook","operationId":"repoCreateHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateHookOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks/git":{"get":{"tags":["repository"],"summary":"List the Git hooks in a repository","operationId":"repoListGitHooks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitHookList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks/git/{id}":{"get":{"tags":["repository"],"summary":"Get a Git hook","operationId":"repoGetGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitHook"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a Git hook in a repository","operationId":"repoDeleteGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a Git hook in a repository","operationId":"repoEditGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditGitHookOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditGitHookOption"}}}},"responses":{"200":{"$ref":"#/components/responses/GitHook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks/{id}":{"get":{"tags":["repository"],"summary":"Get a hook","operationId":"repoGetHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a hook in a repository","operationId":"repoDeleteHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a hook in a repository","operationId":"repoEditHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the hook","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditHookOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditHookOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks/{id}/tests":{"post":{"tags":["repository"],"summary":"Test a push webhook","operationId":"repoTestHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to test","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"The name of the commit/branch/tag, indicates which commit will be loaded to the webhook payload.","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issue_config":{"get":{"tags":["repository"],"summary":"Returns the issue config for a repo","operationId":"repoGetIssueConfig","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoIssueConfig"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issue_config/validate":{"get":{"tags":["repository"],"summary":"Returns the validation information for a issue config","operationId":"repoValidateIssueConfig","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoIssueConfigValidation"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issue_templates":{"get":{"tags":["repository"],"summary":"Get available issue templates for a repository","operationId":"repoGetIssueTemplates","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/IssueTemplates"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues":{"get":{"tags":["issue"],"summary":"List a repository\'s issues","operationId":"issueListIssues","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"whether issue is open or closed","name":"state","in":"query","schema":{"type":"string","enum":["closed","open","all"]}},{"description":"comma separated list of labels. Fetch only issues that have any of this labels. Non existent labels are discarded","name":"labels","in":"query","schema":{"type":"string"}},{"description":"search string","name":"q","in":"query","schema":{"type":"string"}},{"description":"filter by type (issues / pulls) if set","name":"type","in":"query","schema":{"type":"string","enum":["issues","pulls"]}},{"description":"comma separated list of milestone names or ids. It uses names and fall back to ids. Fetch only issues that have any of this milestones. Non existent milestones are discarded","name":"milestones","in":"query","schema":{"type":"string"}},{"description":"Only show items updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show items updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show items which were created by the given user","name":"created_by","in":"query","schema":{"type":"string"}},{"description":"Only show items for which the given user is assigned","name":"assigned_by","in":"query","schema":{"type":"string"}},{"description":"Only show items in which the given user was mentioned","name":"mentioned_by","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Create an issue. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueCreateIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateIssueOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Issue"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"412":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/issues/comments":{"get":{"tags":["issue"],"summary":"List all comments in a repository","operationId":"issueGetRepoComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"if provided, only comments updated since the provided time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommentList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/comments/{id}":{"get":{"tags":["issue"],"summary":"Get a comment","operationId":"issueGetComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete a comment","operationId":"issueDeleteComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of comment to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit a comment","operationId":"issueEditComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditIssueCommentOption"},"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/assets":{"get":{"tags":["issue"],"summary":"List comment\'s attachments","operationId":"issueListIssueCommentAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"},"404":{"$ref":"#/components/responses/error"}}},"post":{"tags":["issue"],"summary":"Create a comment attachment","operationId":"issueCreateIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/assets/{attachment_id}":{"get":{"tags":["issue"],"summary":"Get a comment attachment","operationId":"issueGetIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["issue"],"summary":"Delete a comment attachment","operationId":"issueDeleteIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}},"patch":{"tags":["issue"],"summary":"Edit a comment attachment","operationId":"issueEditIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/reactions":{"get":{"tags":["issue"],"summary":"Get a list of reactions from a comment of an issue","operationId":"issueGetCommentReactions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/ReactionList"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add a reaction to a comment of an issue","operationId":"issuePostCommentReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/Reaction"},"201":{"$ref":"#/components/responses/Reaction"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Remove a reaction from a comment of an issue","operationId":"issueDeleteCommentReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/pinned":{"get":{"tags":["repository"],"summary":"List a repo\'s pinned issues","operationId":"repoListPinnedIssues","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}":{"get":{"tags":["issue"],"summary":"Get an issue","operationId":"issueGetIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Issue"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete an issue","operationId":"issueDelete","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue to delete","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit an issue. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueEditIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to edit","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditIssueOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Issue"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"412":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/{index}/assets":{"get":{"tags":["issue"],"summary":"List issue\'s attachments","operationId":"issueListIssueAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"},"404":{"$ref":"#/components/responses/error"}}},"post":{"tags":["issue"],"summary":"Create an issue attachment","operationId":"issueCreateIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/issues/{index}/assets/{attachment_id}":{"get":{"tags":["issue"],"summary":"Get an issue attachment","operationId":"issueGetIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["issue"],"summary":"Delete an issue attachment","operationId":"issueDeleteIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}},"patch":{"tags":["issue"],"summary":"Edit an issue attachment","operationId":"issueEditIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/issues/{index}/blocks":{"get":{"tags":["issue"],"summary":"List issues that are blocked by this issue","operationId":"issueListBlocks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Block the issue given in the body by the issue in path","operationId":"issueCreateIssueBlocking","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"201":{"$ref":"#/components/responses/Issue"},"404":{"description":"the issue does not exist"}}},"delete":{"tags":["issue"],"summary":"Unblock the issue given in the body by the issue in path","operationId":"issueRemoveIssueBlocking","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"200":{"$ref":"#/components/responses/Issue"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/comments":{"get":{"tags":["issue"],"summary":"List all comments on an issue","operationId":"issueGetComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"if provided, only comments updated since the specified time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/CommentList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add a comment to an issue","operationId":"issueCreateComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateIssueCommentOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Comment"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/issues/{index}/comments/{id}":{"delete":{"tags":["issue"],"summary":"Delete a comment","operationId":"issueDeleteCommentDeprecated","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"this parameter is ignored","name":"index","in":"path","required":true,"schema":{"type":"integer"}},{"description":"id of comment to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit a comment","operationId":"issueEditCommentDeprecated","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"this parameter is ignored","name":"index","in":"path","required":true,"schema":{"type":"integer"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditIssueCommentOption"},"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/deadline":{"post":{"tags":["issue"],"summary":"Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueEditIssueDeadline","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to create or update a deadline on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditDeadlineOption"}}}},"responses":{"201":{"$ref":"#/components/responses/IssueDeadline"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/dependencies":{"get":{"tags":["issue"],"summary":"List an issue\'s dependencies, i.e all issues that block this issue.","operationId":"issueListIssueDependencies","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Make the issue in the url depend on the issue in the form.","operationId":"issueCreateIssueDependencies","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"201":{"$ref":"#/components/responses/Issue"},"404":{"description":"the issue does not exist"},"423":{"$ref":"#/components/responses/repoArchivedError"}}},"delete":{"tags":["issue"],"summary":"Remove an issue dependency","operationId":"issueRemoveIssueDependencies","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"200":{"$ref":"#/components/responses/Issue"},"404":{"$ref":"#/components/responses/notFound"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/issues/{index}/labels":{"get":{"tags":["issue"],"summary":"Get an issue\'s labels","operationId":"issueGetLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["issue"],"summary":"Replace an issue\'s labels","operationId":"issueReplaceLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueLabelsOption"},"responses":{"200":{"$ref":"#/components/responses/LabelList"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add a label to an issue","operationId":"issueAddLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueLabelsOption"},"responses":{"200":{"$ref":"#/components/responses/LabelList"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Remove all labels from an issue","operationId":"issueClearLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/labels/{id}":{"delete":{"tags":["issue"],"summary":"Remove a label from an issue","operationId":"issueRemoveLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the label to remove","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/issues/{index}/pin":{"post":{"tags":["issue"],"summary":"Pin an Issue","operationId":"pinIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue to pin","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Unpin an Issue","operationId":"unpinIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue to unpin","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/pin/{position}":{"patch":{"tags":["issue"],"summary":"Moves the Pin to the given Position","operationId":"moveIssuePin","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"the new position","name":"position","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/reactions":{"get":{"tags":["issue"],"summary":"Get a list reactions of an issue","operationId":"issueGetIssueReactions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ReactionList"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add a reaction to an issue","operationId":"issuePostIssueReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/Reaction"},"201":{"$ref":"#/components/responses/Reaction"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Remove a reaction from an issue","operationId":"issueDeleteIssueReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/delete":{"delete":{"tags":["issue"],"summary":"Delete an issue\'s existing stopwatch.","operationId":"issueDeleteStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to stop the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot cancel a non existent stopwatch"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/start":{"post":{"tags":["issue"],"summary":"Start stopwatch on an issue.","operationId":"issueStartStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to create the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"201":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot start a stopwatch again if it already exists"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/stop":{"post":{"tags":["issue"],"summary":"Stop an issue\'s existing stopwatch.","operationId":"issueStopStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to stop the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"201":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot stop a non existent stopwatch"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions":{"get":{"tags":["issue"],"summary":"Get users who subscribed on an issue.","operationId":"issueSubscriptions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions/check":{"get":{"tags":["issue"],"summary":"Check if user is subscribed to an issue","operationId":"issueCheckSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions/{user}":{"put":{"tags":["issue"],"summary":"Subscribe user to issue","operationId":"issueAddSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"user to subscribe","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Already subscribed"},"201":{"description":"Successfully Subscribed"},"304":{"description":"User can only subscribe itself if he is no admin"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Unsubscribe user from issue","operationId":"issueDeleteSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"user witch unsubscribe","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Already unsubscribed"},"201":{"description":"Successfully Unsubscribed"},"304":{"description":"User can only subscribe itself if he is no admin"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/timeline":{"get":{"tags":["issue"],"summary":"List all comments and events on an issue","operationId":"issueGetCommentsAndTimeline","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"if provided, only comments updated since the specified time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/TimelineList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/times":{"get":{"tags":["issue"],"summary":"List an issue\'s tracked times","operationId":"issueTrackedTimes","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"optional filter by user (available for issue managers)","name":"user","in":"query","schema":{"type":"string"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add tracked time to a issue","operationId":"issueAddTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddTimeOption"}}}},"responses":{"200":{"$ref":"#/components/responses/TrackedTime"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Reset a tracked time of an issue","operationId":"issueResetTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to add tracked time to","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/times/{id}":{"delete":{"tags":["issue"],"summary":"Delete specific tracked time","operationId":"issueDeleteTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of time to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/keys":{"get":{"tags":["repository"],"summary":"List a repository\'s keys","operationId":"repoListKeys","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the key_id to search for","name":"key_id","in":"query","schema":{"type":"integer"}},{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/DeployKeyList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Add a key to a repository","operationId":"repoCreateKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/DeployKey"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/keys/{id}":{"get":{"tags":["repository"],"summary":"Get a repository\'s key by id","operationId":"repoGetKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/DeployKey"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a key from a repository","operationId":"repoDeleteKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/labels":{"get":{"tags":["issue"],"summary":"Get all of a repository\'s labels","operationId":"issueListLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Create a label","operationId":"issueCreateLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateLabelOption"},"responses":{"201":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/labels/{id}":{"get":{"tags":["issue"],"summary":"Get a single label","operationId":"issueGetLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete a label","operationId":"issueDeleteLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Update a label","operationId":"issueEditLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditLabelOption"},"responses":{"200":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/languages":{"get":{"tags":["repository"],"summary":"Get languages and number of bytes of code written","operationId":"repoGetLanguages","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/LanguageStatistics"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/media/{filepath}":{"get":{"tags":["repository"],"summary":"Get a file or it\'s LFS object from a repository","operationId":"repoGetRawFileOrLFS","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of the file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns raw file content."},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/milestones":{"get":{"tags":["issue"],"summary":"Get all of a repository\'s opened milestones","operationId":"issueGetMilestonesList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"Milestone state, Recognized values are open, closed and all. Defaults to \\"open\\"","name":"state","in":"query","schema":{"type":"string"}},{"description":"filter by milestone name","name":"name","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/MilestoneList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Create a milestone","operationId":"issueCreateMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMilestoneOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Milestone"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/milestones/{id}":{"get":{"tags":["issue"],"summary":"Get a milestone","operationId":"issueGetMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to get, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Milestone"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete a milestone","operationId":"issueDeleteMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to delete, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Update a milestone","operationId":"issueEditMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to edit, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditMilestoneOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Milestone"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/mirror-sync":{"post":{"tags":["repository"],"summary":"Sync a mirrored repository","operationId":"repoMirrorSync","parameters":[{"description":"owner of the repo to sync","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to sync","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/new_pin_allowed":{"get":{"tags":["repository"],"summary":"Returns if new Issue Pins are allowed","operationId":"repoNewPinAllowed","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoNewIssuePinsAllowed"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/notifications":{"get":{"tags":["notification"],"summary":"List users\'s notification threads on a specific repo","operationId":"notifyGetRepoList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"If true, show notifications marked as read. Default value is false","name":"all","in":"query","schema":{"type":"boolean"}},{"description":"Show notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread & pinned","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"filter notifications by subject type","name":"subject-type","in":"query","explode":true,"schema":{"type":"array","items":{"enum":["issue","pull","commit","repository"],"type":"string"}}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThreadList"}}},"put":{"tags":["notification"],"summary":"Mark notification threads as read, pinned or unread on a specific repo","operationId":"notifyReadRepoList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"If true, mark all notifications on this repo. Default value is false","name":"all","in":"query","schema":{"type":"string"}},{"description":"Mark notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Status to mark notifications as. Defaults to read.","name":"to-status","in":"query","schema":{"type":"string"}},{"description":"Describes the last point that notifications were checked. Anything updated since this time will not be updated.","name":"last_read_at","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThreadList"}}}},"/repos/{owner}/{repo}/pulls":{"get":{"tags":["repository"],"summary":"List a repo\'s pull requests","operationId":"repoListPullRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"State of pull request: open or closed (optional)","name":"state","in":"query","schema":{"type":"string","enum":["closed","open","all"]}},{"description":"Type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","mostcomment","leastcomment","priority"]}},{"description":"ID of the milestone","name":"milestone","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"Label IDs","name":"labels","in":"query","explode":true,"schema":{"type":"array","items":{"type":"integer","format":"int64"}}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequestList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a pull request","operationId":"repoCreatePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePullRequestOption"}}}},"responses":{"201":{"$ref":"#/components/responses/PullRequest"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/pulls/pinned":{"get":{"tags":["repository"],"summary":"List a repo\'s pinned pull requests","operationId":"repoListPinnedPullRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequestList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{base}/{head}":{"get":{"tags":["repository"],"summary":"Get a pull request by base and head","operationId":"repoGetPullRequestByBaseHead","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"base of the pull request to get","name":"base","in":"path","required":true,"schema":{"type":"string"}},{"description":"head of the pull request to get","name":"head","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequest"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}":{"get":{"tags":["repository"],"summary":"Get a pull request","operationId":"repoGetPullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequest"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Update a pull request. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"repoEditPullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to edit","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditPullRequestOption"}}}},"responses":{"201":{"$ref":"#/components/responses/PullRequest"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"412":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}.{diffType}":{"get":{"tags":["repository"],"summary":"Get a pull request diff or patch","operationId":"repoDownloadPullDiffOrPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"whether the output is diff or patch","name":"diffType","in":"path","required":true,"schema":{"type":"string","enum":["diff","patch"]}},{"description":"whether to include binary file changes. if true, the diff is applicable with `git apply`","name":"binary","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/commits":{"get":{"tags":["repository"],"summary":"Get commits for a pull request","operationId":"repoGetPullRequestCommits","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"include verification for every commit (disable for speedup, default \'true\')","name":"verification","in":"query","schema":{"type":"boolean"}},{"description":"include a list of affected files for every commit (disable for speedup, default \'true\')","name":"files","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/CommitList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/files":{"get":{"tags":["repository"],"summary":"Get changed files for a pull request","operationId":"repoGetPullRequestFiles","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"skip to given file","name":"skip-to","in":"query","schema":{"type":"string"}},{"description":"whitespace behavior","name":"whitespace","in":"query","schema":{"type":"string","enum":["ignore-all","ignore-change","ignore-eol","show-all"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ChangedFileList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/merge":{"get":{"tags":["repository"],"summary":"Check if a pull request has been merged","operationId":"repoPullRequestIsMerged","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"pull request has been merged"},"404":{"description":"pull request has not been merged"}}},"post":{"tags":["repository"],"summary":"Merge a pull request","operationId":"repoMergePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to merge","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MergePullRequestOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/MergePullRequestOption"}}}},"responses":{"200":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/error"},"423":{"$ref":"#/components/responses/repoArchivedError"}}},"delete":{"tags":["repository"],"summary":"Cancel the scheduled auto merge for the given pull request","operationId":"repoCancelScheduledAutoMerge","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to merge","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/pulls/{index}/requested_reviewers":{"post":{"tags":["repository"],"summary":"create review requests for a pull request","operationId":"repoCreatePullReviewRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/PullReviewRequestOptions"},"responses":{"201":{"$ref":"#/components/responses/PullReviewList"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"cancel review requests for a pull request","operationId":"repoDeletePullReviewRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/PullReviewRequestOptions"},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews":{"get":{"tags":["repository"],"summary":"List all reviews for a pull request","operationId":"repoListPullReviews","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PullReviewList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a review to an pull request","operationId":"repoCreatePullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreatePullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}":{"get":{"tags":["repository"],"summary":"Get a specific review for a pull request","operationId":"repoGetPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Submit a pending review to an pull request","operationId":"repoSubmitPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubmitPullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/SubmitPullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a specific review from a pull request","operationId":"repoDeletePullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/comments":{"get":{"tags":["repository"],"summary":"Get a specific review for a pull request","operationId":"repoGetPullReviewComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReviewCommentList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/dismissals":{"post":{"tags":["repository"],"summary":"Dismiss a review for a pull request","operationId":"repoDismissPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DismissPullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/DismissPullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/undismissals":{"post":{"tags":["repository"],"summary":"Cancel to dismiss a review for a pull request","operationId":"repoUnDismissPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReview"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/update":{"post":{"tags":["repository"],"summary":"Merge PR\'s baseBranch into headBranch","operationId":"repoUpdatePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"how to update pull request","name":"style","in":"query","schema":{"type":"string","enum":["merge","rebase"]}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/push_mirrors":{"get":{"tags":["repository"],"summary":"Get all push mirrors of the repository","operationId":"repoListPushMirrors","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PushMirrorList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"add a push mirror to the repository","operationId":"repoAddPushMirror","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePushMirrorOption"}}}},"responses":{"200":{"$ref":"#/components/responses/PushMirror"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/push_mirrors-sync":{"post":{"tags":["repository"],"summary":"Sync all push mirrored repository","operationId":"repoPushMirrorSync","parameters":[{"description":"owner of the repo to sync","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to sync","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/push_mirrors/{name}":{"get":{"tags":["repository"],"summary":"Get push mirror of the repository by remoteName","operationId":"repoGetPushMirrorByRemoteName","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"remote name of push mirror","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PushMirror"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"deletes a push mirror from a repository by remoteName","operationId":"repoDeletePushMirror","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"remote name of the pushMirror","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/raw/{filepath}":{"get":{"tags":["repository"],"summary":"Get a file from a repository","operationId":"repoGetRawFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of the file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns raw file content."},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases":{"get":{"tags":["repository"],"summary":"List a repo\'s releases","operationId":"repoListReleases","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filter (exclude / include) drafts, if you dont have repo write access none will show","name":"draft","in":"query","schema":{"type":"boolean"}},{"description":"filter (exclude / include) pre-releases","name":"pre-release","in":"query","schema":{"type":"boolean"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ReleaseList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a release","operationId":"repoCreateRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateReleaseOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/releases/latest":{"get":{"tags":["repository"],"summary":"Gets the most recent non-prerelease, non-draft release of a repository, sorted by created_at","operationId":"repoGetLatestRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases/tags/{tag}":{"get":{"tags":["repository"],"summary":"Get a release by tag name","operationId":"repoGetReleaseByTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"tag name of the release to get","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a release by tag name","operationId":"repoDeleteReleaseByTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"tag name of the release to delete","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"}}}},"/repos/{owner}/{repo}/releases/{id}":{"get":{"tags":["repository"],"summary":"Get a release","operationId":"repoGetRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a release","operationId":"repoDeleteRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["repository"],"summary":"Update a release","operationId":"repoEditRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditReleaseOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases/{id}/assets":{"get":{"tags":["repository"],"summary":"List release\'s attachments","operationId":"repoListReleaseAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a release attachment","operationId":"repoCreateReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"attachment":{"description":"attachment to upload","type":"string","format":"binary"}}}}}},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases/{id}/assets/{attachment_id}":{"get":{"tags":["repository"],"summary":"Get a release attachment","operationId":"repoGetReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a release attachment","operationId":"repoDeleteReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a release attachment","operationId":"repoEditReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/reviewers":{"get":{"tags":["repository"],"summary":"Return all users that can be requested to review in this repo","operationId":"repoGetReviewers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/runners/registration-token":{"get":{"tags":["repository"],"summary":"Get a repository\'s actions runner registration token","operationId":"repoGetRunnerRegistrationToken","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RegistrationToken"}}}},"/repos/{owner}/{repo}/signing-key.gpg":{"get":{"tags":["repository"],"summary":"Get signing-key.gpg for given repository","operationId":"repoSigningKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"GPG armored public key","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/repos/{owner}/{repo}/stargazers":{"get":{"tags":["repository"],"summary":"List a repo\'s stargazers","operationId":"repoListStargazers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/statuses/{sha}":{"get":{"tags":["repository"],"summary":"Get a commit\'s statuses","operationId":"repoListStatuses","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","leastindex","highestindex"]}},{"description":"type of state","name":"state","in":"query","schema":{"type":"string","enum":["pending","success","error","failure","warning"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitStatusList"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a commit status","operationId":"repoCreateStatus","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateStatusOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateStatusOption"}}}},"responses":{"201":{"$ref":"#/components/responses/CommitStatus"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/subscribers":{"get":{"tags":["repository"],"summary":"List a repo\'s watchers","operationId":"repoListSubscribers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/subscription":{"get":{"tags":["repository"],"summary":"Check if the current user is watching a repo","operationId":"userCurrentCheckSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"},"404":{"description":"User is not watching this repo or repo do not exist"}}},"put":{"tags":["repository"],"summary":"Watch a repo","operationId":"userCurrentPutSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Unwatch a repo","operationId":"userCurrentDeleteSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/tags":{"get":{"tags":["repository"],"summary":"List a repository\'s tags","operationId":"repoListTags","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results, default maximum page size is 50","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TagList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a new git tag in a repository","operationId":"repoCreateTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTagOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateTagOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Tag"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/conflict"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/tags/{tag}":{"get":{"tags":["repository"],"summary":"Get the tag of a repository by tag name","operationId":"repoGetTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of tag","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Tag"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a repository\'s tag by name","operationId":"repoDeleteTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of tag to delete","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/conflict"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/teams":{"get":{"tags":["repository"],"summary":"List a repository\'s teams","operationId":"repoListTeams","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/teams/{team}":{"get":{"tags":["repository"],"summary":"Check if a team is assigned to a repository","operationId":"repoCheckTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Team"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/error"}}},"put":{"tags":["repository"],"summary":"Add a team to a repository","operationId":"repoAddTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a team from a repository","operationId":"repoDeleteTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/times":{"get":{"tags":["repository"],"summary":"List a repo\'s tracked times","operationId":"repoTrackedTimes","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"optional filter by user (available for issue managers)","name":"user","in":"query","schema":{"type":"string"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/times/{user}":{"get":{"tags":["repository"],"summary":"List a user\'s tracked times in a repo","operationId":"userTrackedTimes","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of user","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/topics":{"get":{"tags":["repository"],"summary":"Get list of topics that a repository has","operationId":"repoListTopics","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TopicNames"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["repository"],"summary":"Replace list of topics for a repository","operationId":"repoUpdateTopics","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepoTopicOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/RepoTopicOptions"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}}},"/repos/{owner}/{repo}/topics/{topic}":{"put":{"tags":["repository"],"summary":"Add a topic to a repository","operationId":"repoAddTopic","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the topic to add","name":"topic","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}},"delete":{"tags":["repository"],"summary":"Delete a topic from a repository","operationId":"repoDeleteTopic","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the topic to delete","name":"topic","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}}},"/repos/{owner}/{repo}/transfer":{"post":{"tags":["repository"],"summary":"Transfer a repo ownership","operationId":"repoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferRepoOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/TransferRepoOption"}}},"description":"Transfer Options","required":true},"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/transfer/accept":{"post":{"tags":["repository"],"summary":"Accept a repo transfer","operationId":"acceptRepoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/transfer/reject":{"post":{"tags":["repository"],"summary":"Reject a repo transfer","operationId":"rejectRepoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/wiki/new":{"post":{"tags":["repository"],"summary":"Create a wiki page","operationId":"repoCreateWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateWikiPageOptions"},"responses":{"201":{"$ref":"#/components/responses/WikiPage"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/wiki/page/{pageName}":{"get":{"tags":["repository"],"summary":"Get a wiki page","operationId":"repoGetWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WikiPage"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a wiki page","operationId":"repoDeleteWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"423":{"$ref":"#/components/responses/repoArchivedError"}}},"patch":{"tags":["repository"],"summary":"Edit a wiki page","operationId":"repoEditWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateWikiPageOptions"},"responses":{"200":{"$ref":"#/components/responses/WikiPage"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"423":{"$ref":"#/components/responses/repoArchivedError"}}}},"/repos/{owner}/{repo}/wiki/pages":{"get":{"tags":["repository"],"summary":"Get all wiki pages","operationId":"repoGetWikiPages","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/WikiPageList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/wiki/revisions/{pageName}":{"get":{"tags":["repository"],"summary":"Get revisions of a wiki page","operationId":"repoGetWikiPageRevisions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/WikiCommitList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{template_owner}/{template_repo}/generate":{"post":{"tags":["repository"],"summary":"Create a repository using a template","operationId":"generateRepo","parameters":[{"description":"name of the template repository owner","name":"template_owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the template repository","name":"template_repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenerateRepoOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repositories/{id}":{"get":{"tags":["repository"],"summary":"Get a repository by id","operationId":"repoGetByID","parameters":[{"description":"id of the repo to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"404":{"$ref":"#/components/responses/notFound"}}}},"/settings/api":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for api","operationId":"getGeneralAPISettings","responses":{"200":{"$ref":"#/components/responses/GeneralAPISettings"}}}},"/settings/attachment":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for Attachment","operationId":"getGeneralAttachmentSettings","responses":{"200":{"$ref":"#/components/responses/GeneralAttachmentSettings"}}}},"/settings/repository":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for repositories","operationId":"getGeneralRepositorySettings","responses":{"200":{"$ref":"#/components/responses/GeneralRepoSettings"}}}},"/settings/ui":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for ui","operationId":"getGeneralUISettings","responses":{"200":{"$ref":"#/components/responses/GeneralUISettings"}}}},"/signing-key.gpg":{"get":{"tags":["miscellaneous"],"summary":"Get default signing-key.gpg","operationId":"getSigningKey","responses":{"200":{"description":"GPG armored public key","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/teams/{id}":{"get":{"tags":["organization"],"summary":"Get a team","operationId":"orgGetTeam","parameters":[{"description":"id of the team to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Team"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete a team","operationId":"orgDeleteTeam","parameters":[{"description":"id of the team to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"team deleted"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["organization"],"summary":"Edit a team","operationId":"orgEditTeam","parameters":[{"description":"id of the team to edit","name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditTeamOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Team"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/activities/feeds":{"get":{"tags":["organization"],"summary":"List a team\'s activity feeds","operationId":"orgListTeamActivityFeeds","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/members":{"get":{"tags":["organization"],"summary":"List a team\'s members","operationId":"orgListTeamMembers","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/members/{username}":{"get":{"tags":["organization"],"summary":"List a particular member of team","operationId":"orgListTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the member to list","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/User"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["organization"],"summary":"Add a team member","operationId":"orgAddTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the user to add","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Remove a team member","operationId":"orgRemoveTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the user to remove","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/repos":{"get":{"tags":["organization"],"summary":"List a team\'s repos","operationId":"orgListTeamRepos","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/repos/{org}/{repo}":{"get":{"tags":["organization"],"summary":"List a particular repo of team","operationId":"orgListTeamRepo","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to list","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to list","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["organization"],"summary":"Add a repository to a team","operationId":"orgAddTeamRepository","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to add","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to add","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"description":"This does not delete the repository, it only removes the repository from the team.","tags":["organization"],"summary":"Remove a repository from a team","operationId":"orgRemoveTeamRepository","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to remove","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to remove","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/topics/search":{"get":{"tags":["repository"],"summary":"search topics via keyword","operationId":"topicSearch","parameters":[{"description":"keywords to search","name":"q","in":"query","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TopicListResponse"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user":{"get":{"tags":["user"],"summary":"Get the authenticated user","operationId":"userGetCurrent","responses":{"200":{"$ref":"#/components/responses/User"}}}},"/user/actions/runners/registration-token":{"get":{"tags":["user"],"summary":"Get an user\'s actions runner registration token","operationId":"userGetRunnerRegistrationToken","responses":{"200":{"$ref":"#/components/responses/RegistrationToken"}}}},"/user/actions/secrets/{secretname}":{"put":{"tags":["user"],"summary":"Create or Update a secret value in a user scope","operationId":"updateUserSecret","parameters":[{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOrUpdateSecretOption"},"responses":{"201":{"description":"response when creating a secret"},"204":{"description":"response when updating a secret"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Delete a secret in a user scope","operationId":"deleteUserSecret","parameters":[{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"delete one secret of the user"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/applications/oauth2":{"get":{"tags":["user"],"summary":"List the authenticated user\'s oauth2 applications","operationId":"userGetOauth2Application","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OAuth2ApplicationList"}}},"post":{"tags":["user"],"summary":"creates a new OAuth2 application","operationId":"userCreateOAuth2Application","requestBody":{"$ref":"#/components/requestBodies/CreateOAuth2ApplicationOptions"},"responses":{"201":{"$ref":"#/components/responses/OAuth2Application"},"400":{"$ref":"#/components/responses/error"}}}},"/user/applications/oauth2/{id}":{"get":{"tags":["user"],"summary":"get an OAuth2 Application","operationId":"userGetOAuth2Application","parameters":[{"description":"Application ID to be found","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/OAuth2Application"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"delete an OAuth2 Application","operationId":"userDeleteOAuth2Application","parameters":[{"description":"token to be deleted","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["user"],"summary":"update an OAuth2 Application, this includes regenerating the client secret","operationId":"userUpdateOAuth2Application","parameters":[{"description":"application to be updated","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOAuth2ApplicationOptions"},"responses":{"200":{"$ref":"#/components/responses/OAuth2Application"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/avatar":{"post":{"tags":["user"],"summary":"Update Avatar","operationId":"userUpdateAvatar","requestBody":{"$ref":"#/components/requestBodies/UpdateUserAvatarOption"},"responses":{"204":{"$ref":"#/components/responses/empty"}}},"delete":{"tags":["user"],"summary":"Delete Avatar","operationId":"userDeleteAvatar","responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/user/blocks":{"get":{"tags":["user"],"summary":"List users blocked by the authenticated user","operationId":"userListBlocks","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/user/blocks/{username}":{"get":{"tags":["user"],"summary":"Check if a user is blocked by the authenticated user","operationId":"userCheckUserBlock","parameters":[{"description":"user to check","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["user"],"summary":"Block a user","operationId":"userBlockUser","parameters":[{"description":"user to block","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"optional note for the block","name":"note","in":"query","schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["user"],"summary":"Unblock a user","operationId":"userUnblockUser","parameters":[{"description":"user to unblock","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/emails":{"get":{"tags":["user"],"summary":"List the authenticated user\'s email addresses","operationId":"userListEmails","responses":{"200":{"$ref":"#/components/responses/EmailList"}}},"post":{"tags":["user"],"summary":"Add email addresses","operationId":"userAddEmail","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateEmailOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateEmailOption"}}}},"responses":{"201":{"$ref":"#/components/responses/EmailList"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["user"],"summary":"Delete email addresses","operationId":"userDeleteEmail","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteEmailOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/DeleteEmailOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/followers":{"get":{"tags":["user"],"summary":"List the authenticated user\'s followers","operationId":"userCurrentListFollowers","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/user/following":{"get":{"tags":["user"],"summary":"List the users that the authenticated user is following","operationId":"userCurrentListFollowing","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/user/following/{username}":{"get":{"tags":["user"],"summary":"Check whether a user is followed by the authenticated user","operationId":"userCurrentCheckFollowing","parameters":[{"description":"username of followed user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["user"],"summary":"Follow a user","operationId":"userCurrentPutFollow","parameters":[{"description":"username of user to follow","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Unfollow a user","operationId":"userCurrentDeleteFollow","parameters":[{"description":"username of user to unfollow","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/gpg_key_token":{"get":{"tags":["user"],"summary":"Get a Token to verify","operationId":"getVerificationToken","responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/gpg_key_verify":{"post":{"tags":["user"],"summary":"Verify a GPG key","operationId":"userVerifyGPGKey","responses":{"201":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/gpg_keys":{"get":{"tags":["user"],"summary":"List the authenticated user\'s GPG keys","operationId":"userCurrentListGPGKeys","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKeyList"}}},"post":{"tags":["user"],"summary":"Create a GPG key","operationId":"userCurrentPostGPGKey","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateGPGKeyOption"}}}},"responses":{"201":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/gpg_keys/{id}":{"get":{"tags":["user"],"summary":"Get a GPG key","operationId":"userCurrentGetGPGKey","parameters":[{"description":"id of key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Remove a GPG key","operationId":"userCurrentDeleteGPGKey","parameters":[{"description":"id of key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/hooks":{"get":{"tags":["user"],"summary":"List the authenticated user\'s webhooks","operationId":"userListHooks","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["user"],"summary":"Create a hook","operationId":"userCreateHook","requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/user/hooks/{id}":{"get":{"tags":["user"],"summary":"Get a hook","operationId":"userGetHook","parameters":[{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"}}},"delete":{"tags":["user"],"summary":"Delete a hook","operationId":"userDeleteHook","parameters":[{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["user"],"summary":"Update a hook","operationId":"userEditHook","parameters":[{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/user/keys":{"get":{"tags":["user"],"summary":"List the authenticated user\'s public keys","operationId":"userCurrentListKeys","parameters":[{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKeyList"}}},"post":{"tags":["user"],"summary":"Create a public key","operationId":"userCurrentPostKey","requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/PublicKey"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/keys/{id}":{"get":{"tags":["user"],"summary":"Get a public key","operationId":"userCurrentGetKey","parameters":[{"description":"id of key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKey"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Delete a public key","operationId":"userCurrentDeleteKey","parameters":[{"description":"id of key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/orgs":{"get":{"tags":["organization"],"summary":"List the current user\'s organizations","operationId":"orgListCurrentUserOrgs","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/repos":{"get":{"tags":["user"],"summary":"List the repos that the authenticated user owns","operationId":"userCurrentListRepos","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}},"post":{"tags":["repository","user"],"summary":"Create a repository","operationId":"createCurrentUserRepo","requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/settings":{"get":{"tags":["user"],"summary":"Get user settings","operationId":"getUserSettings","responses":{"200":{"$ref":"#/components/responses/UserSettings"}}},"patch":{"tags":["user"],"summary":"Update user settings","operationId":"updateUserSettings","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSettingsOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/UserSettingsOptions"}}}},"responses":{"200":{"$ref":"#/components/responses/UserSettings"}}}},"/user/starred":{"get":{"tags":["user"],"summary":"The repos that the authenticated user has starred","operationId":"userCurrentListStarred","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/user/starred/{owner}/{repo}":{"get":{"tags":["user"],"summary":"Whether the authenticated is starring the repo","operationId":"userCurrentCheckStarring","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["user"],"summary":"Star the given repo","operationId":"userCurrentPutStar","parameters":[{"description":"owner of the repo to star","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to star","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Unstar the given repo","operationId":"userCurrentDeleteStar","parameters":[{"description":"owner of the repo to unstar","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to unstar","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/stopwatches":{"get":{"tags":["user"],"summary":"Get list of all existing stopwatches","operationId":"userGetStopWatches","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/StopWatchList"}}}},"/user/subscriptions":{"get":{"tags":["user"],"summary":"List repositories watched by the authenticated user","operationId":"userCurrentListSubscriptions","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/user/teams":{"get":{"tags":["user"],"summary":"List all the teams a user belongs to","operationId":"userListTeams","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"}}}},"/user/times":{"get":{"tags":["user"],"summary":"List the current user\'s tracked times","operationId":"userCurrentTrackedTimes","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"}}}},"/users/search":{"get":{"tags":["user"],"summary":"Search for users","operationId":"userSearch","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"ID of the user to search for","name":"uid","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"description":"SearchResults of a successful search","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/User"}},"ok":{"type":"boolean"}}}}}}}}},"/users/{username}":{"get":{"tags":["user"],"summary":"Get a user","operationId":"userGet","parameters":[{"description":"username of user to get","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/User"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/activities/feeds":{"get":{"tags":["user"],"summary":"List a user\'s activity feeds","operationId":"userListActivityFeeds","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"if true, only show actions performed by the requested user","name":"only-performed-by","in":"query","schema":{"type":"boolean"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/followers":{"get":{"tags":["user"],"summary":"List the given user\'s followers","operationId":"userListFollowers","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/following":{"get":{"tags":["user"],"summary":"List the users that the given user is following","operationId":"userListFollowing","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/following/{target}":{"get":{"tags":["user"],"summary":"Check if one user is following another user","operationId":"userCheckFollowing","parameters":[{"description":"username of following user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of followed user","name":"target","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/gpg_keys":{"get":{"tags":["user"],"summary":"List the given user\'s GPG keys","operationId":"userListGPGKeys","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKeyList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/heatmap":{"get":{"tags":["user"],"summary":"Get a user\'s heatmap","operationId":"userGetHeatmapData","parameters":[{"description":"username of user to get","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserHeatmapData"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/keys":{"get":{"tags":["user"],"summary":"List the given user\'s public keys","operationId":"userListKeys","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKeyList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/orgs":{"get":{"tags":["organization"],"summary":"List a user\'s organizations","operationId":"orgListUserOrgs","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/orgs/{org}/permissions":{"get":{"tags":["organization"],"summary":"Get user permissions in organization","operationId":"orgGetUserPermissions","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationPermissions"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/repos":{"get":{"tags":["user"],"summary":"List the repos owned by the given user","operationId":"userListRepos","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/starred":{"get":{"tags":["user"],"summary":"The repos that the given user has starred","operationId":"userListStarred","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/subscriptions":{"get":{"tags":["user"],"summary":"List the repositories watched by a user","operationId":"userListSubscriptions","parameters":[{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/tokens":{"get":{"tags":["user"],"summary":"List the authenticated user\'s access tokens","operationId":"userGetTokens","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/AccessTokenList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["user"],"summary":"Create an access token","operationId":"userCreateToken","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateAccessTokenOption"}}}},"responses":{"201":{"$ref":"#/components/responses/AccessToken"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/users/{username}/tokens/{token}":{"delete":{"tags":["user"],"summary":"delete an access token","operationId":"userDeleteAccessToken","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"token to be deleted, identified by ID and if not available by name","name":"token","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}}},"/version":{"get":{"tags":["miscellaneous"],"summary":"Returns the version of the Gitea application","operationId":"getVersion","responses":{"200":{"$ref":"#/components/responses/ServerVersion"}}}}},"security":[{"BasicAuth":[]},{"Token":[]},{"AccessToken":[]},{"AuthorizationHeaderToken":[]},{"SudoParam":[]},{"SudoHeader":[]},{"TOTPHeader":[]}],"servers":[{"url":"{AppSubUrl | JSEscape}/api/v1","variables":{"AppSubUrl | JSEscape":{"default":"unknown"}}}],"components":{"responses":{"AccessToken":{"description":"AccessToken represents an API access token.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessToken"}},"text/html":{"schema":{"$ref":"#/components/schemas/AccessToken"}}}},"AccessTokenList":{"description":"AccessTokenList represents a list of API access token.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccessToken"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccessToken"}}}}},"ActivityFeedsList":{"description":"ActivityFeedsList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Activity"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Activity"}}}}},"ActivityPub":{"description":"ActivityPub","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActivityPub"}},"text/html":{"schema":{"$ref":"#/components/schemas/ActivityPub"}}}},"AnnotatedTag":{"description":"AnnotatedTag","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnnotatedTag"}},"text/html":{"schema":{"$ref":"#/components/schemas/AnnotatedTag"}}}},"Attachment":{"description":"Attachment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Attachment"}},"text/html":{"schema":{"$ref":"#/components/schemas/Attachment"}}}},"AttachmentList":{"description":"AttachmentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"}}}}},"BadgeList":{"description":"BadgeList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Badge"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Badge"}}}}},"Branch":{"description":"Branch","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Branch"}},"text/html":{"schema":{"$ref":"#/components/schemas/Branch"}}}},"BranchList":{"description":"BranchList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Branch"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Branch"}}}}},"BranchProtection":{"description":"BranchProtection","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BranchProtection"}},"text/html":{"schema":{"$ref":"#/components/schemas/BranchProtection"}}}},"BranchProtectionList":{"description":"BranchProtectionList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BranchProtection"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BranchProtection"}}}}},"ChangedFileList":{"description":"ChangedFileList","headers":{"X-HasMore":{"description":"True if there is another page","schema":{"type":"boolean"}},"X-Page":{"description":"The current page","schema":{"type":"integer","format":"int64"}},"X-PageCount":{"description":"Total number of pages","schema":{"type":"integer","format":"int64"}},"X-PerPage":{"description":"Commits per page","schema":{"type":"integer","format":"int64"}},"X-Total":{"description":"Total commit count","schema":{"type":"integer","format":"int64"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ChangedFile"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ChangedFile"}}}}},"CombinedStatus":{"description":"CombinedStatus","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CombinedStatus"}},"text/html":{"schema":{"$ref":"#/components/schemas/CombinedStatus"}}}},"Comment":{"description":"Comment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Comment"}},"text/html":{"schema":{"$ref":"#/components/schemas/Comment"}}}},"CommentList":{"description":"CommentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Comment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Comment"}}}}},"Commit":{"description":"Commit","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Commit"}},"text/html":{"schema":{"$ref":"#/components/schemas/Commit"}}}},"CommitList":{"description":"CommitList","headers":{"X-HasMore":{"description":"True if there is another page","schema":{"type":"boolean"}},"X-Page":{"description":"The current page","schema":{"type":"integer","format":"int64"}},"X-PageCount":{"description":"Total number of pages","schema":{"type":"integer","format":"int64"}},"X-PerPage":{"description":"Commits per page","schema":{"type":"integer","format":"int64"}},"X-Total":{"description":"Total commit count","schema":{"type":"integer","format":"int64"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Commit"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Commit"}}}}},"CommitStatus":{"description":"CommitStatus","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommitStatus"}},"text/html":{"schema":{"$ref":"#/components/schemas/CommitStatus"}}}},"CommitStatusList":{"description":"CommitStatusList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"}}}}},"ContentsListResponse":{"description":"ContentsListResponse","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"}}}}},"ContentsResponse":{"description":"ContentsResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentsResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/ContentsResponse"}}}},"CronList":{"description":"CronList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Cron"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Cron"}}}}},"DeployKey":{"description":"DeployKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeployKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/DeployKey"}}}},"DeployKeyList":{"description":"DeployKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeployKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeployKey"}}}}},"EmailList":{"description":"EmailList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Email"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Email"}}}}},"EmptyRepository":{"description":"EmptyRepository","content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIError"}},"text/html":{"schema":{"$ref":"#/components/schemas/APIError"}}}},"FileDeleteResponse":{"description":"FileDeleteResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileDeleteResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FileDeleteResponse"}}}},"FileResponse":{"description":"FileResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FileResponse"}}}},"FilesResponse":{"description":"FilesResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FilesResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FilesResponse"}}}},"GPGKey":{"description":"GPGKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GPGKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/GPGKey"}}}},"GPGKeyList":{"description":"GPGKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"}}}}},"GeneralAPISettings":{"description":"GeneralAPISettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralAPISettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralAPISettings"}}}},"GeneralAttachmentSettings":{"description":"GeneralAttachmentSettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralAttachmentSettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralAttachmentSettings"}}}},"GeneralRepoSettings":{"description":"GeneralRepoSettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralRepoSettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralRepoSettings"}}}},"GeneralUISettings":{"description":"GeneralUISettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralUISettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralUISettings"}}}},"GitBlobResponse":{"description":"GitBlobResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitBlobResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitBlobResponse"}}}},"GitHook":{"description":"GitHook","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitHook"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitHook"}}}},"GitHookList":{"description":"GitHookList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GitHook"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GitHook"}}}}},"GitTreeResponse":{"description":"GitTreeResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitTreeResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitTreeResponse"}}}},"GitignoreTemplateInfo":{"description":"GitignoreTemplateInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitignoreTemplateInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitignoreTemplateInfo"}}}},"GitignoreTemplateList":{"description":"GitignoreTemplateList","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}},"text/html":{"schema":{"type":"array","items":{"type":"string"}}}}},"Hook":{"description":"Hook","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Hook"}},"text/html":{"schema":{"$ref":"#/components/schemas/Hook"}}}},"HookList":{"description":"HookList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Hook"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Hook"}}}}},"Issue":{"description":"Issue","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Issue"}},"text/html":{"schema":{"$ref":"#/components/schemas/Issue"}}}},"IssueDeadline":{"description":"IssueDeadline","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueDeadline"}},"text/html":{"schema":{"$ref":"#/components/schemas/IssueDeadline"}}}},"IssueList":{"description":"IssueList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Issue"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Issue"}}}}},"IssueTemplates":{"description":"IssueTemplates","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssueTemplate"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssueTemplate"}}}}},"Label":{"description":"Label","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Label"}},"text/html":{"schema":{"$ref":"#/components/schemas/Label"}}}},"LabelList":{"description":"LabelList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Label"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Label"}}}}},"LabelTemplateInfo":{"description":"LabelTemplateInfo","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LabelTemplate"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LabelTemplate"}}}}},"LabelTemplateList":{"description":"LabelTemplateList","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}},"text/html":{"schema":{"type":"array","items":{"type":"string"}}}}},"LanguageStatistics":{"description":"LanguageStatistics","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}}},"text/html":{"schema":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}}}}},"LicenseTemplateInfo":{"description":"LicenseTemplateInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LicenseTemplateInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/LicenseTemplateInfo"}}}},"LicenseTemplateList":{"description":"LicenseTemplateList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LicensesTemplateListEntry"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LicensesTemplateListEntry"}}}}},"MarkdownRender":{"description":"MarkdownRender is a rendered markdown document","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"MarkupRender":{"description":"MarkupRender is a rendered markup document","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"Milestone":{"description":"Milestone","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Milestone"}},"text/html":{"schema":{"$ref":"#/components/schemas/Milestone"}}}},"MilestoneList":{"description":"MilestoneList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Milestone"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Milestone"}}}}},"NodeInfo":{"description":"NodeInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodeInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/NodeInfo"}}}},"Note":{"description":"Note","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Note"}},"text/html":{"schema":{"$ref":"#/components/schemas/Note"}}}},"NotificationCount":{"description":"Number of unread notifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationCount"}},"text/html":{"schema":{"$ref":"#/components/schemas/NotificationCount"}}}},"NotificationThread":{"description":"NotificationThread","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationThread"}},"text/html":{"schema":{"$ref":"#/components/schemas/NotificationThread"}}}},"NotificationThreadList":{"description":"NotificationThreadList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/NotificationThread"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/NotificationThread"}}}}},"OAuth2Application":{"description":"OAuth2Application","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OAuth2Application"}},"text/html":{"schema":{"$ref":"#/components/schemas/OAuth2Application"}}}},"OAuth2ApplicationList":{"description":"OAuth2ApplicationList represents a list of OAuth2 applications.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OAuth2Application"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OAuth2Application"}}}}},"Organization":{"description":"Organization","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}},"text/html":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"OrganizationList":{"description":"OrganizationList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Organization"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Organization"}}}}},"OrganizationPermissions":{"description":"OrganizationPermissions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationPermissions"}},"text/html":{"schema":{"$ref":"#/components/schemas/OrganizationPermissions"}}}},"Package":{"description":"Package","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Package"}},"text/html":{"schema":{"$ref":"#/components/schemas/Package"}}}},"PackageFileList":{"description":"PackageFileList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PackageFile"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PackageFile"}}}}},"PackageList":{"description":"PackageList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Package"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Package"}}}}},"PublicKey":{"description":"PublicKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PublicKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/PublicKey"}}}},"PublicKeyList":{"description":"PublicKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PublicKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PublicKey"}}}}},"PullRequest":{"description":"PullRequest","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullRequest"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullRequest"}}}},"PullRequestList":{"description":"PullRequestList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullRequest"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullRequest"}}}}},"PullReview":{"description":"PullReview","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReview"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullReview"}}}},"PullReviewComment":{"description":"PullComment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReviewComment"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullReviewComment"}}}},"PullReviewCommentList":{"description":"PullCommentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReviewComment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReviewComment"}}}}},"PullReviewList":{"description":"PullReviewList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReview"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReview"}}}}},"PushMirror":{"description":"PushMirror","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PushMirror"}},"text/html":{"schema":{"$ref":"#/components/schemas/PushMirror"}}}},"PushMirrorList":{"description":"PushMirrorList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PushMirror"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PushMirror"}}}}},"Reaction":{"description":"Reaction","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Reaction"}},"text/html":{"schema":{"$ref":"#/components/schemas/Reaction"}}}},"ReactionList":{"description":"ReactionList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reaction"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reaction"}}}}},"Reference":{"description":"Reference","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Reference"}},"text/html":{"schema":{"$ref":"#/components/schemas/Reference"}}}},"ReferenceList":{"description":"ReferenceList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}}}}},"RegistrationToken":{"description":"RegistrationToken is response related to registeration token","headers":{"token":{"schema":{"type":"string"}}}},"Release":{"description":"Release","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Release"}},"text/html":{"schema":{"$ref":"#/components/schemas/Release"}}}},"ReleaseList":{"description":"ReleaseList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Release"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Release"}}}}},"RepoCollaboratorPermission":{"description":"RepoCollaboratorPermission","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepoCollaboratorPermission"}},"text/html":{"schema":{"$ref":"#/components/schemas/RepoCollaboratorPermission"}}}},"RepoIssueConfig":{"description":"RepoIssueConfig","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueConfig"}},"text/html":{"schema":{"$ref":"#/components/schemas/IssueConfig"}}}},"RepoIssueConfigValidation":{"description":"RepoIssueConfigValidation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueConfigValidation"}},"text/html":{"schema":{"$ref":"#/components/schemas/IssueConfigValidation"}}}},"RepoNewIssuePinsAllowed":{"description":"RepoNewIssuePinsAllowed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewIssuePinsAllowed"}},"text/html":{"schema":{"$ref":"#/components/schemas/NewIssuePinsAllowed"}}}},"Repository":{"description":"Repository","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Repository"}},"text/html":{"schema":{"$ref":"#/components/schemas/Repository"}}}},"RepositoryList":{"description":"RepositoryList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Repository"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Repository"}}}}},"SearchResults":{"description":"SearchResults","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResults"}},"text/html":{"schema":{"$ref":"#/components/schemas/SearchResults"}}}},"Secret":{"description":"Secret","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Secret"}},"text/html":{"schema":{"$ref":"#/components/schemas/Secret"}}}},"SecretList":{"description":"SecretList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Secret"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Secret"}}}}},"ServerVersion":{"description":"ServerVersion","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServerVersion"}},"text/html":{"schema":{"$ref":"#/components/schemas/ServerVersion"}}}},"StopWatch":{"description":"StopWatch","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StopWatch"}},"text/html":{"schema":{"$ref":"#/components/schemas/StopWatch"}}}},"StopWatchList":{"description":"StopWatchList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StopWatch"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StopWatch"}}}}},"StringSlice":{"description":"StringSlice","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}},"text/html":{"schema":{"type":"array","items":{"type":"string"}}}}},"Tag":{"description":"Tag","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tag"}},"text/html":{"schema":{"$ref":"#/components/schemas/Tag"}}}},"TagList":{"description":"TagList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Tag"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Tag"}}}}},"Team":{"description":"Team","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Team"}},"text/html":{"schema":{"$ref":"#/components/schemas/Team"}}}},"TeamList":{"description":"TeamList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Team"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Team"}}}}},"TimelineList":{"description":"TimelineList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TimelineComment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TimelineComment"}}}}},"TopicListResponse":{"description":"TopicListResponse","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TopicResponse"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TopicResponse"}}}}},"TopicNames":{"description":"TopicNames","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopicName"}},"text/html":{"schema":{"$ref":"#/components/schemas/TopicName"}}}},"TrackedTime":{"description":"TrackedTime","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrackedTime"}},"text/html":{"schema":{"$ref":"#/components/schemas/TrackedTime"}}}},"TrackedTimeList":{"description":"TrackedTimeList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TrackedTime"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TrackedTime"}}}}},"User":{"description":"User","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}},"text/html":{"schema":{"$ref":"#/components/schemas/User"}}}},"UserHeatmapData":{"description":"UserHeatmapData","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserHeatmapData"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserHeatmapData"}}}}},"UserList":{"description":"UserList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}}},"UserSettings":{"description":"UserSettings","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserSettings"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserSettings"}}}}},"WatchInfo":{"description":"WatchInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WatchInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/WatchInfo"}}}},"WikiCommitList":{"description":"WikiCommitList","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WikiCommitList"}},"text/html":{"schema":{"$ref":"#/components/schemas/WikiCommitList"}}}},"WikiPage":{"description":"WikiPage","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WikiPage"}},"text/html":{"schema":{"$ref":"#/components/schemas/WikiPage"}}}},"WikiPageList":{"description":"WikiPageList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WikiPageMetaData"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WikiPageMetaData"}}}}},"conflict":{"description":"APIConflict is a conflict empty response"},"empty":{"description":"APIEmpty is an empty response"},"error":{"description":"APIError is error format response","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}},"forbidden":{"description":"APIForbiddenError is a forbidden error response","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}},"invalidTopicsError":{"description":"APIInvalidTopicsError is error format response to invalid topics","headers":{"invalidTopics":{"schema":{"type":"array","items":{"type":"string"}},"style":"simple"},"message":{"schema":{"type":"string"}}}},"notFound":{"description":"APINotFound is a not found empty response"},"parameterBodies":{"description":"parameterBodies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserBadgeOption"}},"text/html":{"schema":{"$ref":"#/components/schemas/UserBadgeOption"}}}},"redirect":{"description":"APIRedirect is a redirect response"},"repoArchivedError":{"description":"APIRepoArchivedError is an error that is raised when an archived repo should be modified","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}},"string":{"description":"APIString is a string response","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"validationError":{"description":"APIValidationError is error format response related to input validation","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}}},"requestBodies":{"CreateOAuth2ApplicationOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOAuth2ApplicationOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateOAuth2ApplicationOptions"}}},"required":true},"CreateWikiPageOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWikiPageOptions"}}}},"EditLabelOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditLabelOption"}}}},"CreateKeyOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateKeyOption"}}}},"CreateOrgOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOrgOption"}}},"required":true},"IssueLabelsOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueLabelsOption"}}}},"UpdateUserAvatarOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserAvatarOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/UpdateUserAvatarOption"}}}},"CreateHookOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateHookOption"}}},"required":true},"EditReactionOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditReactionOption"}}}},"EditHookOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditHookOption"}}}},"CreateRepoOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRepoOption"}}}},"CreateOrUpdateSecretOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOrUpdateSecretOption"}}}},"CreateLabelOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLabelOption"}}}},"UpdateFileOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateFileOptions"}}},"required":true},"EditIssueCommentOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditIssueCommentOption"}}}},"issueCreateIssueCommentAttachment":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"attachment":{"description":"attachment to upload","type":"string","format":"binary"}},"required":["attachment"]}}},"required":true},"EditAttachmentOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditAttachmentOptions"}}}},"IssueMeta":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueMeta"}},"text/plain":{"schema":{"$ref":"#/components/schemas/IssueMeta"}}}},"PullReviewRequestOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReviewRequestOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/PullReviewRequestOptions"}}},"required":true}},"securitySchemes":{"AccessToken":{"description":"This authentication option is deprecated for removal in Gitea 1.23. Please use AuthorizationHeaderToken instead.","type":"apiKey","name":"access_token","in":"query"},"AuthorizationHeaderToken":{"description":"API tokens must be prepended with \\"token\\" followed by a space.","type":"apiKey","name":"Authorization","in":"header"},"BasicAuth":{"type":"http","scheme":"basic"},"SudoHeader":{"description":"Sudo API request as the user provided as the key. Admin privileges are required.","type":"apiKey","name":"Sudo","in":"header"},"SudoParam":{"description":"Sudo API request as the user provided as the key. Admin privileges are required.","type":"apiKey","name":"sudo","in":"query"},"TOTPHeader":{"description":"Must be used in combination with BasicAuth if two-factor authentication is enabled.","type":"apiKey","name":"X-GITEA-OTP","in":"header"},"Token":{"description":"This authentication option is deprecated for removal in Gitea 1.23. Please use AuthorizationHeaderToken instead.","type":"apiKey","name":"token","in":"query"}},"schemas":{"APIError":{"description":"APIError is an api error with a message","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AccessToken":{"type":"object","title":"AccessToken represents an API access token.","properties":{"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"scopes":{"type":"array","items":{"type":"string"},"x-go-name":"Scopes"},"sha1":{"type":"string","x-go-name":"Token"},"token_last_eight":{"type":"string","x-go-name":"TokenLastEight"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Activity":{"type":"object","properties":{"act_user":{"$ref":"#/components/schemas/User"},"act_user_id":{"type":"integer","format":"int64","x-go-name":"ActUserID"},"comment":{"$ref":"#/components/schemas/Comment"},"comment_id":{"type":"integer","format":"int64","x-go-name":"CommentID"},"content":{"type":"string","x-go-name":"Content"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_private":{"type":"boolean","x-go-name":"IsPrivate"},"op_type":{"type":"string","x-go-name":"OpType"},"ref_name":{"type":"string","x-go-name":"RefName"},"repo":{"$ref":"#/components/schemas/Repository"},"repo_id":{"type":"integer","format":"int64","x-go-name":"RepoID"},"user_id":{"type":"integer","format":"int64","x-go-name":"UserID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ActivityPub":{"description":"ActivityPub type","type":"object","properties":{"@context":{"type":"string","x-go-name":"Context"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AddCollaboratorOption":{"description":"AddCollaboratorOption options when adding a user as a collaborator of a repository","type":"object","properties":{"permission":{"type":"string","x-go-name":"Permission"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AddTimeOption":{"description":"AddTimeOption options for adding time to an issue","type":"object","required":["time"],"properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"time":{"description":"time in seconds","type":"integer","format":"int64","x-go-name":"Time"},"user_name":{"description":"User who spent the time (optional)","type":"string","x-go-name":"User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AnnotatedTag":{"description":"AnnotatedTag represents an annotated tag","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"object":{"$ref":"#/components/schemas/AnnotatedTagObject"},"sha":{"type":"string","x-go-name":"SHA"},"tag":{"type":"string","x-go-name":"Tag"},"tagger":{"$ref":"#/components/schemas/CommitUser"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AnnotatedTagObject":{"description":"AnnotatedTagObject contains meta information of the tag object","type":"object","properties":{"sha":{"type":"string","x-go-name":"SHA"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Attachment":{"description":"Attachment a generic attachment","type":"object","properties":{"browser_download_url":{"type":"string","x-go-name":"DownloadURL"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"download_count":{"type":"integer","format":"int64","x-go-name":"DownloadCount"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"uuid":{"type":"string","x-go-name":"UUID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Badge":{"description":"Badge represents a user badge","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"image_url":{"type":"string","x-go-name":"ImageURL"},"slug":{"type":"string","x-go-name":"Slug"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Branch":{"description":"Branch represents a repository branch","type":"object","properties":{"commit":{"$ref":"#/components/schemas/PayloadCommit"},"effective_branch_protection_name":{"type":"string","x-go-name":"EffectiveBranchProtectionName"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"name":{"type":"string","x-go-name":"Name"},"protected":{"type":"boolean","x-go-name":"Protected"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"user_can_merge":{"type":"boolean","x-go-name":"UserCanMerge"},"user_can_push":{"type":"boolean","x-go-name":"UserCanPush"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"BranchProtection":{"description":"BranchProtection represents a branch protection for a repository","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"branch_name":{"description":"Deprecated: true","type":"string","x-go-name":"BranchName"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"ignore_stale_approvals":{"type":"boolean","x-go-name":"IgnoreStaleApprovals"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"rule_name":{"type":"string","x-go-name":"RuleName"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ChangeFileOperation":{"description":"ChangeFileOperation for creating, updating or deleting a file","type":"object","required":["operation","path"],"properties":{"content":{"description":"new or updated file content, must be base64 encoded","type":"string","x-go-name":"ContentBase64"},"from_path":{"description":"old path of the file to move","type":"string","x-go-name":"FromPath"},"operation":{"description":"indicates what to do with the file","type":"string","enum":["create","update","delete"],"x-go-name":"Operation"},"path":{"description":"path to the existing or new file","type":"string","x-go-name":"Path"},"sha":{"description":"sha is the SHA for the file that already exists, required for update or delete","type":"string","x-go-name":"SHA"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ChangeFilesOptions":{"description":"ChangeFilesOptions options for creating, updating or deleting multiple files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["files"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"files":{"description":"list of file operations","type":"array","items":{"$ref":"#/components/schemas/ChangeFileOperation"},"x-go-name":"Files"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ChangedFile":{"description":"ChangedFile store information about files affected by the pull request","type":"object","properties":{"additions":{"type":"integer","format":"int64","x-go-name":"Additions"},"changes":{"type":"integer","format":"int64","x-go-name":"Changes"},"contents_url":{"type":"string","x-go-name":"ContentsURL"},"deletions":{"type":"integer","format":"int64","x-go-name":"Deletions"},"filename":{"type":"string","x-go-name":"Filename"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"previous_filename":{"type":"string","x-go-name":"PreviousFilename"},"raw_url":{"type":"string","x-go-name":"RawURL"},"status":{"type":"string","x-go-name":"Status"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CombinedStatus":{"description":"CombinedStatus holds the combined state of several statuses for a single commit","type":"object","properties":{"commit_url":{"type":"string","x-go-name":"CommitURL"},"repository":{"$ref":"#/components/schemas/Repository"},"sha":{"type":"string","x-go-name":"SHA"},"state":{"$ref":"#/components/schemas/CommitStatusState"},"statuses":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"},"x-go-name":"Statuses"},"total_count":{"type":"integer","format":"int64","x-go-name":"TotalCount"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Comment":{"description":"Comment represents a comment on a commit or issue","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"body":{"type":"string","x-go-name":"Body"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue_url":{"type":"string","x-go-name":"IssueURL"},"original_author":{"type":"string","x-go-name":"OriginalAuthor"},"original_author_id":{"type":"integer","format":"int64","x-go-name":"OriginalAuthorID"},"pull_request_url":{"type":"string","x-go-name":"PRURL"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Commit":{"type":"object","title":"Commit contains information generated from a Git commit.","properties":{"author":{"$ref":"#/components/schemas/User"},"commit":{"$ref":"#/components/schemas/RepoCommit"},"committer":{"$ref":"#/components/schemas/User"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"files":{"type":"array","items":{"$ref":"#/components/schemas/CommitAffectedFiles"},"x-go-name":"Files"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"parents":{"type":"array","items":{"$ref":"#/components/schemas/CommitMeta"},"x-go-name":"Parents"},"sha":{"type":"string","x-go-name":"SHA"},"stats":{"$ref":"#/components/schemas/CommitStats"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitAffectedFiles":{"description":"CommitAffectedFiles store information about files affected by the commit","type":"object","properties":{"filename":{"type":"string","x-go-name":"Filename"},"status":{"type":"string","x-go-name":"Status"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitDateOptions":{"description":"CommitDateOptions store dates for GIT_AUTHOR_DATE and GIT_COMMITTER_DATE","type":"object","properties":{"author":{"type":"string","format":"date-time","x-go-name":"Author"},"committer":{"type":"string","format":"date-time","x-go-name":"Committer"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitMeta":{"type":"object","title":"CommitMeta contains meta information of a commit in terms of API.","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"sha":{"type":"string","x-go-name":"SHA"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStats":{"description":"CommitStats is statistics for a RepoCommit","type":"object","properties":{"additions":{"type":"integer","format":"int64","x-go-name":"Additions"},"deletions":{"type":"integer","format":"int64","x-go-name":"Deletions"},"total":{"type":"integer","format":"int64","x-go-name":"Total"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStatus":{"description":"CommitStatus holds a single status of a single Commit","type":"object","properties":{"context":{"type":"string","x-go-name":"Context"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"creator":{"$ref":"#/components/schemas/User"},"description":{"type":"string","x-go-name":"Description"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"status":{"$ref":"#/components/schemas/CommitStatusState"},"target_url":{"type":"string","x-go-name":"TargetURL"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStatusState":{"description":"CommitStatusState holds the state of a CommitStatus\\nIt can be \\"pending\\", \\"success\\", \\"error\\" and \\"failure\\"","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitUser":{"type":"object","title":"CommitUser contains information of a user in the context of a commit.","properties":{"date":{"type":"string","x-go-name":"Date"},"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ContentsResponse":{"description":"ContentsResponse contains information about a repo\'s entry\'s (dir, file, symlink, submodule) metadata and content","type":"object","properties":{"_links":{"$ref":"#/components/schemas/FileLinksResponse"},"content":{"description":"`content` is populated when `type` is `file`, otherwise null","type":"string","x-go-name":"Content"},"download_url":{"type":"string","x-go-name":"DownloadURL"},"encoding":{"description":"`encoding` is populated when `type` is `file`, otherwise null","type":"string","x-go-name":"Encoding"},"git_url":{"type":"string","x-go-name":"GitURL"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit_sha":{"type":"string","x-go-name":"LastCommitSHA"},"name":{"type":"string","x-go-name":"Name"},"path":{"type":"string","x-go-name":"Path"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"submodule_git_url":{"description":"`submodule_git_url` is populated when `type` is `submodule`, otherwise null","type":"string","x-go-name":"SubmoduleGitURL"},"target":{"description":"`target` is populated when `type` is `symlink`, otherwise null","type":"string","x-go-name":"Target"},"type":{"description":"`type` will be `file`, `dir`, `symlink`, or `submodule`","type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateAccessTokenOption":{"description":"CreateAccessTokenOption options when create access token","type":"object","required":["name"],"properties":{"name":{"type":"string","x-go-name":"Name"},"scopes":{"type":"array","items":{"type":"string"},"x-go-name":"Scopes"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateBranchProtectionOption":{"description":"CreateBranchProtectionOption options for creating a branch protection","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"branch_name":{"description":"Deprecated: true","type":"string","x-go-name":"BranchName"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"ignore_stale_approvals":{"type":"boolean","x-go-name":"IgnoreStaleApprovals"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"rule_name":{"type":"string","x-go-name":"RuleName"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateBranchRepoOption":{"description":"CreateBranchRepoOption options when creating a branch in a repository","type":"object","required":["new_branch_name"],"properties":{"new_branch_name":{"description":"Name of the branch to create","type":"string","uniqueItems":true,"x-go-name":"BranchName"},"old_branch_name":{"description":"Deprecated: true\\nName of the old branch to create from","type":"string","uniqueItems":true,"x-go-name":"OldBranchName"},"old_ref_name":{"description":"Name of the old branch/tag/commit to create from","type":"string","uniqueItems":true,"x-go-name":"OldRefName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateEmailOption":{"description":"CreateEmailOption options when creating email addresses","type":"object","properties":{"emails":{"description":"email addresses to add","type":"array","items":{"type":"string"},"x-go-name":"Emails"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateFileOptions":{"description":"CreateFileOptions options for creating files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["content"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"content":{"description":"content must be base64 encoded","type":"string","x-go-name":"ContentBase64"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateForkOption":{"description":"CreateForkOption options for creating a fork","type":"object","properties":{"name":{"description":"name of the forked repository","type":"string","x-go-name":"Name"},"organization":{"description":"organization name, if forking into an organization","type":"string","x-go-name":"Organization"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateGPGKeyOption":{"description":"CreateGPGKeyOption options create user GPG key","type":"object","required":["armored_public_key"],"properties":{"armored_public_key":{"description":"An armored GPG key to add","type":"string","uniqueItems":true,"x-go-name":"ArmoredKey"},"armored_signature":{"type":"string","x-go-name":"Signature"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateHookOption":{"description":"CreateHookOption options when create a hook","type":"object","required":["type","config"],"properties":{"active":{"type":"boolean","default":false,"x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"$ref":"#/components/schemas/CreateHookOptionConfig"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"},"type":{"type":"string","enum":["dingtalk","discord","gitea","gogs","msteams","slack","telegram","feishu","wechatwork","packagist"],"x-go-name":"Type"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateHookOptionConfig":{"description":"CreateHookOptionConfig has all config options in it\\nrequired are \\"content_type\\" and \\"url\\" Required","type":"object","additionalProperties":{"type":"string"},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateIssueCommentOption":{"description":"CreateIssueCommentOption options for creating a comment on an issue","type":"object","required":["body"],"properties":{"body":{"type":"string","x-go-name":"Body"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateIssueOption":{"description":"CreateIssueOption options to create one issue","type":"object","required":["title"],"properties":{"assignee":{"description":"deprecated","type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"closed":{"type":"boolean","x-go-name":"Closed"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"labels":{"description":"list of label ids","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"description":"milestone id","type":"integer","format":"int64","x-go-name":"Milestone"},"ref":{"type":"string","x-go-name":"Ref"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateKeyOption":{"description":"CreateKeyOption options when creating a key","type":"object","required":["title","key"],"properties":{"key":{"description":"An armored SSH key to add","type":"string","uniqueItems":true,"x-go-name":"Key"},"read_only":{"description":"Describe if the key has only read access or read/write","type":"boolean","x-go-name":"ReadOnly"},"title":{"description":"Title of the key to add","type":"string","uniqueItems":true,"x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateLabelOption":{"description":"CreateLabelOption options for creating a label","type":"object","required":["name","color"],"properties":{"color":{"type":"string","x-go-name":"Color","example":"#00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"is_archived":{"type":"boolean","x-go-name":"IsArchived","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateMilestoneOption":{"description":"CreateMilestoneOption options for creating a milestone","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"state":{"type":"string","enum":["open","closed"],"x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateOAuth2ApplicationOptions":{"description":"CreateOAuth2ApplicationOptions holds options to create an oauth2 application","type":"object","properties":{"confidential_client":{"type":"boolean","x-go-name":"ConfidentialClient"},"name":{"type":"string","x-go-name":"Name"},"redirect_uris":{"type":"array","items":{"type":"string"},"x-go-name":"RedirectURIs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateOrUpdateSecretOption":{"description":"CreateOrUpdateSecretOption options when creating or updating secret","type":"object","required":["data"],"properties":{"data":{"description":"Data of the secret to update","type":"string","x-go-name":"Data"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateOrgOption":{"description":"CreateOrgOption options for creating an organization","type":"object","required":["username"],"properties":{"description":{"type":"string","x-go-name":"Description"},"email":{"type":"string","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"username":{"type":"string","x-go-name":"UserName"},"visibility":{"description":"possible values are `public` (default), `limited` or `private`","type":"string","enum":["public","limited","private"],"x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullRequestOption":{"description":"CreatePullRequestOption options when creating a pull request","type":"object","properties":{"assignee":{"type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"base":{"type":"string","x-go-name":"Base"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"head":{"type":"string","x-go-name":"Head"},"labels":{"type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullReviewComment":{"description":"CreatePullReviewComment represent a review comment for creation api","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"new_position":{"description":"if comment to new file line or 0","type":"integer","format":"int64","x-go-name":"NewLineNum"},"old_position":{"description":"if comment to old file line or 0","type":"integer","format":"int64","x-go-name":"OldLineNum"},"path":{"description":"the tree path","type":"string","x-go-name":"Path"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullReviewOptions":{"description":"CreatePullReviewOptions are options to create a pull review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"comments":{"type":"array","items":{"$ref":"#/components/schemas/CreatePullReviewComment"},"x-go-name":"Comments"},"commit_id":{"type":"string","x-go-name":"CommitID"},"event":{"$ref":"#/components/schemas/ReviewStateType"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePushMirrorOption":{"type":"object","title":"CreatePushMirrorOption represents need information to create a push mirror of a repository.","properties":{"interval":{"type":"string","x-go-name":"Interval"},"remote_address":{"type":"string","x-go-name":"RemoteAddress"},"remote_password":{"type":"string","x-go-name":"RemotePassword"},"remote_username":{"type":"string","x-go-name":"RemoteUsername"},"sync_on_commit":{"type":"boolean","x-go-name":"SyncOnCommit"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateReleaseOption":{"description":"CreateReleaseOption options when creating a release","type":"object","required":["tag_name"],"properties":{"body":{"type":"string","x-go-name":"Note"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"tag_name":{"type":"string","x-go-name":"TagName"},"target_commitish":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateRepoOption":{"description":"CreateRepoOption options when creating repository","type":"object","required":["name"],"properties":{"auto_init":{"description":"Whether the repository should be auto-initialized?","type":"boolean","x-go-name":"AutoInit"},"default_branch":{"description":"DefaultBranch of the repository (used when initializes and in template)","type":"string","x-go-name":"DefaultBranch"},"description":{"description":"Description of the repository to create","type":"string","x-go-name":"Description"},"gitignores":{"description":"Gitignores to use","type":"string","x-go-name":"Gitignores"},"issue_labels":{"description":"Label-Set to use","type":"string","x-go-name":"IssueLabels"},"license":{"description":"License to use","type":"string","x-go-name":"License"},"name":{"description":"Name of the repository to create","type":"string","uniqueItems":true,"x-go-name":"Name"},"object_format_name":{"description":"ObjectFormatName of the underlying git repository","type":"string","enum":["sha1","sha256"],"x-go-name":"ObjectFormatName"},"private":{"description":"Whether the repository is private","type":"boolean","x-go-name":"Private"},"readme":{"description":"Readme of the repository to create","type":"string","x-go-name":"Readme"},"template":{"description":"Whether the repository is template","type":"boolean","x-go-name":"Template"},"trust_model":{"description":"TrustModel of the repository","type":"string","enum":["default","collaborator","committer","collaboratorcommitter"],"x-go-name":"TrustModel"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateStatusOption":{"description":"CreateStatusOption holds the information needed to create a new CommitStatus for a Commit","type":"object","properties":{"context":{"type":"string","x-go-name":"Context"},"description":{"type":"string","x-go-name":"Description"},"state":{"$ref":"#/components/schemas/CommitStatusState"},"target_url":{"type":"string","x-go-name":"TargetURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateTagOption":{"description":"CreateTagOption options when creating a tag","type":"object","required":["tag_name"],"properties":{"message":{"type":"string","x-go-name":"Message"},"tag_name":{"type":"string","x-go-name":"TagName"},"target":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateTeamOption":{"description":"CreateTeamOption options for creating a team","type":"object","required":["name"],"properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"permission":{"type":"string","enum":["read","write","admin"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.actions","repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.ext_wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":"{\\"repo.actions\\",\\"repo.packages\\",\\"repo.code\\":\\"read\\",\\"repo.issues\\":\\"write\\",\\"repo.ext_issues\\":\\"none\\",\\"repo.wiki\\":\\"admin\\",\\"repo.pulls\\":\\"owner\\",\\"repo.releases\\":\\"none\\",\\"repo.projects\\":\\"none\\",\\"repo.ext_wiki\\":\\"none\\"}"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateUserOption":{"description":"CreateUserOption create user options","type":"object","required":["username","email"],"properties":{"created_at":{"description":"For explicitly setting the user creation timestamp. Useful when users are\\nmigrated from other systems. When omitted, the user\'s creation timestamp\\nwill be set to \\"now\\".","type":"string","format":"date-time","x-go-name":"Created"},"email":{"type":"string","format":"email","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"login_name":{"type":"string","x-go-name":"LoginName"},"must_change_password":{"type":"boolean","x-go-name":"MustChangePassword"},"password":{"type":"string","x-go-name":"Password"},"restricted":{"type":"boolean","x-go-name":"Restricted"},"send_notify":{"type":"boolean","x-go-name":"SendNotify"},"source_id":{"type":"integer","format":"int64","x-go-name":"SourceID"},"username":{"type":"string","x-go-name":"Username"},"visibility":{"type":"string","x-go-name":"Visibility"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateWikiPageOptions":{"description":"CreateWikiPageOptions form for creating wiki","type":"object","properties":{"content_base64":{"description":"content must be base64 encoded","type":"string","x-go-name":"ContentBase64"},"message":{"description":"optional commit message summarizing the change","type":"string","x-go-name":"Message"},"title":{"description":"page title. leave empty to keep unchanged","type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Cron":{"description":"Cron represents a Cron task","type":"object","properties":{"exec_times":{"type":"integer","format":"int64","x-go-name":"ExecTimes"},"name":{"type":"string","x-go-name":"Name"},"next":{"type":"string","format":"date-time","x-go-name":"Next"},"prev":{"type":"string","format":"date-time","x-go-name":"Prev"},"schedule":{"type":"string","x-go-name":"Schedule"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeleteEmailOption":{"description":"DeleteEmailOption options when deleting email addresses","type":"object","properties":{"emails":{"description":"email addresses to delete","type":"array","items":{"type":"string"},"x-go-name":"Emails"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeleteFileOptions":{"description":"DeleteFileOptions options for deleting files (used for other File structs below)\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["sha"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"sha":{"description":"sha is the SHA for the file that already exists","type":"string","x-go-name":"SHA"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeployKey":{"description":"DeployKey a deploy key","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"fingerprint":{"type":"string","x-go-name":"Fingerprint"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key":{"type":"string","x-go-name":"Key"},"key_id":{"type":"integer","format":"int64","x-go-name":"KeyID"},"read_only":{"type":"boolean","x-go-name":"ReadOnly"},"repository":{"$ref":"#/components/schemas/Repository"},"title":{"type":"string","x-go-name":"Title"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DismissPullReviewOptions":{"description":"DismissPullReviewOptions are options to dismiss a pull review","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"priors":{"type":"boolean","x-go-name":"Priors"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditAttachmentOptions":{"description":"EditAttachmentOptions options for editing attachments","type":"object","properties":{"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditBranchProtectionOption":{"description":"EditBranchProtectionOption options for editing a branch protection","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"ignore_stale_approvals":{"type":"boolean","x-go-name":"IgnoreStaleApprovals"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditDeadlineOption":{"description":"EditDeadlineOption options for creating a deadline","type":"object","required":["due_date"],"properties":{"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditGitHookOption":{"description":"EditGitHookOption options when modifying one Git hook","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditHookOption":{"description":"EditHookOption options when modify one hook","type":"object","properties":{"active":{"type":"boolean","x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"Config"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditIssueCommentOption":{"description":"EditIssueCommentOption options for editing a comment","type":"object","required":["body"],"properties":{"body":{"type":"string","x-go-name":"Body"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditIssueOption":{"description":"EditIssueOption options for editing an issue","type":"object","properties":{"assignee":{"description":"deprecated","type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"ref":{"type":"string","x-go-name":"Ref"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"},"unset_due_date":{"type":"boolean","x-go-name":"RemoveDeadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditLabelOption":{"description":"EditLabelOption options for editing a label","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"#00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"is_archived":{"type":"boolean","x-go-name":"IsArchived","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditMilestoneOption":{"description":"EditMilestoneOption options for editing a milestone","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditOrgOption":{"description":"EditOrgOption options for editing an organization","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"email":{"type":"string","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"visibility":{"description":"possible values are `public`, `limited` or `private`","type":"string","enum":["public","limited","private"],"x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditPullRequestOption":{"description":"EditPullRequestOption options when modify pull request","type":"object","properties":{"allow_maintainer_edit":{"type":"boolean","x-go-name":"AllowMaintainerEdit"},"assignee":{"type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"base":{"type":"string","x-go-name":"Base"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"labels":{"type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"},"unset_due_date":{"type":"boolean","x-go-name":"RemoveDeadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditReactionOption":{"description":"EditReactionOption contain the reaction type","type":"object","properties":{"content":{"type":"string","x-go-name":"Reaction"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditReleaseOption":{"description":"EditReleaseOption options when editing a release","type":"object","properties":{"body":{"type":"string","x-go-name":"Note"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"tag_name":{"type":"string","x-go-name":"TagName"},"target_commitish":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditRepoOption":{"description":"EditRepoOption options when editing a repository\'s properties","type":"object","properties":{"allow_fast_forward_only_merge":{"description":"either `true` to allow fast-forward-only merging pull requests, or `false` to prevent fast-forward-only merging.","type":"boolean","x-go-name":"AllowFastForwardOnly"},"allow_manual_merge":{"description":"either `true` to allow mark pr as merged manually, or `false` to prevent it.","type":"boolean","x-go-name":"AllowManualMerge"},"allow_merge_commits":{"description":"either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.","type":"boolean","x-go-name":"AllowMerge"},"allow_rebase":{"description":"either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.","type":"boolean","x-go-name":"AllowRebase"},"allow_rebase_explicit":{"description":"either `true` to allow rebase with explicit merge commits (--no-ff), or `false` to prevent rebase with explicit merge commits.","type":"boolean","x-go-name":"AllowRebaseMerge"},"allow_rebase_update":{"description":"either `true` to allow updating pull request branch by rebase, or `false` to prevent it.","type":"boolean","x-go-name":"AllowRebaseUpdate"},"allow_squash_merge":{"description":"either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.","type":"boolean","x-go-name":"AllowSquash"},"archived":{"description":"set to `true` to archive this repository.","type":"boolean","x-go-name":"Archived"},"autodetect_manual_merge":{"description":"either `true` to enable AutodetectManualMerge, or `false` to prevent it. Note: In some special cases, misjudgments can occur.","type":"boolean","x-go-name":"AutodetectManualMerge"},"default_allow_maintainer_edit":{"description":"set to `true` to allow edits from maintainers by default","type":"boolean","x-go-name":"DefaultAllowMaintainerEdit"},"default_branch":{"description":"sets the default branch for this repository.","type":"string","x-go-name":"DefaultBranch"},"default_delete_branch_after_merge":{"description":"set to `true` to delete pr branch after merge by default","type":"boolean","x-go-name":"DefaultDeleteBranchAfterMerge"},"default_merge_style":{"description":"set to a merge style to be used by this repository: \\"merge\\", \\"rebase\\", \\"rebase-merge\\", \\"squash\\", or \\"fast-forward-only\\".","type":"string","x-go-name":"DefaultMergeStyle"},"description":{"description":"a short description of the repository.","type":"string","x-go-name":"Description"},"enable_prune":{"description":"enable prune - remove obsolete remote-tracking references","type":"boolean","x-go-name":"EnablePrune"},"external_tracker":{"$ref":"#/components/schemas/ExternalTracker"},"external_wiki":{"$ref":"#/components/schemas/ExternalWiki"},"has_actions":{"description":"either `true` to enable actions unit, or `false` to disable them.","type":"boolean","x-go-name":"HasActions"},"has_issues":{"description":"either `true` to enable issues for this repository or `false` to disable them.","type":"boolean","x-go-name":"HasIssues"},"has_packages":{"description":"either `true` to enable packages unit, or `false` to disable them.","type":"boolean","x-go-name":"HasPackages"},"has_projects":{"description":"either `true` to enable project unit, or `false` to disable them.","type":"boolean","x-go-name":"HasProjects"},"has_pull_requests":{"description":"either `true` to allow pull requests, or `false` to prevent pull request.","type":"boolean","x-go-name":"HasPullRequests"},"has_releases":{"description":"either `true` to enable releases unit, or `false` to disable them.","type":"boolean","x-go-name":"HasReleases"},"has_wiki":{"description":"either `true` to enable the wiki for this repository or `false` to disable it.","type":"boolean","x-go-name":"HasWiki"},"ignore_whitespace_conflicts":{"description":"either `true` to ignore whitespace for conflicts, or `false` to not ignore whitespace.","type":"boolean","x-go-name":"IgnoreWhitespaceConflicts"},"internal_tracker":{"$ref":"#/components/schemas/InternalTracker"},"mirror_interval":{"description":"set to a string like `8h30m0s` to set the mirror interval time","type":"string","x-go-name":"MirrorInterval"},"name":{"description":"name of the repository","type":"string","uniqueItems":true,"x-go-name":"Name"},"private":{"description":"either `true` to make the repository private or `false` to make it public.\\nNote: you will get a 422 error if the organization restricts changing repository visibility to organization\\nowners and a non-owner tries to change the value of private.","type":"boolean","x-go-name":"Private"},"projects_mode":{"description":"`repo` to only allow repo-level projects, `owner` to only allow owner projects, `all` to allow both.","type":"string","x-go-name":"ProjectsMode"},"template":{"description":"either `true` to make this repository a template or `false` to make it a normal repository","type":"boolean","x-go-name":"Template"},"website":{"description":"a URL with more information about the repository.","type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditTeamOption":{"description":"EditTeamOption options for editing a team","type":"object","required":["name"],"properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"permission":{"type":"string","enum":["read","write","admin"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":{"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditUserOption":{"description":"EditUserOption edit user options","type":"object","required":["source_id","login_name"],"properties":{"active":{"type":"boolean","x-go-name":"Active"},"admin":{"type":"boolean","x-go-name":"Admin"},"allow_create_organization":{"type":"boolean","x-go-name":"AllowCreateOrganization"},"allow_git_hook":{"type":"boolean","x-go-name":"AllowGitHook"},"allow_import_local":{"type":"boolean","x-go-name":"AllowImportLocal"},"description":{"type":"string","x-go-name":"Description"},"email":{"type":"string","format":"email","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"login_name":{"type":"string","x-go-name":"LoginName"},"max_repo_creation":{"type":"integer","format":"int64","x-go-name":"MaxRepoCreation"},"must_change_password":{"type":"boolean","x-go-name":"MustChangePassword"},"password":{"type":"string","x-go-name":"Password"},"prohibit_login":{"type":"boolean","x-go-name":"ProhibitLogin"},"restricted":{"type":"boolean","x-go-name":"Restricted"},"source_id":{"type":"integer","format":"int64","x-go-name":"SourceID"},"visibility":{"type":"string","x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Email":{"description":"Email an email address belonging to a user","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"primary":{"type":"boolean","x-go-name":"Primary"},"user_id":{"type":"integer","format":"int64","x-go-name":"UserID"},"username":{"type":"string","x-go-name":"UserName"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ExternalTracker":{"description":"ExternalTracker represents settings for external tracker","type":"object","properties":{"external_tracker_format":{"description":"External Issue Tracker URL Format. Use the placeholders {user}, {repo} and {index} for the username, repository name and issue index.","type":"string","x-go-name":"ExternalTrackerFormat"},"external_tracker_regexp_pattern":{"description":"External Issue Tracker issue regular expression","type":"string","x-go-name":"ExternalTrackerRegexpPattern"},"external_tracker_style":{"description":"External Issue Tracker Number Format, either `numeric`, `alphanumeric`, or `regexp`","type":"string","x-go-name":"ExternalTrackerStyle"},"external_tracker_url":{"description":"URL of external issue tracker.","type":"string","x-go-name":"ExternalTrackerURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ExternalWiki":{"description":"ExternalWiki represents setting for external wiki","type":"object","properties":{"external_wiki_url":{"description":"URL of external wiki.","type":"string","x-go-name":"ExternalWikiURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileCommitResponse":{"type":"object","title":"FileCommitResponse contains information generated from a Git commit for a repo\'s file.","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"committer":{"$ref":"#/components/schemas/CommitUser"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"message":{"type":"string","x-go-name":"Message"},"parents":{"type":"array","items":{"$ref":"#/components/schemas/CommitMeta"},"x-go-name":"Parents"},"sha":{"type":"string","x-go-name":"SHA"},"tree":{"$ref":"#/components/schemas/CommitMeta"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileDeleteResponse":{"description":"FileDeleteResponse contains information about a repo\'s file that was deleted","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"content":{"x-go-name":"Content"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileLinksResponse":{"description":"FileLinksResponse contains the links for a repo\'s file","type":"object","properties":{"git":{"type":"string","x-go-name":"GitURL"},"html":{"type":"string","x-go-name":"HTMLURL"},"self":{"type":"string","x-go-name":"Self"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileResponse":{"description":"FileResponse contains information about a repo\'s file","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"content":{"$ref":"#/components/schemas/ContentsResponse"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FilesResponse":{"description":"FilesResponse contains information about multiple files from a repo","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"files":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"},"x-go-name":"Files"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GPGKey":{"description":"GPGKey a user GPG key to sign commit and tag in repository","type":"object","properties":{"can_certify":{"type":"boolean","x-go-name":"CanCertify"},"can_encrypt_comms":{"type":"boolean","x-go-name":"CanEncryptComms"},"can_encrypt_storage":{"type":"boolean","x-go-name":"CanEncryptStorage"},"can_sign":{"type":"boolean","x-go-name":"CanSign"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"emails":{"type":"array","items":{"$ref":"#/components/schemas/GPGKeyEmail"},"x-go-name":"Emails"},"expires_at":{"type":"string","format":"date-time","x-go-name":"Expires"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key_id":{"type":"string","x-go-name":"KeyID"},"primary_key_id":{"type":"string","x-go-name":"PrimaryKeyID"},"public_key":{"type":"string","x-go-name":"PublicKey"},"subkeys":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"},"x-go-name":"SubsKey"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GPGKeyEmail":{"description":"GPGKeyEmail an email attached to a GPGKey","type":"object","properties":{"email":{"type":"string","x-go-name":"Email"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralAPISettings":{"description":"GeneralAPISettings contains global api settings exposed by it","type":"object","properties":{"default_git_trees_per_page":{"type":"integer","format":"int64","x-go-name":"DefaultGitTreesPerPage"},"default_max_blob_size":{"type":"integer","format":"int64","x-go-name":"DefaultMaxBlobSize"},"default_paging_num":{"type":"integer","format":"int64","x-go-name":"DefaultPagingNum"},"max_response_items":{"type":"integer","format":"int64","x-go-name":"MaxResponseItems"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralAttachmentSettings":{"description":"GeneralAttachmentSettings contains global Attachment settings exposed by API","type":"object","properties":{"allowed_types":{"type":"string","x-go-name":"AllowedTypes"},"enabled":{"type":"boolean","x-go-name":"Enabled"},"max_files":{"type":"integer","format":"int64","x-go-name":"MaxFiles"},"max_size":{"type":"integer","format":"int64","x-go-name":"MaxSize"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralRepoSettings":{"description":"GeneralRepoSettings contains global repository settings exposed by API","type":"object","properties":{"http_git_disabled":{"type":"boolean","x-go-name":"HTTPGitDisabled"},"lfs_disabled":{"type":"boolean","x-go-name":"LFSDisabled"},"migrations_disabled":{"type":"boolean","x-go-name":"MigrationsDisabled"},"mirrors_disabled":{"type":"boolean","x-go-name":"MirrorsDisabled"},"stars_disabled":{"type":"boolean","x-go-name":"StarsDisabled"},"time_tracking_disabled":{"type":"boolean","x-go-name":"TimeTrackingDisabled"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralUISettings":{"description":"GeneralUISettings contains global ui settings exposed by API","type":"object","properties":{"allowed_reactions":{"type":"array","items":{"type":"string"},"x-go-name":"AllowedReactions"},"custom_emojis":{"type":"array","items":{"type":"string"},"x-go-name":"CustomEmojis"},"default_theme":{"type":"string","x-go-name":"DefaultTheme"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GenerateRepoOption":{"description":"GenerateRepoOption options when creating repository using a template","type":"object","required":["owner","name"],"properties":{"avatar":{"description":"include avatar of the template repo","type":"boolean","x-go-name":"Avatar"},"default_branch":{"description":"Default branch of the new repository","type":"string","x-go-name":"DefaultBranch"},"description":{"description":"Description of the repository to create","type":"string","x-go-name":"Description"},"git_content":{"description":"include git content of default branch in template repo","type":"boolean","x-go-name":"GitContent"},"git_hooks":{"description":"include git hooks in template repo","type":"boolean","x-go-name":"GitHooks"},"labels":{"description":"include labels in template repo","type":"boolean","x-go-name":"Labels"},"name":{"description":"Name of the repository to create","type":"string","uniqueItems":true,"x-go-name":"Name"},"owner":{"description":"The organization or person who will own the new repository","type":"string","x-go-name":"Owner"},"private":{"description":"Whether the repository is private","type":"boolean","x-go-name":"Private"},"protected_branch":{"description":"include protected branches in template repo","type":"boolean","x-go-name":"ProtectedBranch"},"topics":{"description":"include topics in template repo","type":"boolean","x-go-name":"Topics"},"webhooks":{"description":"include webhooks in template repo","type":"boolean","x-go-name":"Webhooks"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitBlobResponse":{"description":"GitBlobResponse represents a git blob","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"},"encoding":{"type":"string","x-go-name":"Encoding"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitEntry":{"description":"GitEntry represents a git tree","type":"object","properties":{"mode":{"type":"string","x-go-name":"Mode"},"path":{"type":"string","x-go-name":"Path"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitHook":{"description":"GitHook represents a Git repository hook","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"},"is_active":{"type":"boolean","x-go-name":"IsActive"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitObject":{"type":"object","title":"GitObject represents a Git object.","properties":{"sha":{"type":"string","x-go-name":"SHA"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitTreeResponse":{"description":"GitTreeResponse returns a git tree","type":"object","properties":{"page":{"type":"integer","format":"int64","x-go-name":"Page"},"sha":{"type":"string","x-go-name":"SHA"},"total_count":{"type":"integer","format":"int64","x-go-name":"TotalCount"},"tree":{"type":"array","items":{"$ref":"#/components/schemas/GitEntry"},"x-go-name":"Entries"},"truncated":{"type":"boolean","x-go-name":"Truncated"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitignoreTemplateInfo":{"description":"GitignoreTemplateInfo name and text of a gitignore template","type":"object","properties":{"name":{"type":"string","x-go-name":"Name"},"source":{"type":"string","x-go-name":"Source"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Hook":{"description":"Hook a hook is a web hook when one repository changed","type":"object","properties":{"active":{"type":"boolean","x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"Config"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"type":{"type":"string","x-go-name":"Type"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Identity":{"description":"Identity for a person\'s identity like an author or committer","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"InternalTracker":{"description":"InternalTracker represents settings for internal tracker","type":"object","properties":{"allow_only_contributors_to_track_time":{"description":"Let only contributors track time (Built-in issue tracker)","type":"boolean","x-go-name":"AllowOnlyContributorsToTrackTime"},"enable_issue_dependencies":{"description":"Enable dependencies for issues and pull requests (Built-in issue tracker)","type":"boolean","x-go-name":"EnableIssueDependencies"},"enable_time_tracker":{"description":"Enable time tracking (Built-in issue tracker)","type":"boolean","x-go-name":"EnableTimeTracker"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Issue":{"description":"Issue represents an issue in a repository","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"assignee":{"$ref":"#/components/schemas/User"},"assignees":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"comments":{"type":"integer","format":"int64","x-go-name":"Comments"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_locked":{"type":"boolean","x-go-name":"IsLocked"},"labels":{"type":"array","items":{"$ref":"#/components/schemas/Label"},"x-go-name":"Labels"},"milestone":{"$ref":"#/components/schemas/Milestone"},"number":{"type":"integer","format":"int64","x-go-name":"Index"},"original_author":{"type":"string","x-go-name":"OriginalAuthor"},"original_author_id":{"type":"integer","format":"int64","x-go-name":"OriginalAuthorID"},"pin_order":{"type":"integer","format":"int64","x-go-name":"PinOrder"},"pull_request":{"$ref":"#/components/schemas/PullRequestMeta"},"ref":{"type":"string","x-go-name":"Ref"},"repository":{"$ref":"#/components/schemas/RepositoryMeta"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueConfig":{"type":"object","properties":{"blank_issues_enabled":{"type":"boolean","x-go-name":"BlankIssuesEnabled"},"contact_links":{"type":"array","items":{"$ref":"#/components/schemas/IssueConfigContactLink"},"x-go-name":"ContactLinks"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueConfigContactLink":{"type":"object","properties":{"about":{"type":"string","x-go-name":"About"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueConfigValidation":{"type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"valid":{"type":"boolean","x-go-name":"Valid"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueDeadline":{"description":"IssueDeadline represents an issue deadline","type":"object","properties":{"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueFormField":{"description":"IssueFormField represents a form field","type":"object","properties":{"attributes":{"type":"object","additionalProperties":{},"x-go-name":"Attributes"},"id":{"type":"string","x-go-name":"ID"},"type":{"$ref":"#/components/schemas/IssueFormFieldType"},"validations":{"type":"object","additionalProperties":{},"x-go-name":"Validations"},"visible":{"type":"array","items":{"$ref":"#/components/schemas/IssueFormFieldVisible"},"x-go-name":"Visible"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueFormFieldType":{"type":"string","title":"IssueFormFieldType defines issue form field type, can be \\"markdown\\", \\"textarea\\", \\"input\\", \\"dropdown\\" or \\"checkboxes\\"","x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueFormFieldVisible":{"description":"IssueFormFieldVisible defines issue form field visible","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueLabelsOption":{"description":"IssueLabelsOption a collection of labels","type":"object","properties":{"labels":{"description":"list of label IDs","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueMeta":{"description":"IssueMeta basic issue information","type":"object","properties":{"index":{"type":"integer","format":"int64","x-go-name":"Index"},"owner":{"type":"string","x-go-name":"Owner"},"repo":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueTemplate":{"description":"IssueTemplate represents an issue template for a repository","type":"object","properties":{"about":{"type":"string","x-go-name":"About"},"body":{"type":"array","items":{"$ref":"#/components/schemas/IssueFormField"},"x-go-name":"Fields"},"content":{"type":"string","x-go-name":"Content"},"file_name":{"type":"string","x-go-name":"FileName"},"labels":{"$ref":"#/components/schemas/IssueTemplateLabels"},"name":{"type":"string","x-go-name":"Name"},"ref":{"type":"string","x-go-name":"Ref"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueTemplateLabels":{"type":"array","items":{"type":"string"},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Label":{"description":"Label a label to an issue or a pr","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_archived":{"type":"boolean","x-go-name":"IsArchived","example":false},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"LabelTemplate":{"description":"LabelTemplate info of a Label template","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"LicenseTemplateInfo":{"description":"LicensesInfo contains information about a License","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"implementation":{"type":"string","x-go-name":"Implementation"},"key":{"type":"string","x-go-name":"Key"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"LicensesTemplateListEntry":{"description":"LicensesListEntry is used for the API","type":"object","properties":{"key":{"type":"string","x-go-name":"Key"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MarkdownOption":{"description":"MarkdownOption markdown options","type":"object","properties":{"Context":{"description":"Context to render\\n\\nin: body","type":"string"},"Mode":{"description":"Mode to render (comment, gfm, markdown)\\n\\nin: body","type":"string"},"Text":{"description":"Text markdown to render\\n\\nin: body","type":"string"},"Wiki":{"description":"Is it a wiki page ?\\n\\nin: body","type":"boolean"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MarkupOption":{"description":"MarkupOption markup options","type":"object","properties":{"Context":{"description":"Context to render\\n\\nin: body","type":"string"},"FilePath":{"description":"File path for detecting extension in file mode\\n\\nin: body","type":"string"},"Mode":{"description":"Mode to render (comment, gfm, markdown, file)\\n\\nin: body","type":"string"},"Text":{"description":"Text markup to render\\n\\nin: body","type":"string"},"Wiki":{"description":"Is it a wiki page ?\\n\\nin: body","type":"boolean"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MergePullRequestOption":{"description":"MergePullRequestForm form for merging Pull Request","type":"object","required":["Do"],"properties":{"Do":{"type":"string","enum":["merge","rebase","rebase-merge","squash","fast-forward-only","manually-merged"]},"MergeCommitID":{"type":"string"},"MergeMessageField":{"type":"string"},"MergeTitleField":{"type":"string"},"delete_branch_after_merge":{"type":"boolean","x-go-name":"DeleteBranchAfterMerge"},"force_merge":{"type":"boolean","x-go-name":"ForceMerge"},"head_commit_id":{"type":"string","x-go-name":"HeadCommitID"},"merge_when_checks_succeed":{"type":"boolean","x-go-name":"MergeWhenChecksSucceed"}},"x-go-name":"MergePullRequestForm","x-go-package":"code.gitea.io/gitea/services/forms"},"MigrateRepoOptions":{"description":"MigrateRepoOptions options for migrating repository\'s\\nthis is used to interact with api v1","type":"object","required":["clone_addr","repo_name"],"properties":{"auth_password":{"type":"string","x-go-name":"AuthPassword"},"auth_token":{"type":"string","x-go-name":"AuthToken"},"auth_username":{"type":"string","x-go-name":"AuthUsername"},"clone_addr":{"type":"string","x-go-name":"CloneAddr"},"description":{"type":"string","x-go-name":"Description"},"issues":{"type":"boolean","x-go-name":"Issues"},"labels":{"type":"boolean","x-go-name":"Labels"},"lfs":{"type":"boolean","x-go-name":"LFS"},"lfs_endpoint":{"type":"string","x-go-name":"LFSEndpoint"},"milestones":{"type":"boolean","x-go-name":"Milestones"},"mirror":{"type":"boolean","x-go-name":"Mirror"},"mirror_interval":{"type":"string","x-go-name":"MirrorInterval"},"private":{"type":"boolean","x-go-name":"Private"},"pull_requests":{"type":"boolean","x-go-name":"PullRequests"},"releases":{"type":"boolean","x-go-name":"Releases"},"repo_name":{"type":"string","x-go-name":"RepoName"},"repo_owner":{"description":"Name of User or Organisation who will own Repo after migration","type":"string","x-go-name":"RepoOwner"},"service":{"type":"string","enum":["git","github","gitea","gitlab","gogs","onedev","gitbucket","codebase"],"x-go-name":"Service"},"uid":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"RepoOwnerID"},"wiki":{"type":"boolean","x-go-name":"Wiki"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Milestone":{"description":"Milestone milestone is a collection of issues on one repository","type":"object","properties":{"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"closed_issues":{"type":"integer","format":"int64","x-go-name":"ClosedIssues"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"open_issues":{"type":"integer","format":"int64","x-go-name":"OpenIssues"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NewIssuePinsAllowed":{"description":"NewIssuePinsAllowed represents an API response that says if new Issue Pins are allowed","type":"object","properties":{"issues":{"type":"boolean","x-go-name":"Issues"},"pull_requests":{"type":"boolean","x-go-name":"PullRequests"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfo":{"description":"NodeInfo contains standardized way of exposing metadata about a server running one of the distributed social networks","type":"object","properties":{"metadata":{"type":"object","x-go-name":"Metadata"},"openRegistrations":{"type":"boolean","x-go-name":"OpenRegistrations"},"protocols":{"type":"array","items":{"type":"string"},"x-go-name":"Protocols"},"services":{"$ref":"#/components/schemas/NodeInfoServices"},"software":{"$ref":"#/components/schemas/NodeInfoSoftware"},"usage":{"$ref":"#/components/schemas/NodeInfoUsage"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoServices":{"description":"NodeInfoServices contains the third party sites this server can connect to via their application API","type":"object","properties":{"inbound":{"type":"array","items":{"type":"string"},"x-go-name":"Inbound"},"outbound":{"type":"array","items":{"type":"string"},"x-go-name":"Outbound"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoSoftware":{"description":"NodeInfoSoftware contains Metadata about server software in use","type":"object","properties":{"homepage":{"type":"string","x-go-name":"Homepage"},"name":{"type":"string","x-go-name":"Name"},"repository":{"type":"string","x-go-name":"Repository"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoUsage":{"description":"NodeInfoUsage contains usage statistics for this server","type":"object","properties":{"localComments":{"type":"integer","format":"int64","x-go-name":"LocalComments"},"localPosts":{"type":"integer","format":"int64","x-go-name":"LocalPosts"},"users":{"$ref":"#/components/schemas/NodeInfoUsageUsers"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoUsageUsers":{"description":"NodeInfoUsageUsers contains statistics about the users of this server","type":"object","properties":{"activeHalfyear":{"type":"integer","format":"int64","x-go-name":"ActiveHalfyear"},"activeMonth":{"type":"integer","format":"int64","x-go-name":"ActiveMonth"},"total":{"type":"integer","format":"int64","x-go-name":"Total"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Note":{"description":"Note contains information related to a git note","type":"object","properties":{"commit":{"$ref":"#/components/schemas/Commit"},"message":{"type":"string","x-go-name":"Message"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationCount":{"description":"NotificationCount number of unread notifications","type":"object","properties":{"new":{"type":"integer","format":"int64","x-go-name":"New"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationSubject":{"description":"NotificationSubject contains the notification subject (Issue/Pull/Commit)","type":"object","properties":{"html_url":{"type":"string","x-go-name":"HTMLURL"},"latest_comment_html_url":{"type":"string","x-go-name":"LatestCommentHTMLURL"},"latest_comment_url":{"type":"string","x-go-name":"LatestCommentURL"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"type":{"$ref":"#/components/schemas/NotifySubjectType"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationThread":{"description":"NotificationThread expose Notification on API","type":"object","properties":{"id":{"type":"integer","format":"int64","x-go-name":"ID"},"pinned":{"type":"boolean","x-go-name":"Pinned"},"repository":{"$ref":"#/components/schemas/Repository"},"subject":{"$ref":"#/components/schemas/NotificationSubject"},"unread":{"type":"boolean","x-go-name":"Unread"},"updated_at":{"type":"string","format":"date-time","x-go-name":"UpdatedAt"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotifySubjectType":{"description":"NotifySubjectType represent type of notification subject","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"OAuth2Application":{"type":"object","title":"OAuth2Application represents an OAuth2 application.","properties":{"client_id":{"type":"string","x-go-name":"ClientID"},"client_secret":{"type":"string","x-go-name":"ClientSecret"},"confidential_client":{"type":"boolean","x-go-name":"ConfidentialClient"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"redirect_uris":{"type":"array","items":{"type":"string"},"x-go-name":"RedirectURIs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Organization":{"description":"Organization represents an organization","type":"object","properties":{"avatar_url":{"type":"string","x-go-name":"AvatarURL"},"description":{"type":"string","x-go-name":"Description"},"email":{"type":"string","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"location":{"type":"string","x-go-name":"Location"},"name":{"type":"string","x-go-name":"Name"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"username":{"description":"deprecated","type":"string","x-go-name":"UserName"},"visibility":{"type":"string","x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"OrganizationPermissions":{"description":"OrganizationPermissions list different users permissions on an organization","type":"object","properties":{"can_create_repository":{"type":"boolean","x-go-name":"CanCreateRepository"},"can_read":{"type":"boolean","x-go-name":"CanRead"},"can_write":{"type":"boolean","x-go-name":"CanWrite"},"is_admin":{"type":"boolean","x-go-name":"IsAdmin"},"is_owner":{"type":"boolean","x-go-name":"IsOwner"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PRBranchInfo":{"description":"PRBranchInfo information about a branch","type":"object","properties":{"label":{"type":"string","x-go-name":"Name"},"ref":{"type":"string","x-go-name":"Ref"},"repo":{"$ref":"#/components/schemas/Repository"},"repo_id":{"type":"integer","format":"int64","x-go-name":"RepoID"},"sha":{"type":"string","x-go-name":"Sha"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Package":{"description":"Package represents a package","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"creator":{"$ref":"#/components/schemas/User"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"owner":{"$ref":"#/components/schemas/User"},"repository":{"$ref":"#/components/schemas/Repository"},"type":{"type":"string","x-go-name":"Type"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PackageFile":{"description":"PackageFile represents a package file","type":"object","properties":{"Size":{"type":"integer","format":"int64"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"md5":{"type":"string","x-go-name":"HashMD5"},"name":{"type":"string","x-go-name":"Name"},"sha1":{"type":"string","x-go-name":"HashSHA1"},"sha256":{"type":"string","x-go-name":"HashSHA256"},"sha512":{"type":"string","x-go-name":"HashSHA512"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadCommit":{"description":"PayloadCommit represents a commit","type":"object","properties":{"added":{"type":"array","items":{"type":"string"},"x-go-name":"Added"},"author":{"$ref":"#/components/schemas/PayloadUser"},"committer":{"$ref":"#/components/schemas/PayloadUser"},"id":{"description":"sha1 hash of the commit","type":"string","x-go-name":"ID"},"message":{"type":"string","x-go-name":"Message"},"modified":{"type":"array","items":{"type":"string"},"x-go-name":"Modified"},"removed":{"type":"array","items":{"type":"string"},"x-go-name":"Removed"},"timestamp":{"type":"string","format":"date-time","x-go-name":"Timestamp"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadCommitVerification":{"description":"PayloadCommitVerification represents the GPG verification of a commit","type":"object","properties":{"payload":{"type":"string","x-go-name":"Payload"},"reason":{"type":"string","x-go-name":"Reason"},"signature":{"type":"string","x-go-name":"Signature"},"signer":{"$ref":"#/components/schemas/PayloadUser"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadUser":{"description":"PayloadUser represents the author or committer of a commit","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"description":"Full name of the commit author","type":"string","x-go-name":"Name"},"username":{"type":"string","x-go-name":"UserName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Permission":{"description":"Permission represents a set of permissions","type":"object","properties":{"admin":{"type":"boolean","x-go-name":"Admin"},"pull":{"type":"boolean","x-go-name":"Pull"},"push":{"type":"boolean","x-go-name":"Push"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PublicKey":{"description":"PublicKey publickey is a user key to push code to repository","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"fingerprint":{"type":"string","x-go-name":"Fingerprint"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key":{"type":"string","x-go-name":"Key"},"key_type":{"type":"string","x-go-name":"KeyType"},"read_only":{"type":"boolean","x-go-name":"ReadOnly"},"title":{"type":"string","x-go-name":"Title"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullRequest":{"description":"PullRequest represents a pull request","type":"object","properties":{"allow_maintainer_edit":{"type":"boolean","x-go-name":"AllowMaintainerEdit"},"assignee":{"$ref":"#/components/schemas/User"},"assignees":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"Assignees"},"base":{"$ref":"#/components/schemas/PRBranchInfo"},"body":{"type":"string","x-go-name":"Body"},"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"comments":{"type":"integer","format":"int64","x-go-name":"Comments"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"diff_url":{"type":"string","x-go-name":"DiffURL"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"head":{"$ref":"#/components/schemas/PRBranchInfo"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_locked":{"type":"boolean","x-go-name":"IsLocked"},"labels":{"type":"array","items":{"$ref":"#/components/schemas/Label"},"x-go-name":"Labels"},"merge_base":{"type":"string","x-go-name":"MergeBase"},"merge_commit_sha":{"type":"string","x-go-name":"MergedCommitID"},"mergeable":{"type":"boolean","x-go-name":"Mergeable"},"merged":{"type":"boolean","x-go-name":"HasMerged"},"merged_at":{"type":"string","format":"date-time","x-go-name":"Merged"},"merged_by":{"$ref":"#/components/schemas/User"},"milestone":{"$ref":"#/components/schemas/Milestone"},"number":{"type":"integer","format":"int64","x-go-name":"Index"},"patch_url":{"type":"string","x-go-name":"PatchURL"},"pin_order":{"type":"integer","format":"int64","x-go-name":"PinOrder"},"requested_reviewers":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"RequestedReviewers"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullRequestMeta":{"description":"PullRequestMeta PR info if an issue is a PR","type":"object","properties":{"draft":{"type":"boolean","x-go-name":"IsWorkInProgress"},"merged":{"type":"boolean","x-go-name":"HasMerged"},"merged_at":{"type":"string","format":"date-time","x-go-name":"Merged"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReview":{"description":"PullReview represents a pull request review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"comments_count":{"type":"integer","format":"int64","x-go-name":"CodeCommentsCount"},"commit_id":{"type":"string","x-go-name":"CommitID"},"dismissed":{"type":"boolean","x-go-name":"Dismissed"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"official":{"type":"boolean","x-go-name":"Official"},"pull_request_url":{"type":"string","x-go-name":"HTMLPullURL"},"stale":{"type":"boolean","x-go-name":"Stale"},"state":{"$ref":"#/components/schemas/ReviewStateType"},"submitted_at":{"type":"string","format":"date-time","x-go-name":"Submitted"},"team":{"$ref":"#/components/schemas/Team"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReviewComment":{"description":"PullReviewComment represents a comment on a pull request review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"commit_id":{"type":"string","x-go-name":"CommitID"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"diff_hunk":{"type":"string","x-go-name":"DiffHunk"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"original_commit_id":{"type":"string","x-go-name":"OrigCommitID"},"original_position":{"type":"integer","format":"uint64","x-go-name":"OldLineNum"},"path":{"type":"string","x-go-name":"Path"},"position":{"type":"integer","format":"uint64","x-go-name":"LineNum"},"pull_request_review_id":{"type":"integer","format":"int64","x-go-name":"ReviewID"},"pull_request_url":{"type":"string","x-go-name":"HTMLPullURL"},"resolver":{"$ref":"#/components/schemas/User"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReviewRequestOptions":{"description":"PullReviewRequestOptions are options to add or remove pull review requests","type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string"},"x-go-name":"Reviewers"},"team_reviewers":{"type":"array","items":{"type":"string"},"x-go-name":"TeamReviewers"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PushMirror":{"description":"PushMirror represents information of a push mirror","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"CreatedUnix"},"interval":{"type":"string","x-go-name":"Interval"},"last_error":{"type":"string","x-go-name":"LastError"},"last_update":{"type":"string","format":"date-time","x-go-name":"LastUpdateUnix"},"remote_address":{"type":"string","x-go-name":"RemoteAddress"},"remote_name":{"type":"string","x-go-name":"RemoteName"},"repo_name":{"type":"string","x-go-name":"RepoName"},"sync_on_commit":{"type":"boolean","x-go-name":"SyncOnCommit"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Reaction":{"description":"Reaction contain one reaction","type":"object","properties":{"content":{"type":"string","x-go-name":"Reaction"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Reference":{"type":"object","title":"Reference represents a Git reference.","properties":{"object":{"$ref":"#/components/schemas/GitObject"},"ref":{"type":"string","x-go-name":"Ref"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Release":{"description":"Release represents a repository release","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"author":{"$ref":"#/components/schemas/User"},"body":{"type":"string","x-go-name":"Note"},"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"published_at":{"type":"string","format":"date-time","x-go-name":"PublishedAt"},"tag_name":{"type":"string","x-go-name":"TagName"},"tarball_url":{"type":"string","x-go-name":"TarURL"},"target_commitish":{"type":"string","x-go-name":"Target"},"upload_url":{"type":"string","x-go-name":"UploadURL"},"url":{"type":"string","x-go-name":"URL"},"zipball_url":{"type":"string","x-go-name":"ZipURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RenameUserOption":{"description":"RenameUserOption options when renaming a user","type":"object","required":["new_username"],"properties":{"new_username":{"description":"New username for this user. This name cannot be in use yet by any other user.","type":"string","uniqueItems":true,"x-go-name":"NewName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoCollaboratorPermission":{"description":"RepoCollaboratorPermission to get repository permission for a collaborator","type":"object","properties":{"permission":{"type":"string","x-go-name":"Permission"},"role_name":{"type":"string","x-go-name":"RoleName"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoCommit":{"type":"object","title":"RepoCommit contains information of a commit in the context of a repository.","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"committer":{"$ref":"#/components/schemas/CommitUser"},"message":{"type":"string","x-go-name":"Message"},"tree":{"$ref":"#/components/schemas/CommitMeta"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoTopicOptions":{"description":"RepoTopicOptions a collection of repo topic names","type":"object","properties":{"topics":{"description":"list of topic names","type":"array","items":{"type":"string"},"x-go-name":"Topics"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoTransfer":{"description":"RepoTransfer represents a pending repo transfer","type":"object","properties":{"doer":{"$ref":"#/components/schemas/User"},"recipient":{"$ref":"#/components/schemas/User"},"teams":{"type":"array","items":{"$ref":"#/components/schemas/Team"},"x-go-name":"Teams"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Repository":{"description":"Repository represents a repository","type":"object","properties":{"allow_fast_forward_only_merge":{"type":"boolean","x-go-name":"AllowFastForwardOnly"},"allow_merge_commits":{"type":"boolean","x-go-name":"AllowMerge"},"allow_rebase":{"type":"boolean","x-go-name":"AllowRebase"},"allow_rebase_explicit":{"type":"boolean","x-go-name":"AllowRebaseMerge"},"allow_rebase_update":{"type":"boolean","x-go-name":"AllowRebaseUpdate"},"allow_squash_merge":{"type":"boolean","x-go-name":"AllowSquash"},"archived":{"type":"boolean","x-go-name":"Archived"},"archived_at":{"type":"string","format":"date-time","x-go-name":"ArchivedAt"},"avatar_url":{"type":"string","x-go-name":"AvatarURL"},"clone_url":{"type":"string","x-go-name":"CloneURL"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"default_allow_maintainer_edit":{"type":"boolean","x-go-name":"DefaultAllowMaintainerEdit"},"default_branch":{"type":"string","x-go-name":"DefaultBranch"},"default_delete_branch_after_merge":{"type":"boolean","x-go-name":"DefaultDeleteBranchAfterMerge"},"default_merge_style":{"type":"string","x-go-name":"DefaultMergeStyle"},"description":{"type":"string","x-go-name":"Description"},"empty":{"type":"boolean","x-go-name":"Empty"},"external_tracker":{"$ref":"#/components/schemas/ExternalTracker"},"external_wiki":{"$ref":"#/components/schemas/ExternalWiki"},"fork":{"type":"boolean","x-go-name":"Fork"},"forks_count":{"type":"integer","format":"int64","x-go-name":"Forks"},"full_name":{"type":"string","x-go-name":"FullName"},"has_actions":{"type":"boolean","x-go-name":"HasActions"},"has_issues":{"type":"boolean","x-go-name":"HasIssues"},"has_packages":{"type":"boolean","x-go-name":"HasPackages"},"has_projects":{"type":"boolean","x-go-name":"HasProjects"},"has_pull_requests":{"type":"boolean","x-go-name":"HasPullRequests"},"has_releases":{"type":"boolean","x-go-name":"HasReleases"},"has_wiki":{"type":"boolean","x-go-name":"HasWiki"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"ignore_whitespace_conflicts":{"type":"boolean","x-go-name":"IgnoreWhitespaceConflicts"},"internal":{"type":"boolean","x-go-name":"Internal"},"internal_tracker":{"$ref":"#/components/schemas/InternalTracker"},"language":{"type":"string","x-go-name":"Language"},"languages_url":{"type":"string","x-go-name":"LanguagesURL"},"link":{"type":"string","x-go-name":"Link"},"mirror":{"type":"boolean","x-go-name":"Mirror"},"mirror_interval":{"type":"string","x-go-name":"MirrorInterval"},"mirror_updated":{"type":"string","format":"date-time","x-go-name":"MirrorUpdated"},"name":{"type":"string","x-go-name":"Name"},"object_format_name":{"description":"ObjectFormatName of the underlying git repository","type":"string","enum":["sha1","sha256"],"x-go-name":"ObjectFormatName"},"open_issues_count":{"type":"integer","format":"int64","x-go-name":"OpenIssues"},"open_pr_counter":{"type":"integer","format":"int64","x-go-name":"OpenPulls"},"original_url":{"type":"string","x-go-name":"OriginalURL"},"owner":{"$ref":"#/components/schemas/User"},"parent":{"$ref":"#/components/schemas/Repository"},"permissions":{"$ref":"#/components/schemas/Permission"},"private":{"type":"boolean","x-go-name":"Private"},"projects_mode":{"type":"string","x-go-name":"ProjectsMode"},"release_counter":{"type":"integer","format":"int64","x-go-name":"Releases"},"repo_transfer":{"$ref":"#/components/schemas/RepoTransfer"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"ssh_url":{"type":"string","x-go-name":"SSHURL"},"stars_count":{"type":"integer","format":"int64","x-go-name":"Stars"},"template":{"type":"boolean","x-go-name":"Template"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"watchers_count":{"type":"integer","format":"int64","x-go-name":"Watchers"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepositoryMeta":{"description":"RepositoryMeta basic repository information","type":"object","properties":{"full_name":{"type":"string","x-go-name":"FullName"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"owner":{"type":"string","x-go-name":"Owner"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ReviewStateType":{"description":"ReviewStateType review state type","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"SearchResults":{"description":"SearchResults results of a successful search","type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Repository"},"x-go-name":"Data"},"ok":{"type":"boolean","x-go-name":"OK"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Secret":{"description":"Secret represents a secret","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"name":{"description":"the secret\'s name","type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ServerVersion":{"description":"ServerVersion wraps the version of the server","type":"object","properties":{"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"StateType":{"description":"StateType issue state type","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"StopWatch":{"description":"StopWatch represent a running stopwatch","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"duration":{"type":"string","x-go-name":"Duration"},"issue_index":{"type":"integer","format":"int64","x-go-name":"IssueIndex"},"issue_title":{"type":"string","x-go-name":"IssueTitle"},"repo_name":{"type":"string","x-go-name":"RepoName"},"repo_owner_name":{"type":"string","x-go-name":"RepoOwnerName"},"seconds":{"type":"integer","format":"int64","x-go-name":"Seconds"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"SubmitPullReviewOptions":{"description":"SubmitPullReviewOptions are options to submit a pending pull review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"event":{"$ref":"#/components/schemas/ReviewStateType"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Tag":{"description":"Tag represents a repository tag","type":"object","properties":{"commit":{"$ref":"#/components/schemas/CommitMeta"},"id":{"type":"string","x-go-name":"ID"},"message":{"type":"string","x-go-name":"Message"},"name":{"type":"string","x-go-name":"Name"},"tarball_url":{"type":"string","x-go-name":"TarballURL"},"zipball_url":{"type":"string","x-go-name":"ZipballURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Team":{"description":"Team represents a team in an organization","type":"object","properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"organization":{"$ref":"#/components/schemas/Organization"},"permission":{"type":"string","enum":["none","read","write","admin","owner"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":{"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TimeStamp":{"description":"TimeStamp defines a timestamp","type":"integer","format":"int64","x-go-package":"code.gitea.io/gitea/modules/timeutil"},"TimelineComment":{"description":"TimelineComment represents a timeline comment (comment of any type) on a commit or issue","type":"object","properties":{"assignee":{"$ref":"#/components/schemas/User"},"assignee_team":{"$ref":"#/components/schemas/Team"},"body":{"type":"string","x-go-name":"Body"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"dependent_issue":{"$ref":"#/components/schemas/Issue"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue_url":{"type":"string","x-go-name":"IssueURL"},"label":{"$ref":"#/components/schemas/Label"},"milestone":{"$ref":"#/components/schemas/Milestone"},"new_ref":{"type":"string","x-go-name":"NewRef"},"new_title":{"type":"string","x-go-name":"NewTitle"},"old_milestone":{"$ref":"#/components/schemas/Milestone"},"old_project_id":{"type":"integer","format":"int64","x-go-name":"OldProjectID"},"old_ref":{"type":"string","x-go-name":"OldRef"},"old_title":{"type":"string","x-go-name":"OldTitle"},"project_id":{"type":"integer","format":"int64","x-go-name":"ProjectID"},"pull_request_url":{"type":"string","x-go-name":"PRURL"},"ref_action":{"type":"string","x-go-name":"RefAction"},"ref_comment":{"$ref":"#/components/schemas/Comment"},"ref_commit_sha":{"description":"commit SHA where issue/PR was referenced","type":"string","x-go-name":"RefCommitSHA"},"ref_issue":{"$ref":"#/components/schemas/Issue"},"removed_assignee":{"description":"whether the assignees were removed or added","type":"boolean","x-go-name":"RemovedAssignee"},"resolve_doer":{"$ref":"#/components/schemas/User"},"review_id":{"type":"integer","format":"int64","x-go-name":"ReviewID"},"tracked_time":{"$ref":"#/components/schemas/TrackedTime"},"type":{"type":"string","x-go-name":"Type"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TopicName":{"description":"TopicName a list of repo topic names","type":"object","properties":{"topics":{"type":"array","items":{"type":"string"},"x-go-name":"TopicNames"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TopicResponse":{"description":"TopicResponse for returning topics","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"repo_count":{"type":"integer","format":"int64","x-go-name":"RepoCount"},"topic_name":{"type":"string","x-go-name":"Name"},"updated":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TrackedTime":{"description":"TrackedTime worked time for an issue / pr","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue":{"$ref":"#/components/schemas/Issue"},"issue_id":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"IssueID"},"time":{"description":"Time in seconds","type":"integer","format":"int64","x-go-name":"Time"},"user_id":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"UserID"},"user_name":{"type":"string","x-go-name":"UserName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TransferRepoOption":{"description":"TransferRepoOption options when transfer a repository\'s ownership","type":"object","required":["new_owner"],"properties":{"new_owner":{"type":"string","x-go-name":"NewOwner"},"team_ids":{"description":"ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"TeamIDs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UpdateFileOptions":{"description":"UpdateFileOptions options for updating files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["sha","content"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"content":{"description":"content must be base64 encoded","type":"string","x-go-name":"ContentBase64"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"from_path":{"description":"from_path (optional) is the path of the original file which will be moved/renamed to the path in the URL","type":"string","x-go-name":"FromPath"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"sha":{"description":"sha is the SHA for the file that already exists","type":"string","x-go-name":"SHA"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UpdateRepoAvatarOption":{"description":"UpdateRepoAvatarUserOption options when updating the repo avatar","type":"object","properties":{"image":{"description":"image must be base64 encoded","type":"string","x-go-name":"Image"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UpdateUserAvatarOption":{"description":"UpdateUserAvatarUserOption options when updating the user avatar","type":"object","properties":{"image":{"description":"image must be base64 encoded","type":"string","x-go-name":"Image"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"User":{"description":"User represents a user","type":"object","properties":{"active":{"description":"Is user active","type":"boolean","x-go-name":"IsActive"},"avatar_url":{"description":"URL to the user\'s avatar","type":"string","x-go-name":"AvatarURL"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"description":{"description":"the user\'s description","type":"string","x-go-name":"Description"},"email":{"type":"string","format":"email","x-go-name":"Email"},"followers_count":{"description":"user counts","type":"integer","format":"int64","x-go-name":"Followers"},"following_count":{"type":"integer","format":"int64","x-go-name":"Following"},"full_name":{"description":"the user\'s full name","type":"string","x-go-name":"FullName"},"id":{"description":"the user\'s id","type":"integer","format":"int64","x-go-name":"ID"},"is_admin":{"description":"Is the user an administrator","type":"boolean","x-go-name":"IsAdmin"},"language":{"description":"User locale","type":"string","x-go-name":"Language"},"last_login":{"type":"string","format":"date-time","x-go-name":"LastLogin"},"location":{"description":"the user\'s location","type":"string","x-go-name":"Location"},"login":{"description":"the user\'s username","type":"string","x-go-name":"UserName"},"login_name":{"description":"the user\'s authentication sign-in name.","type":"string","default":"empty","x-go-name":"LoginName"},"prohibit_login":{"description":"Is user login prohibited","type":"boolean","x-go-name":"ProhibitLogin"},"restricted":{"description":"Is user restricted","type":"boolean","x-go-name":"Restricted"},"starred_repos_count":{"type":"integer","format":"int64","x-go-name":"StarredRepos"},"visibility":{"description":"User visibility level option: public, limited, private","type":"string","x-go-name":"Visibility"},"website":{"description":"the user\'s website","type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UserBadgeOption":{"description":"UserBadgeOption options for link between users and badges","type":"object","properties":{"badge_slugs":{"type":"array","items":{"type":"string"},"x-go-name":"BadgeSlugs","example":["badge1","badge2"]}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UserHeatmapData":{"description":"UserHeatmapData represents the data needed to create a heatmap","type":"object","properties":{"contributions":{"type":"integer","format":"int64","x-go-name":"Contributions"},"timestamp":{"$ref":"#/components/schemas/TimeStamp"}},"x-go-package":"code.gitea.io/gitea/models/activities"},"UserSettings":{"description":"UserSettings represents user settings","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"diff_view_style":{"type":"string","x-go-name":"DiffViewStyle"},"full_name":{"type":"string","x-go-name":"FullName"},"hide_activity":{"type":"boolean","x-go-name":"HideActivity"},"hide_email":{"description":"Privacy","type":"boolean","x-go-name":"HideEmail"},"language":{"type":"string","x-go-name":"Language"},"location":{"type":"string","x-go-name":"Location"},"theme":{"type":"string","x-go-name":"Theme"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UserSettingsOptions":{"description":"UserSettingsOptions represents options to change user settings","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"diff_view_style":{"type":"string","x-go-name":"DiffViewStyle"},"full_name":{"type":"string","x-go-name":"FullName"},"hide_activity":{"type":"boolean","x-go-name":"HideActivity"},"hide_email":{"description":"Privacy","type":"boolean","x-go-name":"HideEmail"},"language":{"type":"string","x-go-name":"Language"},"location":{"type":"string","x-go-name":"Location"},"theme":{"type":"string","x-go-name":"Theme"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WatchInfo":{"description":"WatchInfo represents an API watch status of one repository","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"ignored":{"type":"boolean","x-go-name":"Ignored"},"reason":{"x-go-name":"Reason"},"repository_url":{"type":"string","x-go-name":"RepositoryURL"},"subscribed":{"type":"boolean","x-go-name":"Subscribed"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiCommit":{"description":"WikiCommit page commit/revision","type":"object","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"commiter":{"$ref":"#/components/schemas/CommitUser"},"message":{"type":"string","x-go-name":"Message"},"sha":{"type":"string","x-go-name":"ID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiCommitList":{"description":"WikiCommitList commit/revision list","type":"object","properties":{"commits":{"type":"array","items":{"$ref":"#/components/schemas/WikiCommit"},"x-go-name":"WikiCommits"},"count":{"type":"integer","format":"int64","x-go-name":"Count"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiPage":{"description":"WikiPage a wiki page","type":"object","properties":{"commit_count":{"type":"integer","format":"int64","x-go-name":"CommitCount"},"content_base64":{"description":"Page content, base64 encoded","type":"string","x-go-name":"ContentBase64"},"footer":{"type":"string","x-go-name":"Footer"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit":{"$ref":"#/components/schemas/WikiCommit"},"sidebar":{"type":"string","x-go-name":"Sidebar"},"sub_url":{"type":"string","x-go-name":"SubURL"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiPageMetaData":{"description":"WikiPageMetaData wiki page meta information","type":"object","properties":{"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit":{"$ref":"#/components/schemas/WikiCommit"},"sub_url":{"type":"string","x-go-name":"SubURL"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"}}}}},"plugin-redoc-2":{"url":"redocusaurus/plugin-redoc-2.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"description":"This documentation describes the Gitea API.","title":"Gitea API.","license":{"name":"MIT","url":"http://opensource.org/licenses/MIT"},"version":"1.20.6"},"paths":{"/activitypub/user-id/{user-id}":{"get":{"tags":["activitypub"],"summary":"Returns the Person actor for a user","operationId":"activitypubPerson","parameters":[{"description":"user ID of the user","name":"user-id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityPub"}}}},"/activitypub/user-id/{user-id}/inbox":{"post":{"tags":["activitypub"],"summary":"Send to the inbox","operationId":"activitypubPersonInbox","parameters":[{"description":"user ID of the user","name":"user-id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/admin/cron":{"get":{"tags":["admin"],"summary":"List cron tasks","operationId":"adminCronList","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CronList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/cron/{task}":{"post":{"tags":["admin"],"summary":"Run cron task","operationId":"adminCronRun","parameters":[{"description":"task to run","name":"task","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/admin/emails":{"get":{"tags":["admin"],"summary":"List all emails","operationId":"adminGetAllEmails","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/EmailList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/emails/search":{"get":{"tags":["admin"],"summary":"Search all emails","operationId":"adminSearchEmails","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/EmailList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/hooks":{"get":{"tags":["admin"],"summary":"List system\'s webhooks","operationId":"adminListHooks","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["admin"],"summary":"Create a hook","operationId":"adminCreateHook","requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/admin/hooks/{id}":{"get":{"tags":["admin"],"summary":"Get a hook","operationId":"adminGetHook","parameters":[{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"}}},"delete":{"tags":["admin"],"summary":"Delete a hook","operationId":"adminDeleteHook","parameters":[{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["admin"],"summary":"Update a hook","operationId":"adminEditHook","parameters":[{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/admin/orgs":{"get":{"tags":["admin"],"summary":"List all organizations","operationId":"adminGetAllOrgs","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/unadopted":{"get":{"tags":["admin"],"summary":"List unadopted repositories","operationId":"adminUnadoptedList","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"pattern of repositories to search for","name":"pattern","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/StringSlice"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/unadopted/{owner}/{repo}":{"post":{"tags":["admin"],"summary":"Adopt unadopted files as a repository","operationId":"adminAdoptRepository","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["admin"],"summary":"Delete unadopted files","operationId":"adminDeleteUnadoptedRepository","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/users":{"get":{"tags":["admin"],"summary":"Search users according filter conditions","operationId":"adminSearchUsers","parameters":[{"description":"ID of the user\'s login source to search for","name":"source_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"user\'s login name to search for","name":"login_name","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["admin"],"summary":"Create a user","operationId":"adminCreateUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserOption"}}}},"responses":{"201":{"$ref":"#/components/responses/User"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}":{"delete":{"tags":["admin"],"summary":"Delete a user","operationId":"adminDeleteUser","parameters":[{"description":"username of user to delete","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"purge the user from the system completely","name":"purge","in":"query","schema":{"type":"boolean"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"patch":{"tags":["admin"],"summary":"Edit an existing user","operationId":"adminEditUser","parameters":[{"description":"username of user to edit","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditUserOption"}}}},"responses":{"200":{"$ref":"#/components/responses/User"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/keys":{"post":{"tags":["admin"],"summary":"Add a public key on behalf of a user","operationId":"adminCreatePublicKey","parameters":[{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/PublicKey"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/keys/{id}":{"delete":{"tags":["admin"],"summary":"Delete a user\'s public key","operationId":"adminDeleteUserPublicKey","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/admin/users/{username}/orgs":{"post":{"tags":["admin"],"summary":"Create an organization","operationId":"adminCreateOrg","parameters":[{"description":"username of the user that will own the created organization","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOrgOption"},"responses":{"201":{"$ref":"#/components/responses/Organization"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/rename":{"post":{"tags":["admin"],"summary":"Rename a user","operationId":"adminRenameUser","parameters":[{"description":"existing username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RenameUserOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/RenameUserOption"}}},"required":true},"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/repos":{"post":{"tags":["admin"],"summary":"Create a repository on behalf of a user","operationId":"adminCreateRepo","parameters":[{"description":"username of the user. This user will own the created repository","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRepoOption"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/gitignore/templates":{"get":{"tags":["miscellaneous"],"summary":"Returns a list of all gitignore templates","operationId":"listGitignoresTemplates","responses":{"200":{"$ref":"#/components/responses/GitignoreTemplateList"}}}},"/gitignore/templates/{name}":{"get":{"tags":["miscellaneous"],"summary":"Returns information about a gitignore template","operationId":"getGitignoreTemplateInfo","parameters":[{"description":"name of the template","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitignoreTemplateInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/label/templates":{"get":{"tags":["miscellaneous"],"summary":"Returns a list of all label templates","operationId":"listLabelTemplates","responses":{"200":{"$ref":"#/components/responses/LabelTemplateList"}}}},"/label/templates/{name}":{"get":{"tags":["miscellaneous"],"summary":"Returns all labels in a template","operationId":"getLabelTemplateInfo","parameters":[{"description":"name of the template","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/LabelTemplateInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/licenses":{"get":{"tags":["miscellaneous"],"summary":"Returns a list of all license templates","operationId":"listLicenseTemplates","responses":{"200":{"$ref":"#/components/responses/LicenseTemplateList"}}}},"/licenses/{name}":{"get":{"tags":["miscellaneous"],"summary":"Returns information about a license template","operationId":"getLicenseTemplateInfo","parameters":[{"description":"name of the license","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/LicenseTemplateInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/markdown":{"post":{"tags":["miscellaneous"],"summary":"Render a markdown document as HTML","operationId":"renderMarkdown","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MarkdownOption"}}}},"responses":{"200":{"$ref":"#/components/responses/MarkdownRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/markdown/raw":{"post":{"tags":["miscellaneous"],"summary":"Render raw markdown as HTML","operationId":"renderMarkdownRaw","requestBody":{"content":{"text/plain":{"schema":{"type":"string"}}},"description":"Request body to render","required":true},"responses":{"200":{"$ref":"#/components/responses/MarkdownRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/markup":{"post":{"tags":["miscellaneous"],"summary":"Render a markup document as HTML","operationId":"renderMarkup","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MarkupOption"}}}},"responses":{"200":{"$ref":"#/components/responses/MarkupRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/nodeinfo":{"get":{"tags":["miscellaneous"],"summary":"Returns the nodeinfo of the Gitea application","operationId":"getNodeInfo","responses":{"200":{"$ref":"#/components/responses/NodeInfo"}}}},"/notifications":{"get":{"tags":["notification"],"summary":"List users\'s notification threads","operationId":"notifyGetList","parameters":[{"description":"If true, show notifications marked as read. Default value is false","name":"all","in":"query","schema":{"type":"boolean"}},{"description":"Show notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread & pinned.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"filter notifications by subject type","name":"subject-type","in":"query","explode":true,"schema":{"type":"array","items":{"enum":["issue","pull","commit","repository"],"type":"string"}}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThreadList"}}},"put":{"tags":["notification"],"summary":"Mark notification threads as read, pinned or unread","operationId":"notifyReadList","parameters":[{"description":"Describes the last point that notifications were checked. Anything updated since this time will not be updated.","name":"last_read_at","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"If true, mark all notifications on this repo. Default value is false","name":"all","in":"query","schema":{"type":"string"}},{"description":"Mark notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Status to mark notifications as, Defaults to read.","name":"to-status","in":"query","schema":{"type":"string"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThreadList"}}}},"/notifications/new":{"get":{"tags":["notification"],"summary":"Check if unread notifications exist","operationId":"notifyNewAvailable","responses":{"200":{"$ref":"#/components/responses/NotificationCount"}}}},"/notifications/threads/{id}":{"get":{"tags":["notification"],"summary":"Get notification thread by ID","operationId":"notifyGetThread","parameters":[{"description":"id of notification thread","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThread"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["notification"],"summary":"Mark notification thread as read by ID","operationId":"notifyReadThread","parameters":[{"description":"id of notification thread","name":"id","in":"path","required":true,"schema":{"type":"string"}},{"description":"Status to mark notifications as","name":"to-status","in":"query","schema":{"type":"string","default":"read"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThread"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/org/{org}/repos":{"post":{"tags":["organization"],"summary":"Create a repository in an organization","operationId":"createOrgRepoDeprecated","deprecated":true,"parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs":{"get":{"tags":["organization"],"summary":"Get list of organizations","operationId":"orgGetAll","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"}}},"post":{"tags":["organization"],"summary":"Create an organization","operationId":"orgCreate","requestBody":{"$ref":"#/components/requestBodies/CreateOrgOption"},"responses":{"201":{"$ref":"#/components/responses/Organization"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}":{"get":{"tags":["organization"],"summary":"Get an organization","operationId":"orgGet","parameters":[{"description":"name of the organization to get","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Organization"}}},"delete":{"tags":["organization"],"summary":"Delete an organization","operationId":"orgDelete","parameters":[{"description":"organization that is to be deleted","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["organization"],"summary":"Edit an organization","operationId":"orgEdit","parameters":[{"description":"name of the organization to edit","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditOrgOption"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/Organization"}}}},"/orgs/{org}/activities/feeds":{"get":{"tags":["organization"],"summary":"List an organization\'s activity feeds","operationId":"orgListActivityFeeds","parameters":[{"description":"name of the org","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/hooks":{"get":{"tags":["organization"],"summary":"List an organization\'s webhooks","operationId":"orgListHooks","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["organization"],"summary":"Create a hook","operationId":"orgCreateHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/orgs/{org}/hooks/{id}":{"get":{"tags":["organization"],"summary":"Get a hook","operationId":"orgGetHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"}}},"delete":{"tags":["organization"],"summary":"Delete a hook","operationId":"orgDeleteHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["organization"],"summary":"Update a hook","operationId":"orgEditHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/orgs/{org}/labels":{"get":{"tags":["organization"],"summary":"List an organization\'s labels","operationId":"orgListLabels","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"}}},"post":{"tags":["organization"],"summary":"Create a label for an organization","operationId":"orgCreateLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateLabelOption"},"responses":{"201":{"$ref":"#/components/responses/Label"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/labels/{id}":{"get":{"tags":["organization"],"summary":"Get a single label","operationId":"orgGetLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Label"}}},"delete":{"tags":["organization"],"summary":"Delete a label","operationId":"orgDeleteLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["organization"],"summary":"Update a label","operationId":"orgEditLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditLabelOption"},"responses":{"200":{"$ref":"#/components/responses/Label"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/members":{"get":{"tags":["organization"],"summary":"List an organization\'s members","operationId":"orgListMembers","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/orgs/{org}/members/{username}":{"get":{"tags":["organization"],"summary":"Check if a user is a member of an organization","operationId":"orgIsMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"user is a member"},"303":{"description":"redirection to /orgs/{org}/public_members/{username}"},"404":{"description":"user is not a member"}}},"delete":{"tags":["organization"],"summary":"Remove a member from an organization","operationId":"orgDeleteMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"member removed"}}}},"/orgs/{org}/public_members":{"get":{"tags":["organization"],"summary":"List an organization\'s public members","operationId":"orgListPublicMembers","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/orgs/{org}/public_members/{username}":{"get":{"tags":["organization"],"summary":"Check if a user is a public member of an organization","operationId":"orgIsPublicMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"user is a public member"},"404":{"description":"user is not a public member"}}},"put":{"tags":["organization"],"summary":"Publicize a user\'s membership","operationId":"orgPublicizeMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"membership publicized"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["organization"],"summary":"Conceal a user\'s membership","operationId":"orgConcealMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/orgs/{org}/repos":{"get":{"tags":["organization"],"summary":"List an organization\'s repos","operationId":"orgListRepos","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}},"post":{"tags":["organization"],"summary":"Create a repository in an organization","operationId":"createOrgRepo","parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/teams":{"get":{"tags":["organization"],"summary":"List an organization\'s teams","operationId":"orgListTeams","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"}}},"post":{"tags":["organization"],"summary":"Create a team","operationId":"orgCreateTeam","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTeamOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Team"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/teams/search":{"get":{"tags":["organization"],"summary":"Search for teams within an organization","operationId":"teamSearch","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"keywords to search","name":"q","in":"query","schema":{"type":"string"}},{"description":"include search within team description (defaults to true)","name":"include_desc","in":"query","schema":{"type":"boolean"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"description":"SearchResults of a successful search","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Team"}},"ok":{"type":"boolean"}}}}}}}}},"/packages/{owner}":{"get":{"tags":["package"],"summary":"Gets all packages of an owner","operationId":"listPackages","parameters":[{"description":"owner of the packages","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"package type filter","name":"type","in":"query","schema":{"type":"string","enum":["alpine","cargo","chef","composer","conan","conda","container","cran","debian","generic","go","helm","maven","npm","nuget","pub","pypi","rpm","rubygems","swift","vagrant"]}},{"description":"name filter","name":"q","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PackageList"}}}},"/packages/{owner}/{type}/{name}/{version}":{"get":{"tags":["package"],"summary":"Gets a package","operationId":"getPackage","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Package"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["package"],"summary":"Delete a package","operationId":"deletePackage","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/packages/{owner}/{type}/{name}/{version}/files":{"get":{"tags":["package"],"summary":"Gets all files of a package","operationId":"listPackageFiles","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PackageFileList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/issues/search":{"get":{"tags":["issue"],"summary":"Search for issues across the repositories that the user has access to","operationId":"issueSearchIssues","parameters":[{"description":"whether issue is open or closed","name":"state","in":"query","schema":{"type":"string"}},{"description":"comma separated list of labels. Fetch only issues that have any of this labels. Non existent labels are discarded","name":"labels","in":"query","schema":{"type":"string"}},{"description":"comma separated list of milestone names. Fetch only issues that have any of this milestones. Non existent are discarded","name":"milestones","in":"query","schema":{"type":"string"}},{"description":"search string","name":"q","in":"query","schema":{"type":"string"}},{"description":"repository to prioritize in the results","name":"priority_repo_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"filter by type (issues / pulls) if set","name":"type","in":"query","schema":{"type":"string"}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"filter (issues / pulls) assigned to you, default is false","name":"assigned","in":"query","schema":{"type":"boolean"}},{"description":"filter (issues / pulls) created by you, default is false","name":"created","in":"query","schema":{"type":"boolean"}},{"description":"filter (issues / pulls) mentioning you, default is false","name":"mentioned","in":"query","schema":{"type":"boolean"}},{"description":"filter pulls requesting your review, default is false","name":"review_requested","in":"query","schema":{"type":"boolean"}},{"description":"filter pulls reviewed by you, default is false","name":"reviewed","in":"query","schema":{"type":"boolean"}},{"description":"filter by owner","name":"owner","in":"query","schema":{"type":"string"}},{"description":"filter by team (requires organization owner parameter to be provided)","name":"team","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"}}}},"/repos/migrate":{"post":{"tags":["repository"],"summary":"Migrate a remote git repository","operationId":"repoMigrate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MigrateRepoOptions"}}}},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/search":{"get":{"tags":["repository"],"summary":"Search for repositories","operationId":"repoSearch","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"Limit search to repositories with keyword as topic","name":"topic","in":"query","schema":{"type":"boolean"}},{"description":"include search of keyword within repository description","name":"includeDesc","in":"query","schema":{"type":"boolean"}},{"description":"search only for repos that the user with the given id owns or contributes to","name":"uid","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"repo owner to prioritize in the results","name":"priority_owner_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"search only for repos that belong to the given team id","name":"team_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"search only for repos that the user with the given id has starred","name":"starredBy","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"include private repositories this user has access to (defaults to true)","name":"private","in":"query","schema":{"type":"boolean"}},{"description":"show only pubic, private or all repositories (defaults to all)","name":"is_private","in":"query","schema":{"type":"boolean"}},{"description":"include template repositories this user has access to (defaults to true)","name":"template","in":"query","schema":{"type":"boolean"}},{"description":"show only archived, non-archived or all repositories (defaults to all)","name":"archived","in":"query","schema":{"type":"boolean"}},{"description":"type of repository to search for. Supported values are \\"fork\\", \\"source\\", \\"mirror\\" and \\"collaborative\\"","name":"mode","in":"query","schema":{"type":"string"}},{"description":"if `uid` is given, search only for repos that the user owns","name":"exclusive","in":"query","schema":{"type":"boolean"}},{"description":"sort repos by attribute. Supported values are \\"alpha\\", \\"created\\", \\"updated\\", \\"size\\", and \\"id\\". Default is \\"alpha\\"","name":"sort","in":"query","schema":{"type":"string"}},{"description":"sort order, either \\"asc\\" (ascending) or \\"desc\\" (descending). Default is \\"asc\\", ignored if \\"sort\\" is not specified.","name":"order","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/SearchResults"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}":{"get":{"tags":["repository"],"summary":"Get a repository","operationId":"repoGet","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"}}},"delete":{"tags":["repository"],"summary":"Delete a repository","operationId":"repoDelete","parameters":[{"description":"owner of the repo to delete","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to delete","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}},"patch":{"tags":["repository"],"summary":"Edit a repository\'s properties. Only fields that are set will be changed.","operationId":"repoEdit","parameters":[{"description":"owner of the repo to edit","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to edit","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditRepoOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditRepoOption"}}},"description":"Properties of a repo that you can edit"},"responses":{"200":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/activities/feeds":{"get":{"tags":["repository"],"summary":"List a repository\'s activity feeds","operationId":"repoListActivityFeeds","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/archive/{archive}":{"get":{"tags":["repository"],"summary":"Get an archive of a repository","operationId":"repoGetArchive","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the git reference for download with attached archive format (e.g. master.zip)","name":"archive","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"success"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/assignees":{"get":{"tags":["repository"],"summary":"Return all users that have write access and can be assigned to issues","operationId":"repoGetAssignees","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/repos/{owner}/{repo}/branch_protections":{"get":{"tags":["repository"],"summary":"List branch protections for a repository","operationId":"repoListBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/BranchProtectionList"}}},"post":{"tags":["repository"],"summary":"Create a branch protections for a repository","operationId":"repoCreateBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateBranchProtectionOption"}}}},"responses":{"201":{"$ref":"#/components/responses/BranchProtection"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/branch_protections/{name}":{"get":{"tags":["repository"],"summary":"Get a specific branch protection for the repository","operationId":"repoGetBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/BranchProtection"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a specific branch protection for the repository","operationId":"repoDeleteBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a branch protections for a repository. Only fields that are set will be changed","operationId":"repoEditBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditBranchProtectionOption"}}}},"responses":{"200":{"$ref":"#/components/responses/BranchProtection"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/branches":{"get":{"tags":["repository"],"summary":"List a repository\'s branches","operationId":"repoListBranches","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/BranchList"}}},"post":{"tags":["repository"],"summary":"Create a branch","operationId":"repoCreateBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateBranchRepoOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Branch"},"403":{"description":"The branch is archived or a mirror."},"404":{"description":"The old branch does not exist."},"409":{"description":"The branch with the same name already exists."}}}},"/repos/{owner}/{repo}/branches/{branch}":{"get":{"tags":["repository"],"summary":"Retrieve a specific branch from a repository, including its effective branch protection","operationId":"repoGetBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"branch to get","name":"branch","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Branch"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a specific branch from a repository","operationId":"repoDeleteBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"branch to delete","name":"branch","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/collaborators":{"get":{"tags":["repository"],"summary":"List a repository\'s collaborators","operationId":"repoListCollaborators","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/repos/{owner}/{repo}/collaborators/{collaborator}":{"get":{"tags":["repository"],"summary":"Check if a user is a collaborator of a repository","operationId":"repoCheckCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"put":{"tags":["repository"],"summary":"Add a collaborator to a repository","operationId":"repoAddCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator to add","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddCollaboratorOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/AddCollaboratorOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a collaborator from a repository","operationId":"repoDeleteCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator to delete","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/collaborators/{collaborator}/permission":{"get":{"tags":["repository"],"summary":"Get repository permissions for a user","operationId":"repoGetRepoPermissions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoCollaboratorPermission"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/commits":{"get":{"tags":["repository"],"summary":"Get a list of all commits from a repository","operationId":"repoGetAllCommits","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"SHA or branch to start listing commits from (usually \'master\')","name":"sha","in":"query","schema":{"type":"string"}},{"description":"filepath of a file/dir","name":"path","in":"query","schema":{"type":"string"}},{"description":"include diff stats for every commit (disable for speedup, default \'true\')","name":"stat","in":"query","schema":{"type":"boolean"}},{"description":"include verification for every commit (disable for speedup, default \'true\')","name":"verification","in":"query","schema":{"type":"boolean"}},{"description":"include a list of affected files for every commit (disable for speedup, default \'true\')","name":"files","in":"query","schema":{"type":"boolean"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results (ignored if used with \'path\')","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"commits that match the given specifier will not be listed.","name":"not","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/CommitList"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/EmptyRepository"}}}},"/repos/{owner}/{repo}/commits/{ref}/status":{"get":{"tags":["repository"],"summary":"Get a commit\'s combined status, by branch/tag/commit reference","operationId":"repoGetCombinedStatusByRef","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of branch/tag/commit","name":"ref","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CombinedStatus"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/commits/{ref}/statuses":{"get":{"tags":["repository"],"summary":"Get a commit\'s statuses, by branch/tag/commit reference","operationId":"repoListStatusesByRef","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of branch/tag/commit","name":"ref","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","leastindex","highestindex"]}},{"description":"type of state","name":"state","in":"query","schema":{"type":"string","enum":["pending","success","error","failure","warning"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitStatusList"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/contents":{"get":{"tags":["repository"],"summary":"Gets the metadata of all the entries of the root dir","operationId":"repoGetContentsList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ContentsListResponse"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Modify multiple files in a repository","operationId":"repoChangeFiles","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangeFilesOptions"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/FilesResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/contents/{filepath}":{"get":{"tags":["repository"],"summary":"Gets the metadata and contents (if a file) of an entry in a repository, or a list of entries if a dir","operationId":"repoGetContents","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the dir, file, symlink or submodule in the repo","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ContentsResponse"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["repository"],"summary":"Update a file in a repository","operationId":"repoUpdateFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to update","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/UpdateFileOptions"},"responses":{"200":{"$ref":"#/components/responses/FileResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}},"post":{"tags":["repository"],"summary":"Create a file in a repository","operationId":"repoCreateFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to create","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFileOptions"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/FileResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["repository"],"summary":"Delete a file in a repository","operationId":"repoDeleteFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to delete","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteFileOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/FileDeleteResponse"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/diffpatch":{"post":{"tags":["repository"],"summary":"Apply diff patch to repository","operationId":"repoApplyDiffPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/UpdateFileOptions"},"responses":{"200":{"$ref":"#/components/responses/FileResponse"}}}},"/repos/{owner}/{repo}/editorconfig/{filepath}":{"get":{"tags":["repository"],"summary":"Get the EditorConfig definitions of a file in a repository","operationId":"repoGetEditorConfig","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"success"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/forks":{"get":{"tags":["repository"],"summary":"List a repository\'s forks","operationId":"listForks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}},"post":{"tags":["repository"],"summary":"Fork a repository","operationId":"createFork","parameters":[{"description":"owner of the repo to fork","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to fork","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateForkOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateForkOption"}}}},"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/blobs/{sha}":{"get":{"tags":["repository"],"summary":"Gets the blob of a repository.","operationId":"GetBlob","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitBlobResponse"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/git/commits/{sha}":{"get":{"tags":["repository"],"summary":"Get a single commit from a repository","operationId":"repoGetSingleCommit","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"a git ref or commit sha","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"include diff stats for every commit (disable for speedup, default \'true\')","name":"stat","in":"query","schema":{"type":"boolean"}},{"description":"include verification for every commit (disable for speedup, default \'true\')","name":"verification","in":"query","schema":{"type":"boolean"}},{"description":"include a list of affected files for every commit (disable for speedup, default \'true\')","name":"files","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/Commit"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/commits/{sha}.{diffType}":{"get":{"tags":["repository"],"summary":"Get a commit\'s diff or patch","operationId":"repoDownloadCommitDiffOrPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"SHA of the commit to get","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"whether the output is diff or patch","name":"diffType","in":"path","required":true,"schema":{"type":"string","enum":["diff","patch"]}}],"responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/notes/{sha}":{"get":{"tags":["repository"],"summary":"Get a note corresponding to a single commit from a repository","operationId":"repoGetNote","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"a git ref or commit sha","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Note"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/refs":{"get":{"tags":["repository"],"summary":"Get specified ref or filtered repository\'s refs","operationId":"repoListAllGitRefs","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ReferenceList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/refs/{ref}":{"get":{"tags":["repository"],"summary":"Get specified ref or filtered repository\'s refs","operationId":"repoListGitRefs","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"part or full name of the ref","name":"ref","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ReferenceList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/tags/{sha}":{"get":{"tags":["repository"],"summary":"Gets the tag object of an annotated tag (not lightweight tags)","operationId":"GetAnnotatedTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the tag. The Git tags API only supports annotated tag objects, not lightweight tags.","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/AnnotatedTag"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/git/trees/{sha}":{"get":{"tags":["repository"],"summary":"Gets the tree of a repository.","operationId":"GetTree","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"show all directories and files","name":"recursive","in":"query","schema":{"type":"boolean"}},{"description":"page number; the \'truncated\' field in the response will be true if there are still more items after this page, false if the last page","name":"page","in":"query","schema":{"type":"integer"}},{"description":"number of items per page","name":"per_page","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GitTreeResponse"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/hooks":{"get":{"tags":["repository"],"summary":"List the hooks in a repository","operationId":"repoListHooks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["repository"],"summary":"Create a hook","operationId":"repoCreateHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateHookOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/repos/{owner}/{repo}/hooks/git":{"get":{"tags":["repository"],"summary":"List the Git hooks in a repository","operationId":"repoListGitHooks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitHookList"}}}},"/repos/{owner}/{repo}/hooks/git/{id}":{"get":{"tags":["repository"],"summary":"Get a Git hook","operationId":"repoGetGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitHook"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a Git hook in a repository","operationId":"repoDeleteGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a Git hook in a repository","operationId":"repoEditGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditGitHookOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditGitHookOption"}}}},"responses":{"200":{"$ref":"#/components/responses/GitHook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks/{id}":{"get":{"tags":["repository"],"summary":"Get a hook","operationId":"repoGetHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a hook in a repository","operationId":"repoDeleteHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a hook in a repository","operationId":"repoEditHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the hook","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditHookOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditHookOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/repos/{owner}/{repo}/hooks/{id}/tests":{"post":{"tags":["repository"],"summary":"Test a push webhook","operationId":"repoTestHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to test","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"The name of the commit/branch/tag, indicates which commit will be loaded to the webhook payload.","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/repos/{owner}/{repo}/issue_config":{"get":{"tags":["repository"],"summary":"Returns the issue config for a repo","operationId":"repoGetIssueConfig","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoIssueConfig"}}}},"/repos/{owner}/{repo}/issue_config/validate":{"get":{"tags":["repository"],"summary":"Returns the validation information for a issue config","operationId":"repoValidateIssueConfig","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoIssueConfigValidation"}}}},"/repos/{owner}/{repo}/issue_templates":{"get":{"tags":["repository"],"summary":"Get available issue templates for a repository","operationId":"repoGetIssueTemplates","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/IssueTemplates"}}}},"/repos/{owner}/{repo}/issues":{"get":{"tags":["issue"],"summary":"List a repository\'s issues","operationId":"issueListIssues","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"whether issue is open or closed","name":"state","in":"query","schema":{"type":"string","enum":["closed","open","all"]}},{"description":"comma separated list of labels. Fetch only issues that have any of this labels. Non existent labels are discarded","name":"labels","in":"query","schema":{"type":"string"}},{"description":"search string","name":"q","in":"query","schema":{"type":"string"}},{"description":"filter by type (issues / pulls) if set","name":"type","in":"query","schema":{"type":"string","enum":["issues","pulls"]}},{"description":"comma separated list of milestone names or ids. It uses names and fall back to ids. Fetch only issues that have any of this milestones. Non existent milestones are discarded","name":"milestones","in":"query","schema":{"type":"string"}},{"description":"Only show items updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show items updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show items which were created by the the given user","name":"created_by","in":"query","schema":{"type":"string"}},{"description":"Only show items for which the given user is assigned","name":"assigned_by","in":"query","schema":{"type":"string"}},{"description":"Only show items in which the given user was mentioned","name":"mentioned_by","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"}}},"post":{"tags":["issue"],"summary":"Create an issue. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueCreateIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateIssueOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Issue"},"403":{"$ref":"#/components/responses/forbidden"},"412":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/issues/comments":{"get":{"tags":["issue"],"summary":"List all comments in a repository","operationId":"issueGetRepoComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"if provided, only comments updated since the provided time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommentList"}}}},"/repos/{owner}/{repo}/issues/comments/{id}":{"get":{"tags":["issue"],"summary":"Get a comment","operationId":"issueGetComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete a comment","operationId":"issueDeleteComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of comment to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit a comment","operationId":"issueEditComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditIssueCommentOption"},"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/assets":{"get":{"tags":["issue"],"summary":"List comment\'s attachments","operationId":"issueListIssueCommentAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"},"404":{"$ref":"#/components/responses/error"}}},"post":{"tags":["issue"],"summary":"Create a comment attachment","operationId":"issueCreateIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/assets/{attachment_id}":{"get":{"tags":["issue"],"summary":"Get a comment attachment","operationId":"issueGetIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["issue"],"summary":"Delete a comment attachment","operationId":"issueDeleteIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/error"}}},"patch":{"tags":["issue"],"summary":"Edit a comment attachment","operationId":"issueEditIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/reactions":{"get":{"tags":["issue"],"summary":"Get a list of reactions from a comment of an issue","operationId":"issueGetCommentReactions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/ReactionList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["issue"],"summary":"Add a reaction to a comment of an issue","operationId":"issuePostCommentReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/Reaction"},"201":{"$ref":"#/components/responses/Reaction"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["issue"],"summary":"Remove a reaction from a comment of an issue","operationId":"issueDeleteCommentReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/issues/pinned":{"get":{"tags":["repository"],"summary":"List a repo\'s pinned issues","operationId":"repoListPinnedIssues","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"}}}},"/repos/{owner}/{repo}/issues/{index}":{"get":{"tags":["issue"],"summary":"Get an issue","operationId":"issueGetIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Issue"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete an issue","operationId":"issueDelete","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue to delete","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit an issue. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueEditIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to edit","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditIssueOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Issue"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"412":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/{index}/assets":{"get":{"tags":["issue"],"summary":"List issue\'s attachments","operationId":"issueListIssueAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"},"404":{"$ref":"#/components/responses/error"}}},"post":{"tags":["issue"],"summary":"Create an issue attachment","operationId":"issueCreateIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/{index}/assets/{attachment_id}":{"get":{"tags":["issue"],"summary":"Get an issue attachment","operationId":"issueGetIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["issue"],"summary":"Delete an issue attachment","operationId":"issueDeleteIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/error"}}},"patch":{"tags":["issue"],"summary":"Edit an issue attachment","operationId":"issueEditIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/{index}/blocks":{"get":{"tags":["issue"],"summary":"List issues that are blocked by this issue","operationId":"issueListBlocks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"}}},"post":{"tags":["issue"],"summary":"Block the issue given in the body by the issue in path","operationId":"issueCreateIssueBlocking","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"201":{"$ref":"#/components/responses/Issue"},"404":{"description":"the issue does not exist"}}},"delete":{"tags":["issue"],"summary":"Unblock the issue given in the body by the issue in path","operationId":"issueRemoveIssueBlocking","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"200":{"$ref":"#/components/responses/Issue"}}}},"/repos/{owner}/{repo}/issues/{index}/comments":{"get":{"tags":["issue"],"summary":"List all comments on an issue","operationId":"issueGetComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"if provided, only comments updated since the specified time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/CommentList"}}},"post":{"tags":["issue"],"summary":"Add a comment to an issue","operationId":"issueCreateComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateIssueCommentOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Comment"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/issues/{index}/comments/{id}":{"delete":{"tags":["issue"],"summary":"Delete a comment","operationId":"issueDeleteCommentDeprecated","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"this parameter is ignored","name":"index","in":"path","required":true,"schema":{"type":"integer"}},{"description":"id of comment to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit a comment","operationId":"issueEditCommentDeprecated","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"this parameter is ignored","name":"index","in":"path","required":true,"schema":{"type":"integer"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditIssueCommentOption"},"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/deadline":{"post":{"tags":["issue"],"summary":"Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueEditIssueDeadline","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to create or update a deadline on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditDeadlineOption"}}}},"responses":{"201":{"$ref":"#/components/responses/IssueDeadline"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/dependencies":{"get":{"tags":["issue"],"summary":"List an issue\'s dependencies, i.e all issues that block this issue.","operationId":"issueListIssueDependencies","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"}}},"post":{"tags":["issue"],"summary":"Make the issue in the url depend on the issue in the form.","operationId":"issueCreateIssueDependencies","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"201":{"$ref":"#/components/responses/Issue"},"404":{"description":"the issue does not exist"}}},"delete":{"tags":["issue"],"summary":"Remove an issue dependency","operationId":"issueRemoveIssueDependencies","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"200":{"$ref":"#/components/responses/Issue"}}}},"/repos/{owner}/{repo}/issues/{index}/labels":{"get":{"tags":["issue"],"summary":"Get an issue\'s labels","operationId":"issueGetLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["issue"],"summary":"Replace an issue\'s labels","operationId":"issueReplaceLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueLabelsOption"},"responses":{"200":{"$ref":"#/components/responses/LabelList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["issue"],"summary":"Add a label to an issue","operationId":"issueAddLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueLabelsOption"},"responses":{"200":{"$ref":"#/components/responses/LabelList"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["issue"],"summary":"Remove all labels from an issue","operationId":"issueClearLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/issues/{index}/labels/{id}":{"delete":{"tags":["issue"],"summary":"Remove a label from an issue","operationId":"issueRemoveLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the label to remove","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/issues/{index}/pin":{"post":{"tags":["issue"],"summary":"Pin an Issue","operationId":"pinIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue to pin","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Unpin an Issue","operationId":"unpinIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue to unpin","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/pin/{position}":{"patch":{"tags":["issue"],"summary":"Moves the Pin to the given Position","operationId":"moveIssuePin","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"the new position","name":"position","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/reactions":{"get":{"tags":["issue"],"summary":"Get a list reactions of an issue","operationId":"issueGetIssueReactions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ReactionList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["issue"],"summary":"Add a reaction to an issue","operationId":"issuePostIssueReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/Reaction"},"201":{"$ref":"#/components/responses/Reaction"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["issue"],"summary":"Remove a reaction from an issue","operationId":"issueDeleteIssueReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/delete":{"delete":{"tags":["issue"],"summary":"Delete an issue\'s existing stopwatch.","operationId":"issueDeleteStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to stop the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot cancel a non existent stopwatch"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/start":{"post":{"tags":["issue"],"summary":"Start stopwatch on an issue.","operationId":"issueStartStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to create the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"201":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot start a stopwatch again if it already exists"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/stop":{"post":{"tags":["issue"],"summary":"Stop an issue\'s existing stopwatch.","operationId":"issueStopStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to stop the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"201":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot stop a non existent stopwatch"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions":{"get":{"tags":["issue"],"summary":"Get users who subscribed on an issue.","operationId":"issueSubscriptions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions/check":{"get":{"tags":["issue"],"summary":"Check if user is subscribed to an issue","operationId":"issueCheckSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions/{user}":{"put":{"tags":["issue"],"summary":"Subscribe user to issue","operationId":"issueAddSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"user to subscribe","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Already subscribed"},"201":{"description":"Successfully Subscribed"},"304":{"description":"User can only subscribe itself if he is no admin"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Unsubscribe user from issue","operationId":"issueDeleteSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"user witch unsubscribe","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Already unsubscribed"},"201":{"description":"Successfully Unsubscribed"},"304":{"description":"User can only subscribe itself if he is no admin"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/timeline":{"get":{"tags":["issue"],"summary":"List all comments and events on an issue","operationId":"issueGetCommentsAndTimeline","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"if provided, only comments updated since the specified time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/TimelineList"}}}},"/repos/{owner}/{repo}/issues/{index}/times":{"get":{"tags":["issue"],"summary":"List an issue\'s tracked times","operationId":"issueTrackedTimes","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"optional filter by user (available for issue managers)","name":"user","in":"query","schema":{"type":"string"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add tracked time to a issue","operationId":"issueAddTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddTimeOption"}}}},"responses":{"200":{"$ref":"#/components/responses/TrackedTime"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["issue"],"summary":"Reset a tracked time of an issue","operationId":"issueResetTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to add tracked time to","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/issues/{index}/times/{id}":{"delete":{"tags":["issue"],"summary":"Delete specific tracked time","operationId":"issueDeleteTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of time to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/keys":{"get":{"tags":["repository"],"summary":"List a repository\'s keys","operationId":"repoListKeys","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the key_id to search for","name":"key_id","in":"query","schema":{"type":"integer"}},{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/DeployKeyList"}}},"post":{"tags":["repository"],"summary":"Add a key to a repository","operationId":"repoCreateKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/DeployKey"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/keys/{id}":{"get":{"tags":["repository"],"summary":"Get a repository\'s key by id","operationId":"repoGetKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/DeployKey"}}},"delete":{"tags":["repository"],"summary":"Delete a key from a repository","operationId":"repoDeleteKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/labels":{"get":{"tags":["issue"],"summary":"Get all of a repository\'s labels","operationId":"issueListLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"}}},"post":{"tags":["issue"],"summary":"Create a label","operationId":"issueCreateLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateLabelOption"},"responses":{"201":{"$ref":"#/components/responses/Label"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/labels/{id}":{"get":{"tags":["issue"],"summary":"Get a single label","operationId":"issueGetLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Label"}}},"delete":{"tags":["issue"],"summary":"Delete a label","operationId":"issueDeleteLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["issue"],"summary":"Update a label","operationId":"issueEditLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditLabelOption"},"responses":{"200":{"$ref":"#/components/responses/Label"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/languages":{"get":{"tags":["repository"],"summary":"Get languages and number of bytes of code written","operationId":"repoGetLanguages","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/LanguageStatistics"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/media/{filepath}":{"get":{"tags":["repository"],"summary":"Get a file or it\'s LFS object from a repository","operationId":"repoGetRawFileOrLFS","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of the file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns raw file content."},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/milestones":{"get":{"tags":["issue"],"summary":"Get all of a repository\'s opened milestones","operationId":"issueGetMilestonesList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"Milestone state, Recognized values are open, closed and all. Defaults to \\"open\\"","name":"state","in":"query","schema":{"type":"string"}},{"description":"filter by milestone name","name":"name","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/MilestoneList"}}},"post":{"tags":["issue"],"summary":"Create a milestone","operationId":"issueCreateMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMilestoneOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Milestone"}}}},"/repos/{owner}/{repo}/milestones/{id}":{"get":{"tags":["issue"],"summary":"Get a milestone","operationId":"issueGetMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to get, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Milestone"}}},"delete":{"tags":["issue"],"summary":"Delete a milestone","operationId":"issueDeleteMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to delete, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["issue"],"summary":"Update a milestone","operationId":"issueEditMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to edit, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditMilestoneOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Milestone"}}}},"/repos/{owner}/{repo}/mirror-sync":{"post":{"tags":["repository"],"summary":"Sync a mirrored repository","operationId":"repoMirrorSync","parameters":[{"description":"owner of the repo to sync","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to sync","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/new_pin_allowed":{"get":{"tags":["repository"],"summary":"Returns if new Issue Pins are allowed","operationId":"repoNewPinAllowed","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoNewIssuePinsAllowed"}}}},"/repos/{owner}/{repo}/notifications":{"get":{"tags":["notification"],"summary":"List users\'s notification threads on a specific repo","operationId":"notifyGetRepoList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"If true, show notifications marked as read. Default value is false","name":"all","in":"query","schema":{"type":"boolean"}},{"description":"Show notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread & pinned","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"filter notifications by subject type","name":"subject-type","in":"query","explode":true,"schema":{"type":"array","items":{"enum":["issue","pull","commit","repository"],"type":"string"}}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThreadList"}}},"put":{"tags":["notification"],"summary":"Mark notification threads as read, pinned or unread on a specific repo","operationId":"notifyReadRepoList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"If true, mark all notifications on this repo. Default value is false","name":"all","in":"query","schema":{"type":"string"}},{"description":"Mark notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Status to mark notifications as. Defaults to read.","name":"to-status","in":"query","schema":{"type":"string"}},{"description":"Describes the last point that notifications were checked. Anything updated since this time will not be updated.","name":"last_read_at","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThreadList"}}}},"/repos/{owner}/{repo}/pulls":{"get":{"tags":["repository"],"summary":"List a repo\'s pull requests","operationId":"repoListPullRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"State of pull request: open or closed (optional)","name":"state","in":"query","schema":{"type":"string","enum":["closed","open","all"]}},{"description":"Type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","mostcomment","leastcomment","priority"]}},{"description":"ID of the milestone","name":"milestone","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"Label IDs","name":"labels","in":"query","explode":true,"schema":{"type":"array","items":{"type":"integer","format":"int64"}}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequestList"}}},"post":{"tags":["repository"],"summary":"Create a pull request","operationId":"repoCreatePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePullRequestOption"}}}},"responses":{"201":{"$ref":"#/components/responses/PullRequest"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/pinned":{"get":{"tags":["repository"],"summary":"List a repo\'s pinned pull requests","operationId":"repoListPinnedPullRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequestList"}}}},"/repos/{owner}/{repo}/pulls/{index}":{"get":{"tags":["repository"],"summary":"Get a pull request","operationId":"repoGetPullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequest"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Update a pull request. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"repoEditPullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to edit","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditPullRequestOption"}}}},"responses":{"201":{"$ref":"#/components/responses/PullRequest"},"403":{"$ref":"#/components/responses/forbidden"},"409":{"$ref":"#/components/responses/error"},"412":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}.{diffType}":{"get":{"tags":["repository"],"summary":"Get a pull request diff or patch","operationId":"repoDownloadPullDiffOrPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"whether the output is diff or patch","name":"diffType","in":"path","required":true,"schema":{"type":"string","enum":["diff","patch"]}},{"description":"whether to include binary file changes. if true, the diff is applicable with `git apply`","name":"binary","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/commits":{"get":{"tags":["repository"],"summary":"Get commits for a pull request","operationId":"repoGetPullRequestCommits","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/files":{"get":{"tags":["repository"],"summary":"Get changed files for a pull request","operationId":"repoGetPullRequestFiles","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"skip to given file","name":"skip-to","in":"query","schema":{"type":"string"}},{"description":"whitespace behavior","name":"whitespace","in":"query","schema":{"type":"string","enum":["ignore-all","ignore-change","ignore-eol","show-all"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ChangedFileList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/merge":{"get":{"tags":["repository"],"summary":"Check if a pull request has been merged","operationId":"repoPullRequestIsMerged","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"pull request has been merged"},"404":{"description":"pull request has not been merged"}}},"post":{"tags":["repository"],"summary":"Merge a pull request","operationId":"repoMergePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to merge","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MergePullRequestOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/MergePullRequestOption"}}}},"responses":{"200":{"$ref":"#/components/responses/empty"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["repository"],"summary":"Cancel the scheduled auto merge for the given pull request","operationId":"repoCancelScheduledAutoMerge","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to merge","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/requested_reviewers":{"post":{"tags":["repository"],"summary":"create review requests for a pull request","operationId":"repoCreatePullReviewRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/PullReviewRequestOptions"},"responses":{"201":{"$ref":"#/components/responses/PullReviewList"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"cancel review requests for a pull request","operationId":"repoDeletePullReviewRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/PullReviewRequestOptions"},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews":{"get":{"tags":["repository"],"summary":"List all reviews for a pull request","operationId":"repoListPullReviews","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PullReviewList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a review to an pull request","operationId":"repoCreatePullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreatePullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}":{"get":{"tags":["repository"],"summary":"Get a specific review for a pull request","operationId":"repoGetPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Submit a pending review to an pull request","operationId":"repoSubmitPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubmitPullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/SubmitPullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a specific review from a pull request","operationId":"repoDeletePullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/comments":{"get":{"tags":["repository"],"summary":"Get a specific review for a pull request","operationId":"repoGetPullReviewComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReviewCommentList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/dismissals":{"post":{"tags":["repository"],"summary":"Dismiss a review for a pull request","operationId":"repoDismissPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DismissPullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/DismissPullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/undismissals":{"post":{"tags":["repository"],"summary":"Cancel to dismiss a review for a pull request","operationId":"repoUnDismissPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReview"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/update":{"post":{"tags":["repository"],"summary":"Merge PR\'s baseBranch into headBranch","operationId":"repoUpdatePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"how to update pull request","name":"style","in":"query","schema":{"type":"string","enum":["merge","rebase"]}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/push_mirrors":{"get":{"tags":["repository"],"summary":"Get all push mirrors of the repository","operationId":"repoListPushMirrors","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PushMirrorList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["repository"],"summary":"add a push mirror to the repository","operationId":"repoAddPushMirror","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePushMirrorOption"}}}},"responses":{"200":{"$ref":"#/components/responses/PushMirror"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/push_mirrors-sync":{"post":{"tags":["repository"],"summary":"Sync all push mirrored repository","operationId":"repoPushMirrorSync","parameters":[{"description":"owner of the repo to sync","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to sync","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/push_mirrors/{name}":{"get":{"tags":["repository"],"summary":"Get push mirror of the repository by remoteName","operationId":"repoGetPushMirrorByRemoteName","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"remote name of push mirror","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PushMirror"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["repository"],"summary":"deletes a push mirror from a repository by remoteName","operationId":"repoDeletePushMirror","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"remote name of the pushMirror","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/raw/{filepath}":{"get":{"tags":["repository"],"summary":"Get a file from a repository","operationId":"repoGetRawFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of the file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns raw file content."},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases":{"get":{"tags":["repository"],"summary":"List a repo\'s releases","operationId":"repoListReleases","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filter (exclude / include) drafts, if you dont have repo write access none will show","name":"draft","in":"query","schema":{"type":"boolean"}},{"description":"filter (exclude / include) pre-releases","name":"pre-release","in":"query","schema":{"type":"boolean"}},{"description":"page size of results, deprecated - use limit","name":"per_page","in":"query","schema":{"type":"integer"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ReleaseList"}}},"post":{"tags":["repository"],"summary":"Create a release","operationId":"repoCreateRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateReleaseOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/releases/latest":{"get":{"tags":["repository"],"summary":"Gets the most recent non-prerelease, non-draft release of a repository, sorted by created_at","operationId":"repoGetLatestRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases/tags/{tag}":{"get":{"tags":["repository"],"summary":"Get a release by tag name","operationId":"repoGetReleaseByTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"tag name of the release to get","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a release by tag name","operationId":"repoDeleteReleaseByTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"tag name of the release to delete","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"}}}},"/repos/{owner}/{repo}/releases/{id}":{"get":{"tags":["repository"],"summary":"Get a release","operationId":"repoGetRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a release","operationId":"repoDeleteRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["repository"],"summary":"Update a release","operationId":"repoEditRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditReleaseOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases/{id}/assets":{"get":{"tags":["repository"],"summary":"List release\'s attachments","operationId":"repoListReleaseAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"}}},"post":{"tags":["repository"],"summary":"Create a release attachment","operationId":"repoCreateReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/releases/{id}/assets/{attachment_id}":{"get":{"tags":["repository"],"summary":"Get a release attachment","operationId":"repoGetReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"}}},"delete":{"tags":["repository"],"summary":"Delete a release attachment","operationId":"repoDeleteReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["repository"],"summary":"Edit a release attachment","operationId":"repoEditReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"}}}},"/repos/{owner}/{repo}/reviewers":{"get":{"tags":["repository"],"summary":"Return all users that can be requested to review in this repo","operationId":"repoGetReviewers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/repos/{owner}/{repo}/signing-key.gpg":{"get":{"tags":["repository"],"summary":"Get signing-key.gpg for given repository","operationId":"repoSigningKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"GPG armored public key","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/repos/{owner}/{repo}/stargazers":{"get":{"tags":["repository"],"summary":"List a repo\'s stargazers","operationId":"repoListStargazers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/repos/{owner}/{repo}/statuses/{sha}":{"get":{"tags":["repository"],"summary":"Get a commit\'s statuses","operationId":"repoListStatuses","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","leastindex","highestindex"]}},{"description":"type of state","name":"state","in":"query","schema":{"type":"string","enum":["pending","success","error","failure","warning"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitStatusList"},"400":{"$ref":"#/components/responses/error"}}},"post":{"tags":["repository"],"summary":"Create a commit status","operationId":"repoCreateStatus","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateStatusOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateStatusOption"}}}},"responses":{"201":{"$ref":"#/components/responses/CommitStatus"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/subscribers":{"get":{"tags":["repository"],"summary":"List a repo\'s watchers","operationId":"repoListSubscribers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/repos/{owner}/{repo}/subscription":{"get":{"tags":["repository"],"summary":"Check if the current user is watching a repo","operationId":"userCurrentCheckSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"},"404":{"description":"User is not watching this repo or repo do not exist"}}},"put":{"tags":["repository"],"summary":"Watch a repo","operationId":"userCurrentPutSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"}}},"delete":{"tags":["repository"],"summary":"Unwatch a repo","operationId":"userCurrentDeleteSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/repos/{owner}/{repo}/tags":{"get":{"tags":["repository"],"summary":"List a repository\'s tags","operationId":"repoListTags","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results, default maximum page size is 50","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TagList"}}},"post":{"tags":["repository"],"summary":"Create a new git tag in a repository","operationId":"repoCreateTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTagOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateTagOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Tag"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/conflict"}}}},"/repos/{owner}/{repo}/tags/{tag}":{"get":{"tags":["repository"],"summary":"Get the tag of a repository by tag name","operationId":"repoGetTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of tag","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Tag"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a repository\'s tag by name","operationId":"repoDeleteTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of tag to delete","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/conflict"}}}},"/repos/{owner}/{repo}/teams":{"get":{"tags":["repository"],"summary":"List a repository\'s teams","operationId":"repoListTeams","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"}}}},"/repos/{owner}/{repo}/teams/{team}":{"get":{"tags":["repository"],"summary":"Check if a team is assigned to a repository","operationId":"repoCheckTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Team"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/error"}}},"put":{"tags":["repository"],"summary":"Add a team to a repository","operationId":"repoAddTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"405":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a team from a repository","operationId":"repoDeleteTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"405":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/times":{"get":{"tags":["repository"],"summary":"List a repo\'s tracked times","operationId":"repoTrackedTimes","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"optional filter by user (available for issue managers)","name":"user","in":"query","schema":{"type":"string"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/times/{user}":{"get":{"tags":["repository"],"summary":"List a user\'s tracked times in a repo","operationId":"userTrackedTimes","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of user","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/topics":{"get":{"tags":["repository"],"summary":"Get list of topics that a repository has","operationId":"repoListTopics","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TopicNames"}}},"put":{"tags":["repository"],"summary":"Replace list of topics for a repository","operationId":"repoUpdateTopics","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepoTopicOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/RepoTopicOptions"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}}},"/repos/{owner}/{repo}/topics/{topic}":{"put":{"tags":["repository"],"summary":"Add a topic to a repository","operationId":"repoAddTopic","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the topic to add","name":"topic","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}},"delete":{"tags":["repository"],"summary":"Delete a topic from a repository","operationId":"repoDeleteTopic","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the topic to delete","name":"topic","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}}},"/repos/{owner}/{repo}/transfer":{"post":{"tags":["repository"],"summary":"Transfer a repo ownership","operationId":"repoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferRepoOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/TransferRepoOption"}}},"description":"Transfer Options","required":true},"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/transfer/accept":{"post":{"tags":["repository"],"summary":"Accept a repo transfer","operationId":"acceptRepoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/transfer/reject":{"post":{"tags":["repository"],"summary":"Reject a repo transfer","operationId":"rejectRepoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/wiki/new":{"post":{"tags":["repository"],"summary":"Create a wiki page","operationId":"repoCreateWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateWikiPageOptions"},"responses":{"201":{"$ref":"#/components/responses/WikiPage"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/wiki/page/{pageName}":{"get":{"tags":["repository"],"summary":"Get a wiki page","operationId":"repoGetWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WikiPage"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a wiki page","operationId":"repoDeleteWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a wiki page","operationId":"repoEditWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateWikiPageOptions"},"responses":{"200":{"$ref":"#/components/responses/WikiPage"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/wiki/pages":{"get":{"tags":["repository"],"summary":"Get all wiki pages","operationId":"repoGetWikiPages","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/WikiPageList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/wiki/revisions/{pageName}":{"get":{"tags":["repository"],"summary":"Get revisions of a wiki page","operationId":"repoGetWikiPageRevisions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/WikiCommitList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{template_owner}/{template_repo}/generate":{"post":{"tags":["repository"],"summary":"Create a repository using a template","operationId":"generateRepo","parameters":[{"description":"name of the template repository owner","name":"template_owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the template repository","name":"template_repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenerateRepoOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repositories/{id}":{"get":{"tags":["repository"],"summary":"Get a repository by id","operationId":"repoGetByID","parameters":[{"description":"id of the repo to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"}}}},"/settings/api":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for api","operationId":"getGeneralAPISettings","responses":{"200":{"$ref":"#/components/responses/GeneralAPISettings"}}}},"/settings/attachment":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for Attachment","operationId":"getGeneralAttachmentSettings","responses":{"200":{"$ref":"#/components/responses/GeneralAttachmentSettings"}}}},"/settings/repository":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for repositories","operationId":"getGeneralRepositorySettings","responses":{"200":{"$ref":"#/components/responses/GeneralRepoSettings"}}}},"/settings/ui":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for ui","operationId":"getGeneralUISettings","responses":{"200":{"$ref":"#/components/responses/GeneralUISettings"}}}},"/signing-key.gpg":{"get":{"tags":["miscellaneous"],"summary":"Get default signing-key.gpg","operationId":"getSigningKey","responses":{"200":{"description":"GPG armored public key","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/teams/{id}":{"get":{"tags":["organization"],"summary":"Get a team","operationId":"orgGetTeam","parameters":[{"description":"id of the team to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Team"}}},"delete":{"tags":["organization"],"summary":"Delete a team","operationId":"orgDeleteTeam","parameters":[{"description":"id of the team to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"team deleted"}}},"patch":{"tags":["organization"],"summary":"Edit a team","operationId":"orgEditTeam","parameters":[{"description":"id of the team to edit","name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditTeamOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Team"}}}},"/teams/{id}/activities/feeds":{"get":{"tags":["organization"],"summary":"List a team\'s activity feeds","operationId":"orgListTeamActivityFeeds","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/members":{"get":{"tags":["organization"],"summary":"List a team\'s members","operationId":"orgListTeamMembers","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/teams/{id}/members/{username}":{"get":{"tags":["organization"],"summary":"List a particular member of team","operationId":"orgListTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the member to list","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/User"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["organization"],"summary":"Add a team member","operationId":"orgAddTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the user to add","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Remove a team member","operationId":"orgRemoveTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the user to remove","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/repos":{"get":{"tags":["organization"],"summary":"List a team\'s repos","operationId":"orgListTeamRepos","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/teams/{id}/repos/{org}/{repo}":{"get":{"tags":["organization"],"summary":"List a particular repo of team","operationId":"orgListTeamRepo","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to list","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to list","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["organization"],"summary":"Add a repository to a team","operationId":"orgAddTeamRepository","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to add","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to add","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"description":"This does not delete the repository, it only removes the repository from the team.","tags":["organization"],"summary":"Remove a repository from a team","operationId":"orgRemoveTeamRepository","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to remove","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to remove","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/topics/search":{"get":{"tags":["repository"],"summary":"search topics via keyword","operationId":"topicSearch","parameters":[{"description":"keywords to search","name":"q","in":"query","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TopicListResponse"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/user":{"get":{"tags":["user"],"summary":"Get the authenticated user","operationId":"userGetCurrent","responses":{"200":{"$ref":"#/components/responses/User"}}}},"/user/applications/oauth2":{"get":{"tags":["user"],"summary":"List the authenticated user\'s oauth2 applications","operationId":"userGetOauth2Application","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OAuth2ApplicationList"}}},"post":{"tags":["user"],"summary":"creates a new OAuth2 application","operationId":"userCreateOAuth2Application","requestBody":{"$ref":"#/components/requestBodies/CreateOAuth2ApplicationOptions"},"responses":{"201":{"$ref":"#/components/responses/OAuth2Application"},"400":{"$ref":"#/components/responses/error"}}}},"/user/applications/oauth2/{id}":{"get":{"tags":["user"],"summary":"get an OAuth2 Application","operationId":"userGetOAuth2Application","parameters":[{"description":"Application ID to be found","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/OAuth2Application"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"delete an OAuth2 Application","operationId":"userDeleteOAuth2Application","parameters":[{"description":"token to be deleted","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["user"],"summary":"update an OAuth2 Application, this includes regenerating the client secret","operationId":"userUpdateOAuth2Application","parameters":[{"description":"application to be updated","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOAuth2ApplicationOptions"},"responses":{"200":{"$ref":"#/components/responses/OAuth2Application"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/emails":{"get":{"tags":["user"],"summary":"List the authenticated user\'s email addresses","operationId":"userListEmails","responses":{"200":{"$ref":"#/components/responses/EmailList"}}},"post":{"tags":["user"],"summary":"Add email addresses","operationId":"userAddEmail","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateEmailOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateEmailOption"}}}},"responses":{"201":{"$ref":"#/components/responses/EmailList"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["user"],"summary":"Delete email addresses","operationId":"userDeleteEmail","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteEmailOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/DeleteEmailOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/followers":{"get":{"tags":["user"],"summary":"List the authenticated user\'s followers","operationId":"userCurrentListFollowers","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/user/following":{"get":{"tags":["user"],"summary":"List the users that the authenticated user is following","operationId":"userCurrentListFollowing","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/user/following/{username}":{"get":{"tags":["user"],"summary":"Check whether a user is followed by the authenticated user","operationId":"userCurrentCheckFollowing","parameters":[{"description":"username of followed user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["user"],"summary":"Follow a user","operationId":"userCurrentPutFollow","parameters":[{"description":"username of user to follow","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"delete":{"tags":["user"],"summary":"Unfollow a user","operationId":"userCurrentDeleteFollow","parameters":[{"description":"username of user to unfollow","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/user/gpg_key_token":{"get":{"tags":["user"],"summary":"Get a Token to verify","operationId":"getVerificationToken","responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/gpg_key_verify":{"post":{"tags":["user"],"summary":"Verify a GPG key","operationId":"userVerifyGPGKey","responses":{"201":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/gpg_keys":{"get":{"tags":["user"],"summary":"List the authenticated user\'s GPG keys","operationId":"userCurrentListGPGKeys","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKeyList"}}},"post":{"tags":["user"],"summary":"Create a GPG key","operationId":"userCurrentPostGPGKey","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateGPGKeyOption"}}}},"responses":{"201":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/gpg_keys/{id}":{"get":{"tags":["user"],"summary":"Get a GPG key","operationId":"userCurrentGetGPGKey","parameters":[{"description":"id of key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Remove a GPG key","operationId":"userCurrentDeleteGPGKey","parameters":[{"description":"id of key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/hooks":{"get":{"tags":["user"],"summary":"List the authenticated user\'s webhooks","operationId":"userListHooks","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["user"],"summary":"Create a hook","operationId":"userCreateHook","requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/user/hooks/{id}":{"get":{"tags":["user"],"summary":"Get a hook","operationId":"userGetHook","parameters":[{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"}}},"delete":{"tags":["user"],"summary":"Delete a hook","operationId":"userDeleteHook","parameters":[{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["user"],"summary":"Update a hook","operationId":"userEditHook","parameters":[{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/user/keys":{"get":{"tags":["user"],"summary":"List the authenticated user\'s public keys","operationId":"userCurrentListKeys","parameters":[{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKeyList"}}},"post":{"tags":["user"],"summary":"Create a public key","operationId":"userCurrentPostKey","requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/PublicKey"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/keys/{id}":{"get":{"tags":["user"],"summary":"Get a public key","operationId":"userCurrentGetKey","parameters":[{"description":"id of key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKey"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Delete a public key","operationId":"userCurrentDeleteKey","parameters":[{"description":"id of key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/orgs":{"get":{"tags":["organization"],"summary":"List the current user\'s organizations","operationId":"orgListCurrentUserOrgs","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"}}}},"/user/repos":{"get":{"tags":["user"],"summary":"List the repos that the authenticated user owns","operationId":"userCurrentListRepos","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}},"post":{"tags":["repository","user"],"summary":"Create a repository","operationId":"createCurrentUserRepo","requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/settings":{"get":{"tags":["user"],"summary":"Get user settings","operationId":"getUserSettings","responses":{"200":{"$ref":"#/components/responses/UserSettings"}}},"patch":{"tags":["user"],"summary":"Update user settings","operationId":"updateUserSettings","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSettingsOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/UserSettingsOptions"}}}},"responses":{"200":{"$ref":"#/components/responses/UserSettings"}}}},"/user/starred":{"get":{"tags":["user"],"summary":"The repos that the authenticated user has starred","operationId":"userCurrentListStarred","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/user/starred/{owner}/{repo}":{"get":{"tags":["user"],"summary":"Whether the authenticated is starring the repo","operationId":"userCurrentCheckStarring","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["user"],"summary":"Star the given repo","operationId":"userCurrentPutStar","parameters":[{"description":"owner of the repo to star","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to star","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"delete":{"tags":["user"],"summary":"Unstar the given repo","operationId":"userCurrentDeleteStar","parameters":[{"description":"owner of the repo to unstar","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to unstar","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/user/stopwatches":{"get":{"tags":["user"],"summary":"Get list of all existing stopwatches","operationId":"userGetStopWatches","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/StopWatchList"}}}},"/user/subscriptions":{"get":{"tags":["user"],"summary":"List repositories watched by the authenticated user","operationId":"userCurrentListSubscriptions","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/user/teams":{"get":{"tags":["user"],"summary":"List all the teams a user belongs to","operationId":"userListTeams","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"}}}},"/user/times":{"get":{"tags":["user"],"summary":"List the current user\'s tracked times","operationId":"userCurrentTrackedTimes","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"}}}},"/users/search":{"get":{"tags":["user"],"summary":"Search for users","operationId":"userSearch","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"ID of the user to search for","name":"uid","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"description":"SearchResults of a successful search","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/User"}},"ok":{"type":"boolean"}}}}}}}}},"/users/{username}":{"get":{"tags":["user"],"summary":"Get a user","operationId":"userGet","parameters":[{"description":"username of user to get","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/User"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/activities/feeds":{"get":{"tags":["user"],"summary":"List a user\'s activity feeds","operationId":"userListActivityFeeds","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"if true, only show actions performed by the requested user","name":"only-performed-by","in":"query","schema":{"type":"boolean"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/followers":{"get":{"tags":["user"],"summary":"List the given user\'s followers","operationId":"userListFollowers","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/users/{username}/following":{"get":{"tags":["user"],"summary":"List the users that the given user is following","operationId":"userListFollowing","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/users/{username}/following/{target}":{"get":{"tags":["user"],"summary":"Check if one user is following another user","operationId":"userCheckFollowing","parameters":[{"description":"username of following user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of followed user","name":"target","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/gpg_keys":{"get":{"tags":["user"],"summary":"List the given user\'s GPG keys","operationId":"userListGPGKeys","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKeyList"}}}},"/users/{username}/heatmap":{"get":{"tags":["user"],"summary":"Get a user\'s heatmap","operationId":"userGetHeatmapData","parameters":[{"description":"username of user to get","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserHeatmapData"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/keys":{"get":{"tags":["user"],"summary":"List the given user\'s public keys","operationId":"userListKeys","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKeyList"}}}},"/users/{username}/orgs":{"get":{"tags":["organization"],"summary":"List a user\'s organizations","operationId":"orgListUserOrgs","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"}}}},"/users/{username}/orgs/{org}/permissions":{"get":{"tags":["organization"],"summary":"Get user permissions in organization","operationId":"orgGetUserPermissions","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationPermissions"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/repos":{"get":{"tags":["user"],"summary":"List the repos owned by the given user","operationId":"userListRepos","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/users/{username}/starred":{"get":{"tags":["user"],"summary":"The repos that the given user has starred","operationId":"userListStarred","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/users/{username}/subscriptions":{"get":{"tags":["user"],"summary":"List the repositories watched by a user","operationId":"userListSubscriptions","parameters":[{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/users/{username}/tokens":{"get":{"tags":["user"],"summary":"List the authenticated user\'s access tokens","operationId":"userGetTokens","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/AccessTokenList"}}},"post":{"tags":["user"],"summary":"Create an access token","operationId":"userCreateToken","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateAccessTokenOption"}}}},"responses":{"201":{"$ref":"#/components/responses/AccessToken"},"400":{"$ref":"#/components/responses/error"}}}},"/users/{username}/tokens/{token}":{"delete":{"tags":["user"],"summary":"delete an access token","operationId":"userDeleteAccessToken","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"token to be deleted, identified by ID and if not available by name","name":"token","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}}},"/version":{"get":{"tags":["miscellaneous"],"summary":"Returns the version of the Gitea application","operationId":"getVersion","responses":{"200":{"$ref":"#/components/responses/ServerVersion"}}}}},"security":[{"BasicAuth":[]},{"Token":[]},{"AccessToken":[]},{"AuthorizationHeaderToken":[]},{"SudoParam":[]},{"SudoHeader":[]},{"TOTPHeader":[]}],"servers":[{"url":"https://gitea.com/api/v1"}],"components":{"responses":{"AccessToken":{"description":"AccessToken represents an API access token.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessToken"}},"text/html":{"schema":{"$ref":"#/components/schemas/AccessToken"}}}},"AccessTokenList":{"description":"AccessTokenList represents a list of API access token.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccessToken"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccessToken"}}}}},"ActivityFeedsList":{"description":"ActivityFeedsList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Activity"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Activity"}}}}},"ActivityPub":{"description":"ActivityPub","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActivityPub"}},"text/html":{"schema":{"$ref":"#/components/schemas/ActivityPub"}}}},"AnnotatedTag":{"description":"AnnotatedTag","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnnotatedTag"}},"text/html":{"schema":{"$ref":"#/components/schemas/AnnotatedTag"}}}},"Attachment":{"description":"Attachment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Attachment"}},"text/html":{"schema":{"$ref":"#/components/schemas/Attachment"}}}},"AttachmentList":{"description":"AttachmentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"}}}}},"Branch":{"description":"Branch","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Branch"}},"text/html":{"schema":{"$ref":"#/components/schemas/Branch"}}}},"BranchList":{"description":"BranchList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Branch"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Branch"}}}}},"BranchProtection":{"description":"BranchProtection","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BranchProtection"}},"text/html":{"schema":{"$ref":"#/components/schemas/BranchProtection"}}}},"BranchProtectionList":{"description":"BranchProtectionList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BranchProtection"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BranchProtection"}}}}},"ChangedFileList":{"description":"ChangedFileList","headers":{"X-HasMore":{"description":"True if there is another page","schema":{"type":"boolean"}},"X-Page":{"description":"The current page","schema":{"type":"integer","format":"int64"}},"X-PageCount":{"description":"Total number of pages","schema":{"type":"integer","format":"int64"}},"X-PerPage":{"description":"Commits per page","schema":{"type":"integer","format":"int64"}},"X-Total":{"description":"Total commit count","schema":{"type":"integer","format":"int64"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ChangedFile"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ChangedFile"}}}}},"CombinedStatus":{"description":"CombinedStatus","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CombinedStatus"}},"text/html":{"schema":{"$ref":"#/components/schemas/CombinedStatus"}}}},"Comment":{"description":"Comment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Comment"}},"text/html":{"schema":{"$ref":"#/components/schemas/Comment"}}}},"CommentList":{"description":"CommentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Comment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Comment"}}}}},"Commit":{"description":"Commit","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Commit"}},"text/html":{"schema":{"$ref":"#/components/schemas/Commit"}}}},"CommitList":{"description":"CommitList","headers":{"X-HasMore":{"description":"True if there is another page","schema":{"type":"boolean"}},"X-Page":{"description":"The current page","schema":{"type":"integer","format":"int64"}},"X-PageCount":{"description":"Total number of pages","schema":{"type":"integer","format":"int64"}},"X-PerPage":{"description":"Commits per page","schema":{"type":"integer","format":"int64"}},"X-Total":{"description":"Total commit count","schema":{"type":"integer","format":"int64"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Commit"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Commit"}}}}},"CommitStatus":{"description":"CommitStatus","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommitStatus"}},"text/html":{"schema":{"$ref":"#/components/schemas/CommitStatus"}}}},"CommitStatusList":{"description":"CommitStatusList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"}}}}},"ContentsListResponse":{"description":"ContentsListResponse","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"}}}}},"ContentsResponse":{"description":"ContentsResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentsResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/ContentsResponse"}}}},"CronList":{"description":"CronList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Cron"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Cron"}}}}},"DeployKey":{"description":"DeployKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeployKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/DeployKey"}}}},"DeployKeyList":{"description":"DeployKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeployKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeployKey"}}}}},"EmailList":{"description":"EmailList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Email"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Email"}}}}},"EmptyRepository":{"description":"EmptyRepository","content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIError"}},"text/html":{"schema":{"$ref":"#/components/schemas/APIError"}}}},"FileDeleteResponse":{"description":"FileDeleteResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileDeleteResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FileDeleteResponse"}}}},"FileResponse":{"description":"FileResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FileResponse"}}}},"FilesResponse":{"description":"FilesResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FilesResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FilesResponse"}}}},"GPGKey":{"description":"GPGKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GPGKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/GPGKey"}}}},"GPGKeyList":{"description":"GPGKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"}}}}},"GeneralAPISettings":{"description":"GeneralAPISettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralAPISettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralAPISettings"}}}},"GeneralAttachmentSettings":{"description":"GeneralAttachmentSettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralAttachmentSettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralAttachmentSettings"}}}},"GeneralRepoSettings":{"description":"GeneralRepoSettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralRepoSettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralRepoSettings"}}}},"GeneralUISettings":{"description":"GeneralUISettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralUISettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralUISettings"}}}},"GitBlobResponse":{"description":"GitBlobResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitBlobResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitBlobResponse"}}}},"GitHook":{"description":"GitHook","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitHook"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitHook"}}}},"GitHookList":{"description":"GitHookList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GitHook"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GitHook"}}}}},"GitTreeResponse":{"description":"GitTreeResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitTreeResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitTreeResponse"}}}},"GitignoreTemplateInfo":{"description":"GitignoreTemplateInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitignoreTemplateInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitignoreTemplateInfo"}}}},"GitignoreTemplateList":{"description":"GitignoreTemplateList","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}},"text/html":{"schema":{"type":"array","items":{"type":"string"}}}}},"Hook":{"description":"Hook","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Hook"}},"text/html":{"schema":{"$ref":"#/components/schemas/Hook"}}}},"HookList":{"description":"HookList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Hook"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Hook"}}}}},"Issue":{"description":"Issue","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Issue"}},"text/html":{"schema":{"$ref":"#/components/schemas/Issue"}}}},"IssueDeadline":{"description":"IssueDeadline","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueDeadline"}},"text/html":{"schema":{"$ref":"#/components/schemas/IssueDeadline"}}}},"IssueList":{"description":"IssueList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Issue"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Issue"}}}}},"IssueTemplates":{"description":"IssueTemplates","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssueTemplate"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssueTemplate"}}}}},"Label":{"description":"Label","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Label"}},"text/html":{"schema":{"$ref":"#/components/schemas/Label"}}}},"LabelList":{"description":"LabelList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Label"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Label"}}}}},"LabelTemplateInfo":{"description":"LabelTemplateInfo","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LabelTemplate"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LabelTemplate"}}}}},"LabelTemplateList":{"description":"LabelTemplateList","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}},"text/html":{"schema":{"type":"array","items":{"type":"string"}}}}},"LanguageStatistics":{"description":"LanguageStatistics","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}}},"text/html":{"schema":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}}}}},"LicenseTemplateInfo":{"description":"LicenseTemplateInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LicenseTemplateInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/LicenseTemplateInfo"}}}},"LicenseTemplateList":{"description":"LicenseTemplateList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LicensesTemplateListEntry"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LicensesTemplateListEntry"}}}}},"MarkdownRender":{"description":"MarkdownRender is a rendered markdown document","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"MarkupRender":{"description":"MarkupRender is a rendered markup document","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"Milestone":{"description":"Milestone","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Milestone"}},"text/html":{"schema":{"$ref":"#/components/schemas/Milestone"}}}},"MilestoneList":{"description":"MilestoneList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Milestone"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Milestone"}}}}},"NodeInfo":{"description":"NodeInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodeInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/NodeInfo"}}}},"Note":{"description":"Note","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Note"}},"text/html":{"schema":{"$ref":"#/components/schemas/Note"}}}},"NotificationCount":{"description":"Number of unread notifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationCount"}},"text/html":{"schema":{"$ref":"#/components/schemas/NotificationCount"}}}},"NotificationThread":{"description":"NotificationThread","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationThread"}},"text/html":{"schema":{"$ref":"#/components/schemas/NotificationThread"}}}},"NotificationThreadList":{"description":"NotificationThreadList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/NotificationThread"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/NotificationThread"}}}}},"OAuth2Application":{"description":"OAuth2Application","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OAuth2Application"}},"text/html":{"schema":{"$ref":"#/components/schemas/OAuth2Application"}}}},"OAuth2ApplicationList":{"description":"OAuth2ApplicationList represents a list of OAuth2 applications.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OAuth2Application"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OAuth2Application"}}}}},"Organization":{"description":"Organization","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}},"text/html":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"OrganizationList":{"description":"OrganizationList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Organization"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Organization"}}}}},"OrganizationPermissions":{"description":"OrganizationPermissions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationPermissions"}},"text/html":{"schema":{"$ref":"#/components/schemas/OrganizationPermissions"}}}},"Package":{"description":"Package","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Package"}},"text/html":{"schema":{"$ref":"#/components/schemas/Package"}}}},"PackageFileList":{"description":"PackageFileList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PackageFile"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PackageFile"}}}}},"PackageList":{"description":"PackageList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Package"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Package"}}}}},"PublicKey":{"description":"PublicKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PublicKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/PublicKey"}}}},"PublicKeyList":{"description":"PublicKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PublicKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PublicKey"}}}}},"PullRequest":{"description":"PullRequest","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullRequest"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullRequest"}}}},"PullRequestList":{"description":"PullRequestList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullRequest"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullRequest"}}}}},"PullReview":{"description":"PullReview","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReview"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullReview"}}}},"PullReviewComment":{"description":"PullComment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReviewComment"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullReviewComment"}}}},"PullReviewCommentList":{"description":"PullCommentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReviewComment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReviewComment"}}}}},"PullReviewList":{"description":"PullReviewList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReview"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReview"}}}}},"PushMirror":{"description":"PushMirror","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PushMirror"}},"text/html":{"schema":{"$ref":"#/components/schemas/PushMirror"}}}},"PushMirrorList":{"description":"PushMirrorList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PushMirror"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PushMirror"}}}}},"Reaction":{"description":"Reaction","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Reaction"}},"text/html":{"schema":{"$ref":"#/components/schemas/Reaction"}}}},"ReactionList":{"description":"ReactionList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reaction"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reaction"}}}}},"Reference":{"description":"Reference","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Reference"}},"text/html":{"schema":{"$ref":"#/components/schemas/Reference"}}}},"ReferenceList":{"description":"ReferenceList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}}}}},"Release":{"description":"Release","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Release"}},"text/html":{"schema":{"$ref":"#/components/schemas/Release"}}}},"ReleaseList":{"description":"ReleaseList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Release"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Release"}}}}},"RepoCollaboratorPermission":{"description":"RepoCollaboratorPermission","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepoCollaboratorPermission"}},"text/html":{"schema":{"$ref":"#/components/schemas/RepoCollaboratorPermission"}}}},"RepoIssueConfig":{"description":"RepoIssueConfig","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueConfig"}},"text/html":{"schema":{"$ref":"#/components/schemas/IssueConfig"}}}},"RepoIssueConfigValidation":{"description":"RepoIssueConfigValidation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueConfigValidation"}},"text/html":{"schema":{"$ref":"#/components/schemas/IssueConfigValidation"}}}},"RepoNewIssuePinsAllowed":{"description":"RepoNewIssuePinsAllowed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewIssuePinsAllowed"}},"text/html":{"schema":{"$ref":"#/components/schemas/NewIssuePinsAllowed"}}}},"Repository":{"description":"Repository","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Repository"}},"text/html":{"schema":{"$ref":"#/components/schemas/Repository"}}}},"RepositoryList":{"description":"RepositoryList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Repository"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Repository"}}}}},"SearchResults":{"description":"SearchResults","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResults"}},"text/html":{"schema":{"$ref":"#/components/schemas/SearchResults"}}}},"ServerVersion":{"description":"ServerVersion","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServerVersion"}},"text/html":{"schema":{"$ref":"#/components/schemas/ServerVersion"}}}},"StopWatch":{"description":"StopWatch","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StopWatch"}},"text/html":{"schema":{"$ref":"#/components/schemas/StopWatch"}}}},"StopWatchList":{"description":"StopWatchList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StopWatch"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StopWatch"}}}}},"StringSlice":{"description":"StringSlice","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}},"text/html":{"schema":{"type":"array","items":{"type":"string"}}}}},"Tag":{"description":"Tag","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tag"}},"text/html":{"schema":{"$ref":"#/components/schemas/Tag"}}}},"TagList":{"description":"TagList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Tag"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Tag"}}}}},"Team":{"description":"Team","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Team"}},"text/html":{"schema":{"$ref":"#/components/schemas/Team"}}}},"TeamList":{"description":"TeamList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Team"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Team"}}}}},"TimelineList":{"description":"TimelineList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TimelineComment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TimelineComment"}}}}},"TopicListResponse":{"description":"TopicListResponse","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TopicResponse"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TopicResponse"}}}}},"TopicNames":{"description":"TopicNames","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopicName"}},"text/html":{"schema":{"$ref":"#/components/schemas/TopicName"}}}},"TrackedTime":{"description":"TrackedTime","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrackedTime"}},"text/html":{"schema":{"$ref":"#/components/schemas/TrackedTime"}}}},"TrackedTimeList":{"description":"TrackedTimeList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TrackedTime"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TrackedTime"}}}}},"User":{"description":"User","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}},"text/html":{"schema":{"$ref":"#/components/schemas/User"}}}},"UserHeatmapData":{"description":"UserHeatmapData","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserHeatmapData"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserHeatmapData"}}}}},"UserList":{"description":"UserList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}}},"UserSettings":{"description":"UserSettings","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserSettings"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserSettings"}}}}},"WatchInfo":{"description":"WatchInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WatchInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/WatchInfo"}}}},"WikiCommitList":{"description":"WikiCommitList","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WikiCommitList"}},"text/html":{"schema":{"$ref":"#/components/schemas/WikiCommitList"}}}},"WikiPage":{"description":"WikiPage","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WikiPage"}},"text/html":{"schema":{"$ref":"#/components/schemas/WikiPage"}}}},"WikiPageList":{"description":"WikiPageList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WikiPageMetaData"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WikiPageMetaData"}}}}},"conflict":{"description":"APIConflict is a conflict empty response"},"empty":{"description":"APIEmpty is an empty response"},"error":{"description":"APIError is error format response","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}},"forbidden":{"description":"APIForbiddenError is a forbidden error response","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}},"invalidTopicsError":{"description":"APIInvalidTopicsError is error format response to invalid topics","headers":{"invalidTopics":{"schema":{"type":"array","items":{"type":"string"}},"style":"simple"},"message":{"schema":{"type":"string"}}}},"notFound":{"description":"APINotFound is a not found empty response"},"parameterBodies":{"description":"parameterBodies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePushMirrorOption"}},"text/html":{"schema":{"$ref":"#/components/schemas/CreatePushMirrorOption"}}}},"redirect":{"description":"APIRedirect is a redirect response"},"string":{"description":"APIString is a string response","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"validationError":{"description":"APIValidationError is error format response related to input validation","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}}},"requestBodies":{"CreateOAuth2ApplicationOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOAuth2ApplicationOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateOAuth2ApplicationOptions"}}},"required":true},"CreateWikiPageOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWikiPageOptions"}}}},"EditLabelOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditLabelOption"}}}},"CreateKeyOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateKeyOption"}}}},"CreateOrgOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOrgOption"}}},"required":true},"IssueLabelsOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueLabelsOption"}}}},"CreateHookOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateHookOption"}}},"required":true},"EditReactionOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditReactionOption"}}}},"EditHookOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditHookOption"}}}},"CreateRepoOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRepoOption"}}}},"CreateLabelOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLabelOption"}}}},"UpdateFileOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateFileOptions"}}},"required":true},"EditIssueCommentOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditIssueCommentOption"}}}},"issueCreateIssueCommentAttachment":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"attachment":{"description":"attachment to upload","type":"string","format":"binary"}},"required":["attachment"]}}},"required":true},"EditAttachmentOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditAttachmentOptions"}}}},"IssueMeta":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueMeta"}},"text/plain":{"schema":{"$ref":"#/components/schemas/IssueMeta"}}}},"PullReviewRequestOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReviewRequestOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/PullReviewRequestOptions"}}},"required":true}},"securitySchemes":{"AccessToken":{"type":"apiKey","name":"access_token","in":"query"},"AuthorizationHeaderToken":{"description":"API tokens must be prepended with \\"token\\" followed by a space.","type":"apiKey","name":"Authorization","in":"header"},"BasicAuth":{"type":"http","scheme":"basic"},"SudoHeader":{"description":"Sudo API request as the user provided as the key. Admin privileges are required.","type":"apiKey","name":"Sudo","in":"header"},"SudoParam":{"description":"Sudo API request as the user provided as the key. Admin privileges are required.","type":"apiKey","name":"sudo","in":"query"},"TOTPHeader":{"description":"Must be used in combination with BasicAuth if two-factor authentication is enabled.","type":"apiKey","name":"X-GITEA-OTP","in":"header"},"Token":{"type":"apiKey","name":"token","in":"query"}},"schemas":{"APIError":{"description":"APIError is an api error with a message","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AccessToken":{"type":"object","title":"AccessToken represents an API access token.","properties":{"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"scopes":{"type":"array","items":{"type":"string"},"x-go-name":"Scopes"},"sha1":{"type":"string","x-go-name":"Token"},"token_last_eight":{"type":"string","x-go-name":"TokenLastEight"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Activity":{"type":"object","properties":{"act_user":{"$ref":"#/components/schemas/User"},"act_user_id":{"type":"integer","format":"int64","x-go-name":"ActUserID"},"comment":{"$ref":"#/components/schemas/Comment"},"comment_id":{"type":"integer","format":"int64","x-go-name":"CommentID"},"content":{"type":"string","x-go-name":"Content"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_private":{"type":"boolean","x-go-name":"IsPrivate"},"op_type":{"type":"string","x-go-name":"OpType"},"ref_name":{"type":"string","x-go-name":"RefName"},"repo":{"$ref":"#/components/schemas/Repository"},"repo_id":{"type":"integer","format":"int64","x-go-name":"RepoID"},"user_id":{"type":"integer","format":"int64","x-go-name":"UserID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ActivityPub":{"description":"ActivityPub type","type":"object","properties":{"@context":{"type":"string","x-go-name":"Context"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AddCollaboratorOption":{"description":"AddCollaboratorOption options when adding a user as a collaborator of a repository","type":"object","properties":{"permission":{"type":"string","x-go-name":"Permission"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AddTimeOption":{"description":"AddTimeOption options for adding time to an issue","type":"object","required":["time"],"properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"time":{"description":"time in seconds","type":"integer","format":"int64","x-go-name":"Time"},"user_name":{"description":"User who spent the time (optional)","type":"string","x-go-name":"User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AnnotatedTag":{"description":"AnnotatedTag represents an annotated tag","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"object":{"$ref":"#/components/schemas/AnnotatedTagObject"},"sha":{"type":"string","x-go-name":"SHA"},"tag":{"type":"string","x-go-name":"Tag"},"tagger":{"$ref":"#/components/schemas/CommitUser"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AnnotatedTagObject":{"description":"AnnotatedTagObject contains meta information of the tag object","type":"object","properties":{"sha":{"type":"string","x-go-name":"SHA"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Attachment":{"description":"Attachment a generic attachment","type":"object","properties":{"browser_download_url":{"type":"string","x-go-name":"DownloadURL"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"download_count":{"type":"integer","format":"int64","x-go-name":"DownloadCount"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"uuid":{"type":"string","x-go-name":"UUID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Branch":{"description":"Branch represents a repository branch","type":"object","properties":{"commit":{"$ref":"#/components/schemas/PayloadCommit"},"effective_branch_protection_name":{"type":"string","x-go-name":"EffectiveBranchProtectionName"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"name":{"type":"string","x-go-name":"Name"},"protected":{"type":"boolean","x-go-name":"Protected"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"user_can_merge":{"type":"boolean","x-go-name":"UserCanMerge"},"user_can_push":{"type":"boolean","x-go-name":"UserCanPush"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"BranchProtection":{"description":"BranchProtection represents a branch protection for a repository","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"branch_name":{"description":"Deprecated: true","type":"string","x-go-name":"BranchName"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"rule_name":{"type":"string","x-go-name":"RuleName"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ChangeFileOperation":{"description":"ChangeFileOperation for creating, updating or deleting a file","type":"object","required":["operation","path"],"properties":{"content":{"description":"new or updated file content, must be base64 encoded","type":"string","x-go-name":"Content"},"from_path":{"description":"old path of the file to move","type":"string","x-go-name":"FromPath"},"operation":{"description":"indicates what to do with the file","type":"string","enum":["create","update","delete"],"x-go-name":"Operation"},"path":{"description":"path to the existing or new file","type":"string","x-go-name":"Path"},"sha":{"description":"sha is the SHA for the file that already exists, required for update or delete","type":"string","x-go-name":"SHA"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ChangeFilesOptions":{"description":"ChangeFilesOptions options for creating, updating or deleting multiple files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["files"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"files":{"description":"list of file operations","type":"array","items":{"$ref":"#/components/schemas/ChangeFileOperation"},"x-go-name":"Files"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ChangedFile":{"description":"ChangedFile store information about files affected by the pull request","type":"object","properties":{"additions":{"type":"integer","format":"int64","x-go-name":"Additions"},"changes":{"type":"integer","format":"int64","x-go-name":"Changes"},"contents_url":{"type":"string","x-go-name":"ContentsURL"},"deletions":{"type":"integer","format":"int64","x-go-name":"Deletions"},"filename":{"type":"string","x-go-name":"Filename"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"previous_filename":{"type":"string","x-go-name":"PreviousFilename"},"raw_url":{"type":"string","x-go-name":"RawURL"},"status":{"type":"string","x-go-name":"Status"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CombinedStatus":{"description":"CombinedStatus holds the combined state of several statuses for a single commit","type":"object","properties":{"commit_url":{"type":"string","x-go-name":"CommitURL"},"repository":{"$ref":"#/components/schemas/Repository"},"sha":{"type":"string","x-go-name":"SHA"},"state":{"$ref":"#/components/schemas/CommitStatusState"},"statuses":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"},"x-go-name":"Statuses"},"total_count":{"type":"integer","format":"int64","x-go-name":"TotalCount"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Comment":{"description":"Comment represents a comment on a commit or issue","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"body":{"type":"string","x-go-name":"Body"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue_url":{"type":"string","x-go-name":"IssueURL"},"original_author":{"type":"string","x-go-name":"OriginalAuthor"},"original_author_id":{"type":"integer","format":"int64","x-go-name":"OriginalAuthorID"},"pull_request_url":{"type":"string","x-go-name":"PRURL"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Commit":{"type":"object","title":"Commit contains information generated from a Git commit.","properties":{"author":{"$ref":"#/components/schemas/User"},"commit":{"$ref":"#/components/schemas/RepoCommit"},"committer":{"$ref":"#/components/schemas/User"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"files":{"type":"array","items":{"$ref":"#/components/schemas/CommitAffectedFiles"},"x-go-name":"Files"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"parents":{"type":"array","items":{"$ref":"#/components/schemas/CommitMeta"},"x-go-name":"Parents"},"sha":{"type":"string","x-go-name":"SHA"},"stats":{"$ref":"#/components/schemas/CommitStats"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitAffectedFiles":{"description":"CommitAffectedFiles store information about files affected by the commit","type":"object","properties":{"filename":{"type":"string","x-go-name":"Filename"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitDateOptions":{"description":"CommitDateOptions store dates for GIT_AUTHOR_DATE and GIT_COMMITTER_DATE","type":"object","properties":{"author":{"type":"string","format":"date-time","x-go-name":"Author"},"committer":{"type":"string","format":"date-time","x-go-name":"Committer"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitMeta":{"type":"object","title":"CommitMeta contains meta information of a commit in terms of API.","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"sha":{"type":"string","x-go-name":"SHA"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStats":{"description":"CommitStats is statistics for a RepoCommit","type":"object","properties":{"additions":{"type":"integer","format":"int64","x-go-name":"Additions"},"deletions":{"type":"integer","format":"int64","x-go-name":"Deletions"},"total":{"type":"integer","format":"int64","x-go-name":"Total"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStatus":{"description":"CommitStatus holds a single status of a single Commit","type":"object","properties":{"context":{"type":"string","x-go-name":"Context"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"creator":{"$ref":"#/components/schemas/User"},"description":{"type":"string","x-go-name":"Description"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"status":{"$ref":"#/components/schemas/CommitStatusState"},"target_url":{"type":"string","x-go-name":"TargetURL"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStatusState":{"description":"CommitStatusState holds the state of a CommitStatus\\nIt can be \\"pending\\", \\"success\\", \\"error\\", \\"failure\\", and \\"warning\\"","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitUser":{"type":"object","title":"CommitUser contains information of a user in the context of a commit.","properties":{"date":{"type":"string","x-go-name":"Date"},"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ContentsResponse":{"description":"ContentsResponse contains information about a repo\'s entry\'s (dir, file, symlink, submodule) metadata and content","type":"object","properties":{"_links":{"$ref":"#/components/schemas/FileLinksResponse"},"content":{"description":"`content` is populated when `type` is `file`, otherwise null","type":"string","x-go-name":"Content"},"download_url":{"type":"string","x-go-name":"DownloadURL"},"encoding":{"description":"`encoding` is populated when `type` is `file`, otherwise null","type":"string","x-go-name":"Encoding"},"git_url":{"type":"string","x-go-name":"GitURL"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit_sha":{"type":"string","x-go-name":"LastCommitSHA"},"name":{"type":"string","x-go-name":"Name"},"path":{"type":"string","x-go-name":"Path"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"submodule_git_url":{"description":"`submodule_git_url` is populated when `type` is `submodule`, otherwise null","type":"string","x-go-name":"SubmoduleGitURL"},"target":{"description":"`target` is populated when `type` is `symlink`, otherwise null","type":"string","x-go-name":"Target"},"type":{"description":"`type` will be `file`, `dir`, `symlink`, or `submodule`","type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateAccessTokenOption":{"description":"CreateAccessTokenOption options when create access token","type":"object","required":["name"],"properties":{"name":{"type":"string","x-go-name":"Name"},"scopes":{"type":"array","items":{"type":"string"},"x-go-name":"Scopes"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateBranchProtectionOption":{"description":"CreateBranchProtectionOption options for creating a branch protection","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"branch_name":{"description":"Deprecated: true","type":"string","x-go-name":"BranchName"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"rule_name":{"type":"string","x-go-name":"RuleName"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateBranchRepoOption":{"description":"CreateBranchRepoOption options when creating a branch in a repository","type":"object","required":["new_branch_name"],"properties":{"new_branch_name":{"description":"Name of the branch to create","type":"string","uniqueItems":true,"x-go-name":"BranchName"},"old_branch_name":{"description":"Deprecated: true\\nName of the old branch to create from","type":"string","uniqueItems":true,"x-go-name":"OldBranchName"},"old_ref_name":{"description":"Name of the old branch/tag/commit to create from","type":"string","uniqueItems":true,"x-go-name":"OldRefName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateEmailOption":{"description":"CreateEmailOption options when creating email addresses","type":"object","properties":{"emails":{"description":"email addresses to add","type":"array","items":{"type":"string"},"x-go-name":"Emails"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateFileOptions":{"description":"CreateFileOptions options for creating files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["content"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"content":{"description":"content must be base64 encoded","type":"string","x-go-name":"Content"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateForkOption":{"description":"CreateForkOption options for creating a fork","type":"object","properties":{"name":{"description":"name of the forked repository","type":"string","x-go-name":"Name"},"organization":{"description":"organization name, if forking into an organization","type":"string","x-go-name":"Organization"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateGPGKeyOption":{"description":"CreateGPGKeyOption options create user GPG key","type":"object","required":["armored_public_key"],"properties":{"armored_public_key":{"description":"An armored GPG key to add","type":"string","uniqueItems":true,"x-go-name":"ArmoredKey"},"armored_signature":{"type":"string","x-go-name":"Signature"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateHookOption":{"description":"CreateHookOption options when create a hook","type":"object","required":["type","config"],"properties":{"active":{"type":"boolean","default":false,"x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"$ref":"#/components/schemas/CreateHookOptionConfig"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"},"type":{"type":"string","enum":["dingtalk","discord","gitea","gogs","msteams","slack","telegram","feishu","wechatwork","packagist"],"x-go-name":"Type"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateHookOptionConfig":{"description":"CreateHookOptionConfig has all config options in it\\nrequired are \\"content_type\\" and \\"url\\" Required","type":"object","additionalProperties":{"type":"string"},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateIssueCommentOption":{"description":"CreateIssueCommentOption options for creating a comment on an issue","type":"object","required":["body"],"properties":{"body":{"type":"string","x-go-name":"Body"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateIssueOption":{"description":"CreateIssueOption options to create one issue","type":"object","required":["title"],"properties":{"assignee":{"description":"deprecated","type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"closed":{"type":"boolean","x-go-name":"Closed"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"labels":{"description":"list of label ids","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"description":"milestone id","type":"integer","format":"int64","x-go-name":"Milestone"},"ref":{"type":"string","x-go-name":"Ref"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateKeyOption":{"description":"CreateKeyOption options when creating a key","type":"object","required":["title","key"],"properties":{"key":{"description":"An armored SSH key to add","type":"string","uniqueItems":true,"x-go-name":"Key"},"read_only":{"description":"Describe if the key has only read access or read/write","type":"boolean","x-go-name":"ReadOnly"},"title":{"description":"Title of the key to add","type":"string","uniqueItems":true,"x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateLabelOption":{"description":"CreateLabelOption options for creating a label","type":"object","required":["name","color"],"properties":{"color":{"type":"string","x-go-name":"Color","example":"#00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateMilestoneOption":{"description":"CreateMilestoneOption options for creating a milestone","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"state":{"type":"string","enum":["open","closed"],"x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateOAuth2ApplicationOptions":{"description":"CreateOAuth2ApplicationOptions holds options to create an oauth2 application","type":"object","properties":{"confidential_client":{"type":"boolean","x-go-name":"ConfidentialClient"},"name":{"type":"string","x-go-name":"Name"},"redirect_uris":{"type":"array","items":{"type":"string"},"x-go-name":"RedirectURIs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateOrgOption":{"description":"CreateOrgOption options for creating an organization","type":"object","required":["username"],"properties":{"description":{"type":"string","x-go-name":"Description"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"username":{"type":"string","x-go-name":"UserName"},"visibility":{"description":"possible values are `public` (default), `limited` or `private`","type":"string","enum":["public","limited","private"],"x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullRequestOption":{"description":"CreatePullRequestOption options when creating a pull request","type":"object","properties":{"assignee":{"type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"base":{"type":"string","x-go-name":"Base"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"head":{"type":"string","x-go-name":"Head"},"labels":{"type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullReviewComment":{"description":"CreatePullReviewComment represent a review comment for creation api","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"new_position":{"description":"if comment to new file line or 0","type":"integer","format":"int64","x-go-name":"NewLineNum"},"old_position":{"description":"if comment to old file line or 0","type":"integer","format":"int64","x-go-name":"OldLineNum"},"path":{"description":"the tree path","type":"string","x-go-name":"Path"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullReviewOptions":{"description":"CreatePullReviewOptions are options to create a pull review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"comments":{"type":"array","items":{"$ref":"#/components/schemas/CreatePullReviewComment"},"x-go-name":"Comments"},"commit_id":{"type":"string","x-go-name":"CommitID"},"event":{"$ref":"#/components/schemas/ReviewStateType"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePushMirrorOption":{"type":"object","title":"CreatePushMirrorOption represents need information to create a push mirror of a repository.","properties":{"interval":{"type":"string","x-go-name":"Interval"},"remote_address":{"type":"string","x-go-name":"RemoteAddress"},"remote_password":{"type":"string","x-go-name":"RemotePassword"},"remote_username":{"type":"string","x-go-name":"RemoteUsername"},"sync_on_commit":{"type":"boolean","x-go-name":"SyncOnCommit"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateReleaseOption":{"description":"CreateReleaseOption options when creating a release","type":"object","required":["tag_name"],"properties":{"body":{"type":"string","x-go-name":"Note"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"tag_name":{"type":"string","x-go-name":"TagName"},"target_commitish":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateRepoOption":{"description":"CreateRepoOption options when creating repository","type":"object","required":["name"],"properties":{"auto_init":{"description":"Whether the repository should be auto-initialized?","type":"boolean","x-go-name":"AutoInit"},"default_branch":{"description":"DefaultBranch of the repository (used when initializes and in template)","type":"string","x-go-name":"DefaultBranch"},"description":{"description":"Description of the repository to create","type":"string","x-go-name":"Description"},"gitignores":{"description":"Gitignores to use","type":"string","x-go-name":"Gitignores"},"issue_labels":{"description":"Label-Set to use","type":"string","x-go-name":"IssueLabels"},"license":{"description":"License to use","type":"string","x-go-name":"License"},"name":{"description":"Name of the repository to create","type":"string","uniqueItems":true,"x-go-name":"Name"},"private":{"description":"Whether the repository is private","type":"boolean","x-go-name":"Private"},"readme":{"description":"Readme of the repository to create","type":"string","x-go-name":"Readme"},"template":{"description":"Whether the repository is template","type":"boolean","x-go-name":"Template"},"trust_model":{"description":"TrustModel of the repository","type":"string","enum":["default","collaborator","committer","collaboratorcommitter"],"x-go-name":"TrustModel"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateStatusOption":{"description":"CreateStatusOption holds the information needed to create a new CommitStatus for a Commit","type":"object","properties":{"context":{"type":"string","x-go-name":"Context"},"description":{"type":"string","x-go-name":"Description"},"state":{"$ref":"#/components/schemas/CommitStatusState"},"target_url":{"type":"string","x-go-name":"TargetURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateTagOption":{"description":"CreateTagOption options when creating a tag","type":"object","required":["tag_name"],"properties":{"message":{"type":"string","x-go-name":"Message"},"tag_name":{"type":"string","x-go-name":"TagName"},"target":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateTeamOption":{"description":"CreateTeamOption options for creating a team","type":"object","required":["name"],"properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"permission":{"type":"string","enum":["read","write","admin"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":{"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateUserOption":{"description":"CreateUserOption create user options","type":"object","required":["username","email","password"],"properties":{"created_at":{"description":"For explicitly setting the user creation timestamp. Useful when users are\\nmigrated from other systems. When omitted, the user\'s creation timestamp\\nwill be set to \\"now\\".","type":"string","format":"date-time","x-go-name":"Created"},"email":{"type":"string","format":"email","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"login_name":{"type":"string","x-go-name":"LoginName"},"must_change_password":{"type":"boolean","x-go-name":"MustChangePassword"},"password":{"type":"string","x-go-name":"Password"},"restricted":{"type":"boolean","x-go-name":"Restricted"},"send_notify":{"type":"boolean","x-go-name":"SendNotify"},"source_id":{"type":"integer","format":"int64","x-go-name":"SourceID"},"username":{"type":"string","x-go-name":"Username"},"visibility":{"type":"string","x-go-name":"Visibility"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateWikiPageOptions":{"description":"CreateWikiPageOptions form for creating wiki","type":"object","properties":{"content_base64":{"description":"content must be base64 encoded","type":"string","x-go-name":"ContentBase64"},"message":{"description":"optional commit message summarizing the change","type":"string","x-go-name":"Message"},"title":{"description":"page title. leave empty to keep unchanged","type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Cron":{"description":"Cron represents a Cron task","type":"object","properties":{"exec_times":{"type":"integer","format":"int64","x-go-name":"ExecTimes"},"name":{"type":"string","x-go-name":"Name"},"next":{"type":"string","format":"date-time","x-go-name":"Next"},"prev":{"type":"string","format":"date-time","x-go-name":"Prev"},"schedule":{"type":"string","x-go-name":"Schedule"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeleteEmailOption":{"description":"DeleteEmailOption options when deleting email addresses","type":"object","properties":{"emails":{"description":"email addresses to delete","type":"array","items":{"type":"string"},"x-go-name":"Emails"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeleteFileOptions":{"description":"DeleteFileOptions options for deleting files (used for other File structs below)\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["sha"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"sha":{"description":"sha is the SHA for the file that already exists","type":"string","x-go-name":"SHA"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeployKey":{"description":"DeployKey a deploy key","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"fingerprint":{"type":"string","x-go-name":"Fingerprint"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key":{"type":"string","x-go-name":"Key"},"key_id":{"type":"integer","format":"int64","x-go-name":"KeyID"},"read_only":{"type":"boolean","x-go-name":"ReadOnly"},"repository":{"$ref":"#/components/schemas/Repository"},"title":{"type":"string","x-go-name":"Title"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DismissPullReviewOptions":{"description":"DismissPullReviewOptions are options to dismiss a pull review","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"priors":{"type":"boolean","x-go-name":"Priors"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditAttachmentOptions":{"description":"EditAttachmentOptions options for editing attachments","type":"object","properties":{"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditBranchProtectionOption":{"description":"EditBranchProtectionOption options for editing a branch protection","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditDeadlineOption":{"description":"EditDeadlineOption options for creating a deadline","type":"object","required":["due_date"],"properties":{"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditGitHookOption":{"description":"EditGitHookOption options when modifying one Git hook","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditHookOption":{"description":"EditHookOption options when modify one hook","type":"object","properties":{"active":{"type":"boolean","x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"Config"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditIssueCommentOption":{"description":"EditIssueCommentOption options for editing a comment","type":"object","required":["body"],"properties":{"body":{"type":"string","x-go-name":"Body"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditIssueOption":{"description":"EditIssueOption options for editing an issue","type":"object","properties":{"assignee":{"description":"deprecated","type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"ref":{"type":"string","x-go-name":"Ref"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"},"unset_due_date":{"type":"boolean","x-go-name":"RemoveDeadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditLabelOption":{"description":"EditLabelOption options for editing a label","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"#00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditMilestoneOption":{"description":"EditMilestoneOption options for editing a milestone","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditOrgOption":{"description":"EditOrgOption options for editing an organization","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"visibility":{"description":"possible values are `public`, `limited` or `private`","type":"string","enum":["public","limited","private"],"x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditPullRequestOption":{"description":"EditPullRequestOption options when modify pull request","type":"object","properties":{"allow_maintainer_edit":{"type":"boolean","x-go-name":"AllowMaintainerEdit"},"assignee":{"type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"base":{"type":"string","x-go-name":"Base"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"labels":{"type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"},"unset_due_date":{"type":"boolean","x-go-name":"RemoveDeadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditReactionOption":{"description":"EditReactionOption contain the reaction type","type":"object","properties":{"content":{"type":"string","x-go-name":"Reaction"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditReleaseOption":{"description":"EditReleaseOption options when editing a release","type":"object","properties":{"body":{"type":"string","x-go-name":"Note"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"tag_name":{"type":"string","x-go-name":"TagName"},"target_commitish":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditRepoOption":{"description":"EditRepoOption options when editing a repository\'s properties","type":"object","properties":{"allow_manual_merge":{"description":"either `true` to allow mark pr as merged manually, or `false` to prevent it.","type":"boolean","x-go-name":"AllowManualMerge"},"allow_merge_commits":{"description":"either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.","type":"boolean","x-go-name":"AllowMerge"},"allow_rebase":{"description":"either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.","type":"boolean","x-go-name":"AllowRebase"},"allow_rebase_explicit":{"description":"either `true` to allow rebase with explicit merge commits (--no-ff), or `false` to prevent rebase with explicit merge commits.","type":"boolean","x-go-name":"AllowRebaseMerge"},"allow_rebase_update":{"description":"either `true` to allow updating pull request branch by rebase, or `false` to prevent it.","type":"boolean","x-go-name":"AllowRebaseUpdate"},"allow_squash_merge":{"description":"either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.","type":"boolean","x-go-name":"AllowSquash"},"archived":{"description":"set to `true` to archive this repository.","type":"boolean","x-go-name":"Archived"},"autodetect_manual_merge":{"description":"either `true` to enable AutodetectManualMerge, or `false` to prevent it. Note: In some special cases, misjudgments can occur.","type":"boolean","x-go-name":"AutodetectManualMerge"},"default_allow_maintainer_edit":{"description":"set to `true` to allow edits from maintainers by default","type":"boolean","x-go-name":"DefaultAllowMaintainerEdit"},"default_branch":{"description":"sets the default branch for this repository.","type":"string","x-go-name":"DefaultBranch"},"default_delete_branch_after_merge":{"description":"set to `true` to delete pr branch after merge by default","type":"boolean","x-go-name":"DefaultDeleteBranchAfterMerge"},"default_merge_style":{"description":"set to a merge style to be used by this repository: \\"merge\\", \\"rebase\\", \\"rebase-merge\\", or \\"squash\\".","type":"string","x-go-name":"DefaultMergeStyle"},"description":{"description":"a short description of the repository.","type":"string","x-go-name":"Description"},"enable_prune":{"description":"enable prune - remove obsolete remote-tracking references","type":"boolean","x-go-name":"EnablePrune"},"external_tracker":{"$ref":"#/components/schemas/ExternalTracker"},"external_wiki":{"$ref":"#/components/schemas/ExternalWiki"},"has_actions":{"description":"either `true` to enable actions unit, or `false` to disable them.","type":"boolean","x-go-name":"HasActions"},"has_issues":{"description":"either `true` to enable issues for this repository or `false` to disable them.","type":"boolean","x-go-name":"HasIssues"},"has_packages":{"description":"either `true` to enable packages unit, or `false` to disable them.","type":"boolean","x-go-name":"HasPackages"},"has_projects":{"description":"either `true` to enable project unit, or `false` to disable them.","type":"boolean","x-go-name":"HasProjects"},"has_pull_requests":{"description":"either `true` to allow pull requests, or `false` to prevent pull request.","type":"boolean","x-go-name":"HasPullRequests"},"has_releases":{"description":"either `true` to enable releases unit, or `false` to disable them.","type":"boolean","x-go-name":"HasReleases"},"has_wiki":{"description":"either `true` to enable the wiki for this repository or `false` to disable it.","type":"boolean","x-go-name":"HasWiki"},"ignore_whitespace_conflicts":{"description":"either `true` to ignore whitespace for conflicts, or `false` to not ignore whitespace.","type":"boolean","x-go-name":"IgnoreWhitespaceConflicts"},"internal_tracker":{"$ref":"#/components/schemas/InternalTracker"},"mirror_interval":{"description":"set to a string like `8h30m0s` to set the mirror interval time","type":"string","x-go-name":"MirrorInterval"},"name":{"description":"name of the repository","type":"string","uniqueItems":true,"x-go-name":"Name"},"private":{"description":"either `true` to make the repository private or `false` to make it public.\\nNote: you will get a 422 error if the organization restricts changing repository visibility to organization\\nowners and a non-owner tries to change the value of private.","type":"boolean","x-go-name":"Private"},"template":{"description":"either `true` to make this repository a template or `false` to make it a normal repository","type":"boolean","x-go-name":"Template"},"website":{"description":"a URL with more information about the repository.","type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditTeamOption":{"description":"EditTeamOption options for editing a team","type":"object","required":["name"],"properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"permission":{"type":"string","enum":["read","write","admin"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":{"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditUserOption":{"description":"EditUserOption edit user options","type":"object","required":["source_id","login_name"],"properties":{"active":{"type":"boolean","x-go-name":"Active"},"admin":{"type":"boolean","x-go-name":"Admin"},"allow_create_organization":{"type":"boolean","x-go-name":"AllowCreateOrganization"},"allow_git_hook":{"type":"boolean","x-go-name":"AllowGitHook"},"allow_import_local":{"type":"boolean","x-go-name":"AllowImportLocal"},"description":{"type":"string","x-go-name":"Description"},"email":{"type":"string","format":"email","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"login_name":{"type":"string","x-go-name":"LoginName"},"max_repo_creation":{"type":"integer","format":"int64","x-go-name":"MaxRepoCreation"},"must_change_password":{"type":"boolean","x-go-name":"MustChangePassword"},"password":{"type":"string","x-go-name":"Password"},"prohibit_login":{"type":"boolean","x-go-name":"ProhibitLogin"},"restricted":{"type":"boolean","x-go-name":"Restricted"},"source_id":{"type":"integer","format":"int64","x-go-name":"SourceID"},"visibility":{"type":"string","x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Email":{"description":"Email an email address belonging to a user","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"primary":{"type":"boolean","x-go-name":"Primary"},"user_id":{"type":"integer","format":"int64","x-go-name":"UserID"},"username":{"type":"string","x-go-name":"UserName"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ExternalTracker":{"description":"ExternalTracker represents settings for external tracker","type":"object","properties":{"external_tracker_format":{"description":"External Issue Tracker URL Format. Use the placeholders {user}, {repo} and {index} for the username, repository name and issue index.","type":"string","x-go-name":"ExternalTrackerFormat"},"external_tracker_regexp_pattern":{"description":"External Issue Tracker issue regular expression","type":"string","x-go-name":"ExternalTrackerRegexpPattern"},"external_tracker_style":{"description":"External Issue Tracker Number Format, either `numeric`, `alphanumeric`, or `regexp`","type":"string","x-go-name":"ExternalTrackerStyle"},"external_tracker_url":{"description":"URL of external issue tracker.","type":"string","x-go-name":"ExternalTrackerURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ExternalWiki":{"description":"ExternalWiki represents setting for external wiki","type":"object","properties":{"external_wiki_url":{"description":"URL of external wiki.","type":"string","x-go-name":"ExternalWikiURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileCommitResponse":{"type":"object","title":"FileCommitResponse contains information generated from a Git commit for a repo\'s file.","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"committer":{"$ref":"#/components/schemas/CommitUser"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"message":{"type":"string","x-go-name":"Message"},"parents":{"type":"array","items":{"$ref":"#/components/schemas/CommitMeta"},"x-go-name":"Parents"},"sha":{"type":"string","x-go-name":"SHA"},"tree":{"$ref":"#/components/schemas/CommitMeta"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileDeleteResponse":{"description":"FileDeleteResponse contains information about a repo\'s file that was deleted","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"content":{"x-go-name":"Content"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileLinksResponse":{"description":"FileLinksResponse contains the links for a repo\'s file","type":"object","properties":{"git":{"type":"string","x-go-name":"GitURL"},"html":{"type":"string","x-go-name":"HTMLURL"},"self":{"type":"string","x-go-name":"Self"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileResponse":{"description":"FileResponse contains information about a repo\'s file","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"content":{"$ref":"#/components/schemas/ContentsResponse"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FilesResponse":{"description":"FilesResponse contains information about multiple files from a repo","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"files":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"},"x-go-name":"Files"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GPGKey":{"description":"GPGKey a user GPG key to sign commit and tag in repository","type":"object","properties":{"can_certify":{"type":"boolean","x-go-name":"CanCertify"},"can_encrypt_comms":{"type":"boolean","x-go-name":"CanEncryptComms"},"can_encrypt_storage":{"type":"boolean","x-go-name":"CanEncryptStorage"},"can_sign":{"type":"boolean","x-go-name":"CanSign"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"emails":{"type":"array","items":{"$ref":"#/components/schemas/GPGKeyEmail"},"x-go-name":"Emails"},"expires_at":{"type":"string","format":"date-time","x-go-name":"Expires"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key_id":{"type":"string","x-go-name":"KeyID"},"primary_key_id":{"type":"string","x-go-name":"PrimaryKeyID"},"public_key":{"type":"string","x-go-name":"PublicKey"},"subkeys":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"},"x-go-name":"SubsKey"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GPGKeyEmail":{"description":"GPGKeyEmail an email attached to a GPGKey","type":"object","properties":{"email":{"type":"string","x-go-name":"Email"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralAPISettings":{"description":"GeneralAPISettings contains global api settings exposed by it","type":"object","properties":{"default_git_trees_per_page":{"type":"integer","format":"int64","x-go-name":"DefaultGitTreesPerPage"},"default_max_blob_size":{"type":"integer","format":"int64","x-go-name":"DefaultMaxBlobSize"},"default_paging_num":{"type":"integer","format":"int64","x-go-name":"DefaultPagingNum"},"max_response_items":{"type":"integer","format":"int64","x-go-name":"MaxResponseItems"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralAttachmentSettings":{"description":"GeneralAttachmentSettings contains global Attachment settings exposed by API","type":"object","properties":{"allowed_types":{"type":"string","x-go-name":"AllowedTypes"},"enabled":{"type":"boolean","x-go-name":"Enabled"},"max_files":{"type":"integer","format":"int64","x-go-name":"MaxFiles"},"max_size":{"type":"integer","format":"int64","x-go-name":"MaxSize"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralRepoSettings":{"description":"GeneralRepoSettings contains global repository settings exposed by API","type":"object","properties":{"http_git_disabled":{"type":"boolean","x-go-name":"HTTPGitDisabled"},"lfs_disabled":{"type":"boolean","x-go-name":"LFSDisabled"},"migrations_disabled":{"type":"boolean","x-go-name":"MigrationsDisabled"},"mirrors_disabled":{"type":"boolean","x-go-name":"MirrorsDisabled"},"stars_disabled":{"type":"boolean","x-go-name":"StarsDisabled"},"time_tracking_disabled":{"type":"boolean","x-go-name":"TimeTrackingDisabled"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralUISettings":{"description":"GeneralUISettings contains global ui settings exposed by API","type":"object","properties":{"allowed_reactions":{"type":"array","items":{"type":"string"},"x-go-name":"AllowedReactions"},"custom_emojis":{"type":"array","items":{"type":"string"},"x-go-name":"CustomEmojis"},"default_theme":{"type":"string","x-go-name":"DefaultTheme"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GenerateRepoOption":{"description":"GenerateRepoOption options when creating repository using a template","type":"object","required":["owner","name"],"properties":{"avatar":{"description":"include avatar of the template repo","type":"boolean","x-go-name":"Avatar"},"default_branch":{"description":"Default branch of the new repository","type":"string","x-go-name":"DefaultBranch"},"description":{"description":"Description of the repository to create","type":"string","x-go-name":"Description"},"git_content":{"description":"include git content of default branch in template repo","type":"boolean","x-go-name":"GitContent"},"git_hooks":{"description":"include git hooks in template repo","type":"boolean","x-go-name":"GitHooks"},"labels":{"description":"include labels in template repo","type":"boolean","x-go-name":"Labels"},"name":{"description":"Name of the repository to create","type":"string","uniqueItems":true,"x-go-name":"Name"},"owner":{"description":"The organization or person who will own the new repository","type":"string","x-go-name":"Owner"},"private":{"description":"Whether the repository is private","type":"boolean","x-go-name":"Private"},"topics":{"description":"include topics in template repo","type":"boolean","x-go-name":"Topics"},"webhooks":{"description":"include webhooks in template repo","type":"boolean","x-go-name":"Webhooks"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitBlobResponse":{"description":"GitBlobResponse represents a git blob","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"},"encoding":{"type":"string","x-go-name":"Encoding"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitEntry":{"description":"GitEntry represents a git tree","type":"object","properties":{"mode":{"type":"string","x-go-name":"Mode"},"path":{"type":"string","x-go-name":"Path"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitHook":{"description":"GitHook represents a Git repository hook","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"},"is_active":{"type":"boolean","x-go-name":"IsActive"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitObject":{"type":"object","title":"GitObject represents a Git object.","properties":{"sha":{"type":"string","x-go-name":"SHA"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitTreeResponse":{"description":"GitTreeResponse returns a git tree","type":"object","properties":{"page":{"type":"integer","format":"int64","x-go-name":"Page"},"sha":{"type":"string","x-go-name":"SHA"},"total_count":{"type":"integer","format":"int64","x-go-name":"TotalCount"},"tree":{"type":"array","items":{"$ref":"#/components/schemas/GitEntry"},"x-go-name":"Entries"},"truncated":{"type":"boolean","x-go-name":"Truncated"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitignoreTemplateInfo":{"description":"GitignoreTemplateInfo name and text of a gitignore template","type":"object","properties":{"name":{"type":"string","x-go-name":"Name"},"source":{"type":"string","x-go-name":"Source"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Hook":{"description":"Hook a hook is a web hook when one repository changed","type":"object","properties":{"active":{"type":"boolean","x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"Config"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"type":{"type":"string","x-go-name":"Type"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Identity":{"description":"Identity for a person\'s identity like an author or committer","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"InternalTracker":{"description":"InternalTracker represents settings for internal tracker","type":"object","properties":{"allow_only_contributors_to_track_time":{"description":"Let only contributors track time (Built-in issue tracker)","type":"boolean","x-go-name":"AllowOnlyContributorsToTrackTime"},"enable_issue_dependencies":{"description":"Enable dependencies for issues and pull requests (Built-in issue tracker)","type":"boolean","x-go-name":"EnableIssueDependencies"},"enable_time_tracker":{"description":"Enable time tracking (Built-in issue tracker)","type":"boolean","x-go-name":"EnableTimeTracker"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Issue":{"description":"Issue represents an issue in a repository","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"assignee":{"$ref":"#/components/schemas/User"},"assignees":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"comments":{"type":"integer","format":"int64","x-go-name":"Comments"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_locked":{"type":"boolean","x-go-name":"IsLocked"},"labels":{"type":"array","items":{"$ref":"#/components/schemas/Label"},"x-go-name":"Labels"},"milestone":{"$ref":"#/components/schemas/Milestone"},"number":{"type":"integer","format":"int64","x-go-name":"Index"},"original_author":{"type":"string","x-go-name":"OriginalAuthor"},"original_author_id":{"type":"integer","format":"int64","x-go-name":"OriginalAuthorID"},"pin_order":{"type":"integer","format":"int64","x-go-name":"PinOrder"},"pull_request":{"$ref":"#/components/schemas/PullRequestMeta"},"ref":{"type":"string","x-go-name":"Ref"},"repository":{"$ref":"#/components/schemas/RepositoryMeta"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueConfig":{"type":"object","properties":{"blank_issues_enabled":{"type":"boolean","x-go-name":"BlankIssuesEnabled"},"contact_links":{"type":"array","items":{"$ref":"#/components/schemas/IssueConfigContactLink"},"x-go-name":"ContactLinks"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueConfigContactLink":{"type":"object","properties":{"about":{"type":"string","x-go-name":"About"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueConfigValidation":{"type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"valid":{"type":"boolean","x-go-name":"Valid"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueDeadline":{"description":"IssueDeadline represents an issue deadline","type":"object","properties":{"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueFormField":{"description":"IssueFormField represents a form field","type":"object","properties":{"attributes":{"type":"object","additionalProperties":{},"x-go-name":"Attributes"},"id":{"type":"string","x-go-name":"ID"},"type":{"$ref":"#/components/schemas/IssueFormFieldType"},"validations":{"type":"object","additionalProperties":{},"x-go-name":"Validations"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueFormFieldType":{"type":"string","title":"IssueFormFieldType defines issue form field type, can be \\"markdown\\", \\"textarea\\", \\"input\\", \\"dropdown\\" or \\"checkboxes\\"","x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueLabelsOption":{"description":"IssueLabelsOption a collection of labels","type":"object","properties":{"labels":{"description":"list of label IDs","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueMeta":{"description":"IssueMeta basic issue information","type":"object","properties":{"index":{"type":"integer","format":"int64","x-go-name":"Index"},"owner":{"type":"string","x-go-name":"Owner"},"repo":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueTemplate":{"description":"IssueTemplate represents an issue template for a repository","type":"object","properties":{"about":{"type":"string","x-go-name":"About"},"body":{"type":"array","items":{"$ref":"#/components/schemas/IssueFormField"},"x-go-name":"Fields"},"content":{"type":"string","x-go-name":"Content"},"file_name":{"type":"string","x-go-name":"FileName"},"labels":{"$ref":"#/components/schemas/IssueTemplateLabels"},"name":{"type":"string","x-go-name":"Name"},"ref":{"type":"string","x-go-name":"Ref"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueTemplateLabels":{"type":"array","items":{"type":"string"},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Label":{"description":"Label a label to an issue or a pr","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"LabelTemplate":{"description":"LabelTemplate info of a Label template","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"LicenseTemplateInfo":{"description":"LicensesInfo contains information about a License","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"implementation":{"type":"string","x-go-name":"Implementation"},"key":{"type":"string","x-go-name":"Key"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"LicensesTemplateListEntry":{"description":"LicensesListEntry is used for the API","type":"object","properties":{"key":{"type":"string","x-go-name":"Key"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MarkdownOption":{"description":"MarkdownOption markdown options","type":"object","properties":{"Context":{"description":"Context to render\\n\\nin: body","type":"string"},"Mode":{"description":"Mode to render (comment, gfm, markdown)\\n\\nin: body","type":"string"},"Text":{"description":"Text markdown to render\\n\\nin: body","type":"string"},"Wiki":{"description":"Is it a wiki page ?\\n\\nin: body","type":"boolean"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MarkupOption":{"description":"MarkupOption markup options","type":"object","properties":{"Context":{"description":"Context to render\\n\\nin: body","type":"string"},"FilePath":{"description":"File path for detecting extension in file mode\\n\\nin: body","type":"string"},"Mode":{"description":"Mode to render (comment, gfm, markdown, file)\\n\\nin: body","type":"string"},"Text":{"description":"Text markup to render\\n\\nin: body","type":"string"},"Wiki":{"description":"Is it a wiki page ?\\n\\nin: body","type":"boolean"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MergePullRequestOption":{"description":"MergePullRequestForm form for merging Pull Request","type":"object","required":["Do"],"properties":{"Do":{"type":"string","enum":["merge","rebase","rebase-merge","squash","manually-merged"]},"MergeCommitID":{"type":"string"},"MergeMessageField":{"type":"string"},"MergeTitleField":{"type":"string"},"delete_branch_after_merge":{"type":"boolean","x-go-name":"DeleteBranchAfterMerge"},"force_merge":{"type":"boolean","x-go-name":"ForceMerge"},"head_commit_id":{"type":"string","x-go-name":"HeadCommitID"},"merge_when_checks_succeed":{"type":"boolean","x-go-name":"MergeWhenChecksSucceed"}},"x-go-name":"MergePullRequestForm","x-go-package":"code.gitea.io/gitea/services/forms"},"MigrateRepoOptions":{"description":"MigrateRepoOptions options for migrating repository\'s\\nthis is used to interact with api v1","type":"object","required":["clone_addr","repo_name"],"properties":{"auth_password":{"type":"string","x-go-name":"AuthPassword"},"auth_token":{"type":"string","x-go-name":"AuthToken"},"auth_username":{"type":"string","x-go-name":"AuthUsername"},"clone_addr":{"type":"string","x-go-name":"CloneAddr"},"description":{"type":"string","x-go-name":"Description"},"issues":{"type":"boolean","x-go-name":"Issues"},"labels":{"type":"boolean","x-go-name":"Labels"},"lfs":{"type":"boolean","x-go-name":"LFS"},"lfs_endpoint":{"type":"string","x-go-name":"LFSEndpoint"},"milestones":{"type":"boolean","x-go-name":"Milestones"},"mirror":{"type":"boolean","x-go-name":"Mirror"},"mirror_interval":{"type":"string","x-go-name":"MirrorInterval"},"private":{"type":"boolean","x-go-name":"Private"},"pull_requests":{"type":"boolean","x-go-name":"PullRequests"},"releases":{"type":"boolean","x-go-name":"Releases"},"repo_name":{"type":"string","x-go-name":"RepoName"},"repo_owner":{"description":"Name of User or Organisation who will own Repo after migration","type":"string","x-go-name":"RepoOwner"},"service":{"type":"string","enum":["git","github","gitea","gitlab","gogs","onedev","gitbucket","codebase"],"x-go-name":"Service"},"uid":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"RepoOwnerID"},"wiki":{"type":"boolean","x-go-name":"Wiki"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Milestone":{"description":"Milestone milestone is a collection of issues on one repository","type":"object","properties":{"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"closed_issues":{"type":"integer","format":"int64","x-go-name":"ClosedIssues"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"open_issues":{"type":"integer","format":"int64","x-go-name":"OpenIssues"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NewIssuePinsAllowed":{"description":"NewIssuePinsAllowed represents an API response that says if new Issue Pins are allowed","type":"object","properties":{"issues":{"type":"boolean","x-go-name":"Issues"},"pull_requests":{"type":"boolean","x-go-name":"PullRequests"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfo":{"description":"NodeInfo contains standardized way of exposing metadata about a server running one of the distributed social networks","type":"object","properties":{"metadata":{"type":"object","x-go-name":"Metadata"},"openRegistrations":{"type":"boolean","x-go-name":"OpenRegistrations"},"protocols":{"type":"array","items":{"type":"string"},"x-go-name":"Protocols"},"services":{"$ref":"#/components/schemas/NodeInfoServices"},"software":{"$ref":"#/components/schemas/NodeInfoSoftware"},"usage":{"$ref":"#/components/schemas/NodeInfoUsage"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoServices":{"description":"NodeInfoServices contains the third party sites this server can connect to via their application API","type":"object","properties":{"inbound":{"type":"array","items":{"type":"string"},"x-go-name":"Inbound"},"outbound":{"type":"array","items":{"type":"string"},"x-go-name":"Outbound"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoSoftware":{"description":"NodeInfoSoftware contains Metadata about server software in use","type":"object","properties":{"homepage":{"type":"string","x-go-name":"Homepage"},"name":{"type":"string","x-go-name":"Name"},"repository":{"type":"string","x-go-name":"Repository"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoUsage":{"description":"NodeInfoUsage contains usage statistics for this server","type":"object","properties":{"localComments":{"type":"integer","format":"int64","x-go-name":"LocalComments"},"localPosts":{"type":"integer","format":"int64","x-go-name":"LocalPosts"},"users":{"$ref":"#/components/schemas/NodeInfoUsageUsers"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoUsageUsers":{"description":"NodeInfoUsageUsers contains statistics about the users of this server","type":"object","properties":{"activeHalfyear":{"type":"integer","format":"int64","x-go-name":"ActiveHalfyear"},"activeMonth":{"type":"integer","format":"int64","x-go-name":"ActiveMonth"},"total":{"type":"integer","format":"int64","x-go-name":"Total"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Note":{"description":"Note contains information related to a git note","type":"object","properties":{"commit":{"$ref":"#/components/schemas/Commit"},"message":{"type":"string","x-go-name":"Message"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationCount":{"description":"NotificationCount number of unread notifications","type":"object","properties":{"new":{"type":"integer","format":"int64","x-go-name":"New"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationSubject":{"description":"NotificationSubject contains the notification subject (Issue/Pull/Commit)","type":"object","properties":{"html_url":{"type":"string","x-go-name":"HTMLURL"},"latest_comment_html_url":{"type":"string","x-go-name":"LatestCommentHTMLURL"},"latest_comment_url":{"type":"string","x-go-name":"LatestCommentURL"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"type":{"$ref":"#/components/schemas/NotifySubjectType"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationThread":{"description":"NotificationThread expose Notification on API","type":"object","properties":{"id":{"type":"integer","format":"int64","x-go-name":"ID"},"pinned":{"type":"boolean","x-go-name":"Pinned"},"repository":{"$ref":"#/components/schemas/Repository"},"subject":{"$ref":"#/components/schemas/NotificationSubject"},"unread":{"type":"boolean","x-go-name":"Unread"},"updated_at":{"type":"string","format":"date-time","x-go-name":"UpdatedAt"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotifySubjectType":{"description":"NotifySubjectType represent type of notification subject","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"OAuth2Application":{"type":"object","title":"OAuth2Application represents an OAuth2 application.","properties":{"client_id":{"type":"string","x-go-name":"ClientID"},"client_secret":{"type":"string","x-go-name":"ClientSecret"},"confidential_client":{"type":"boolean","x-go-name":"ConfidentialClient"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"redirect_uris":{"type":"array","items":{"type":"string"},"x-go-name":"RedirectURIs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Organization":{"description":"Organization represents an organization","type":"object","properties":{"avatar_url":{"type":"string","x-go-name":"AvatarURL"},"description":{"type":"string","x-go-name":"Description"},"full_name":{"type":"string","x-go-name":"FullName"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"location":{"type":"string","x-go-name":"Location"},"name":{"type":"string","x-go-name":"Name"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"username":{"description":"deprecated","type":"string","x-go-name":"UserName"},"visibility":{"type":"string","x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"OrganizationPermissions":{"description":"OrganizationPermissions list different users permissions on an organization","type":"object","properties":{"can_create_repository":{"type":"boolean","x-go-name":"CanCreateRepository"},"can_read":{"type":"boolean","x-go-name":"CanRead"},"can_write":{"type":"boolean","x-go-name":"CanWrite"},"is_admin":{"type":"boolean","x-go-name":"IsAdmin"},"is_owner":{"type":"boolean","x-go-name":"IsOwner"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PRBranchInfo":{"description":"PRBranchInfo information about a branch","type":"object","properties":{"label":{"type":"string","x-go-name":"Name"},"ref":{"type":"string","x-go-name":"Ref"},"repo":{"$ref":"#/components/schemas/Repository"},"repo_id":{"type":"integer","format":"int64","x-go-name":"RepoID"},"sha":{"type":"string","x-go-name":"Sha"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Package":{"description":"Package represents a package","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"creator":{"$ref":"#/components/schemas/User"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"owner":{"$ref":"#/components/schemas/User"},"repository":{"$ref":"#/components/schemas/Repository"},"type":{"type":"string","x-go-name":"Type"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PackageFile":{"description":"PackageFile represents a package file","type":"object","properties":{"Size":{"type":"integer","format":"int64"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"md5":{"type":"string","x-go-name":"HashMD5"},"name":{"type":"string","x-go-name":"Name"},"sha1":{"type":"string","x-go-name":"HashSHA1"},"sha256":{"type":"string","x-go-name":"HashSHA256"},"sha512":{"type":"string","x-go-name":"HashSHA512"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadCommit":{"description":"PayloadCommit represents a commit","type":"object","properties":{"added":{"type":"array","items":{"type":"string"},"x-go-name":"Added"},"author":{"$ref":"#/components/schemas/PayloadUser"},"committer":{"$ref":"#/components/schemas/PayloadUser"},"id":{"description":"sha1 hash of the commit","type":"string","x-go-name":"ID"},"message":{"type":"string","x-go-name":"Message"},"modified":{"type":"array","items":{"type":"string"},"x-go-name":"Modified"},"removed":{"type":"array","items":{"type":"string"},"x-go-name":"Removed"},"timestamp":{"type":"string","format":"date-time","x-go-name":"Timestamp"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadCommitVerification":{"description":"PayloadCommitVerification represents the GPG verification of a commit","type":"object","properties":{"payload":{"type":"string","x-go-name":"Payload"},"reason":{"type":"string","x-go-name":"Reason"},"signature":{"type":"string","x-go-name":"Signature"},"signer":{"$ref":"#/components/schemas/PayloadUser"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadUser":{"description":"PayloadUser represents the author or committer of a commit","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"description":"Full name of the commit author","type":"string","x-go-name":"Name"},"username":{"type":"string","x-go-name":"UserName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Permission":{"description":"Permission represents a set of permissions","type":"object","properties":{"admin":{"type":"boolean","x-go-name":"Admin"},"pull":{"type":"boolean","x-go-name":"Pull"},"push":{"type":"boolean","x-go-name":"Push"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PublicKey":{"description":"PublicKey publickey is a user key to push code to repository","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"fingerprint":{"type":"string","x-go-name":"Fingerprint"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key":{"type":"string","x-go-name":"Key"},"key_type":{"type":"string","x-go-name":"KeyType"},"read_only":{"type":"boolean","x-go-name":"ReadOnly"},"title":{"type":"string","x-go-name":"Title"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullRequest":{"description":"PullRequest represents a pull request","type":"object","properties":{"allow_maintainer_edit":{"type":"boolean","x-go-name":"AllowMaintainerEdit"},"assignee":{"$ref":"#/components/schemas/User"},"assignees":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"Assignees"},"base":{"$ref":"#/components/schemas/PRBranchInfo"},"body":{"type":"string","x-go-name":"Body"},"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"comments":{"type":"integer","format":"int64","x-go-name":"Comments"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"diff_url":{"type":"string","x-go-name":"DiffURL"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"head":{"$ref":"#/components/schemas/PRBranchInfo"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_locked":{"type":"boolean","x-go-name":"IsLocked"},"labels":{"type":"array","items":{"$ref":"#/components/schemas/Label"},"x-go-name":"Labels"},"merge_base":{"type":"string","x-go-name":"MergeBase"},"merge_commit_sha":{"type":"string","x-go-name":"MergedCommitID"},"mergeable":{"type":"boolean","x-go-name":"Mergeable"},"merged":{"type":"boolean","x-go-name":"HasMerged"},"merged_at":{"type":"string","format":"date-time","x-go-name":"Merged"},"merged_by":{"$ref":"#/components/schemas/User"},"milestone":{"$ref":"#/components/schemas/Milestone"},"number":{"type":"integer","format":"int64","x-go-name":"Index"},"patch_url":{"type":"string","x-go-name":"PatchURL"},"pin_order":{"type":"integer","format":"int64","x-go-name":"PinOrder"},"requested_reviewers":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"RequestedReviewers"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullRequestMeta":{"description":"PullRequestMeta PR info if an issue is a PR","type":"object","properties":{"merged":{"type":"boolean","x-go-name":"HasMerged"},"merged_at":{"type":"string","format":"date-time","x-go-name":"Merged"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReview":{"description":"PullReview represents a pull request review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"comments_count":{"type":"integer","format":"int64","x-go-name":"CodeCommentsCount"},"commit_id":{"type":"string","x-go-name":"CommitID"},"dismissed":{"type":"boolean","x-go-name":"Dismissed"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"official":{"type":"boolean","x-go-name":"Official"},"pull_request_url":{"type":"string","x-go-name":"HTMLPullURL"},"stale":{"type":"boolean","x-go-name":"Stale"},"state":{"$ref":"#/components/schemas/ReviewStateType"},"submitted_at":{"type":"string","format":"date-time","x-go-name":"Submitted"},"team":{"$ref":"#/components/schemas/Team"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReviewComment":{"description":"PullReviewComment represents a comment on a pull request review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"commit_id":{"type":"string","x-go-name":"CommitID"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"diff_hunk":{"type":"string","x-go-name":"DiffHunk"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"original_commit_id":{"type":"string","x-go-name":"OrigCommitID"},"original_position":{"type":"integer","format":"uint64","x-go-name":"OldLineNum"},"path":{"type":"string","x-go-name":"Path"},"position":{"type":"integer","format":"uint64","x-go-name":"LineNum"},"pull_request_review_id":{"type":"integer","format":"int64","x-go-name":"ReviewID"},"pull_request_url":{"type":"string","x-go-name":"HTMLPullURL"},"resolver":{"$ref":"#/components/schemas/User"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReviewRequestOptions":{"description":"PullReviewRequestOptions are options to add or remove pull review requests","type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string"},"x-go-name":"Reviewers"},"team_reviewers":{"type":"array","items":{"type":"string"},"x-go-name":"TeamReviewers"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PushMirror":{"description":"PushMirror represents information of a push mirror","type":"object","properties":{"created":{"type":"string","x-go-name":"CreatedUnix"},"interval":{"type":"string","x-go-name":"Interval"},"last_error":{"type":"string","x-go-name":"LastError"},"last_update":{"type":"string","x-go-name":"LastUpdateUnix"},"remote_address":{"type":"string","x-go-name":"RemoteAddress"},"remote_name":{"type":"string","x-go-name":"RemoteName"},"repo_name":{"type":"string","x-go-name":"RepoName"},"sync_on_commit":{"type":"boolean","x-go-name":"SyncOnCommit"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Reaction":{"description":"Reaction contain one reaction","type":"object","properties":{"content":{"type":"string","x-go-name":"Reaction"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Reference":{"type":"object","title":"Reference represents a Git reference.","properties":{"object":{"$ref":"#/components/schemas/GitObject"},"ref":{"type":"string","x-go-name":"Ref"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Release":{"description":"Release represents a repository release","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"author":{"$ref":"#/components/schemas/User"},"body":{"type":"string","x-go-name":"Note"},"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"published_at":{"type":"string","format":"date-time","x-go-name":"PublishedAt"},"tag_name":{"type":"string","x-go-name":"TagName"},"tarball_url":{"type":"string","x-go-name":"TarURL"},"target_commitish":{"type":"string","x-go-name":"Target"},"url":{"type":"string","x-go-name":"URL"},"zipball_url":{"type":"string","x-go-name":"ZipURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RenameUserOption":{"description":"RenameUserOption options when renaming a user","type":"object","required":["new_username"],"properties":{"new_username":{"description":"New username for this user. This name cannot be in use yet by any other user.","type":"string","uniqueItems":true,"x-go-name":"NewName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoCollaboratorPermission":{"description":"RepoCollaboratorPermission to get repository permission for a collaborator","type":"object","properties":{"permission":{"type":"string","x-go-name":"Permission"},"role_name":{"type":"string","x-go-name":"RoleName"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoCommit":{"type":"object","title":"RepoCommit contains information of a commit in the context of a repository.","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"committer":{"$ref":"#/components/schemas/CommitUser"},"message":{"type":"string","x-go-name":"Message"},"tree":{"$ref":"#/components/schemas/CommitMeta"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoTopicOptions":{"description":"RepoTopicOptions a collection of repo topic names","type":"object","properties":{"topics":{"description":"list of topic names","type":"array","items":{"type":"string"},"x-go-name":"Topics"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoTransfer":{"description":"RepoTransfer represents a pending repo transfer","type":"object","properties":{"doer":{"$ref":"#/components/schemas/User"},"recipient":{"$ref":"#/components/schemas/User"},"teams":{"type":"array","items":{"$ref":"#/components/schemas/Team"},"x-go-name":"Teams"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Repository":{"description":"Repository represents a repository","type":"object","properties":{"allow_merge_commits":{"type":"boolean","x-go-name":"AllowMerge"},"allow_rebase":{"type":"boolean","x-go-name":"AllowRebase"},"allow_rebase_explicit":{"type":"boolean","x-go-name":"AllowRebaseMerge"},"allow_rebase_update":{"type":"boolean","x-go-name":"AllowRebaseUpdate"},"allow_squash_merge":{"type":"boolean","x-go-name":"AllowSquash"},"archived":{"type":"boolean","x-go-name":"Archived"},"archived_at":{"type":"string","format":"date-time","x-go-name":"ArchivedAt"},"avatar_url":{"type":"string","x-go-name":"AvatarURL"},"clone_url":{"type":"string","x-go-name":"CloneURL"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"default_allow_maintainer_edit":{"type":"boolean","x-go-name":"DefaultAllowMaintainerEdit"},"default_branch":{"type":"string","x-go-name":"DefaultBranch"},"default_delete_branch_after_merge":{"type":"boolean","x-go-name":"DefaultDeleteBranchAfterMerge"},"default_merge_style":{"type":"string","x-go-name":"DefaultMergeStyle"},"description":{"type":"string","x-go-name":"Description"},"empty":{"type":"boolean","x-go-name":"Empty"},"external_tracker":{"$ref":"#/components/schemas/ExternalTracker"},"external_wiki":{"$ref":"#/components/schemas/ExternalWiki"},"fork":{"type":"boolean","x-go-name":"Fork"},"forks_count":{"type":"integer","format":"int64","x-go-name":"Forks"},"full_name":{"type":"string","x-go-name":"FullName"},"has_actions":{"type":"boolean","x-go-name":"HasActions"},"has_issues":{"type":"boolean","x-go-name":"HasIssues"},"has_packages":{"type":"boolean","x-go-name":"HasPackages"},"has_projects":{"type":"boolean","x-go-name":"HasProjects"},"has_pull_requests":{"type":"boolean","x-go-name":"HasPullRequests"},"has_releases":{"type":"boolean","x-go-name":"HasReleases"},"has_wiki":{"type":"boolean","x-go-name":"HasWiki"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"ignore_whitespace_conflicts":{"type":"boolean","x-go-name":"IgnoreWhitespaceConflicts"},"internal":{"type":"boolean","x-go-name":"Internal"},"internal_tracker":{"$ref":"#/components/schemas/InternalTracker"},"language":{"type":"string","x-go-name":"Language"},"languages_url":{"type":"string","x-go-name":"LanguagesURL"},"link":{"type":"string","x-go-name":"Link"},"mirror":{"type":"boolean","x-go-name":"Mirror"},"mirror_interval":{"type":"string","x-go-name":"MirrorInterval"},"mirror_updated":{"type":"string","format":"date-time","x-go-name":"MirrorUpdated"},"name":{"type":"string","x-go-name":"Name"},"open_issues_count":{"type":"integer","format":"int64","x-go-name":"OpenIssues"},"open_pr_counter":{"type":"integer","format":"int64","x-go-name":"OpenPulls"},"original_url":{"type":"string","x-go-name":"OriginalURL"},"owner":{"$ref":"#/components/schemas/User"},"parent":{"$ref":"#/components/schemas/Repository"},"permissions":{"$ref":"#/components/schemas/Permission"},"private":{"type":"boolean","x-go-name":"Private"},"release_counter":{"type":"integer","format":"int64","x-go-name":"Releases"},"repo_transfer":{"$ref":"#/components/schemas/RepoTransfer"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"ssh_url":{"type":"string","x-go-name":"SSHURL"},"stars_count":{"type":"integer","format":"int64","x-go-name":"Stars"},"template":{"type":"boolean","x-go-name":"Template"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"watchers_count":{"type":"integer","format":"int64","x-go-name":"Watchers"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepositoryMeta":{"description":"RepositoryMeta basic repository information","type":"object","properties":{"full_name":{"type":"string","x-go-name":"FullName"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"owner":{"type":"string","x-go-name":"Owner"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ReviewStateType":{"description":"ReviewStateType review state type","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"SearchResults":{"description":"SearchResults results of a successful search","type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Repository"},"x-go-name":"Data"},"ok":{"type":"boolean","x-go-name":"OK"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ServerVersion":{"description":"ServerVersion wraps the version of the server","type":"object","properties":{"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"StateType":{"description":"StateType issue state type","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"StopWatch":{"description":"StopWatch represent a running stopwatch","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"duration":{"type":"string","x-go-name":"Duration"},"issue_index":{"type":"integer","format":"int64","x-go-name":"IssueIndex"},"issue_title":{"type":"string","x-go-name":"IssueTitle"},"repo_name":{"type":"string","x-go-name":"RepoName"},"repo_owner_name":{"type":"string","x-go-name":"RepoOwnerName"},"seconds":{"type":"integer","format":"int64","x-go-name":"Seconds"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"SubmitPullReviewOptions":{"description":"SubmitPullReviewOptions are options to submit a pending pull review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"event":{"$ref":"#/components/schemas/ReviewStateType"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Tag":{"description":"Tag represents a repository tag","type":"object","properties":{"commit":{"$ref":"#/components/schemas/CommitMeta"},"id":{"type":"string","x-go-name":"ID"},"message":{"type":"string","x-go-name":"Message"},"name":{"type":"string","x-go-name":"Name"},"tarball_url":{"type":"string","x-go-name":"TarballURL"},"zipball_url":{"type":"string","x-go-name":"ZipballURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Team":{"description":"Team represents a team in an organization","type":"object","properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"organization":{"$ref":"#/components/schemas/Organization"},"permission":{"type":"string","enum":["none","read","write","admin","owner"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":{"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TimeStamp":{"description":"TimeStamp defines a timestamp","type":"integer","format":"int64","x-go-package":"code.gitea.io/gitea/modules/timeutil"},"TimelineComment":{"description":"TimelineComment represents a timeline comment (comment of any type) on a commit or issue","type":"object","properties":{"assignee":{"$ref":"#/components/schemas/User"},"assignee_team":{"$ref":"#/components/schemas/Team"},"body":{"type":"string","x-go-name":"Body"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"dependent_issue":{"$ref":"#/components/schemas/Issue"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue_url":{"type":"string","x-go-name":"IssueURL"},"label":{"$ref":"#/components/schemas/Label"},"milestone":{"$ref":"#/components/schemas/Milestone"},"new_ref":{"type":"string","x-go-name":"NewRef"},"new_title":{"type":"string","x-go-name":"NewTitle"},"old_milestone":{"$ref":"#/components/schemas/Milestone"},"old_project_id":{"type":"integer","format":"int64","x-go-name":"OldProjectID"},"old_ref":{"type":"string","x-go-name":"OldRef"},"old_title":{"type":"string","x-go-name":"OldTitle"},"project_id":{"type":"integer","format":"int64","x-go-name":"ProjectID"},"pull_request_url":{"type":"string","x-go-name":"PRURL"},"ref_action":{"type":"string","x-go-name":"RefAction"},"ref_comment":{"$ref":"#/components/schemas/Comment"},"ref_commit_sha":{"description":"commit SHA where issue/PR was referenced","type":"string","x-go-name":"RefCommitSHA"},"ref_issue":{"$ref":"#/components/schemas/Issue"},"removed_assignee":{"description":"whether the assignees were removed or added","type":"boolean","x-go-name":"RemovedAssignee"},"resolve_doer":{"$ref":"#/components/schemas/User"},"review_id":{"type":"integer","format":"int64","x-go-name":"ReviewID"},"tracked_time":{"$ref":"#/components/schemas/TrackedTime"},"type":{"type":"string","x-go-name":"Type"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TopicName":{"description":"TopicName a list of repo topic names","type":"object","properties":{"topics":{"type":"array","items":{"type":"string"},"x-go-name":"TopicNames"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TopicResponse":{"description":"TopicResponse for returning topics","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"repo_count":{"type":"integer","format":"int64","x-go-name":"RepoCount"},"topic_name":{"type":"string","x-go-name":"Name"},"updated":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TrackedTime":{"description":"TrackedTime worked time for an issue / pr","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue":{"$ref":"#/components/schemas/Issue"},"issue_id":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"IssueID"},"time":{"description":"Time in seconds","type":"integer","format":"int64","x-go-name":"Time"},"user_id":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"UserID"},"user_name":{"type":"string","x-go-name":"UserName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TransferRepoOption":{"description":"TransferRepoOption options when transfer a repository\'s ownership","type":"object","required":["new_owner"],"properties":{"new_owner":{"type":"string","x-go-name":"NewOwner"},"team_ids":{"description":"ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"TeamIDs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UpdateFileOptions":{"description":"UpdateFileOptions options for updating files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["sha","content"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"content":{"description":"content must be base64 encoded","type":"string","x-go-name":"Content"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"from_path":{"description":"from_path (optional) is the path of the original file which will be moved/renamed to the path in the URL","type":"string","x-go-name":"FromPath"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"sha":{"description":"sha is the SHA for the file that already exists","type":"string","x-go-name":"SHA"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"User":{"description":"User represents a user","type":"object","properties":{"active":{"description":"Is user active","type":"boolean","x-go-name":"IsActive"},"avatar_url":{"description":"URL to the user\'s avatar","type":"string","x-go-name":"AvatarURL"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"description":{"description":"the user\'s description","type":"string","x-go-name":"Description"},"email":{"type":"string","format":"email","x-go-name":"Email"},"followers_count":{"description":"user counts","type":"integer","format":"int64","x-go-name":"Followers"},"following_count":{"type":"integer","format":"int64","x-go-name":"Following"},"full_name":{"description":"the user\'s full name","type":"string","x-go-name":"FullName"},"id":{"description":"the user\'s id","type":"integer","format":"int64","x-go-name":"ID"},"is_admin":{"description":"Is the user an administrator","type":"boolean","x-go-name":"IsAdmin"},"language":{"description":"User locale","type":"string","x-go-name":"Language"},"last_login":{"type":"string","format":"date-time","x-go-name":"LastLogin"},"location":{"description":"the user\'s location","type":"string","x-go-name":"Location"},"login":{"description":"the user\'s username","type":"string","x-go-name":"UserName"},"login_name":{"description":"the user\'s authentication sign-in name.","type":"string","default":"empty","x-go-name":"LoginName"},"prohibit_login":{"description":"Is user login prohibited","type":"boolean","x-go-name":"ProhibitLogin"},"restricted":{"description":"Is user restricted","type":"boolean","x-go-name":"Restricted"},"starred_repos_count":{"type":"integer","format":"int64","x-go-name":"StarredRepos"},"visibility":{"description":"User visibility level option: public, limited, private","type":"string","x-go-name":"Visibility"},"website":{"description":"the user\'s website","type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UserHeatmapData":{"description":"UserHeatmapData represents the data needed to create a heatmap","type":"object","properties":{"contributions":{"type":"integer","format":"int64","x-go-name":"Contributions"},"timestamp":{"$ref":"#/components/schemas/TimeStamp"}},"x-go-package":"code.gitea.io/gitea/models/activities"},"UserSettings":{"description":"UserSettings represents user settings","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"diff_view_style":{"type":"string","x-go-name":"DiffViewStyle"},"full_name":{"type":"string","x-go-name":"FullName"},"hide_activity":{"type":"boolean","x-go-name":"HideActivity"},"hide_email":{"description":"Privacy","type":"boolean","x-go-name":"HideEmail"},"language":{"type":"string","x-go-name":"Language"},"location":{"type":"string","x-go-name":"Location"},"theme":{"type":"string","x-go-name":"Theme"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UserSettingsOptions":{"description":"UserSettingsOptions represents options to change user settings","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"diff_view_style":{"type":"string","x-go-name":"DiffViewStyle"},"full_name":{"type":"string","x-go-name":"FullName"},"hide_activity":{"type":"boolean","x-go-name":"HideActivity"},"hide_email":{"description":"Privacy","type":"boolean","x-go-name":"HideEmail"},"language":{"type":"string","x-go-name":"Language"},"location":{"type":"string","x-go-name":"Location"},"theme":{"type":"string","x-go-name":"Theme"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WatchInfo":{"description":"WatchInfo represents an API watch status of one repository","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"ignored":{"type":"boolean","x-go-name":"Ignored"},"reason":{"x-go-name":"Reason"},"repository_url":{"type":"string","x-go-name":"RepositoryURL"},"subscribed":{"type":"boolean","x-go-name":"Subscribed"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiCommit":{"description":"WikiCommit page commit/revision","type":"object","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"commiter":{"$ref":"#/components/schemas/CommitUser"},"message":{"type":"string","x-go-name":"Message"},"sha":{"type":"string","x-go-name":"ID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiCommitList":{"description":"WikiCommitList commit/revision list","type":"object","properties":{"commits":{"type":"array","items":{"$ref":"#/components/schemas/WikiCommit"},"x-go-name":"WikiCommits"},"count":{"type":"integer","format":"int64","x-go-name":"Count"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiPage":{"description":"WikiPage a wiki page","type":"object","properties":{"commit_count":{"type":"integer","format":"int64","x-go-name":"CommitCount"},"content_base64":{"description":"Page content, base64 encoded","type":"string","x-go-name":"ContentBase64"},"footer":{"type":"string","x-go-name":"Footer"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit":{"$ref":"#/components/schemas/WikiCommit"},"sidebar":{"type":"string","x-go-name":"Sidebar"},"sub_url":{"type":"string","x-go-name":"SubURL"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiPageMetaData":{"description":"WikiPageMetaData wiki page meta information","type":"object","properties":{"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit":{"$ref":"#/components/schemas/WikiCommit"},"sub_url":{"type":"string","x-go-name":"SubURL"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"}}}}},"plugin-redoc-1":{"url":"redocusaurus/plugin-redoc-1.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"description":"This documentation describes the Gitea API.","title":"Gitea API","license":{"name":"MIT","url":"http://opensource.org/licenses/MIT"},"version":"1.21.7"},"paths":{"/activitypub/user-id/{user-id}":{"get":{"tags":["activitypub"],"summary":"Returns the Person actor for a user","operationId":"activitypubPerson","parameters":[{"description":"user ID of the user","name":"user-id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityPub"}}}},"/activitypub/user-id/{user-id}/inbox":{"post":{"tags":["activitypub"],"summary":"Send to the inbox","operationId":"activitypubPersonInbox","parameters":[{"description":"user ID of the user","name":"user-id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/admin/cron":{"get":{"tags":["admin"],"summary":"List cron tasks","operationId":"adminCronList","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CronList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/cron/{task}":{"post":{"tags":["admin"],"summary":"Run cron task","operationId":"adminCronRun","parameters":[{"description":"task to run","name":"task","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/admin/emails":{"get":{"tags":["admin"],"summary":"List all emails","operationId":"adminGetAllEmails","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/EmailList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/emails/search":{"get":{"tags":["admin"],"summary":"Search all emails","operationId":"adminSearchEmails","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/EmailList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/hooks":{"get":{"tags":["admin"],"summary":"List system\'s webhooks","operationId":"adminListHooks","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["admin"],"summary":"Create a hook","operationId":"adminCreateHook","requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/admin/hooks/{id}":{"get":{"tags":["admin"],"summary":"Get a hook","operationId":"adminGetHook","parameters":[{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"}}},"delete":{"tags":["admin"],"summary":"Delete a hook","operationId":"adminDeleteHook","parameters":[{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["admin"],"summary":"Update a hook","operationId":"adminEditHook","parameters":[{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/admin/orgs":{"get":{"tags":["admin"],"summary":"List all organizations","operationId":"adminGetAllOrgs","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/unadopted":{"get":{"tags":["admin"],"summary":"List unadopted repositories","operationId":"adminUnadoptedList","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"pattern of repositories to search for","name":"pattern","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/StringSlice"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/unadopted/{owner}/{repo}":{"post":{"tags":["admin"],"summary":"Adopt unadopted files as a repository","operationId":"adminAdoptRepository","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["admin"],"summary":"Delete unadopted files","operationId":"adminDeleteUnadoptedRepository","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/users":{"get":{"tags":["admin"],"summary":"Search users according filter conditions","operationId":"adminSearchUsers","parameters":[{"description":"ID of the user\'s login source to search for","name":"source_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"user\'s login name to search for","name":"login_name","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["admin"],"summary":"Create a user","operationId":"adminCreateUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserOption"}}}},"responses":{"201":{"$ref":"#/components/responses/User"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}":{"delete":{"tags":["admin"],"summary":"Delete a user","operationId":"adminDeleteUser","parameters":[{"description":"username of user to delete","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"purge the user from the system completely","name":"purge","in":"query","schema":{"type":"boolean"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"patch":{"tags":["admin"],"summary":"Edit an existing user","operationId":"adminEditUser","parameters":[{"description":"username of user to edit","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditUserOption"}}}},"responses":{"200":{"$ref":"#/components/responses/User"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/keys":{"post":{"tags":["admin"],"summary":"Add a public key on behalf of a user","operationId":"adminCreatePublicKey","parameters":[{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/PublicKey"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/keys/{id}":{"delete":{"tags":["admin"],"summary":"Delete a user\'s public key","operationId":"adminDeleteUserPublicKey","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/admin/users/{username}/orgs":{"post":{"tags":["admin"],"summary":"Create an organization","operationId":"adminCreateOrg","parameters":[{"description":"username of the user that will own the created organization","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOrgOption"},"responses":{"201":{"$ref":"#/components/responses/Organization"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/rename":{"post":{"tags":["admin"],"summary":"Rename a user","operationId":"adminRenameUser","parameters":[{"description":"existing username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RenameUserOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/RenameUserOption"}}},"required":true},"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/repos":{"post":{"tags":["admin"],"summary":"Create a repository on behalf of a user","operationId":"adminCreateRepo","parameters":[{"description":"username of the user. This user will own the created repository","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRepoOption"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/gitignore/templates":{"get":{"tags":["miscellaneous"],"summary":"Returns a list of all gitignore templates","operationId":"listGitignoresTemplates","responses":{"200":{"$ref":"#/components/responses/GitignoreTemplateList"}}}},"/gitignore/templates/{name}":{"get":{"tags":["miscellaneous"],"summary":"Returns information about a gitignore template","operationId":"getGitignoreTemplateInfo","parameters":[{"description":"name of the template","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitignoreTemplateInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/label/templates":{"get":{"tags":["miscellaneous"],"summary":"Returns a list of all label templates","operationId":"listLabelTemplates","responses":{"200":{"$ref":"#/components/responses/LabelTemplateList"}}}},"/label/templates/{name}":{"get":{"tags":["miscellaneous"],"summary":"Returns all labels in a template","operationId":"getLabelTemplateInfo","parameters":[{"description":"name of the template","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/LabelTemplateInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/licenses":{"get":{"tags":["miscellaneous"],"summary":"Returns a list of all license templates","operationId":"listLicenseTemplates","responses":{"200":{"$ref":"#/components/responses/LicenseTemplateList"}}}},"/licenses/{name}":{"get":{"tags":["miscellaneous"],"summary":"Returns information about a license template","operationId":"getLicenseTemplateInfo","parameters":[{"description":"name of the license","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/LicenseTemplateInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/markdown":{"post":{"tags":["miscellaneous"],"summary":"Render a markdown document as HTML","operationId":"renderMarkdown","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MarkdownOption"}}}},"responses":{"200":{"$ref":"#/components/responses/MarkdownRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/markdown/raw":{"post":{"tags":["miscellaneous"],"summary":"Render raw markdown as HTML","operationId":"renderMarkdownRaw","requestBody":{"content":{"text/plain":{"schema":{"type":"string"}}},"description":"Request body to render","required":true},"responses":{"200":{"$ref":"#/components/responses/MarkdownRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/markup":{"post":{"tags":["miscellaneous"],"summary":"Render a markup document as HTML","operationId":"renderMarkup","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MarkupOption"}}}},"responses":{"200":{"$ref":"#/components/responses/MarkupRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/nodeinfo":{"get":{"tags":["miscellaneous"],"summary":"Returns the nodeinfo of the Gitea application","operationId":"getNodeInfo","responses":{"200":{"$ref":"#/components/responses/NodeInfo"}}}},"/notifications":{"get":{"tags":["notification"],"summary":"List users\'s notification threads","operationId":"notifyGetList","parameters":[{"description":"If true, show notifications marked as read. Default value is false","name":"all","in":"query","schema":{"type":"boolean"}},{"description":"Show notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread & pinned.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"filter notifications by subject type","name":"subject-type","in":"query","explode":true,"schema":{"type":"array","items":{"enum":["issue","pull","commit","repository"],"type":"string"}}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThreadList"}}},"put":{"tags":["notification"],"summary":"Mark notification threads as read, pinned or unread","operationId":"notifyReadList","parameters":[{"description":"Describes the last point that notifications were checked. Anything updated since this time will not be updated.","name":"last_read_at","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"If true, mark all notifications on this repo. Default value is false","name":"all","in":"query","schema":{"type":"string"}},{"description":"Mark notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Status to mark notifications as, Defaults to read.","name":"to-status","in":"query","schema":{"type":"string"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThreadList"}}}},"/notifications/new":{"get":{"tags":["notification"],"summary":"Check if unread notifications exist","operationId":"notifyNewAvailable","responses":{"200":{"$ref":"#/components/responses/NotificationCount"}}}},"/notifications/threads/{id}":{"get":{"tags":["notification"],"summary":"Get notification thread by ID","operationId":"notifyGetThread","parameters":[{"description":"id of notification thread","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThread"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["notification"],"summary":"Mark notification thread as read by ID","operationId":"notifyReadThread","parameters":[{"description":"id of notification thread","name":"id","in":"path","required":true,"schema":{"type":"string"}},{"description":"Status to mark notifications as","name":"to-status","in":"query","schema":{"type":"string","default":"read"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThread"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/org/{org}/repos":{"post":{"tags":["organization"],"summary":"Create a repository in an organization","operationId":"createOrgRepoDeprecated","deprecated":true,"parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs":{"get":{"tags":["organization"],"summary":"Get list of organizations","operationId":"orgGetAll","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"}}},"post":{"tags":["organization"],"summary":"Create an organization","operationId":"orgCreate","requestBody":{"$ref":"#/components/requestBodies/CreateOrgOption"},"responses":{"201":{"$ref":"#/components/responses/Organization"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}":{"get":{"tags":["organization"],"summary":"Get an organization","operationId":"orgGet","parameters":[{"description":"name of the organization to get","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Organization"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete an organization","operationId":"orgDelete","parameters":[{"description":"organization that is to be deleted","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["organization"],"summary":"Edit an organization","operationId":"orgEdit","parameters":[{"description":"name of the organization to edit","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditOrgOption"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/Organization"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/actions/secrets":{"get":{"tags":["organization"],"summary":"List an organization\'s actions secrets","operationId":"orgListActionsSecrets","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/SecretList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/actions/secrets/{secretname}":{"put":{"tags":["organization"],"summary":"Create or Update a secret value in an organization","operationId":"updateOrgSecret","parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOrUpdateSecretOption"},"responses":{"201":{"description":"response when creating a secret"},"204":{"description":"response when updating a secret"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete a secret in an organization","operationId":"deleteOrgSecret","parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"delete one secret of the organization"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/activities/feeds":{"get":{"tags":["organization"],"summary":"List an organization\'s activity feeds","operationId":"orgListActivityFeeds","parameters":[{"description":"name of the org","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/avatar":{"post":{"tags":["organization"],"summary":"Update Avatar","operationId":"orgUpdateAvatar","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/UpdateUserAvatarOption"},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete Avatar","operationId":"orgDeleteAvatar","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/hooks":{"get":{"tags":["organization"],"summary":"List an organization\'s webhooks","operationId":"orgListHooks","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["organization"],"summary":"Create a hook","operationId":"orgCreateHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/hooks/{id}":{"get":{"tags":["organization"],"summary":"Get a hook","operationId":"orgGetHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete a hook","operationId":"orgDeleteHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["organization"],"summary":"Update a hook","operationId":"orgEditHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/labels":{"get":{"tags":["organization"],"summary":"List an organization\'s labels","operationId":"orgListLabels","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["organization"],"summary":"Create a label for an organization","operationId":"orgCreateLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateLabelOption"},"responses":{"201":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/labels/{id}":{"get":{"tags":["organization"],"summary":"Get a single label","operationId":"orgGetLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete a label","operationId":"orgDeleteLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["organization"],"summary":"Update a label","operationId":"orgEditLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditLabelOption"},"responses":{"200":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/members":{"get":{"tags":["organization"],"summary":"List an organization\'s members","operationId":"orgListMembers","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/members/{username}":{"get":{"tags":["organization"],"summary":"Check if a user is a member of an organization","operationId":"orgIsMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"user is a member"},"303":{"description":"redirection to /orgs/{org}/public_members/{username}"},"404":{"description":"user is not a member"}}},"delete":{"tags":["organization"],"summary":"Remove a member from an organization","operationId":"orgDeleteMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"member removed"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/public_members":{"get":{"tags":["organization"],"summary":"List an organization\'s public members","operationId":"orgListPublicMembers","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/public_members/{username}":{"get":{"tags":["organization"],"summary":"Check if a user is a public member of an organization","operationId":"orgIsPublicMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"user is a public member"},"404":{"description":"user is not a public member"}}},"put":{"tags":["organization"],"summary":"Publicize a user\'s membership","operationId":"orgPublicizeMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"membership publicized"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Conceal a user\'s membership","operationId":"orgConcealMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/repos":{"get":{"tags":["organization"],"summary":"List an organization\'s repos","operationId":"orgListRepos","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["organization"],"summary":"Create a repository in an organization","operationId":"createOrgRepo","parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/teams":{"get":{"tags":["organization"],"summary":"List an organization\'s teams","operationId":"orgListTeams","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["organization"],"summary":"Create a team","operationId":"orgCreateTeam","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTeamOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Team"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/teams/search":{"get":{"tags":["organization"],"summary":"Search for teams within an organization","operationId":"teamSearch","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"keywords to search","name":"q","in":"query","schema":{"type":"string"}},{"description":"include search within team description (defaults to true)","name":"include_desc","in":"query","schema":{"type":"boolean"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"description":"SearchResults of a successful search","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Team"}},"ok":{"type":"boolean"}}}}}},"404":{"$ref":"#/components/responses/notFound"}}}},"/packages/{owner}":{"get":{"tags":["package"],"summary":"Gets all packages of an owner","operationId":"listPackages","parameters":[{"description":"owner of the packages","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"package type filter","name":"type","in":"query","schema":{"type":"string","enum":["alpine","cargo","chef","composer","conan","conda","container","cran","debian","generic","go","helm","maven","npm","nuget","pub","pypi","rpm","rubygems","swift","vagrant"]}},{"description":"name filter","name":"q","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PackageList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/packages/{owner}/{type}/{name}/{version}":{"get":{"tags":["package"],"summary":"Gets a package","operationId":"getPackage","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Package"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["package"],"summary":"Delete a package","operationId":"deletePackage","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/packages/{owner}/{type}/{name}/{version}/files":{"get":{"tags":["package"],"summary":"Gets all files of a package","operationId":"listPackageFiles","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PackageFileList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/issues/search":{"get":{"tags":["issue"],"summary":"Search for issues across the repositories that the user has access to","operationId":"issueSearchIssues","parameters":[{"description":"whether issue is open or closed","name":"state","in":"query","schema":{"type":"string"}},{"description":"comma separated list of labels. Fetch only issues that have any of this labels. Non existent labels are discarded","name":"labels","in":"query","schema":{"type":"string"}},{"description":"comma separated list of milestone names. Fetch only issues that have any of this milestones. Non existent are discarded","name":"milestones","in":"query","schema":{"type":"string"}},{"description":"search string","name":"q","in":"query","schema":{"type":"string"}},{"description":"repository to prioritize in the results","name":"priority_repo_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"filter by type (issues / pulls) if set","name":"type","in":"query","schema":{"type":"string"}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"filter (issues / pulls) assigned to you, default is false","name":"assigned","in":"query","schema":{"type":"boolean"}},{"description":"filter (issues / pulls) created by you, default is false","name":"created","in":"query","schema":{"type":"boolean"}},{"description":"filter (issues / pulls) mentioning you, default is false","name":"mentioned","in":"query","schema":{"type":"boolean"}},{"description":"filter pulls requesting your review, default is false","name":"review_requested","in":"query","schema":{"type":"boolean"}},{"description":"filter pulls reviewed by you, default is false","name":"reviewed","in":"query","schema":{"type":"boolean"}},{"description":"filter by owner","name":"owner","in":"query","schema":{"type":"string"}},{"description":"filter by team (requires organization owner parameter to be provided)","name":"team","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"}}}},"/repos/migrate":{"post":{"tags":["repository"],"summary":"Migrate a remote git repository","operationId":"repoMigrate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MigrateRepoOptions"}}}},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/search":{"get":{"tags":["repository"],"summary":"Search for repositories","operationId":"repoSearch","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"Limit search to repositories with keyword as topic","name":"topic","in":"query","schema":{"type":"boolean"}},{"description":"include search of keyword within repository description","name":"includeDesc","in":"query","schema":{"type":"boolean"}},{"description":"search only for repos that the user with the given id owns or contributes to","name":"uid","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"repo owner to prioritize in the results","name":"priority_owner_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"search only for repos that belong to the given team id","name":"team_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"search only for repos that the user with the given id has starred","name":"starredBy","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"include private repositories this user has access to (defaults to true)","name":"private","in":"query","schema":{"type":"boolean"}},{"description":"show only pubic, private or all repositories (defaults to all)","name":"is_private","in":"query","schema":{"type":"boolean"}},{"description":"include template repositories this user has access to (defaults to true)","name":"template","in":"query","schema":{"type":"boolean"}},{"description":"show only archived, non-archived or all repositories (defaults to all)","name":"archived","in":"query","schema":{"type":"boolean"}},{"description":"type of repository to search for. Supported values are \\"fork\\", \\"source\\", \\"mirror\\" and \\"collaborative\\"","name":"mode","in":"query","schema":{"type":"string"}},{"description":"if `uid` is given, search only for repos that the user owns","name":"exclusive","in":"query","schema":{"type":"boolean"}},{"description":"sort repos by attribute. Supported values are \\"alpha\\", \\"created\\", \\"updated\\", \\"size\\", and \\"id\\". Default is \\"alpha\\"","name":"sort","in":"query","schema":{"type":"string"}},{"description":"sort order, either \\"asc\\" (ascending) or \\"desc\\" (descending). Default is \\"asc\\", ignored if \\"sort\\" is not specified.","name":"order","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/SearchResults"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}":{"get":{"tags":["repository"],"summary":"Get a repository","operationId":"repoGet","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a repository","operationId":"repoDelete","parameters":[{"description":"owner of the repo to delete","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to delete","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a repository\'s properties. Only fields that are set will be changed.","operationId":"repoEdit","parameters":[{"description":"owner of the repo to edit","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to edit","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditRepoOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditRepoOption"}}},"description":"Properties of a repo that you can edit"},"responses":{"200":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/actions/secrets/{secretname}":{"put":{"tags":["repository"],"summary":"Create or Update a secret value in a repository","operationId":"updateRepoSecret","parameters":[{"description":"owner of the repository","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repository","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOrUpdateSecretOption"},"responses":{"201":{"description":"response when creating a secret"},"204":{"description":"response when updating a secret"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a secret in a repository","operationId":"deleteRepoSecret","parameters":[{"description":"owner of the repository","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repository","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"delete one secret of the organization"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/activities/feeds":{"get":{"tags":["repository"],"summary":"List a repository\'s activity feeds","operationId":"repoListActivityFeeds","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/archive/{archive}":{"get":{"tags":["repository"],"summary":"Get an archive of a repository","operationId":"repoGetArchive","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the git reference for download with attached archive format (e.g. master.zip)","name":"archive","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"success"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/assignees":{"get":{"tags":["repository"],"summary":"Return all users that have write access and can be assigned to issues","operationId":"repoGetAssignees","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/avatar":{"post":{"tags":["repository"],"summary":"Update avatar","operationId":"repoUpdateAvatar","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateRepoAvatarOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/UpdateRepoAvatarOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete avatar","operationId":"repoDeleteAvatar","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/branch_protections":{"get":{"tags":["repository"],"summary":"List branch protections for a repository","operationId":"repoListBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/BranchProtectionList"}}},"post":{"tags":["repository"],"summary":"Create a branch protections for a repository","operationId":"repoCreateBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateBranchProtectionOption"}}}},"responses":{"201":{"$ref":"#/components/responses/BranchProtection"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/branch_protections/{name}":{"get":{"tags":["repository"],"summary":"Get a specific branch protection for the repository","operationId":"repoGetBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/BranchProtection"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a specific branch protection for the repository","operationId":"repoDeleteBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a branch protections for a repository. Only fields that are set will be changed","operationId":"repoEditBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditBranchProtectionOption"}}}},"responses":{"200":{"$ref":"#/components/responses/BranchProtection"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/branches":{"get":{"tags":["repository"],"summary":"List a repository\'s branches","operationId":"repoListBranches","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/BranchList"}}},"post":{"tags":["repository"],"summary":"Create a branch","operationId":"repoCreateBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateBranchRepoOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Branch"},"403":{"description":"The branch is archived or a mirror."},"404":{"description":"The old branch does not exist."},"409":{"description":"The branch with the same name already exists."}}}},"/repos/{owner}/{repo}/branches/{branch}":{"get":{"tags":["repository"],"summary":"Retrieve a specific branch from a repository, including its effective branch protection","operationId":"repoGetBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"branch to get","name":"branch","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Branch"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a specific branch from a repository","operationId":"repoDeleteBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"branch to delete","name":"branch","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/collaborators":{"get":{"tags":["repository"],"summary":"List a repository\'s collaborators","operationId":"repoListCollaborators","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/collaborators/{collaborator}":{"get":{"tags":["repository"],"summary":"Check if a user is a collaborator of a repository","operationId":"repoCheckCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"put":{"tags":["repository"],"summary":"Add a collaborator to a repository","operationId":"repoAddCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator to add","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddCollaboratorOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/AddCollaboratorOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a collaborator from a repository","operationId":"repoDeleteCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator to delete","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/collaborators/{collaborator}/permission":{"get":{"tags":["repository"],"summary":"Get repository permissions for a user","operationId":"repoGetRepoPermissions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoCollaboratorPermission"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/commits":{"get":{"tags":["repository"],"summary":"Get a list of all commits from a repository","operationId":"repoGetAllCommits","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"SHA or branch to start listing commits from (usually \'master\')","name":"sha","in":"query","schema":{"type":"string"}},{"description":"filepath of a file/dir","name":"path","in":"query","schema":{"type":"string"}},{"description":"include diff stats for every commit (disable for speedup, default \'true\')","name":"stat","in":"query","schema":{"type":"boolean"}},{"description":"include verification for every commit (disable for speedup, default \'true\')","name":"verification","in":"query","schema":{"type":"boolean"}},{"description":"include a list of affected files for every commit (disable for speedup, default \'true\')","name":"files","in":"query","schema":{"type":"boolean"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results (ignored if used with \'path\')","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"commits that match the given specifier will not be listed.","name":"not","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/CommitList"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/EmptyRepository"}}}},"/repos/{owner}/{repo}/commits/{ref}/status":{"get":{"tags":["repository"],"summary":"Get a commit\'s combined status, by branch/tag/commit reference","operationId":"repoGetCombinedStatusByRef","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of branch/tag/commit","name":"ref","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CombinedStatus"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/commits/{ref}/statuses":{"get":{"tags":["repository"],"summary":"Get a commit\'s statuses, by branch/tag/commit reference","operationId":"repoListStatusesByRef","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of branch/tag/commit","name":"ref","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","leastindex","highestindex"]}},{"description":"type of state","name":"state","in":"query","schema":{"type":"string","enum":["pending","success","error","failure","warning"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitStatusList"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/contents":{"get":{"tags":["repository"],"summary":"Gets the metadata of all the entries of the root dir","operationId":"repoGetContentsList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ContentsListResponse"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Modify multiple files in a repository","operationId":"repoChangeFiles","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangeFilesOptions"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/FilesResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/contents/{filepath}":{"get":{"tags":["repository"],"summary":"Gets the metadata and contents (if a file) of an entry in a repository, or a list of entries if a dir","operationId":"repoGetContents","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the dir, file, symlink or submodule in the repo","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ContentsResponse"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["repository"],"summary":"Update a file in a repository","operationId":"repoUpdateFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to update","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/UpdateFileOptions"},"responses":{"200":{"$ref":"#/components/responses/FileResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}},"post":{"tags":["repository"],"summary":"Create a file in a repository","operationId":"repoCreateFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to create","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFileOptions"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/FileResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["repository"],"summary":"Delete a file in a repository","operationId":"repoDeleteFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to delete","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteFileOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/FileDeleteResponse"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/diffpatch":{"post":{"tags":["repository"],"summary":"Apply diff patch to repository","operationId":"repoApplyDiffPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/UpdateFileOptions"},"responses":{"200":{"$ref":"#/components/responses/FileResponse"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/editorconfig/{filepath}":{"get":{"tags":["repository"],"summary":"Get the EditorConfig definitions of a file in a repository","operationId":"repoGetEditorConfig","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"success"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/forks":{"get":{"tags":["repository"],"summary":"List a repository\'s forks","operationId":"listForks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Fork a repository","operationId":"createFork","parameters":[{"description":"owner of the repo to fork","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to fork","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateForkOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateForkOption"}}}},"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/blobs/{sha}":{"get":{"tags":["repository"],"summary":"Gets the blob of a repository.","operationId":"GetBlob","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitBlobResponse"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/commits/{sha}":{"get":{"tags":["repository"],"summary":"Get a single commit from a repository","operationId":"repoGetSingleCommit","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"a git ref or commit sha","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"include diff stats for every commit (disable for speedup, default \'true\')","name":"stat","in":"query","schema":{"type":"boolean"}},{"description":"include verification for every commit (disable for speedup, default \'true\')","name":"verification","in":"query","schema":{"type":"boolean"}},{"description":"include a list of affected files for every commit (disable for speedup, default \'true\')","name":"files","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/Commit"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/commits/{sha}.{diffType}":{"get":{"tags":["repository"],"summary":"Get a commit\'s diff or patch","operationId":"repoDownloadCommitDiffOrPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"SHA of the commit to get","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"whether the output is diff or patch","name":"diffType","in":"path","required":true,"schema":{"type":"string","enum":["diff","patch"]}}],"responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/notes/{sha}":{"get":{"tags":["repository"],"summary":"Get a note corresponding to a single commit from a repository","operationId":"repoGetNote","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"a git ref or commit sha","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"include verification for every commit (disable for speedup, default \'true\')","name":"verification","in":"query","schema":{"type":"boolean"}},{"description":"include a list of affected files for every commit (disable for speedup, default \'true\')","name":"files","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/Note"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/refs":{"get":{"tags":["repository"],"summary":"Get specified ref or filtered repository\'s refs","operationId":"repoListAllGitRefs","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ReferenceList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/refs/{ref}":{"get":{"tags":["repository"],"summary":"Get specified ref or filtered repository\'s refs","operationId":"repoListGitRefs","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"part or full name of the ref","name":"ref","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ReferenceList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/tags/{sha}":{"get":{"tags":["repository"],"summary":"Gets the tag object of an annotated tag (not lightweight tags)","operationId":"GetAnnotatedTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the tag. The Git tags API only supports annotated tag objects, not lightweight tags.","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/AnnotatedTag"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/trees/{sha}":{"get":{"tags":["repository"],"summary":"Gets the tree of a repository.","operationId":"GetTree","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"show all directories and files","name":"recursive","in":"query","schema":{"type":"boolean"}},{"description":"page number; the \'truncated\' field in the response will be true if there are still more items after this page, false if the last page","name":"page","in":"query","schema":{"type":"integer"}},{"description":"number of items per page","name":"per_page","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GitTreeResponse"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks":{"get":{"tags":["repository"],"summary":"List the hooks in a repository","operationId":"repoListHooks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a hook","operationId":"repoCreateHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateHookOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks/git":{"get":{"tags":["repository"],"summary":"List the Git hooks in a repository","operationId":"repoListGitHooks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitHookList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks/git/{id}":{"get":{"tags":["repository"],"summary":"Get a Git hook","operationId":"repoGetGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitHook"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a Git hook in a repository","operationId":"repoDeleteGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a Git hook in a repository","operationId":"repoEditGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditGitHookOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditGitHookOption"}}}},"responses":{"200":{"$ref":"#/components/responses/GitHook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks/{id}":{"get":{"tags":["repository"],"summary":"Get a hook","operationId":"repoGetHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a hook in a repository","operationId":"repoDeleteHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a hook in a repository","operationId":"repoEditHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the hook","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditHookOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditHookOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks/{id}/tests":{"post":{"tags":["repository"],"summary":"Test a push webhook","operationId":"repoTestHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to test","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"The name of the commit/branch/tag, indicates which commit will be loaded to the webhook payload.","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issue_config":{"get":{"tags":["repository"],"summary":"Returns the issue config for a repo","operationId":"repoGetIssueConfig","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoIssueConfig"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issue_config/validate":{"get":{"tags":["repository"],"summary":"Returns the validation information for a issue config","operationId":"repoValidateIssueConfig","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoIssueConfigValidation"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issue_templates":{"get":{"tags":["repository"],"summary":"Get available issue templates for a repository","operationId":"repoGetIssueTemplates","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/IssueTemplates"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues":{"get":{"tags":["issue"],"summary":"List a repository\'s issues","operationId":"issueListIssues","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"whether issue is open or closed","name":"state","in":"query","schema":{"type":"string","enum":["closed","open","all"]}},{"description":"comma separated list of labels. Fetch only issues that have any of this labels. Non existent labels are discarded","name":"labels","in":"query","schema":{"type":"string"}},{"description":"search string","name":"q","in":"query","schema":{"type":"string"}},{"description":"filter by type (issues / pulls) if set","name":"type","in":"query","schema":{"type":"string","enum":["issues","pulls"]}},{"description":"comma separated list of milestone names or ids. It uses names and fall back to ids. Fetch only issues that have any of this milestones. Non existent milestones are discarded","name":"milestones","in":"query","schema":{"type":"string"}},{"description":"Only show items updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show items updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show items which were created by the the given user","name":"created_by","in":"query","schema":{"type":"string"}},{"description":"Only show items for which the given user is assigned","name":"assigned_by","in":"query","schema":{"type":"string"}},{"description":"Only show items in which the given user was mentioned","name":"mentioned_by","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Create an issue. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueCreateIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateIssueOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Issue"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"412":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/issues/comments":{"get":{"tags":["issue"],"summary":"List all comments in a repository","operationId":"issueGetRepoComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"if provided, only comments updated since the provided time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommentList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/comments/{id}":{"get":{"tags":["issue"],"summary":"Get a comment","operationId":"issueGetComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete a comment","operationId":"issueDeleteComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of comment to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit a comment","operationId":"issueEditComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditIssueCommentOption"},"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/assets":{"get":{"tags":["issue"],"summary":"List comment\'s attachments","operationId":"issueListIssueCommentAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"},"404":{"$ref":"#/components/responses/error"}}},"post":{"tags":["issue"],"summary":"Create a comment attachment","operationId":"issueCreateIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/assets/{attachment_id}":{"get":{"tags":["issue"],"summary":"Get a comment attachment","operationId":"issueGetIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["issue"],"summary":"Delete a comment attachment","operationId":"issueDeleteIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/error"}}},"patch":{"tags":["issue"],"summary":"Edit a comment attachment","operationId":"issueEditIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/reactions":{"get":{"tags":["issue"],"summary":"Get a list of reactions from a comment of an issue","operationId":"issueGetCommentReactions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/ReactionList"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add a reaction to a comment of an issue","operationId":"issuePostCommentReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/Reaction"},"201":{"$ref":"#/components/responses/Reaction"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Remove a reaction from a comment of an issue","operationId":"issueDeleteCommentReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/pinned":{"get":{"tags":["repository"],"summary":"List a repo\'s pinned issues","operationId":"repoListPinnedIssues","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}":{"get":{"tags":["issue"],"summary":"Get an issue","operationId":"issueGetIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Issue"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete an issue","operationId":"issueDelete","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue to delete","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit an issue. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueEditIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to edit","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditIssueOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Issue"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"412":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/{index}/assets":{"get":{"tags":["issue"],"summary":"List issue\'s attachments","operationId":"issueListIssueAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"},"404":{"$ref":"#/components/responses/error"}}},"post":{"tags":["issue"],"summary":"Create an issue attachment","operationId":"issueCreateIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/{index}/assets/{attachment_id}":{"get":{"tags":["issue"],"summary":"Get an issue attachment","operationId":"issueGetIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["issue"],"summary":"Delete an issue attachment","operationId":"issueDeleteIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/error"}}},"patch":{"tags":["issue"],"summary":"Edit an issue attachment","operationId":"issueEditIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/{index}/blocks":{"get":{"tags":["issue"],"summary":"List issues that are blocked by this issue","operationId":"issueListBlocks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Block the issue given in the body by the issue in path","operationId":"issueCreateIssueBlocking","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"201":{"$ref":"#/components/responses/Issue"},"404":{"description":"the issue does not exist"}}},"delete":{"tags":["issue"],"summary":"Unblock the issue given in the body by the issue in path","operationId":"issueRemoveIssueBlocking","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"200":{"$ref":"#/components/responses/Issue"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/comments":{"get":{"tags":["issue"],"summary":"List all comments on an issue","operationId":"issueGetComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"if provided, only comments updated since the specified time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/CommentList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add a comment to an issue","operationId":"issueCreateComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateIssueCommentOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Comment"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/comments/{id}":{"delete":{"tags":["issue"],"summary":"Delete a comment","operationId":"issueDeleteCommentDeprecated","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"this parameter is ignored","name":"index","in":"path","required":true,"schema":{"type":"integer"}},{"description":"id of comment to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit a comment","operationId":"issueEditCommentDeprecated","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"this parameter is ignored","name":"index","in":"path","required":true,"schema":{"type":"integer"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditIssueCommentOption"},"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/deadline":{"post":{"tags":["issue"],"summary":"Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueEditIssueDeadline","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to create or update a deadline on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditDeadlineOption"}}}},"responses":{"201":{"$ref":"#/components/responses/IssueDeadline"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/dependencies":{"get":{"tags":["issue"],"summary":"List an issue\'s dependencies, i.e all issues that block this issue.","operationId":"issueListIssueDependencies","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Make the issue in the url depend on the issue in the form.","operationId":"issueCreateIssueDependencies","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"201":{"$ref":"#/components/responses/Issue"},"404":{"description":"the issue does not exist"}}},"delete":{"tags":["issue"],"summary":"Remove an issue dependency","operationId":"issueRemoveIssueDependencies","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueMeta"},"responses":{"200":{"$ref":"#/components/responses/Issue"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/labels":{"get":{"tags":["issue"],"summary":"Get an issue\'s labels","operationId":"issueGetLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["issue"],"summary":"Replace an issue\'s labels","operationId":"issueReplaceLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueLabelsOption"},"responses":{"200":{"$ref":"#/components/responses/LabelList"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add a label to an issue","operationId":"issueAddLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueLabelsOption"},"responses":{"200":{"$ref":"#/components/responses/LabelList"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Remove all labels from an issue","operationId":"issueClearLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/labels/{id}":{"delete":{"tags":["issue"],"summary":"Remove a label from an issue","operationId":"issueRemoveLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the label to remove","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/issues/{index}/pin":{"post":{"tags":["issue"],"summary":"Pin an Issue","operationId":"pinIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue to pin","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Unpin an Issue","operationId":"unpinIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue to unpin","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/pin/{position}":{"patch":{"tags":["issue"],"summary":"Moves the Pin to the given Position","operationId":"moveIssuePin","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"the new position","name":"position","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/reactions":{"get":{"tags":["issue"],"summary":"Get a list reactions of an issue","operationId":"issueGetIssueReactions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ReactionList"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add a reaction to an issue","operationId":"issuePostIssueReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/Reaction"},"201":{"$ref":"#/components/responses/Reaction"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Remove a reaction from an issue","operationId":"issueDeleteIssueReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/delete":{"delete":{"tags":["issue"],"summary":"Delete an issue\'s existing stopwatch.","operationId":"issueDeleteStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to stop the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot cancel a non existent stopwatch"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/start":{"post":{"tags":["issue"],"summary":"Start stopwatch on an issue.","operationId":"issueStartStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to create the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"201":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot start a stopwatch again if it already exists"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/stop":{"post":{"tags":["issue"],"summary":"Stop an issue\'s existing stopwatch.","operationId":"issueStopStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to stop the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"201":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot stop a non existent stopwatch"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions":{"get":{"tags":["issue"],"summary":"Get users who subscribed on an issue.","operationId":"issueSubscriptions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions/check":{"get":{"tags":["issue"],"summary":"Check if user is subscribed to an issue","operationId":"issueCheckSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions/{user}":{"put":{"tags":["issue"],"summary":"Subscribe user to issue","operationId":"issueAddSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"user to subscribe","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Already subscribed"},"201":{"description":"Successfully Subscribed"},"304":{"description":"User can only subscribe itself if he is no admin"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Unsubscribe user from issue","operationId":"issueDeleteSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"user witch unsubscribe","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Already unsubscribed"},"201":{"description":"Successfully Unsubscribed"},"304":{"description":"User can only subscribe itself if he is no admin"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/timeline":{"get":{"tags":["issue"],"summary":"List all comments and events on an issue","operationId":"issueGetCommentsAndTimeline","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"if provided, only comments updated since the specified time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/TimelineList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/times":{"get":{"tags":["issue"],"summary":"List an issue\'s tracked times","operationId":"issueTrackedTimes","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"optional filter by user (available for issue managers)","name":"user","in":"query","schema":{"type":"string"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add tracked time to a issue","operationId":"issueAddTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddTimeOption"}}}},"responses":{"200":{"$ref":"#/components/responses/TrackedTime"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Reset a tracked time of an issue","operationId":"issueResetTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to add tracked time to","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/times/{id}":{"delete":{"tags":["issue"],"summary":"Delete specific tracked time","operationId":"issueDeleteTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of time to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/keys":{"get":{"tags":["repository"],"summary":"List a repository\'s keys","operationId":"repoListKeys","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the key_id to search for","name":"key_id","in":"query","schema":{"type":"integer"}},{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/DeployKeyList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Add a key to a repository","operationId":"repoCreateKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/DeployKey"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/keys/{id}":{"get":{"tags":["repository"],"summary":"Get a repository\'s key by id","operationId":"repoGetKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/DeployKey"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a key from a repository","operationId":"repoDeleteKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/labels":{"get":{"tags":["issue"],"summary":"Get all of a repository\'s labels","operationId":"issueListLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Create a label","operationId":"issueCreateLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateLabelOption"},"responses":{"201":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/labels/{id}":{"get":{"tags":["issue"],"summary":"Get a single label","operationId":"issueGetLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete a label","operationId":"issueDeleteLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Update a label","operationId":"issueEditLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditLabelOption"},"responses":{"200":{"$ref":"#/components/responses/Label"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/languages":{"get":{"tags":["repository"],"summary":"Get languages and number of bytes of code written","operationId":"repoGetLanguages","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/LanguageStatistics"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/media/{filepath}":{"get":{"tags":["repository"],"summary":"Get a file or it\'s LFS object from a repository","operationId":"repoGetRawFileOrLFS","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of the file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns raw file content."},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/milestones":{"get":{"tags":["issue"],"summary":"Get all of a repository\'s opened milestones","operationId":"issueGetMilestonesList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"Milestone state, Recognized values are open, closed and all. Defaults to \\"open\\"","name":"state","in":"query","schema":{"type":"string"}},{"description":"filter by milestone name","name":"name","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/MilestoneList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Create a milestone","operationId":"issueCreateMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMilestoneOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Milestone"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/milestones/{id}":{"get":{"tags":["issue"],"summary":"Get a milestone","operationId":"issueGetMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to get, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Milestone"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete a milestone","operationId":"issueDeleteMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to delete, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Update a milestone","operationId":"issueEditMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to edit, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditMilestoneOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Milestone"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/mirror-sync":{"post":{"tags":["repository"],"summary":"Sync a mirrored repository","operationId":"repoMirrorSync","parameters":[{"description":"owner of the repo to sync","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to sync","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/new_pin_allowed":{"get":{"tags":["repository"],"summary":"Returns if new Issue Pins are allowed","operationId":"repoNewPinAllowed","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoNewIssuePinsAllowed"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/notifications":{"get":{"tags":["notification"],"summary":"List users\'s notification threads on a specific repo","operationId":"notifyGetRepoList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"If true, show notifications marked as read. Default value is false","name":"all","in":"query","schema":{"type":"boolean"}},{"description":"Show notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread & pinned","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"filter notifications by subject type","name":"subject-type","in":"query","explode":true,"schema":{"type":"array","items":{"enum":["issue","pull","commit","repository"],"type":"string"}}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThreadList"}}},"put":{"tags":["notification"],"summary":"Mark notification threads as read, pinned or unread on a specific repo","operationId":"notifyReadRepoList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"If true, mark all notifications on this repo. Default value is false","name":"all","in":"query","schema":{"type":"string"}},{"description":"Mark notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Status to mark notifications as. Defaults to read.","name":"to-status","in":"query","schema":{"type":"string"}},{"description":"Describes the last point that notifications were checked. Anything updated since this time will not be updated.","name":"last_read_at","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThreadList"}}}},"/repos/{owner}/{repo}/pulls":{"get":{"tags":["repository"],"summary":"List a repo\'s pull requests","operationId":"repoListPullRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"State of pull request: open or closed (optional)","name":"state","in":"query","schema":{"type":"string","enum":["closed","open","all"]}},{"description":"Type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","mostcomment","leastcomment","priority"]}},{"description":"ID of the milestone","name":"milestone","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"Label IDs","name":"labels","in":"query","explode":true,"schema":{"type":"array","items":{"type":"integer","format":"int64"}}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequestList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a pull request","operationId":"repoCreatePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePullRequestOption"}}}},"responses":{"201":{"$ref":"#/components/responses/PullRequest"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/pinned":{"get":{"tags":["repository"],"summary":"List a repo\'s pinned pull requests","operationId":"repoListPinnedPullRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequestList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}":{"get":{"tags":["repository"],"summary":"Get a pull request","operationId":"repoGetPullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequest"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Update a pull request. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"repoEditPullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to edit","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditPullRequestOption"}}}},"responses":{"201":{"$ref":"#/components/responses/PullRequest"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"412":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}.{diffType}":{"get":{"tags":["repository"],"summary":"Get a pull request diff or patch","operationId":"repoDownloadPullDiffOrPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"whether the output is diff or patch","name":"diffType","in":"path","required":true,"schema":{"type":"string","enum":["diff","patch"]}},{"description":"whether to include binary file changes. if true, the diff is applicable with `git apply`","name":"binary","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/commits":{"get":{"tags":["repository"],"summary":"Get commits for a pull request","operationId":"repoGetPullRequestCommits","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"include verification for every commit (disable for speedup, default \'true\')","name":"verification","in":"query","schema":{"type":"boolean"}},{"description":"include a list of affected files for every commit (disable for speedup, default \'true\')","name":"files","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/CommitList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/files":{"get":{"tags":["repository"],"summary":"Get changed files for a pull request","operationId":"repoGetPullRequestFiles","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"skip to given file","name":"skip-to","in":"query","schema":{"type":"string"}},{"description":"whitespace behavior","name":"whitespace","in":"query","schema":{"type":"string","enum":["ignore-all","ignore-change","ignore-eol","show-all"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ChangedFileList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/merge":{"get":{"tags":["repository"],"summary":"Check if a pull request has been merged","operationId":"repoPullRequestIsMerged","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"pull request has been merged"},"404":{"description":"pull request has not been merged"}}},"post":{"tags":["repository"],"summary":"Merge a pull request","operationId":"repoMergePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to merge","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MergePullRequestOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/MergePullRequestOption"}}}},"responses":{"200":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["repository"],"summary":"Cancel the scheduled auto merge for the given pull request","operationId":"repoCancelScheduledAutoMerge","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to merge","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/requested_reviewers":{"post":{"tags":["repository"],"summary":"create review requests for a pull request","operationId":"repoCreatePullReviewRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/PullReviewRequestOptions"},"responses":{"201":{"$ref":"#/components/responses/PullReviewList"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"cancel review requests for a pull request","operationId":"repoDeletePullReviewRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/PullReviewRequestOptions"},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews":{"get":{"tags":["repository"],"summary":"List all reviews for a pull request","operationId":"repoListPullReviews","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PullReviewList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a review to an pull request","operationId":"repoCreatePullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreatePullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}":{"get":{"tags":["repository"],"summary":"Get a specific review for a pull request","operationId":"repoGetPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Submit a pending review to an pull request","operationId":"repoSubmitPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubmitPullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/SubmitPullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a specific review from a pull request","operationId":"repoDeletePullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/comments":{"get":{"tags":["repository"],"summary":"Get a specific review for a pull request","operationId":"repoGetPullReviewComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReviewCommentList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/dismissals":{"post":{"tags":["repository"],"summary":"Dismiss a review for a pull request","operationId":"repoDismissPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DismissPullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/DismissPullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/undismissals":{"post":{"tags":["repository"],"summary":"Cancel to dismiss a review for a pull request","operationId":"repoUnDismissPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReview"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/update":{"post":{"tags":["repository"],"summary":"Merge PR\'s baseBranch into headBranch","operationId":"repoUpdatePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"how to update pull request","name":"style","in":"query","schema":{"type":"string","enum":["merge","rebase"]}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/push_mirrors":{"get":{"tags":["repository"],"summary":"Get all push mirrors of the repository","operationId":"repoListPushMirrors","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PushMirrorList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"add a push mirror to the repository","operationId":"repoAddPushMirror","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePushMirrorOption"}}}},"responses":{"200":{"$ref":"#/components/responses/PushMirror"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/push_mirrors-sync":{"post":{"tags":["repository"],"summary":"Sync all push mirrored repository","operationId":"repoPushMirrorSync","parameters":[{"description":"owner of the repo to sync","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to sync","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/push_mirrors/{name}":{"get":{"tags":["repository"],"summary":"Get push mirror of the repository by remoteName","operationId":"repoGetPushMirrorByRemoteName","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"remote name of push mirror","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PushMirror"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"deletes a push mirror from a repository by remoteName","operationId":"repoDeletePushMirror","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"remote name of the pushMirror","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/raw/{filepath}":{"get":{"tags":["repository"],"summary":"Get a file from a repository","operationId":"repoGetRawFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of the file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns raw file content."},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases":{"get":{"tags":["repository"],"summary":"List a repo\'s releases","operationId":"repoListReleases","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filter (exclude / include) drafts, if you dont have repo write access none will show","name":"draft","in":"query","schema":{"type":"boolean"}},{"description":"filter (exclude / include) pre-releases","name":"pre-release","in":"query","schema":{"type":"boolean"}},{"description":"page size of results, deprecated - use limit","name":"per_page","in":"query","schema":{"type":"integer"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ReleaseList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a release","operationId":"repoCreateRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateReleaseOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/releases/latest":{"get":{"tags":["repository"],"summary":"Gets the most recent non-prerelease, non-draft release of a repository, sorted by created_at","operationId":"repoGetLatestRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases/tags/{tag}":{"get":{"tags":["repository"],"summary":"Get a release by tag name","operationId":"repoGetReleaseByTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"tag name of the release to get","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a release by tag name","operationId":"repoDeleteReleaseByTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"tag name of the release to delete","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"}}}},"/repos/{owner}/{repo}/releases/{id}":{"get":{"tags":["repository"],"summary":"Get a release","operationId":"repoGetRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a release","operationId":"repoDeleteRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["repository"],"summary":"Update a release","operationId":"repoEditRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditReleaseOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases/{id}/assets":{"get":{"tags":["repository"],"summary":"List release\'s attachments","operationId":"repoListReleaseAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a release attachment","operationId":"repoCreateReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases/{id}/assets/{attachment_id}":{"get":{"tags":["repository"],"summary":"Get a release attachment","operationId":"repoGetReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a release attachment","operationId":"repoDeleteReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a release attachment","operationId":"repoEditReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/reviewers":{"get":{"tags":["repository"],"summary":"Return all users that can be requested to review in this repo","operationId":"repoGetReviewers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/signing-key.gpg":{"get":{"tags":["repository"],"summary":"Get signing-key.gpg for given repository","operationId":"repoSigningKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"GPG armored public key","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/repos/{owner}/{repo}/stargazers":{"get":{"tags":["repository"],"summary":"List a repo\'s stargazers","operationId":"repoListStargazers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/statuses/{sha}":{"get":{"tags":["repository"],"summary":"Get a commit\'s statuses","operationId":"repoListStatuses","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","leastindex","highestindex"]}},{"description":"type of state","name":"state","in":"query","schema":{"type":"string","enum":["pending","success","error","failure","warning"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitStatusList"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a commit status","operationId":"repoCreateStatus","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateStatusOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateStatusOption"}}}},"responses":{"201":{"$ref":"#/components/responses/CommitStatus"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/subscribers":{"get":{"tags":["repository"],"summary":"List a repo\'s watchers","operationId":"repoListSubscribers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/subscription":{"get":{"tags":["repository"],"summary":"Check if the current user is watching a repo","operationId":"userCurrentCheckSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"},"404":{"description":"User is not watching this repo or repo do not exist"}}},"put":{"tags":["repository"],"summary":"Watch a repo","operationId":"userCurrentPutSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Unwatch a repo","operationId":"userCurrentDeleteSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/tags":{"get":{"tags":["repository"],"summary":"List a repository\'s tags","operationId":"repoListTags","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results, default maximum page size is 50","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TagList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a new git tag in a repository","operationId":"repoCreateTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTagOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateTagOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Tag"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/conflict"}}}},"/repos/{owner}/{repo}/tags/{tag}":{"get":{"tags":["repository"],"summary":"Get the tag of a repository by tag name","operationId":"repoGetTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of tag","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Tag"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a repository\'s tag by name","operationId":"repoDeleteTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of tag to delete","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/conflict"}}}},"/repos/{owner}/{repo}/teams":{"get":{"tags":["repository"],"summary":"List a repository\'s teams","operationId":"repoListTeams","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/teams/{team}":{"get":{"tags":["repository"],"summary":"Check if a team is assigned to a repository","operationId":"repoCheckTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Team"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/error"}}},"put":{"tags":["repository"],"summary":"Add a team to a repository","operationId":"repoAddTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a team from a repository","operationId":"repoDeleteTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/times":{"get":{"tags":["repository"],"summary":"List a repo\'s tracked times","operationId":"repoTrackedTimes","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"optional filter by user (available for issue managers)","name":"user","in":"query","schema":{"type":"string"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/times/{user}":{"get":{"tags":["repository"],"summary":"List a user\'s tracked times in a repo","operationId":"userTrackedTimes","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of user","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/topics":{"get":{"tags":["repository"],"summary":"Get list of topics that a repository has","operationId":"repoListTopics","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TopicNames"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["repository"],"summary":"Replace list of topics for a repository","operationId":"repoUpdateTopics","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepoTopicOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/RepoTopicOptions"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}}},"/repos/{owner}/{repo}/topics/{topic}":{"put":{"tags":["repository"],"summary":"Add a topic to a repository","operationId":"repoAddTopic","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the topic to add","name":"topic","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}},"delete":{"tags":["repository"],"summary":"Delete a topic from a repository","operationId":"repoDeleteTopic","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the topic to delete","name":"topic","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}}},"/repos/{owner}/{repo}/transfer":{"post":{"tags":["repository"],"summary":"Transfer a repo ownership","operationId":"repoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferRepoOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/TransferRepoOption"}}},"description":"Transfer Options","required":true},"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/transfer/accept":{"post":{"tags":["repository"],"summary":"Accept a repo transfer","operationId":"acceptRepoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/transfer/reject":{"post":{"tags":["repository"],"summary":"Reject a repo transfer","operationId":"rejectRepoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/wiki/new":{"post":{"tags":["repository"],"summary":"Create a wiki page","operationId":"repoCreateWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateWikiPageOptions"},"responses":{"201":{"$ref":"#/components/responses/WikiPage"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/wiki/page/{pageName}":{"get":{"tags":["repository"],"summary":"Get a wiki page","operationId":"repoGetWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WikiPage"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a wiki page","operationId":"repoDeleteWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a wiki page","operationId":"repoEditWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateWikiPageOptions"},"responses":{"200":{"$ref":"#/components/responses/WikiPage"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/wiki/pages":{"get":{"tags":["repository"],"summary":"Get all wiki pages","operationId":"repoGetWikiPages","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/WikiPageList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/wiki/revisions/{pageName}":{"get":{"tags":["repository"],"summary":"Get revisions of a wiki page","operationId":"repoGetWikiPageRevisions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/WikiCommitList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{template_owner}/{template_repo}/generate":{"post":{"tags":["repository"],"summary":"Create a repository using a template","operationId":"generateRepo","parameters":[{"description":"name of the template repository owner","name":"template_owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the template repository","name":"template_repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenerateRepoOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repositories/{id}":{"get":{"tags":["repository"],"summary":"Get a repository by id","operationId":"repoGetByID","parameters":[{"description":"id of the repo to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"404":{"$ref":"#/components/responses/notFound"}}}},"/settings/api":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for api","operationId":"getGeneralAPISettings","responses":{"200":{"$ref":"#/components/responses/GeneralAPISettings"}}}},"/settings/attachment":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for Attachment","operationId":"getGeneralAttachmentSettings","responses":{"200":{"$ref":"#/components/responses/GeneralAttachmentSettings"}}}},"/settings/repository":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for repositories","operationId":"getGeneralRepositorySettings","responses":{"200":{"$ref":"#/components/responses/GeneralRepoSettings"}}}},"/settings/ui":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for ui","operationId":"getGeneralUISettings","responses":{"200":{"$ref":"#/components/responses/GeneralUISettings"}}}},"/signing-key.gpg":{"get":{"tags":["miscellaneous"],"summary":"Get default signing-key.gpg","operationId":"getSigningKey","responses":{"200":{"description":"GPG armored public key","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/teams/{id}":{"get":{"tags":["organization"],"summary":"Get a team","operationId":"orgGetTeam","parameters":[{"description":"id of the team to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Team"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Delete a team","operationId":"orgDeleteTeam","parameters":[{"description":"id of the team to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"team deleted"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["organization"],"summary":"Edit a team","operationId":"orgEditTeam","parameters":[{"description":"id of the team to edit","name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditTeamOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Team"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/activities/feeds":{"get":{"tags":["organization"],"summary":"List a team\'s activity feeds","operationId":"orgListTeamActivityFeeds","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/members":{"get":{"tags":["organization"],"summary":"List a team\'s members","operationId":"orgListTeamMembers","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/members/{username}":{"get":{"tags":["organization"],"summary":"List a particular member of team","operationId":"orgListTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the member to list","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/User"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["organization"],"summary":"Add a team member","operationId":"orgAddTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the user to add","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Remove a team member","operationId":"orgRemoveTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the user to remove","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/repos":{"get":{"tags":["organization"],"summary":"List a team\'s repos","operationId":"orgListTeamRepos","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/repos/{org}/{repo}":{"get":{"tags":["organization"],"summary":"List a particular repo of team","operationId":"orgListTeamRepo","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to list","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to list","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["organization"],"summary":"Add a repository to a team","operationId":"orgAddTeamRepository","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to add","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to add","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"description":"This does not delete the repository, it only removes the repository from the team.","tags":["organization"],"summary":"Remove a repository from a team","operationId":"orgRemoveTeamRepository","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to remove","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to remove","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/topics/search":{"get":{"tags":["repository"],"summary":"search topics via keyword","operationId":"topicSearch","parameters":[{"description":"keywords to search","name":"q","in":"query","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TopicListResponse"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user":{"get":{"tags":["user"],"summary":"Get the authenticated user","operationId":"userGetCurrent","responses":{"200":{"$ref":"#/components/responses/User"}}}},"/user/actions/secrets/{secretname}":{"put":{"tags":["user"],"summary":"Create or Update a secret value in a user scope","operationId":"updateUserSecret","parameters":[{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOrUpdateSecretOption"},"responses":{"201":{"description":"response when creating a secret"},"204":{"description":"response when updating a secret"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Delete a secret in a user scope","operationId":"deleteUserSecret","parameters":[{"description":"name of the secret","name":"secretname","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"delete one secret of the user"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/applications/oauth2":{"get":{"tags":["user"],"summary":"List the authenticated user\'s oauth2 applications","operationId":"userGetOauth2Application","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OAuth2ApplicationList"}}},"post":{"tags":["user"],"summary":"creates a new OAuth2 application","operationId":"userCreateOAuth2Application","requestBody":{"$ref":"#/components/requestBodies/CreateOAuth2ApplicationOptions"},"responses":{"201":{"$ref":"#/components/responses/OAuth2Application"},"400":{"$ref":"#/components/responses/error"}}}},"/user/applications/oauth2/{id}":{"get":{"tags":["user"],"summary":"get an OAuth2 Application","operationId":"userGetOAuth2Application","parameters":[{"description":"Application ID to be found","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/OAuth2Application"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"delete an OAuth2 Application","operationId":"userDeleteOAuth2Application","parameters":[{"description":"token to be deleted","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["user"],"summary":"update an OAuth2 Application, this includes regenerating the client secret","operationId":"userUpdateOAuth2Application","parameters":[{"description":"application to be updated","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOAuth2ApplicationOptions"},"responses":{"200":{"$ref":"#/components/responses/OAuth2Application"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/avatar":{"post":{"tags":["user"],"summary":"Update Avatar","operationId":"userUpdateAvatar","requestBody":{"$ref":"#/components/requestBodies/UpdateUserAvatarOption"},"responses":{"204":{"$ref":"#/components/responses/empty"}}},"delete":{"tags":["user"],"summary":"Delete Avatar","operationId":"userDeleteAvatar","responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/user/emails":{"get":{"tags":["user"],"summary":"List the authenticated user\'s email addresses","operationId":"userListEmails","responses":{"200":{"$ref":"#/components/responses/EmailList"}}},"post":{"tags":["user"],"summary":"Add email addresses","operationId":"userAddEmail","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateEmailOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateEmailOption"}}}},"responses":{"201":{"$ref":"#/components/responses/EmailList"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["user"],"summary":"Delete email addresses","operationId":"userDeleteEmail","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteEmailOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/DeleteEmailOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/followers":{"get":{"tags":["user"],"summary":"List the authenticated user\'s followers","operationId":"userCurrentListFollowers","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/user/following":{"get":{"tags":["user"],"summary":"List the users that the authenticated user is following","operationId":"userCurrentListFollowing","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/user/following/{username}":{"get":{"tags":["user"],"summary":"Check whether a user is followed by the authenticated user","operationId":"userCurrentCheckFollowing","parameters":[{"description":"username of followed user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["user"],"summary":"Follow a user","operationId":"userCurrentPutFollow","parameters":[{"description":"username of user to follow","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Unfollow a user","operationId":"userCurrentDeleteFollow","parameters":[{"description":"username of user to unfollow","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/gpg_key_token":{"get":{"tags":["user"],"summary":"Get a Token to verify","operationId":"getVerificationToken","responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/gpg_key_verify":{"post":{"tags":["user"],"summary":"Verify a GPG key","operationId":"userVerifyGPGKey","responses":{"201":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/gpg_keys":{"get":{"tags":["user"],"summary":"List the authenticated user\'s GPG keys","operationId":"userCurrentListGPGKeys","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKeyList"}}},"post":{"tags":["user"],"summary":"Create a GPG key","operationId":"userCurrentPostGPGKey","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateGPGKeyOption"}}}},"responses":{"201":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/gpg_keys/{id}":{"get":{"tags":["user"],"summary":"Get a GPG key","operationId":"userCurrentGetGPGKey","parameters":[{"description":"id of key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Remove a GPG key","operationId":"userCurrentDeleteGPGKey","parameters":[{"description":"id of key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/hooks":{"get":{"tags":["user"],"summary":"List the authenticated user\'s webhooks","operationId":"userListHooks","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["user"],"summary":"Create a hook","operationId":"userCreateHook","requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/user/hooks/{id}":{"get":{"tags":["user"],"summary":"Get a hook","operationId":"userGetHook","parameters":[{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"}}},"delete":{"tags":["user"],"summary":"Delete a hook","operationId":"userDeleteHook","parameters":[{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["user"],"summary":"Update a hook","operationId":"userEditHook","parameters":[{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/user/keys":{"get":{"tags":["user"],"summary":"List the authenticated user\'s public keys","operationId":"userCurrentListKeys","parameters":[{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKeyList"}}},"post":{"tags":["user"],"summary":"Create a public key","operationId":"userCurrentPostKey","requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/PublicKey"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/keys/{id}":{"get":{"tags":["user"],"summary":"Get a public key","operationId":"userCurrentGetKey","parameters":[{"description":"id of key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKey"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Delete a public key","operationId":"userCurrentDeleteKey","parameters":[{"description":"id of key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/orgs":{"get":{"tags":["organization"],"summary":"List the current user\'s organizations","operationId":"orgListCurrentUserOrgs","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/repos":{"get":{"tags":["user"],"summary":"List the repos that the authenticated user owns","operationId":"userCurrentListRepos","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}},"post":{"tags":["repository","user"],"summary":"Create a repository","operationId":"createCurrentUserRepo","requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/settings":{"get":{"tags":["user"],"summary":"Get user settings","operationId":"getUserSettings","responses":{"200":{"$ref":"#/components/responses/UserSettings"}}},"patch":{"tags":["user"],"summary":"Update user settings","operationId":"updateUserSettings","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSettingsOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/UserSettingsOptions"}}}},"responses":{"200":{"$ref":"#/components/responses/UserSettings"}}}},"/user/starred":{"get":{"tags":["user"],"summary":"The repos that the authenticated user has starred","operationId":"userCurrentListStarred","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/user/starred/{owner}/{repo}":{"get":{"tags":["user"],"summary":"Whether the authenticated is starring the repo","operationId":"userCurrentCheckStarring","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["user"],"summary":"Star the given repo","operationId":"userCurrentPutStar","parameters":[{"description":"owner of the repo to star","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to star","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Unstar the given repo","operationId":"userCurrentDeleteStar","parameters":[{"description":"owner of the repo to unstar","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to unstar","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/stopwatches":{"get":{"tags":["user"],"summary":"Get list of all existing stopwatches","operationId":"userGetStopWatches","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/StopWatchList"}}}},"/user/subscriptions":{"get":{"tags":["user"],"summary":"List repositories watched by the authenticated user","operationId":"userCurrentListSubscriptions","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/user/teams":{"get":{"tags":["user"],"summary":"List all the teams a user belongs to","operationId":"userListTeams","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"}}}},"/user/times":{"get":{"tags":["user"],"summary":"List the current user\'s tracked times","operationId":"userCurrentTrackedTimes","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"}}}},"/users/search":{"get":{"tags":["user"],"summary":"Search for users","operationId":"userSearch","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"ID of the user to search for","name":"uid","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"description":"SearchResults of a successful search","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/User"}},"ok":{"type":"boolean"}}}}}}}}},"/users/{username}":{"get":{"tags":["user"],"summary":"Get a user","operationId":"userGet","parameters":[{"description":"username of user to get","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/User"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/activities/feeds":{"get":{"tags":["user"],"summary":"List a user\'s activity feeds","operationId":"userListActivityFeeds","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"if true, only show actions performed by the requested user","name":"only-performed-by","in":"query","schema":{"type":"boolean"}},{"description":"the date of the activities to be found","name":"date","in":"query","schema":{"type":"string","format":"date"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityFeedsList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/followers":{"get":{"tags":["user"],"summary":"List the given user\'s followers","operationId":"userListFollowers","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/following":{"get":{"tags":["user"],"summary":"List the users that the given user is following","operationId":"userListFollowing","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/following/{target}":{"get":{"tags":["user"],"summary":"Check if one user is following another user","operationId":"userCheckFollowing","parameters":[{"description":"username of following user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of followed user","name":"target","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/gpg_keys":{"get":{"tags":["user"],"summary":"List the given user\'s GPG keys","operationId":"userListGPGKeys","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKeyList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/heatmap":{"get":{"tags":["user"],"summary":"Get a user\'s heatmap","operationId":"userGetHeatmapData","parameters":[{"description":"username of user to get","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserHeatmapData"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/keys":{"get":{"tags":["user"],"summary":"List the given user\'s public keys","operationId":"userListKeys","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKeyList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/orgs":{"get":{"tags":["organization"],"summary":"List a user\'s organizations","operationId":"orgListUserOrgs","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/orgs/{org}/permissions":{"get":{"tags":["organization"],"summary":"Get user permissions in organization","operationId":"orgGetUserPermissions","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationPermissions"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/repos":{"get":{"tags":["user"],"summary":"List the repos owned by the given user","operationId":"userListRepos","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/starred":{"get":{"tags":["user"],"summary":"The repos that the given user has starred","operationId":"userListStarred","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/subscriptions":{"get":{"tags":["user"],"summary":"List the repositories watched by a user","operationId":"userListSubscriptions","parameters":[{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/tokens":{"get":{"tags":["user"],"summary":"List the authenticated user\'s access tokens","operationId":"userGetTokens","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/AccessTokenList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["user"],"summary":"Create an access token","operationId":"userCreateToken","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateAccessTokenOption"}}}},"responses":{"201":{"$ref":"#/components/responses/AccessToken"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/users/{username}/tokens/{token}":{"delete":{"tags":["user"],"summary":"delete an access token","operationId":"userDeleteAccessToken","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"token to be deleted, identified by ID and if not available by name","name":"token","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}}},"/version":{"get":{"tags":["miscellaneous"],"summary":"Returns the version of the Gitea application","operationId":"getVersion","responses":{"200":{"$ref":"#/components/responses/ServerVersion"}}}}},"security":[{"BasicAuth":[]},{"Token":[]},{"AccessToken":[]},{"AuthorizationHeaderToken":[]},{"SudoParam":[]},{"SudoHeader":[]},{"TOTPHeader":[]}],"servers":[{"url":"https://gitea.com/api/v1"}],"components":{"responses":{"AccessToken":{"description":"AccessToken represents an API access token.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessToken"}},"text/html":{"schema":{"$ref":"#/components/schemas/AccessToken"}}}},"AccessTokenList":{"description":"AccessTokenList represents a list of API access token.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccessToken"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccessToken"}}}}},"ActivityFeedsList":{"description":"ActivityFeedsList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Activity"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Activity"}}}}},"ActivityPub":{"description":"ActivityPub","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActivityPub"}},"text/html":{"schema":{"$ref":"#/components/schemas/ActivityPub"}}}},"AnnotatedTag":{"description":"AnnotatedTag","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnnotatedTag"}},"text/html":{"schema":{"$ref":"#/components/schemas/AnnotatedTag"}}}},"Attachment":{"description":"Attachment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Attachment"}},"text/html":{"schema":{"$ref":"#/components/schemas/Attachment"}}}},"AttachmentList":{"description":"AttachmentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"}}}}},"Branch":{"description":"Branch","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Branch"}},"text/html":{"schema":{"$ref":"#/components/schemas/Branch"}}}},"BranchList":{"description":"BranchList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Branch"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Branch"}}}}},"BranchProtection":{"description":"BranchProtection","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BranchProtection"}},"text/html":{"schema":{"$ref":"#/components/schemas/BranchProtection"}}}},"BranchProtectionList":{"description":"BranchProtectionList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BranchProtection"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BranchProtection"}}}}},"ChangedFileList":{"description":"ChangedFileList","headers":{"X-HasMore":{"description":"True if there is another page","schema":{"type":"boolean"}},"X-Page":{"description":"The current page","schema":{"type":"integer","format":"int64"}},"X-PageCount":{"description":"Total number of pages","schema":{"type":"integer","format":"int64"}},"X-PerPage":{"description":"Commits per page","schema":{"type":"integer","format":"int64"}},"X-Total":{"description":"Total commit count","schema":{"type":"integer","format":"int64"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ChangedFile"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ChangedFile"}}}}},"CombinedStatus":{"description":"CombinedStatus","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CombinedStatus"}},"text/html":{"schema":{"$ref":"#/components/schemas/CombinedStatus"}}}},"Comment":{"description":"Comment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Comment"}},"text/html":{"schema":{"$ref":"#/components/schemas/Comment"}}}},"CommentList":{"description":"CommentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Comment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Comment"}}}}},"Commit":{"description":"Commit","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Commit"}},"text/html":{"schema":{"$ref":"#/components/schemas/Commit"}}}},"CommitList":{"description":"CommitList","headers":{"X-HasMore":{"description":"True if there is another page","schema":{"type":"boolean"}},"X-Page":{"description":"The current page","schema":{"type":"integer","format":"int64"}},"X-PageCount":{"description":"Total number of pages","schema":{"type":"integer","format":"int64"}},"X-PerPage":{"description":"Commits per page","schema":{"type":"integer","format":"int64"}},"X-Total":{"description":"Total commit count","schema":{"type":"integer","format":"int64"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Commit"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Commit"}}}}},"CommitStatus":{"description":"CommitStatus","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommitStatus"}},"text/html":{"schema":{"$ref":"#/components/schemas/CommitStatus"}}}},"CommitStatusList":{"description":"CommitStatusList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"}}}}},"ContentsListResponse":{"description":"ContentsListResponse","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"}}}}},"ContentsResponse":{"description":"ContentsResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentsResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/ContentsResponse"}}}},"CronList":{"description":"CronList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Cron"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Cron"}}}}},"DeployKey":{"description":"DeployKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeployKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/DeployKey"}}}},"DeployKeyList":{"description":"DeployKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeployKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeployKey"}}}}},"EmailList":{"description":"EmailList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Email"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Email"}}}}},"EmptyRepository":{"description":"EmptyRepository","content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIError"}},"text/html":{"schema":{"$ref":"#/components/schemas/APIError"}}}},"FileDeleteResponse":{"description":"FileDeleteResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileDeleteResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FileDeleteResponse"}}}},"FileResponse":{"description":"FileResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FileResponse"}}}},"FilesResponse":{"description":"FilesResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FilesResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FilesResponse"}}}},"GPGKey":{"description":"GPGKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GPGKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/GPGKey"}}}},"GPGKeyList":{"description":"GPGKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"}}}}},"GeneralAPISettings":{"description":"GeneralAPISettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralAPISettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralAPISettings"}}}},"GeneralAttachmentSettings":{"description":"GeneralAttachmentSettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralAttachmentSettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralAttachmentSettings"}}}},"GeneralRepoSettings":{"description":"GeneralRepoSettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralRepoSettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralRepoSettings"}}}},"GeneralUISettings":{"description":"GeneralUISettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralUISettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralUISettings"}}}},"GitBlobResponse":{"description":"GitBlobResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitBlobResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitBlobResponse"}}}},"GitHook":{"description":"GitHook","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitHook"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitHook"}}}},"GitHookList":{"description":"GitHookList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GitHook"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GitHook"}}}}},"GitTreeResponse":{"description":"GitTreeResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitTreeResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitTreeResponse"}}}},"GitignoreTemplateInfo":{"description":"GitignoreTemplateInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitignoreTemplateInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitignoreTemplateInfo"}}}},"GitignoreTemplateList":{"description":"GitignoreTemplateList","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}},"text/html":{"schema":{"type":"array","items":{"type":"string"}}}}},"Hook":{"description":"Hook","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Hook"}},"text/html":{"schema":{"$ref":"#/components/schemas/Hook"}}}},"HookList":{"description":"HookList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Hook"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Hook"}}}}},"Issue":{"description":"Issue","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Issue"}},"text/html":{"schema":{"$ref":"#/components/schemas/Issue"}}}},"IssueDeadline":{"description":"IssueDeadline","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueDeadline"}},"text/html":{"schema":{"$ref":"#/components/schemas/IssueDeadline"}}}},"IssueList":{"description":"IssueList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Issue"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Issue"}}}}},"IssueTemplates":{"description":"IssueTemplates","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssueTemplate"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssueTemplate"}}}}},"Label":{"description":"Label","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Label"}},"text/html":{"schema":{"$ref":"#/components/schemas/Label"}}}},"LabelList":{"description":"LabelList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Label"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Label"}}}}},"LabelTemplateInfo":{"description":"LabelTemplateInfo","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LabelTemplate"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LabelTemplate"}}}}},"LabelTemplateList":{"description":"LabelTemplateList","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}},"text/html":{"schema":{"type":"array","items":{"type":"string"}}}}},"LanguageStatistics":{"description":"LanguageStatistics","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}}},"text/html":{"schema":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}}}}},"LicenseTemplateInfo":{"description":"LicenseTemplateInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LicenseTemplateInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/LicenseTemplateInfo"}}}},"LicenseTemplateList":{"description":"LicenseTemplateList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LicensesTemplateListEntry"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/LicensesTemplateListEntry"}}}}},"MarkdownRender":{"description":"MarkdownRender is a rendered markdown document","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"MarkupRender":{"description":"MarkupRender is a rendered markup document","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"Milestone":{"description":"Milestone","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Milestone"}},"text/html":{"schema":{"$ref":"#/components/schemas/Milestone"}}}},"MilestoneList":{"description":"MilestoneList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Milestone"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Milestone"}}}}},"NodeInfo":{"description":"NodeInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodeInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/NodeInfo"}}}},"Note":{"description":"Note","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Note"}},"text/html":{"schema":{"$ref":"#/components/schemas/Note"}}}},"NotificationCount":{"description":"Number of unread notifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationCount"}},"text/html":{"schema":{"$ref":"#/components/schemas/NotificationCount"}}}},"NotificationThread":{"description":"NotificationThread","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationThread"}},"text/html":{"schema":{"$ref":"#/components/schemas/NotificationThread"}}}},"NotificationThreadList":{"description":"NotificationThreadList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/NotificationThread"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/NotificationThread"}}}}},"OAuth2Application":{"description":"OAuth2Application","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OAuth2Application"}},"text/html":{"schema":{"$ref":"#/components/schemas/OAuth2Application"}}}},"OAuth2ApplicationList":{"description":"OAuth2ApplicationList represents a list of OAuth2 applications.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OAuth2Application"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OAuth2Application"}}}}},"Organization":{"description":"Organization","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}},"text/html":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"OrganizationList":{"description":"OrganizationList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Organization"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Organization"}}}}},"OrganizationPermissions":{"description":"OrganizationPermissions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationPermissions"}},"text/html":{"schema":{"$ref":"#/components/schemas/OrganizationPermissions"}}}},"Package":{"description":"Package","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Package"}},"text/html":{"schema":{"$ref":"#/components/schemas/Package"}}}},"PackageFileList":{"description":"PackageFileList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PackageFile"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PackageFile"}}}}},"PackageList":{"description":"PackageList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Package"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Package"}}}}},"PublicKey":{"description":"PublicKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PublicKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/PublicKey"}}}},"PublicKeyList":{"description":"PublicKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PublicKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PublicKey"}}}}},"PullRequest":{"description":"PullRequest","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullRequest"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullRequest"}}}},"PullRequestList":{"description":"PullRequestList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullRequest"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullRequest"}}}}},"PullReview":{"description":"PullReview","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReview"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullReview"}}}},"PullReviewComment":{"description":"PullComment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReviewComment"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullReviewComment"}}}},"PullReviewCommentList":{"description":"PullCommentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReviewComment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReviewComment"}}}}},"PullReviewList":{"description":"PullReviewList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReview"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReview"}}}}},"PushMirror":{"description":"PushMirror","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PushMirror"}},"text/html":{"schema":{"$ref":"#/components/schemas/PushMirror"}}}},"PushMirrorList":{"description":"PushMirrorList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PushMirror"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PushMirror"}}}}},"Reaction":{"description":"Reaction","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Reaction"}},"text/html":{"schema":{"$ref":"#/components/schemas/Reaction"}}}},"ReactionList":{"description":"ReactionList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reaction"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reaction"}}}}},"Reference":{"description":"Reference","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Reference"}},"text/html":{"schema":{"$ref":"#/components/schemas/Reference"}}}},"ReferenceList":{"description":"ReferenceList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}}}}},"Release":{"description":"Release","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Release"}},"text/html":{"schema":{"$ref":"#/components/schemas/Release"}}}},"ReleaseList":{"description":"ReleaseList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Release"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Release"}}}}},"RepoCollaboratorPermission":{"description":"RepoCollaboratorPermission","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepoCollaboratorPermission"}},"text/html":{"schema":{"$ref":"#/components/schemas/RepoCollaboratorPermission"}}}},"RepoIssueConfig":{"description":"RepoIssueConfig","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueConfig"}},"text/html":{"schema":{"$ref":"#/components/schemas/IssueConfig"}}}},"RepoIssueConfigValidation":{"description":"RepoIssueConfigValidation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueConfigValidation"}},"text/html":{"schema":{"$ref":"#/components/schemas/IssueConfigValidation"}}}},"RepoNewIssuePinsAllowed":{"description":"RepoNewIssuePinsAllowed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NewIssuePinsAllowed"}},"text/html":{"schema":{"$ref":"#/components/schemas/NewIssuePinsAllowed"}}}},"Repository":{"description":"Repository","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Repository"}},"text/html":{"schema":{"$ref":"#/components/schemas/Repository"}}}},"RepositoryList":{"description":"RepositoryList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Repository"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Repository"}}}}},"SearchResults":{"description":"SearchResults","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResults"}},"text/html":{"schema":{"$ref":"#/components/schemas/SearchResults"}}}},"Secret":{"description":"Secret","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Secret"}},"text/html":{"schema":{"$ref":"#/components/schemas/Secret"}}}},"SecretList":{"description":"SecretList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Secret"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Secret"}}}}},"ServerVersion":{"description":"ServerVersion","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServerVersion"}},"text/html":{"schema":{"$ref":"#/components/schemas/ServerVersion"}}}},"StopWatch":{"description":"StopWatch","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StopWatch"}},"text/html":{"schema":{"$ref":"#/components/schemas/StopWatch"}}}},"StopWatchList":{"description":"StopWatchList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StopWatch"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StopWatch"}}}}},"StringSlice":{"description":"StringSlice","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}},"text/html":{"schema":{"type":"array","items":{"type":"string"}}}}},"Tag":{"description":"Tag","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tag"}},"text/html":{"schema":{"$ref":"#/components/schemas/Tag"}}}},"TagList":{"description":"TagList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Tag"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Tag"}}}}},"Team":{"description":"Team","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Team"}},"text/html":{"schema":{"$ref":"#/components/schemas/Team"}}}},"TeamList":{"description":"TeamList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Team"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Team"}}}}},"TimelineList":{"description":"TimelineList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TimelineComment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TimelineComment"}}}}},"TopicListResponse":{"description":"TopicListResponse","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TopicResponse"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TopicResponse"}}}}},"TopicNames":{"description":"TopicNames","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopicName"}},"text/html":{"schema":{"$ref":"#/components/schemas/TopicName"}}}},"TrackedTime":{"description":"TrackedTime","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrackedTime"}},"text/html":{"schema":{"$ref":"#/components/schemas/TrackedTime"}}}},"TrackedTimeList":{"description":"TrackedTimeList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TrackedTime"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TrackedTime"}}}}},"User":{"description":"User","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}},"text/html":{"schema":{"$ref":"#/components/schemas/User"}}}},"UserHeatmapData":{"description":"UserHeatmapData","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserHeatmapData"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserHeatmapData"}}}}},"UserList":{"description":"UserList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}}},"UserSettings":{"description":"UserSettings","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserSettings"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserSettings"}}}}},"WatchInfo":{"description":"WatchInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WatchInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/WatchInfo"}}}},"WikiCommitList":{"description":"WikiCommitList","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WikiCommitList"}},"text/html":{"schema":{"$ref":"#/components/schemas/WikiCommitList"}}}},"WikiPage":{"description":"WikiPage","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WikiPage"}},"text/html":{"schema":{"$ref":"#/components/schemas/WikiPage"}}}},"WikiPageList":{"description":"WikiPageList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WikiPageMetaData"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WikiPageMetaData"}}}}},"conflict":{"description":"APIConflict is a conflict empty response"},"empty":{"description":"APIEmpty is an empty response"},"error":{"description":"APIError is error format response","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}},"forbidden":{"description":"APIForbiddenError is a forbidden error response","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}},"invalidTopicsError":{"description":"APIInvalidTopicsError is error format response to invalid topics","headers":{"invalidTopics":{"schema":{"type":"array","items":{"type":"string"}},"style":"simple"},"message":{"schema":{"type":"string"}}}},"notFound":{"description":"APINotFound is a not found empty response"},"parameterBodies":{"description":"parameterBodies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOrUpdateSecretOption"}},"text/html":{"schema":{"$ref":"#/components/schemas/CreateOrUpdateSecretOption"}}}},"redirect":{"description":"APIRedirect is a redirect response"},"string":{"description":"APIString is a string response","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"validationError":{"description":"APIValidationError is error format response related to input validation","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}}},"requestBodies":{"CreateOAuth2ApplicationOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOAuth2ApplicationOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateOAuth2ApplicationOptions"}}},"required":true},"CreateWikiPageOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWikiPageOptions"}}}},"EditLabelOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditLabelOption"}}}},"CreateKeyOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateKeyOption"}}}},"CreateOrgOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOrgOption"}}},"required":true},"IssueLabelsOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueLabelsOption"}}}},"UpdateUserAvatarOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateUserAvatarOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/UpdateUserAvatarOption"}}}},"CreateHookOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateHookOption"}}},"required":true},"EditReactionOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditReactionOption"}}}},"EditHookOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditHookOption"}}}},"CreateRepoOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRepoOption"}}}},"CreateOrUpdateSecretOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOrUpdateSecretOption"}}}},"CreateLabelOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLabelOption"}}}},"UpdateFileOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateFileOptions"}}},"required":true},"EditIssueCommentOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditIssueCommentOption"}}}},"issueCreateIssueCommentAttachment":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"attachment":{"description":"attachment to upload","type":"string","format":"binary"}},"required":["attachment"]}}},"required":true},"EditAttachmentOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditAttachmentOptions"}}}},"IssueMeta":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueMeta"}},"text/plain":{"schema":{"$ref":"#/components/schemas/IssueMeta"}}}},"PullReviewRequestOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReviewRequestOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/PullReviewRequestOptions"}}},"required":true}},"securitySchemes":{"AccessToken":{"description":"This authentication option is deprecated for removal in Gitea 1.23. Please use AuthorizationHeaderToken instead.","type":"apiKey","name":"access_token","in":"query"},"AuthorizationHeaderToken":{"description":"API tokens must be prepended with \\"token\\" followed by a space.","type":"apiKey","name":"Authorization","in":"header"},"BasicAuth":{"type":"http","scheme":"basic"},"SudoHeader":{"description":"Sudo API request as the user provided as the key. Admin privileges are required.","type":"apiKey","name":"Sudo","in":"header"},"SudoParam":{"description":"Sudo API request as the user provided as the key. Admin privileges are required.","type":"apiKey","name":"sudo","in":"query"},"TOTPHeader":{"description":"Must be used in combination with BasicAuth if two-factor authentication is enabled.","type":"apiKey","name":"X-GITEA-OTP","in":"header"},"Token":{"description":"This authentication option is deprecated for removal in Gitea 1.23. Please use AuthorizationHeaderToken instead.","type":"apiKey","name":"token","in":"query"}},"schemas":{"APIError":{"description":"APIError is an api error with a message","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AccessToken":{"type":"object","title":"AccessToken represents an API access token.","properties":{"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"scopes":{"type":"array","items":{"type":"string"},"x-go-name":"Scopes"},"sha1":{"type":"string","x-go-name":"Token"},"token_last_eight":{"type":"string","x-go-name":"TokenLastEight"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Activity":{"type":"object","properties":{"act_user":{"$ref":"#/components/schemas/User"},"act_user_id":{"type":"integer","format":"int64","x-go-name":"ActUserID"},"comment":{"$ref":"#/components/schemas/Comment"},"comment_id":{"type":"integer","format":"int64","x-go-name":"CommentID"},"content":{"type":"string","x-go-name":"Content"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_private":{"type":"boolean","x-go-name":"IsPrivate"},"op_type":{"type":"string","x-go-name":"OpType"},"ref_name":{"type":"string","x-go-name":"RefName"},"repo":{"$ref":"#/components/schemas/Repository"},"repo_id":{"type":"integer","format":"int64","x-go-name":"RepoID"},"user_id":{"type":"integer","format":"int64","x-go-name":"UserID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ActivityPub":{"description":"ActivityPub type","type":"object","properties":{"@context":{"type":"string","x-go-name":"Context"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AddCollaboratorOption":{"description":"AddCollaboratorOption options when adding a user as a collaborator of a repository","type":"object","properties":{"permission":{"type":"string","x-go-name":"Permission"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AddTimeOption":{"description":"AddTimeOption options for adding time to an issue","type":"object","required":["time"],"properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"time":{"description":"time in seconds","type":"integer","format":"int64","x-go-name":"Time"},"user_name":{"description":"User who spent the time (optional)","type":"string","x-go-name":"User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AnnotatedTag":{"description":"AnnotatedTag represents an annotated tag","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"object":{"$ref":"#/components/schemas/AnnotatedTagObject"},"sha":{"type":"string","x-go-name":"SHA"},"tag":{"type":"string","x-go-name":"Tag"},"tagger":{"$ref":"#/components/schemas/CommitUser"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AnnotatedTagObject":{"description":"AnnotatedTagObject contains meta information of the tag object","type":"object","properties":{"sha":{"type":"string","x-go-name":"SHA"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Attachment":{"description":"Attachment a generic attachment","type":"object","properties":{"browser_download_url":{"type":"string","x-go-name":"DownloadURL"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"download_count":{"type":"integer","format":"int64","x-go-name":"DownloadCount"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"uuid":{"type":"string","x-go-name":"UUID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Branch":{"description":"Branch represents a repository branch","type":"object","properties":{"commit":{"$ref":"#/components/schemas/PayloadCommit"},"effective_branch_protection_name":{"type":"string","x-go-name":"EffectiveBranchProtectionName"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"name":{"type":"string","x-go-name":"Name"},"protected":{"type":"boolean","x-go-name":"Protected"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"user_can_merge":{"type":"boolean","x-go-name":"UserCanMerge"},"user_can_push":{"type":"boolean","x-go-name":"UserCanPush"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"BranchProtection":{"description":"BranchProtection represents a branch protection for a repository","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"branch_name":{"description":"Deprecated: true","type":"string","x-go-name":"BranchName"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"rule_name":{"type":"string","x-go-name":"RuleName"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ChangeFileOperation":{"description":"ChangeFileOperation for creating, updating or deleting a file","type":"object","required":["operation","path"],"properties":{"content":{"description":"new or updated file content, must be base64 encoded","type":"string","x-go-name":"ContentBase64"},"from_path":{"description":"old path of the file to move","type":"string","x-go-name":"FromPath"},"operation":{"description":"indicates what to do with the file","type":"string","enum":["create","update","delete"],"x-go-name":"Operation"},"path":{"description":"path to the existing or new file","type":"string","x-go-name":"Path"},"sha":{"description":"sha is the SHA for the file that already exists, required for update or delete","type":"string","x-go-name":"SHA"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ChangeFilesOptions":{"description":"ChangeFilesOptions options for creating, updating or deleting multiple files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["files"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"files":{"description":"list of file operations","type":"array","items":{"$ref":"#/components/schemas/ChangeFileOperation"},"x-go-name":"Files"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ChangedFile":{"description":"ChangedFile store information about files affected by the pull request","type":"object","properties":{"additions":{"type":"integer","format":"int64","x-go-name":"Additions"},"changes":{"type":"integer","format":"int64","x-go-name":"Changes"},"contents_url":{"type":"string","x-go-name":"ContentsURL"},"deletions":{"type":"integer","format":"int64","x-go-name":"Deletions"},"filename":{"type":"string","x-go-name":"Filename"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"previous_filename":{"type":"string","x-go-name":"PreviousFilename"},"raw_url":{"type":"string","x-go-name":"RawURL"},"status":{"type":"string","x-go-name":"Status"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CombinedStatus":{"description":"CombinedStatus holds the combined state of several statuses for a single commit","type":"object","properties":{"commit_url":{"type":"string","x-go-name":"CommitURL"},"repository":{"$ref":"#/components/schemas/Repository"},"sha":{"type":"string","x-go-name":"SHA"},"state":{"$ref":"#/components/schemas/CommitStatusState"},"statuses":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"},"x-go-name":"Statuses"},"total_count":{"type":"integer","format":"int64","x-go-name":"TotalCount"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Comment":{"description":"Comment represents a comment on a commit or issue","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"body":{"type":"string","x-go-name":"Body"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue_url":{"type":"string","x-go-name":"IssueURL"},"original_author":{"type":"string","x-go-name":"OriginalAuthor"},"original_author_id":{"type":"integer","format":"int64","x-go-name":"OriginalAuthorID"},"pull_request_url":{"type":"string","x-go-name":"PRURL"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Commit":{"type":"object","title":"Commit contains information generated from a Git commit.","properties":{"author":{"$ref":"#/components/schemas/User"},"commit":{"$ref":"#/components/schemas/RepoCommit"},"committer":{"$ref":"#/components/schemas/User"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"files":{"type":"array","items":{"$ref":"#/components/schemas/CommitAffectedFiles"},"x-go-name":"Files"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"parents":{"type":"array","items":{"$ref":"#/components/schemas/CommitMeta"},"x-go-name":"Parents"},"sha":{"type":"string","x-go-name":"SHA"},"stats":{"$ref":"#/components/schemas/CommitStats"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitAffectedFiles":{"description":"CommitAffectedFiles store information about files affected by the commit","type":"object","properties":{"filename":{"type":"string","x-go-name":"Filename"},"status":{"type":"string","x-go-name":"Status"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitDateOptions":{"description":"CommitDateOptions store dates for GIT_AUTHOR_DATE and GIT_COMMITTER_DATE","type":"object","properties":{"author":{"type":"string","format":"date-time","x-go-name":"Author"},"committer":{"type":"string","format":"date-time","x-go-name":"Committer"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitMeta":{"type":"object","title":"CommitMeta contains meta information of a commit in terms of API.","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"sha":{"type":"string","x-go-name":"SHA"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStats":{"description":"CommitStats is statistics for a RepoCommit","type":"object","properties":{"additions":{"type":"integer","format":"int64","x-go-name":"Additions"},"deletions":{"type":"integer","format":"int64","x-go-name":"Deletions"},"total":{"type":"integer","format":"int64","x-go-name":"Total"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStatus":{"description":"CommitStatus holds a single status of a single Commit","type":"object","properties":{"context":{"type":"string","x-go-name":"Context"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"creator":{"$ref":"#/components/schemas/User"},"description":{"type":"string","x-go-name":"Description"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"status":{"$ref":"#/components/schemas/CommitStatusState"},"target_url":{"type":"string","x-go-name":"TargetURL"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStatusState":{"description":"CommitStatusState holds the state of a CommitStatus\\nIt can be \\"pending\\", \\"success\\", \\"error\\" and \\"failure\\"","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitUser":{"type":"object","title":"CommitUser contains information of a user in the context of a commit.","properties":{"date":{"type":"string","x-go-name":"Date"},"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ContentsResponse":{"description":"ContentsResponse contains information about a repo\'s entry\'s (dir, file, symlink, submodule) metadata and content","type":"object","properties":{"_links":{"$ref":"#/components/schemas/FileLinksResponse"},"content":{"description":"`content` is populated when `type` is `file`, otherwise null","type":"string","x-go-name":"Content"},"download_url":{"type":"string","x-go-name":"DownloadURL"},"encoding":{"description":"`encoding` is populated when `type` is `file`, otherwise null","type":"string","x-go-name":"Encoding"},"git_url":{"type":"string","x-go-name":"GitURL"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit_sha":{"type":"string","x-go-name":"LastCommitSHA"},"name":{"type":"string","x-go-name":"Name"},"path":{"type":"string","x-go-name":"Path"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"submodule_git_url":{"description":"`submodule_git_url` is populated when `type` is `submodule`, otherwise null","type":"string","x-go-name":"SubmoduleGitURL"},"target":{"description":"`target` is populated when `type` is `symlink`, otherwise null","type":"string","x-go-name":"Target"},"type":{"description":"`type` will be `file`, `dir`, `symlink`, or `submodule`","type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateAccessTokenOption":{"description":"CreateAccessTokenOption options when create access token","type":"object","required":["name"],"properties":{"name":{"type":"string","x-go-name":"Name"},"scopes":{"type":"array","items":{"type":"string"},"x-go-name":"Scopes"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateBranchProtectionOption":{"description":"CreateBranchProtectionOption options for creating a branch protection","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"branch_name":{"description":"Deprecated: true","type":"string","x-go-name":"BranchName"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"rule_name":{"type":"string","x-go-name":"RuleName"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateBranchRepoOption":{"description":"CreateBranchRepoOption options when creating a branch in a repository","type":"object","required":["new_branch_name"],"properties":{"new_branch_name":{"description":"Name of the branch to create","type":"string","uniqueItems":true,"x-go-name":"BranchName"},"old_branch_name":{"description":"Deprecated: true\\nName of the old branch to create from","type":"string","uniqueItems":true,"x-go-name":"OldBranchName"},"old_ref_name":{"description":"Name of the old branch/tag/commit to create from","type":"string","uniqueItems":true,"x-go-name":"OldRefName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateEmailOption":{"description":"CreateEmailOption options when creating email addresses","type":"object","properties":{"emails":{"description":"email addresses to add","type":"array","items":{"type":"string"},"x-go-name":"Emails"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateFileOptions":{"description":"CreateFileOptions options for creating files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["content"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"content":{"description":"content must be base64 encoded","type":"string","x-go-name":"ContentBase64"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateForkOption":{"description":"CreateForkOption options for creating a fork","type":"object","properties":{"name":{"description":"name of the forked repository","type":"string","x-go-name":"Name"},"organization":{"description":"organization name, if forking into an organization","type":"string","x-go-name":"Organization"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateGPGKeyOption":{"description":"CreateGPGKeyOption options create user GPG key","type":"object","required":["armored_public_key"],"properties":{"armored_public_key":{"description":"An armored GPG key to add","type":"string","uniqueItems":true,"x-go-name":"ArmoredKey"},"armored_signature":{"type":"string","x-go-name":"Signature"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateHookOption":{"description":"CreateHookOption options when create a hook","type":"object","required":["type","config"],"properties":{"active":{"type":"boolean","default":false,"x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"$ref":"#/components/schemas/CreateHookOptionConfig"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"},"type":{"type":"string","enum":["dingtalk","discord","gitea","gogs","msteams","slack","telegram","feishu","wechatwork","packagist"],"x-go-name":"Type"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateHookOptionConfig":{"description":"CreateHookOptionConfig has all config options in it\\nrequired are \\"content_type\\" and \\"url\\" Required","type":"object","additionalProperties":{"type":"string"},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateIssueCommentOption":{"description":"CreateIssueCommentOption options for creating a comment on an issue","type":"object","required":["body"],"properties":{"body":{"type":"string","x-go-name":"Body"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateIssueOption":{"description":"CreateIssueOption options to create one issue","type":"object","required":["title"],"properties":{"assignee":{"description":"deprecated","type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"closed":{"type":"boolean","x-go-name":"Closed"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"labels":{"description":"list of label ids","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"description":"milestone id","type":"integer","format":"int64","x-go-name":"Milestone"},"ref":{"type":"string","x-go-name":"Ref"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateKeyOption":{"description":"CreateKeyOption options when creating a key","type":"object","required":["title","key"],"properties":{"key":{"description":"An armored SSH key to add","type":"string","uniqueItems":true,"x-go-name":"Key"},"read_only":{"description":"Describe if the key has only read access or read/write","type":"boolean","x-go-name":"ReadOnly"},"title":{"description":"Title of the key to add","type":"string","uniqueItems":true,"x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateLabelOption":{"description":"CreateLabelOption options for creating a label","type":"object","required":["name","color"],"properties":{"color":{"type":"string","x-go-name":"Color","example":"#00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"is_archived":{"type":"boolean","x-go-name":"IsArchived","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateMilestoneOption":{"description":"CreateMilestoneOption options for creating a milestone","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"state":{"type":"string","enum":["open","closed"],"x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateOAuth2ApplicationOptions":{"description":"CreateOAuth2ApplicationOptions holds options to create an oauth2 application","type":"object","properties":{"confidential_client":{"type":"boolean","x-go-name":"ConfidentialClient"},"name":{"type":"string","x-go-name":"Name"},"redirect_uris":{"type":"array","items":{"type":"string"},"x-go-name":"RedirectURIs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateOrUpdateSecretOption":{"description":"CreateOrUpdateSecretOption options when creating or updating secret","type":"object","required":["data"],"properties":{"data":{"description":"Data of the secret to update","type":"string","x-go-name":"Data"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateOrgOption":{"description":"CreateOrgOption options for creating an organization","type":"object","required":["username"],"properties":{"description":{"type":"string","x-go-name":"Description"},"email":{"type":"string","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"username":{"type":"string","x-go-name":"UserName"},"visibility":{"description":"possible values are `public` (default), `limited` or `private`","type":"string","enum":["public","limited","private"],"x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullRequestOption":{"description":"CreatePullRequestOption options when creating a pull request","type":"object","properties":{"assignee":{"type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"base":{"type":"string","x-go-name":"Base"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"head":{"type":"string","x-go-name":"Head"},"labels":{"type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullReviewComment":{"description":"CreatePullReviewComment represent a review comment for creation api","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"new_position":{"description":"if comment to new file line or 0","type":"integer","format":"int64","x-go-name":"NewLineNum"},"old_position":{"description":"if comment to old file line or 0","type":"integer","format":"int64","x-go-name":"OldLineNum"},"path":{"description":"the tree path","type":"string","x-go-name":"Path"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullReviewOptions":{"description":"CreatePullReviewOptions are options to create a pull review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"comments":{"type":"array","items":{"$ref":"#/components/schemas/CreatePullReviewComment"},"x-go-name":"Comments"},"commit_id":{"type":"string","x-go-name":"CommitID"},"event":{"$ref":"#/components/schemas/ReviewStateType"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePushMirrorOption":{"type":"object","title":"CreatePushMirrorOption represents need information to create a push mirror of a repository.","properties":{"interval":{"type":"string","x-go-name":"Interval"},"remote_address":{"type":"string","x-go-name":"RemoteAddress"},"remote_password":{"type":"string","x-go-name":"RemotePassword"},"remote_username":{"type":"string","x-go-name":"RemoteUsername"},"sync_on_commit":{"type":"boolean","x-go-name":"SyncOnCommit"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateReleaseOption":{"description":"CreateReleaseOption options when creating a release","type":"object","required":["tag_name"],"properties":{"body":{"type":"string","x-go-name":"Note"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"tag_name":{"type":"string","x-go-name":"TagName"},"target_commitish":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateRepoOption":{"description":"CreateRepoOption options when creating repository","type":"object","required":["name"],"properties":{"auto_init":{"description":"Whether the repository should be auto-initialized?","type":"boolean","x-go-name":"AutoInit"},"default_branch":{"description":"DefaultBranch of the repository (used when initializes and in template)","type":"string","x-go-name":"DefaultBranch"},"description":{"description":"Description of the repository to create","type":"string","x-go-name":"Description"},"gitignores":{"description":"Gitignores to use","type":"string","x-go-name":"Gitignores"},"issue_labels":{"description":"Label-Set to use","type":"string","x-go-name":"IssueLabels"},"license":{"description":"License to use","type":"string","x-go-name":"License"},"name":{"description":"Name of the repository to create","type":"string","uniqueItems":true,"x-go-name":"Name"},"private":{"description":"Whether the repository is private","type":"boolean","x-go-name":"Private"},"readme":{"description":"Readme of the repository to create","type":"string","x-go-name":"Readme"},"template":{"description":"Whether the repository is template","type":"boolean","x-go-name":"Template"},"trust_model":{"description":"TrustModel of the repository","type":"string","enum":["default","collaborator","committer","collaboratorcommitter"],"x-go-name":"TrustModel"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateStatusOption":{"description":"CreateStatusOption holds the information needed to create a new CommitStatus for a Commit","type":"object","properties":{"context":{"type":"string","x-go-name":"Context"},"description":{"type":"string","x-go-name":"Description"},"state":{"$ref":"#/components/schemas/CommitStatusState"},"target_url":{"type":"string","x-go-name":"TargetURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateTagOption":{"description":"CreateTagOption options when creating a tag","type":"object","required":["tag_name"],"properties":{"message":{"type":"string","x-go-name":"Message"},"tag_name":{"type":"string","x-go-name":"TagName"},"target":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateTeamOption":{"description":"CreateTeamOption options for creating a team","type":"object","required":["name"],"properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"permission":{"type":"string","enum":["read","write","admin"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.actions","repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.ext_wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":"{\\"repo.actions\\",\\"repo.packages\\",\\"repo.code\\":\\"read\\",\\"repo.issues\\":\\"write\\",\\"repo.ext_issues\\":\\"none\\",\\"repo.wiki\\":\\"admin\\",\\"repo.pulls\\":\\"owner\\",\\"repo.releases\\":\\"none\\",\\"repo.projects\\":\\"none\\",\\"repo.ext_wiki\\":\\"none\\"}"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateUserOption":{"description":"CreateUserOption create user options","type":"object","required":["username","email"],"properties":{"created_at":{"description":"For explicitly setting the user creation timestamp. Useful when users are\\nmigrated from other systems. When omitted, the user\'s creation timestamp\\nwill be set to \\"now\\".","type":"string","format":"date-time","x-go-name":"Created"},"email":{"type":"string","format":"email","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"login_name":{"type":"string","x-go-name":"LoginName"},"must_change_password":{"type":"boolean","x-go-name":"MustChangePassword"},"password":{"type":"string","x-go-name":"Password"},"restricted":{"type":"boolean","x-go-name":"Restricted"},"send_notify":{"type":"boolean","x-go-name":"SendNotify"},"source_id":{"type":"integer","format":"int64","x-go-name":"SourceID"},"username":{"type":"string","x-go-name":"Username"},"visibility":{"type":"string","x-go-name":"Visibility"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateWikiPageOptions":{"description":"CreateWikiPageOptions form for creating wiki","type":"object","properties":{"content_base64":{"description":"content must be base64 encoded","type":"string","x-go-name":"ContentBase64"},"message":{"description":"optional commit message summarizing the change","type":"string","x-go-name":"Message"},"title":{"description":"page title. leave empty to keep unchanged","type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Cron":{"description":"Cron represents a Cron task","type":"object","properties":{"exec_times":{"type":"integer","format":"int64","x-go-name":"ExecTimes"},"name":{"type":"string","x-go-name":"Name"},"next":{"type":"string","format":"date-time","x-go-name":"Next"},"prev":{"type":"string","format":"date-time","x-go-name":"Prev"},"schedule":{"type":"string","x-go-name":"Schedule"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeleteEmailOption":{"description":"DeleteEmailOption options when deleting email addresses","type":"object","properties":{"emails":{"description":"email addresses to delete","type":"array","items":{"type":"string"},"x-go-name":"Emails"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeleteFileOptions":{"description":"DeleteFileOptions options for deleting files (used for other File structs below)\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["sha"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"sha":{"description":"sha is the SHA for the file that already exists","type":"string","x-go-name":"SHA"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeployKey":{"description":"DeployKey a deploy key","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"fingerprint":{"type":"string","x-go-name":"Fingerprint"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key":{"type":"string","x-go-name":"Key"},"key_id":{"type":"integer","format":"int64","x-go-name":"KeyID"},"read_only":{"type":"boolean","x-go-name":"ReadOnly"},"repository":{"$ref":"#/components/schemas/Repository"},"title":{"type":"string","x-go-name":"Title"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DismissPullReviewOptions":{"description":"DismissPullReviewOptions are options to dismiss a pull review","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"priors":{"type":"boolean","x-go-name":"Priors"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditAttachmentOptions":{"description":"EditAttachmentOptions options for editing attachments","type":"object","properties":{"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditBranchProtectionOption":{"description":"EditBranchProtectionOption options for editing a branch protection","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditDeadlineOption":{"description":"EditDeadlineOption options for creating a deadline","type":"object","required":["due_date"],"properties":{"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditGitHookOption":{"description":"EditGitHookOption options when modifying one Git hook","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditHookOption":{"description":"EditHookOption options when modify one hook","type":"object","properties":{"active":{"type":"boolean","x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"Config"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditIssueCommentOption":{"description":"EditIssueCommentOption options for editing a comment","type":"object","required":["body"],"properties":{"body":{"type":"string","x-go-name":"Body"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditIssueOption":{"description":"EditIssueOption options for editing an issue","type":"object","properties":{"assignee":{"description":"deprecated","type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"ref":{"type":"string","x-go-name":"Ref"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"},"unset_due_date":{"type":"boolean","x-go-name":"RemoveDeadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditLabelOption":{"description":"EditLabelOption options for editing a label","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"#00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"is_archived":{"type":"boolean","x-go-name":"IsArchived","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditMilestoneOption":{"description":"EditMilestoneOption options for editing a milestone","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditOrgOption":{"description":"EditOrgOption options for editing an organization","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"email":{"type":"string","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"visibility":{"description":"possible values are `public`, `limited` or `private`","type":"string","enum":["public","limited","private"],"x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditPullRequestOption":{"description":"EditPullRequestOption options when modify pull request","type":"object","properties":{"allow_maintainer_edit":{"type":"boolean","x-go-name":"AllowMaintainerEdit"},"assignee":{"type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"base":{"type":"string","x-go-name":"Base"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"labels":{"type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"},"unset_due_date":{"type":"boolean","x-go-name":"RemoveDeadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditReactionOption":{"description":"EditReactionOption contain the reaction type","type":"object","properties":{"content":{"type":"string","x-go-name":"Reaction"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditReleaseOption":{"description":"EditReleaseOption options when editing a release","type":"object","properties":{"body":{"type":"string","x-go-name":"Note"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"tag_name":{"type":"string","x-go-name":"TagName"},"target_commitish":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditRepoOption":{"description":"EditRepoOption options when editing a repository\'s properties","type":"object","properties":{"allow_manual_merge":{"description":"either `true` to allow mark pr as merged manually, or `false` to prevent it.","type":"boolean","x-go-name":"AllowManualMerge"},"allow_merge_commits":{"description":"either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.","type":"boolean","x-go-name":"AllowMerge"},"allow_rebase":{"description":"either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.","type":"boolean","x-go-name":"AllowRebase"},"allow_rebase_explicit":{"description":"either `true` to allow rebase with explicit merge commits (--no-ff), or `false` to prevent rebase with explicit merge commits.","type":"boolean","x-go-name":"AllowRebaseMerge"},"allow_rebase_update":{"description":"either `true` to allow updating pull request branch by rebase, or `false` to prevent it.","type":"boolean","x-go-name":"AllowRebaseUpdate"},"allow_squash_merge":{"description":"either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.","type":"boolean","x-go-name":"AllowSquash"},"archived":{"description":"set to `true` to archive this repository.","type":"boolean","x-go-name":"Archived"},"autodetect_manual_merge":{"description":"either `true` to enable AutodetectManualMerge, or `false` to prevent it. Note: In some special cases, misjudgments can occur.","type":"boolean","x-go-name":"AutodetectManualMerge"},"default_allow_maintainer_edit":{"description":"set to `true` to allow edits from maintainers by default","type":"boolean","x-go-name":"DefaultAllowMaintainerEdit"},"default_branch":{"description":"sets the default branch for this repository.","type":"string","x-go-name":"DefaultBranch"},"default_delete_branch_after_merge":{"description":"set to `true` to delete pr branch after merge by default","type":"boolean","x-go-name":"DefaultDeleteBranchAfterMerge"},"default_merge_style":{"description":"set to a merge style to be used by this repository: \\"merge\\", \\"rebase\\", \\"rebase-merge\\", or \\"squash\\".","type":"string","x-go-name":"DefaultMergeStyle"},"description":{"description":"a short description of the repository.","type":"string","x-go-name":"Description"},"enable_prune":{"description":"enable prune - remove obsolete remote-tracking references","type":"boolean","x-go-name":"EnablePrune"},"external_tracker":{"$ref":"#/components/schemas/ExternalTracker"},"external_wiki":{"$ref":"#/components/schemas/ExternalWiki"},"has_actions":{"description":"either `true` to enable actions unit, or `false` to disable them.","type":"boolean","x-go-name":"HasActions"},"has_issues":{"description":"either `true` to enable issues for this repository or `false` to disable them.","type":"boolean","x-go-name":"HasIssues"},"has_packages":{"description":"either `true` to enable packages unit, or `false` to disable them.","type":"boolean","x-go-name":"HasPackages"},"has_projects":{"description":"either `true` to enable project unit, or `false` to disable them.","type":"boolean","x-go-name":"HasProjects"},"has_pull_requests":{"description":"either `true` to allow pull requests, or `false` to prevent pull request.","type":"boolean","x-go-name":"HasPullRequests"},"has_releases":{"description":"either `true` to enable releases unit, or `false` to disable them.","type":"boolean","x-go-name":"HasReleases"},"has_wiki":{"description":"either `true` to enable the wiki for this repository or `false` to disable it.","type":"boolean","x-go-name":"HasWiki"},"ignore_whitespace_conflicts":{"description":"either `true` to ignore whitespace for conflicts, or `false` to not ignore whitespace.","type":"boolean","x-go-name":"IgnoreWhitespaceConflicts"},"internal_tracker":{"$ref":"#/components/schemas/InternalTracker"},"mirror_interval":{"description":"set to a string like `8h30m0s` to set the mirror interval time","type":"string","x-go-name":"MirrorInterval"},"name":{"description":"name of the repository","type":"string","uniqueItems":true,"x-go-name":"Name"},"private":{"description":"either `true` to make the repository private or `false` to make it public.\\nNote: you will get a 422 error if the organization restricts changing repository visibility to organization\\nowners and a non-owner tries to change the value of private.","type":"boolean","x-go-name":"Private"},"template":{"description":"either `true` to make this repository a template or `false` to make it a normal repository","type":"boolean","x-go-name":"Template"},"website":{"description":"a URL with more information about the repository.","type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditTeamOption":{"description":"EditTeamOption options for editing a team","type":"object","required":["name"],"properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"permission":{"type":"string","enum":["read","write","admin"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":{"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditUserOption":{"description":"EditUserOption edit user options","type":"object","required":["source_id","login_name"],"properties":{"active":{"type":"boolean","x-go-name":"Active"},"admin":{"type":"boolean","x-go-name":"Admin"},"allow_create_organization":{"type":"boolean","x-go-name":"AllowCreateOrganization"},"allow_git_hook":{"type":"boolean","x-go-name":"AllowGitHook"},"allow_import_local":{"type":"boolean","x-go-name":"AllowImportLocal"},"description":{"type":"string","x-go-name":"Description"},"email":{"type":"string","format":"email","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"login_name":{"type":"string","x-go-name":"LoginName"},"max_repo_creation":{"type":"integer","format":"int64","x-go-name":"MaxRepoCreation"},"must_change_password":{"type":"boolean","x-go-name":"MustChangePassword"},"password":{"type":"string","x-go-name":"Password"},"prohibit_login":{"type":"boolean","x-go-name":"ProhibitLogin"},"restricted":{"type":"boolean","x-go-name":"Restricted"},"source_id":{"type":"integer","format":"int64","x-go-name":"SourceID"},"visibility":{"type":"string","x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Email":{"description":"Email an email address belonging to a user","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"primary":{"type":"boolean","x-go-name":"Primary"},"user_id":{"type":"integer","format":"int64","x-go-name":"UserID"},"username":{"type":"string","x-go-name":"UserName"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ExternalTracker":{"description":"ExternalTracker represents settings for external tracker","type":"object","properties":{"external_tracker_format":{"description":"External Issue Tracker URL Format. Use the placeholders {user}, {repo} and {index} for the username, repository name and issue index.","type":"string","x-go-name":"ExternalTrackerFormat"},"external_tracker_regexp_pattern":{"description":"External Issue Tracker issue regular expression","type":"string","x-go-name":"ExternalTrackerRegexpPattern"},"external_tracker_style":{"description":"External Issue Tracker Number Format, either `numeric`, `alphanumeric`, or `regexp`","type":"string","x-go-name":"ExternalTrackerStyle"},"external_tracker_url":{"description":"URL of external issue tracker.","type":"string","x-go-name":"ExternalTrackerURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ExternalWiki":{"description":"ExternalWiki represents setting for external wiki","type":"object","properties":{"external_wiki_url":{"description":"URL of external wiki.","type":"string","x-go-name":"ExternalWikiURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileCommitResponse":{"type":"object","title":"FileCommitResponse contains information generated from a Git commit for a repo\'s file.","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"committer":{"$ref":"#/components/schemas/CommitUser"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"message":{"type":"string","x-go-name":"Message"},"parents":{"type":"array","items":{"$ref":"#/components/schemas/CommitMeta"},"x-go-name":"Parents"},"sha":{"type":"string","x-go-name":"SHA"},"tree":{"$ref":"#/components/schemas/CommitMeta"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileDeleteResponse":{"description":"FileDeleteResponse contains information about a repo\'s file that was deleted","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"content":{"x-go-name":"Content"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileLinksResponse":{"description":"FileLinksResponse contains the links for a repo\'s file","type":"object","properties":{"git":{"type":"string","x-go-name":"GitURL"},"html":{"type":"string","x-go-name":"HTMLURL"},"self":{"type":"string","x-go-name":"Self"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileResponse":{"description":"FileResponse contains information about a repo\'s file","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"content":{"$ref":"#/components/schemas/ContentsResponse"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FilesResponse":{"description":"FilesResponse contains information about multiple files from a repo","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"files":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"},"x-go-name":"Files"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GPGKey":{"description":"GPGKey a user GPG key to sign commit and tag in repository","type":"object","properties":{"can_certify":{"type":"boolean","x-go-name":"CanCertify"},"can_encrypt_comms":{"type":"boolean","x-go-name":"CanEncryptComms"},"can_encrypt_storage":{"type":"boolean","x-go-name":"CanEncryptStorage"},"can_sign":{"type":"boolean","x-go-name":"CanSign"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"emails":{"type":"array","items":{"$ref":"#/components/schemas/GPGKeyEmail"},"x-go-name":"Emails"},"expires_at":{"type":"string","format":"date-time","x-go-name":"Expires"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key_id":{"type":"string","x-go-name":"KeyID"},"primary_key_id":{"type":"string","x-go-name":"PrimaryKeyID"},"public_key":{"type":"string","x-go-name":"PublicKey"},"subkeys":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"},"x-go-name":"SubsKey"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GPGKeyEmail":{"description":"GPGKeyEmail an email attached to a GPGKey","type":"object","properties":{"email":{"type":"string","x-go-name":"Email"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralAPISettings":{"description":"GeneralAPISettings contains global api settings exposed by it","type":"object","properties":{"default_git_trees_per_page":{"type":"integer","format":"int64","x-go-name":"DefaultGitTreesPerPage"},"default_max_blob_size":{"type":"integer","format":"int64","x-go-name":"DefaultMaxBlobSize"},"default_paging_num":{"type":"integer","format":"int64","x-go-name":"DefaultPagingNum"},"max_response_items":{"type":"integer","format":"int64","x-go-name":"MaxResponseItems"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralAttachmentSettings":{"description":"GeneralAttachmentSettings contains global Attachment settings exposed by API","type":"object","properties":{"allowed_types":{"type":"string","x-go-name":"AllowedTypes"},"enabled":{"type":"boolean","x-go-name":"Enabled"},"max_files":{"type":"integer","format":"int64","x-go-name":"MaxFiles"},"max_size":{"type":"integer","format":"int64","x-go-name":"MaxSize"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralRepoSettings":{"description":"GeneralRepoSettings contains global repository settings exposed by API","type":"object","properties":{"http_git_disabled":{"type":"boolean","x-go-name":"HTTPGitDisabled"},"lfs_disabled":{"type":"boolean","x-go-name":"LFSDisabled"},"migrations_disabled":{"type":"boolean","x-go-name":"MigrationsDisabled"},"mirrors_disabled":{"type":"boolean","x-go-name":"MirrorsDisabled"},"stars_disabled":{"type":"boolean","x-go-name":"StarsDisabled"},"time_tracking_disabled":{"type":"boolean","x-go-name":"TimeTrackingDisabled"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralUISettings":{"description":"GeneralUISettings contains global ui settings exposed by API","type":"object","properties":{"allowed_reactions":{"type":"array","items":{"type":"string"},"x-go-name":"AllowedReactions"},"custom_emojis":{"type":"array","items":{"type":"string"},"x-go-name":"CustomEmojis"},"default_theme":{"type":"string","x-go-name":"DefaultTheme"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GenerateRepoOption":{"description":"GenerateRepoOption options when creating repository using a template","type":"object","required":["owner","name"],"properties":{"avatar":{"description":"include avatar of the template repo","type":"boolean","x-go-name":"Avatar"},"default_branch":{"description":"Default branch of the new repository","type":"string","x-go-name":"DefaultBranch"},"description":{"description":"Description of the repository to create","type":"string","x-go-name":"Description"},"git_content":{"description":"include git content of default branch in template repo","type":"boolean","x-go-name":"GitContent"},"git_hooks":{"description":"include git hooks in template repo","type":"boolean","x-go-name":"GitHooks"},"labels":{"description":"include labels in template repo","type":"boolean","x-go-name":"Labels"},"name":{"description":"Name of the repository to create","type":"string","uniqueItems":true,"x-go-name":"Name"},"owner":{"description":"The organization or person who will own the new repository","type":"string","x-go-name":"Owner"},"private":{"description":"Whether the repository is private","type":"boolean","x-go-name":"Private"},"protected_branch":{"description":"include protected branches in template repo","type":"boolean","x-go-name":"ProtectedBranch"},"topics":{"description":"include topics in template repo","type":"boolean","x-go-name":"Topics"},"webhooks":{"description":"include webhooks in template repo","type":"boolean","x-go-name":"Webhooks"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitBlobResponse":{"description":"GitBlobResponse represents a git blob","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"},"encoding":{"type":"string","x-go-name":"Encoding"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitEntry":{"description":"GitEntry represents a git tree","type":"object","properties":{"mode":{"type":"string","x-go-name":"Mode"},"path":{"type":"string","x-go-name":"Path"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitHook":{"description":"GitHook represents a Git repository hook","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"},"is_active":{"type":"boolean","x-go-name":"IsActive"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitObject":{"type":"object","title":"GitObject represents a Git object.","properties":{"sha":{"type":"string","x-go-name":"SHA"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitTreeResponse":{"description":"GitTreeResponse returns a git tree","type":"object","properties":{"page":{"type":"integer","format":"int64","x-go-name":"Page"},"sha":{"type":"string","x-go-name":"SHA"},"total_count":{"type":"integer","format":"int64","x-go-name":"TotalCount"},"tree":{"type":"array","items":{"$ref":"#/components/schemas/GitEntry"},"x-go-name":"Entries"},"truncated":{"type":"boolean","x-go-name":"Truncated"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitignoreTemplateInfo":{"description":"GitignoreTemplateInfo name and text of a gitignore template","type":"object","properties":{"name":{"type":"string","x-go-name":"Name"},"source":{"type":"string","x-go-name":"Source"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Hook":{"description":"Hook a hook is a web hook when one repository changed","type":"object","properties":{"active":{"type":"boolean","x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"Config"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"type":{"type":"string","x-go-name":"Type"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Identity":{"description":"Identity for a person\'s identity like an author or committer","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"InternalTracker":{"description":"InternalTracker represents settings for internal tracker","type":"object","properties":{"allow_only_contributors_to_track_time":{"description":"Let only contributors track time (Built-in issue tracker)","type":"boolean","x-go-name":"AllowOnlyContributorsToTrackTime"},"enable_issue_dependencies":{"description":"Enable dependencies for issues and pull requests (Built-in issue tracker)","type":"boolean","x-go-name":"EnableIssueDependencies"},"enable_time_tracker":{"description":"Enable time tracking (Built-in issue tracker)","type":"boolean","x-go-name":"EnableTimeTracker"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Issue":{"description":"Issue represents an issue in a repository","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"assignee":{"$ref":"#/components/schemas/User"},"assignees":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"comments":{"type":"integer","format":"int64","x-go-name":"Comments"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_locked":{"type":"boolean","x-go-name":"IsLocked"},"labels":{"type":"array","items":{"$ref":"#/components/schemas/Label"},"x-go-name":"Labels"},"milestone":{"$ref":"#/components/schemas/Milestone"},"number":{"type":"integer","format":"int64","x-go-name":"Index"},"original_author":{"type":"string","x-go-name":"OriginalAuthor"},"original_author_id":{"type":"integer","format":"int64","x-go-name":"OriginalAuthorID"},"pin_order":{"type":"integer","format":"int64","x-go-name":"PinOrder"},"pull_request":{"$ref":"#/components/schemas/PullRequestMeta"},"ref":{"type":"string","x-go-name":"Ref"},"repository":{"$ref":"#/components/schemas/RepositoryMeta"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueConfig":{"type":"object","properties":{"blank_issues_enabled":{"type":"boolean","x-go-name":"BlankIssuesEnabled"},"contact_links":{"type":"array","items":{"$ref":"#/components/schemas/IssueConfigContactLink"},"x-go-name":"ContactLinks"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueConfigContactLink":{"type":"object","properties":{"about":{"type":"string","x-go-name":"About"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueConfigValidation":{"type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"valid":{"type":"boolean","x-go-name":"Valid"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueDeadline":{"description":"IssueDeadline represents an issue deadline","type":"object","properties":{"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueFormField":{"description":"IssueFormField represents a form field","type":"object","properties":{"attributes":{"type":"object","additionalProperties":{},"x-go-name":"Attributes"},"id":{"type":"string","x-go-name":"ID"},"type":{"$ref":"#/components/schemas/IssueFormFieldType"},"validations":{"type":"object","additionalProperties":{},"x-go-name":"Validations"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueFormFieldType":{"type":"string","title":"IssueFormFieldType defines issue form field type, can be \\"markdown\\", \\"textarea\\", \\"input\\", \\"dropdown\\" or \\"checkboxes\\"","x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueLabelsOption":{"description":"IssueLabelsOption a collection of labels","type":"object","properties":{"labels":{"description":"list of label IDs","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueMeta":{"description":"IssueMeta basic issue information","type":"object","properties":{"index":{"type":"integer","format":"int64","x-go-name":"Index"},"owner":{"type":"string","x-go-name":"Owner"},"repo":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueTemplate":{"description":"IssueTemplate represents an issue template for a repository","type":"object","properties":{"about":{"type":"string","x-go-name":"About"},"body":{"type":"array","items":{"$ref":"#/components/schemas/IssueFormField"},"x-go-name":"Fields"},"content":{"type":"string","x-go-name":"Content"},"file_name":{"type":"string","x-go-name":"FileName"},"labels":{"$ref":"#/components/schemas/IssueTemplateLabels"},"name":{"type":"string","x-go-name":"Name"},"ref":{"type":"string","x-go-name":"Ref"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueTemplateLabels":{"type":"array","items":{"type":"string"},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Label":{"description":"Label a label to an issue or a pr","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_archived":{"type":"boolean","x-go-name":"IsArchived","example":false},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"LabelTemplate":{"description":"LabelTemplate info of a Label template","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"LicenseTemplateInfo":{"description":"LicensesInfo contains information about a License","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"implementation":{"type":"string","x-go-name":"Implementation"},"key":{"type":"string","x-go-name":"Key"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"LicensesTemplateListEntry":{"description":"LicensesListEntry is used for the API","type":"object","properties":{"key":{"type":"string","x-go-name":"Key"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MarkdownOption":{"description":"MarkdownOption markdown options","type":"object","properties":{"Context":{"description":"Context to render\\n\\nin: body","type":"string"},"Mode":{"description":"Mode to render (comment, gfm, markdown)\\n\\nin: body","type":"string"},"Text":{"description":"Text markdown to render\\n\\nin: body","type":"string"},"Wiki":{"description":"Is it a wiki page ?\\n\\nin: body","type":"boolean"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MarkupOption":{"description":"MarkupOption markup options","type":"object","properties":{"Context":{"description":"Context to render\\n\\nin: body","type":"string"},"FilePath":{"description":"File path for detecting extension in file mode\\n\\nin: body","type":"string"},"Mode":{"description":"Mode to render (comment, gfm, markdown, file)\\n\\nin: body","type":"string"},"Text":{"description":"Text markup to render\\n\\nin: body","type":"string"},"Wiki":{"description":"Is it a wiki page ?\\n\\nin: body","type":"boolean"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MergePullRequestOption":{"description":"MergePullRequestForm form for merging Pull Request","type":"object","required":["Do"],"properties":{"Do":{"type":"string","enum":["merge","rebase","rebase-merge","squash","manually-merged"]},"MergeCommitID":{"type":"string"},"MergeMessageField":{"type":"string"},"MergeTitleField":{"type":"string"},"delete_branch_after_merge":{"type":"boolean","x-go-name":"DeleteBranchAfterMerge"},"force_merge":{"type":"boolean","x-go-name":"ForceMerge"},"head_commit_id":{"type":"string","x-go-name":"HeadCommitID"},"merge_when_checks_succeed":{"type":"boolean","x-go-name":"MergeWhenChecksSucceed"}},"x-go-name":"MergePullRequestForm","x-go-package":"code.gitea.io/gitea/services/forms"},"MigrateRepoOptions":{"description":"MigrateRepoOptions options for migrating repository\'s\\nthis is used to interact with api v1","type":"object","required":["clone_addr","repo_name"],"properties":{"auth_password":{"type":"string","x-go-name":"AuthPassword"},"auth_token":{"type":"string","x-go-name":"AuthToken"},"auth_username":{"type":"string","x-go-name":"AuthUsername"},"clone_addr":{"type":"string","x-go-name":"CloneAddr"},"description":{"type":"string","x-go-name":"Description"},"issues":{"type":"boolean","x-go-name":"Issues"},"labels":{"type":"boolean","x-go-name":"Labels"},"lfs":{"type":"boolean","x-go-name":"LFS"},"lfs_endpoint":{"type":"string","x-go-name":"LFSEndpoint"},"milestones":{"type":"boolean","x-go-name":"Milestones"},"mirror":{"type":"boolean","x-go-name":"Mirror"},"mirror_interval":{"type":"string","x-go-name":"MirrorInterval"},"private":{"type":"boolean","x-go-name":"Private"},"pull_requests":{"type":"boolean","x-go-name":"PullRequests"},"releases":{"type":"boolean","x-go-name":"Releases"},"repo_name":{"type":"string","x-go-name":"RepoName"},"repo_owner":{"description":"Name of User or Organisation who will own Repo after migration","type":"string","x-go-name":"RepoOwner"},"service":{"type":"string","enum":["git","github","gitea","gitlab","gogs","onedev","gitbucket","codebase"],"x-go-name":"Service"},"uid":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"RepoOwnerID"},"wiki":{"type":"boolean","x-go-name":"Wiki"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Milestone":{"description":"Milestone milestone is a collection of issues on one repository","type":"object","properties":{"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"closed_issues":{"type":"integer","format":"int64","x-go-name":"ClosedIssues"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"open_issues":{"type":"integer","format":"int64","x-go-name":"OpenIssues"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NewIssuePinsAllowed":{"description":"NewIssuePinsAllowed represents an API response that says if new Issue Pins are allowed","type":"object","properties":{"issues":{"type":"boolean","x-go-name":"Issues"},"pull_requests":{"type":"boolean","x-go-name":"PullRequests"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfo":{"description":"NodeInfo contains standardized way of exposing metadata about a server running one of the distributed social networks","type":"object","properties":{"metadata":{"type":"object","x-go-name":"Metadata"},"openRegistrations":{"type":"boolean","x-go-name":"OpenRegistrations"},"protocols":{"type":"array","items":{"type":"string"},"x-go-name":"Protocols"},"services":{"$ref":"#/components/schemas/NodeInfoServices"},"software":{"$ref":"#/components/schemas/NodeInfoSoftware"},"usage":{"$ref":"#/components/schemas/NodeInfoUsage"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoServices":{"description":"NodeInfoServices contains the third party sites this server can connect to via their application API","type":"object","properties":{"inbound":{"type":"array","items":{"type":"string"},"x-go-name":"Inbound"},"outbound":{"type":"array","items":{"type":"string"},"x-go-name":"Outbound"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoSoftware":{"description":"NodeInfoSoftware contains Metadata about server software in use","type":"object","properties":{"homepage":{"type":"string","x-go-name":"Homepage"},"name":{"type":"string","x-go-name":"Name"},"repository":{"type":"string","x-go-name":"Repository"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoUsage":{"description":"NodeInfoUsage contains usage statistics for this server","type":"object","properties":{"localComments":{"type":"integer","format":"int64","x-go-name":"LocalComments"},"localPosts":{"type":"integer","format":"int64","x-go-name":"LocalPosts"},"users":{"$ref":"#/components/schemas/NodeInfoUsageUsers"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoUsageUsers":{"description":"NodeInfoUsageUsers contains statistics about the users of this server","type":"object","properties":{"activeHalfyear":{"type":"integer","format":"int64","x-go-name":"ActiveHalfyear"},"activeMonth":{"type":"integer","format":"int64","x-go-name":"ActiveMonth"},"total":{"type":"integer","format":"int64","x-go-name":"Total"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Note":{"description":"Note contains information related to a git note","type":"object","properties":{"commit":{"$ref":"#/components/schemas/Commit"},"message":{"type":"string","x-go-name":"Message"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationCount":{"description":"NotificationCount number of unread notifications","type":"object","properties":{"new":{"type":"integer","format":"int64","x-go-name":"New"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationSubject":{"description":"NotificationSubject contains the notification subject (Issue/Pull/Commit)","type":"object","properties":{"html_url":{"type":"string","x-go-name":"HTMLURL"},"latest_comment_html_url":{"type":"string","x-go-name":"LatestCommentHTMLURL"},"latest_comment_url":{"type":"string","x-go-name":"LatestCommentURL"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"type":{"$ref":"#/components/schemas/NotifySubjectType"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationThread":{"description":"NotificationThread expose Notification on API","type":"object","properties":{"id":{"type":"integer","format":"int64","x-go-name":"ID"},"pinned":{"type":"boolean","x-go-name":"Pinned"},"repository":{"$ref":"#/components/schemas/Repository"},"subject":{"$ref":"#/components/schemas/NotificationSubject"},"unread":{"type":"boolean","x-go-name":"Unread"},"updated_at":{"type":"string","format":"date-time","x-go-name":"UpdatedAt"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotifySubjectType":{"description":"NotifySubjectType represent type of notification subject","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"OAuth2Application":{"type":"object","title":"OAuth2Application represents an OAuth2 application.","properties":{"client_id":{"type":"string","x-go-name":"ClientID"},"client_secret":{"type":"string","x-go-name":"ClientSecret"},"confidential_client":{"type":"boolean","x-go-name":"ConfidentialClient"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"redirect_uris":{"type":"array","items":{"type":"string"},"x-go-name":"RedirectURIs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Organization":{"description":"Organization represents an organization","type":"object","properties":{"avatar_url":{"type":"string","x-go-name":"AvatarURL"},"description":{"type":"string","x-go-name":"Description"},"email":{"type":"string","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"location":{"type":"string","x-go-name":"Location"},"name":{"type":"string","x-go-name":"Name"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"username":{"description":"deprecated","type":"string","x-go-name":"UserName"},"visibility":{"type":"string","x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"OrganizationPermissions":{"description":"OrganizationPermissions list different users permissions on an organization","type":"object","properties":{"can_create_repository":{"type":"boolean","x-go-name":"CanCreateRepository"},"can_read":{"type":"boolean","x-go-name":"CanRead"},"can_write":{"type":"boolean","x-go-name":"CanWrite"},"is_admin":{"type":"boolean","x-go-name":"IsAdmin"},"is_owner":{"type":"boolean","x-go-name":"IsOwner"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PRBranchInfo":{"description":"PRBranchInfo information about a branch","type":"object","properties":{"label":{"type":"string","x-go-name":"Name"},"ref":{"type":"string","x-go-name":"Ref"},"repo":{"$ref":"#/components/schemas/Repository"},"repo_id":{"type":"integer","format":"int64","x-go-name":"RepoID"},"sha":{"type":"string","x-go-name":"Sha"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Package":{"description":"Package represents a package","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"creator":{"$ref":"#/components/schemas/User"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"owner":{"$ref":"#/components/schemas/User"},"repository":{"$ref":"#/components/schemas/Repository"},"type":{"type":"string","x-go-name":"Type"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PackageFile":{"description":"PackageFile represents a package file","type":"object","properties":{"Size":{"type":"integer","format":"int64"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"md5":{"type":"string","x-go-name":"HashMD5"},"name":{"type":"string","x-go-name":"Name"},"sha1":{"type":"string","x-go-name":"HashSHA1"},"sha256":{"type":"string","x-go-name":"HashSHA256"},"sha512":{"type":"string","x-go-name":"HashSHA512"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadCommit":{"description":"PayloadCommit represents a commit","type":"object","properties":{"added":{"type":"array","items":{"type":"string"},"x-go-name":"Added"},"author":{"$ref":"#/components/schemas/PayloadUser"},"committer":{"$ref":"#/components/schemas/PayloadUser"},"id":{"description":"sha1 hash of the commit","type":"string","x-go-name":"ID"},"message":{"type":"string","x-go-name":"Message"},"modified":{"type":"array","items":{"type":"string"},"x-go-name":"Modified"},"removed":{"type":"array","items":{"type":"string"},"x-go-name":"Removed"},"timestamp":{"type":"string","format":"date-time","x-go-name":"Timestamp"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadCommitVerification":{"description":"PayloadCommitVerification represents the GPG verification of a commit","type":"object","properties":{"payload":{"type":"string","x-go-name":"Payload"},"reason":{"type":"string","x-go-name":"Reason"},"signature":{"type":"string","x-go-name":"Signature"},"signer":{"$ref":"#/components/schemas/PayloadUser"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadUser":{"description":"PayloadUser represents the author or committer of a commit","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"description":"Full name of the commit author","type":"string","x-go-name":"Name"},"username":{"type":"string","x-go-name":"UserName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Permission":{"description":"Permission represents a set of permissions","type":"object","properties":{"admin":{"type":"boolean","x-go-name":"Admin"},"pull":{"type":"boolean","x-go-name":"Pull"},"push":{"type":"boolean","x-go-name":"Push"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PublicKey":{"description":"PublicKey publickey is a user key to push code to repository","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"fingerprint":{"type":"string","x-go-name":"Fingerprint"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key":{"type":"string","x-go-name":"Key"},"key_type":{"type":"string","x-go-name":"KeyType"},"read_only":{"type":"boolean","x-go-name":"ReadOnly"},"title":{"type":"string","x-go-name":"Title"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullRequest":{"description":"PullRequest represents a pull request","type":"object","properties":{"allow_maintainer_edit":{"type":"boolean","x-go-name":"AllowMaintainerEdit"},"assignee":{"$ref":"#/components/schemas/User"},"assignees":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"Assignees"},"base":{"$ref":"#/components/schemas/PRBranchInfo"},"body":{"type":"string","x-go-name":"Body"},"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"comments":{"type":"integer","format":"int64","x-go-name":"Comments"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"diff_url":{"type":"string","x-go-name":"DiffURL"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"head":{"$ref":"#/components/schemas/PRBranchInfo"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_locked":{"type":"boolean","x-go-name":"IsLocked"},"labels":{"type":"array","items":{"$ref":"#/components/schemas/Label"},"x-go-name":"Labels"},"merge_base":{"type":"string","x-go-name":"MergeBase"},"merge_commit_sha":{"type":"string","x-go-name":"MergedCommitID"},"mergeable":{"type":"boolean","x-go-name":"Mergeable"},"merged":{"type":"boolean","x-go-name":"HasMerged"},"merged_at":{"type":"string","format":"date-time","x-go-name":"Merged"},"merged_by":{"$ref":"#/components/schemas/User"},"milestone":{"$ref":"#/components/schemas/Milestone"},"number":{"type":"integer","format":"int64","x-go-name":"Index"},"patch_url":{"type":"string","x-go-name":"PatchURL"},"pin_order":{"type":"integer","format":"int64","x-go-name":"PinOrder"},"requested_reviewers":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"RequestedReviewers"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullRequestMeta":{"description":"PullRequestMeta PR info if an issue is a PR","type":"object","properties":{"merged":{"type":"boolean","x-go-name":"HasMerged"},"merged_at":{"type":"string","format":"date-time","x-go-name":"Merged"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReview":{"description":"PullReview represents a pull request review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"comments_count":{"type":"integer","format":"int64","x-go-name":"CodeCommentsCount"},"commit_id":{"type":"string","x-go-name":"CommitID"},"dismissed":{"type":"boolean","x-go-name":"Dismissed"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"official":{"type":"boolean","x-go-name":"Official"},"pull_request_url":{"type":"string","x-go-name":"HTMLPullURL"},"stale":{"type":"boolean","x-go-name":"Stale"},"state":{"$ref":"#/components/schemas/ReviewStateType"},"submitted_at":{"type":"string","format":"date-time","x-go-name":"Submitted"},"team":{"$ref":"#/components/schemas/Team"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReviewComment":{"description":"PullReviewComment represents a comment on a pull request review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"commit_id":{"type":"string","x-go-name":"CommitID"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"diff_hunk":{"type":"string","x-go-name":"DiffHunk"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"original_commit_id":{"type":"string","x-go-name":"OrigCommitID"},"original_position":{"type":"integer","format":"uint64","x-go-name":"OldLineNum"},"path":{"type":"string","x-go-name":"Path"},"position":{"type":"integer","format":"uint64","x-go-name":"LineNum"},"pull_request_review_id":{"type":"integer","format":"int64","x-go-name":"ReviewID"},"pull_request_url":{"type":"string","x-go-name":"HTMLPullURL"},"resolver":{"$ref":"#/components/schemas/User"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReviewRequestOptions":{"description":"PullReviewRequestOptions are options to add or remove pull review requests","type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string"},"x-go-name":"Reviewers"},"team_reviewers":{"type":"array","items":{"type":"string"},"x-go-name":"TeamReviewers"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PushMirror":{"description":"PushMirror represents information of a push mirror","type":"object","properties":{"created":{"type":"string","x-go-name":"CreatedUnix"},"interval":{"type":"string","x-go-name":"Interval"},"last_error":{"type":"string","x-go-name":"LastError"},"last_update":{"type":"string","x-go-name":"LastUpdateUnix"},"remote_address":{"type":"string","x-go-name":"RemoteAddress"},"remote_name":{"type":"string","x-go-name":"RemoteName"},"repo_name":{"type":"string","x-go-name":"RepoName"},"sync_on_commit":{"type":"boolean","x-go-name":"SyncOnCommit"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Reaction":{"description":"Reaction contain one reaction","type":"object","properties":{"content":{"type":"string","x-go-name":"Reaction"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Reference":{"type":"object","title":"Reference represents a Git reference.","properties":{"object":{"$ref":"#/components/schemas/GitObject"},"ref":{"type":"string","x-go-name":"Ref"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Release":{"description":"Release represents a repository release","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"author":{"$ref":"#/components/schemas/User"},"body":{"type":"string","x-go-name":"Note"},"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"published_at":{"type":"string","format":"date-time","x-go-name":"PublishedAt"},"tag_name":{"type":"string","x-go-name":"TagName"},"tarball_url":{"type":"string","x-go-name":"TarURL"},"target_commitish":{"type":"string","x-go-name":"Target"},"upload_url":{"type":"string","x-go-name":"UploadURL"},"url":{"type":"string","x-go-name":"URL"},"zipball_url":{"type":"string","x-go-name":"ZipURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RenameUserOption":{"description":"RenameUserOption options when renaming a user","type":"object","required":["new_username"],"properties":{"new_username":{"description":"New username for this user. This name cannot be in use yet by any other user.","type":"string","uniqueItems":true,"x-go-name":"NewName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoCollaboratorPermission":{"description":"RepoCollaboratorPermission to get repository permission for a collaborator","type":"object","properties":{"permission":{"type":"string","x-go-name":"Permission"},"role_name":{"type":"string","x-go-name":"RoleName"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoCommit":{"type":"object","title":"RepoCommit contains information of a commit in the context of a repository.","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"committer":{"$ref":"#/components/schemas/CommitUser"},"message":{"type":"string","x-go-name":"Message"},"tree":{"$ref":"#/components/schemas/CommitMeta"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoTopicOptions":{"description":"RepoTopicOptions a collection of repo topic names","type":"object","properties":{"topics":{"description":"list of topic names","type":"array","items":{"type":"string"},"x-go-name":"Topics"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoTransfer":{"description":"RepoTransfer represents a pending repo transfer","type":"object","properties":{"doer":{"$ref":"#/components/schemas/User"},"recipient":{"$ref":"#/components/schemas/User"},"teams":{"type":"array","items":{"$ref":"#/components/schemas/Team"},"x-go-name":"Teams"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Repository":{"description":"Repository represents a repository","type":"object","properties":{"allow_merge_commits":{"type":"boolean","x-go-name":"AllowMerge"},"allow_rebase":{"type":"boolean","x-go-name":"AllowRebase"},"allow_rebase_explicit":{"type":"boolean","x-go-name":"AllowRebaseMerge"},"allow_rebase_update":{"type":"boolean","x-go-name":"AllowRebaseUpdate"},"allow_squash_merge":{"type":"boolean","x-go-name":"AllowSquash"},"archived":{"type":"boolean","x-go-name":"Archived"},"archived_at":{"type":"string","format":"date-time","x-go-name":"ArchivedAt"},"avatar_url":{"type":"string","x-go-name":"AvatarURL"},"clone_url":{"type":"string","x-go-name":"CloneURL"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"default_allow_maintainer_edit":{"type":"boolean","x-go-name":"DefaultAllowMaintainerEdit"},"default_branch":{"type":"string","x-go-name":"DefaultBranch"},"default_delete_branch_after_merge":{"type":"boolean","x-go-name":"DefaultDeleteBranchAfterMerge"},"default_merge_style":{"type":"string","x-go-name":"DefaultMergeStyle"},"description":{"type":"string","x-go-name":"Description"},"empty":{"type":"boolean","x-go-name":"Empty"},"external_tracker":{"$ref":"#/components/schemas/ExternalTracker"},"external_wiki":{"$ref":"#/components/schemas/ExternalWiki"},"fork":{"type":"boolean","x-go-name":"Fork"},"forks_count":{"type":"integer","format":"int64","x-go-name":"Forks"},"full_name":{"type":"string","x-go-name":"FullName"},"has_actions":{"type":"boolean","x-go-name":"HasActions"},"has_issues":{"type":"boolean","x-go-name":"HasIssues"},"has_packages":{"type":"boolean","x-go-name":"HasPackages"},"has_projects":{"type":"boolean","x-go-name":"HasProjects"},"has_pull_requests":{"type":"boolean","x-go-name":"HasPullRequests"},"has_releases":{"type":"boolean","x-go-name":"HasReleases"},"has_wiki":{"type":"boolean","x-go-name":"HasWiki"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"ignore_whitespace_conflicts":{"type":"boolean","x-go-name":"IgnoreWhitespaceConflicts"},"internal":{"type":"boolean","x-go-name":"Internal"},"internal_tracker":{"$ref":"#/components/schemas/InternalTracker"},"language":{"type":"string","x-go-name":"Language"},"languages_url":{"type":"string","x-go-name":"LanguagesURL"},"link":{"type":"string","x-go-name":"Link"},"mirror":{"type":"boolean","x-go-name":"Mirror"},"mirror_interval":{"type":"string","x-go-name":"MirrorInterval"},"mirror_updated":{"type":"string","format":"date-time","x-go-name":"MirrorUpdated"},"name":{"type":"string","x-go-name":"Name"},"open_issues_count":{"type":"integer","format":"int64","x-go-name":"OpenIssues"},"open_pr_counter":{"type":"integer","format":"int64","x-go-name":"OpenPulls"},"original_url":{"type":"string","x-go-name":"OriginalURL"},"owner":{"$ref":"#/components/schemas/User"},"parent":{"$ref":"#/components/schemas/Repository"},"permissions":{"$ref":"#/components/schemas/Permission"},"private":{"type":"boolean","x-go-name":"Private"},"release_counter":{"type":"integer","format":"int64","x-go-name":"Releases"},"repo_transfer":{"$ref":"#/components/schemas/RepoTransfer"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"ssh_url":{"type":"string","x-go-name":"SSHURL"},"stars_count":{"type":"integer","format":"int64","x-go-name":"Stars"},"template":{"type":"boolean","x-go-name":"Template"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"watchers_count":{"type":"integer","format":"int64","x-go-name":"Watchers"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepositoryMeta":{"description":"RepositoryMeta basic repository information","type":"object","properties":{"full_name":{"type":"string","x-go-name":"FullName"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"owner":{"type":"string","x-go-name":"Owner"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ReviewStateType":{"description":"ReviewStateType review state type","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"SearchResults":{"description":"SearchResults results of a successful search","type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Repository"},"x-go-name":"Data"},"ok":{"type":"boolean","x-go-name":"OK"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Secret":{"description":"Secret represents a secret","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"name":{"description":"the secret\'s name","type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ServerVersion":{"description":"ServerVersion wraps the version of the server","type":"object","properties":{"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"StateType":{"description":"StateType issue state type","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"StopWatch":{"description":"StopWatch represent a running stopwatch","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"duration":{"type":"string","x-go-name":"Duration"},"issue_index":{"type":"integer","format":"int64","x-go-name":"IssueIndex"},"issue_title":{"type":"string","x-go-name":"IssueTitle"},"repo_name":{"type":"string","x-go-name":"RepoName"},"repo_owner_name":{"type":"string","x-go-name":"RepoOwnerName"},"seconds":{"type":"integer","format":"int64","x-go-name":"Seconds"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"SubmitPullReviewOptions":{"description":"SubmitPullReviewOptions are options to submit a pending pull review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"event":{"$ref":"#/components/schemas/ReviewStateType"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Tag":{"description":"Tag represents a repository tag","type":"object","properties":{"commit":{"$ref":"#/components/schemas/CommitMeta"},"id":{"type":"string","x-go-name":"ID"},"message":{"type":"string","x-go-name":"Message"},"name":{"type":"string","x-go-name":"Name"},"tarball_url":{"type":"string","x-go-name":"TarballURL"},"zipball_url":{"type":"string","x-go-name":"ZipballURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Team":{"description":"Team represents a team in an organization","type":"object","properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"organization":{"$ref":"#/components/schemas/Organization"},"permission":{"type":"string","enum":["none","read","write","admin","owner"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":{"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TimeStamp":{"description":"TimeStamp defines a timestamp","type":"integer","format":"int64","x-go-package":"code.gitea.io/gitea/modules/timeutil"},"TimelineComment":{"description":"TimelineComment represents a timeline comment (comment of any type) on a commit or issue","type":"object","properties":{"assignee":{"$ref":"#/components/schemas/User"},"assignee_team":{"$ref":"#/components/schemas/Team"},"body":{"type":"string","x-go-name":"Body"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"dependent_issue":{"$ref":"#/components/schemas/Issue"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue_url":{"type":"string","x-go-name":"IssueURL"},"label":{"$ref":"#/components/schemas/Label"},"milestone":{"$ref":"#/components/schemas/Milestone"},"new_ref":{"type":"string","x-go-name":"NewRef"},"new_title":{"type":"string","x-go-name":"NewTitle"},"old_milestone":{"$ref":"#/components/schemas/Milestone"},"old_project_id":{"type":"integer","format":"int64","x-go-name":"OldProjectID"},"old_ref":{"type":"string","x-go-name":"OldRef"},"old_title":{"type":"string","x-go-name":"OldTitle"},"project_id":{"type":"integer","format":"int64","x-go-name":"ProjectID"},"pull_request_url":{"type":"string","x-go-name":"PRURL"},"ref_action":{"type":"string","x-go-name":"RefAction"},"ref_comment":{"$ref":"#/components/schemas/Comment"},"ref_commit_sha":{"description":"commit SHA where issue/PR was referenced","type":"string","x-go-name":"RefCommitSHA"},"ref_issue":{"$ref":"#/components/schemas/Issue"},"removed_assignee":{"description":"whether the assignees were removed or added","type":"boolean","x-go-name":"RemovedAssignee"},"resolve_doer":{"$ref":"#/components/schemas/User"},"review_id":{"type":"integer","format":"int64","x-go-name":"ReviewID"},"tracked_time":{"$ref":"#/components/schemas/TrackedTime"},"type":{"type":"string","x-go-name":"Type"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TopicName":{"description":"TopicName a list of repo topic names","type":"object","properties":{"topics":{"type":"array","items":{"type":"string"},"x-go-name":"TopicNames"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TopicResponse":{"description":"TopicResponse for returning topics","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"repo_count":{"type":"integer","format":"int64","x-go-name":"RepoCount"},"topic_name":{"type":"string","x-go-name":"Name"},"updated":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TrackedTime":{"description":"TrackedTime worked time for an issue / pr","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue":{"$ref":"#/components/schemas/Issue"},"issue_id":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"IssueID"},"time":{"description":"Time in seconds","type":"integer","format":"int64","x-go-name":"Time"},"user_id":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"UserID"},"user_name":{"type":"string","x-go-name":"UserName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TransferRepoOption":{"description":"TransferRepoOption options when transfer a repository\'s ownership","type":"object","required":["new_owner"],"properties":{"new_owner":{"type":"string","x-go-name":"NewOwner"},"team_ids":{"description":"ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"TeamIDs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UpdateFileOptions":{"description":"UpdateFileOptions options for updating files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["sha","content"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"content":{"description":"content must be base64 encoded","type":"string","x-go-name":"ContentBase64"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"from_path":{"description":"from_path (optional) is the path of the original file which will be moved/renamed to the path in the URL","type":"string","x-go-name":"FromPath"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"sha":{"description":"sha is the SHA for the file that already exists","type":"string","x-go-name":"SHA"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UpdateRepoAvatarOption":{"description":"UpdateRepoAvatarUserOption options when updating the repo avatar","type":"object","properties":{"image":{"description":"image must be base64 encoded","type":"string","x-go-name":"Image"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UpdateUserAvatarOption":{"description":"UpdateUserAvatarUserOption options when updating the user avatar","type":"object","properties":{"image":{"description":"image must be base64 encoded","type":"string","x-go-name":"Image"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"User":{"description":"User represents a user","type":"object","properties":{"active":{"description":"Is user active","type":"boolean","x-go-name":"IsActive"},"avatar_url":{"description":"URL to the user\'s avatar","type":"string","x-go-name":"AvatarURL"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"description":{"description":"the user\'s description","type":"string","x-go-name":"Description"},"email":{"type":"string","format":"email","x-go-name":"Email"},"followers_count":{"description":"user counts","type":"integer","format":"int64","x-go-name":"Followers"},"following_count":{"type":"integer","format":"int64","x-go-name":"Following"},"full_name":{"description":"the user\'s full name","type":"string","x-go-name":"FullName"},"id":{"description":"the user\'s id","type":"integer","format":"int64","x-go-name":"ID"},"is_admin":{"description":"Is the user an administrator","type":"boolean","x-go-name":"IsAdmin"},"language":{"description":"User locale","type":"string","x-go-name":"Language"},"last_login":{"type":"string","format":"date-time","x-go-name":"LastLogin"},"location":{"description":"the user\'s location","type":"string","x-go-name":"Location"},"login":{"description":"the user\'s username","type":"string","x-go-name":"UserName"},"login_name":{"description":"the user\'s authentication sign-in name.","type":"string","default":"empty","x-go-name":"LoginName"},"prohibit_login":{"description":"Is user login prohibited","type":"boolean","x-go-name":"ProhibitLogin"},"restricted":{"description":"Is user restricted","type":"boolean","x-go-name":"Restricted"},"starred_repos_count":{"type":"integer","format":"int64","x-go-name":"StarredRepos"},"visibility":{"description":"User visibility level option: public, limited, private","type":"string","x-go-name":"Visibility"},"website":{"description":"the user\'s website","type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UserHeatmapData":{"description":"UserHeatmapData represents the data needed to create a heatmap","type":"object","properties":{"contributions":{"type":"integer","format":"int64","x-go-name":"Contributions"},"timestamp":{"$ref":"#/components/schemas/TimeStamp"}},"x-go-package":"code.gitea.io/gitea/models/activities"},"UserSettings":{"description":"UserSettings represents user settings","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"diff_view_style":{"type":"string","x-go-name":"DiffViewStyle"},"full_name":{"type":"string","x-go-name":"FullName"},"hide_activity":{"type":"boolean","x-go-name":"HideActivity"},"hide_email":{"description":"Privacy","type":"boolean","x-go-name":"HideEmail"},"language":{"type":"string","x-go-name":"Language"},"location":{"type":"string","x-go-name":"Location"},"theme":{"type":"string","x-go-name":"Theme"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UserSettingsOptions":{"description":"UserSettingsOptions represents options to change user settings","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"diff_view_style":{"type":"string","x-go-name":"DiffViewStyle"},"full_name":{"type":"string","x-go-name":"FullName"},"hide_activity":{"type":"boolean","x-go-name":"HideActivity"},"hide_email":{"description":"Privacy","type":"boolean","x-go-name":"HideEmail"},"language":{"type":"string","x-go-name":"Language"},"location":{"type":"string","x-go-name":"Location"},"theme":{"type":"string","x-go-name":"Theme"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WatchInfo":{"description":"WatchInfo represents an API watch status of one repository","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"ignored":{"type":"boolean","x-go-name":"Ignored"},"reason":{"x-go-name":"Reason"},"repository_url":{"type":"string","x-go-name":"RepositoryURL"},"subscribed":{"type":"boolean","x-go-name":"Subscribed"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiCommit":{"description":"WikiCommit page commit/revision","type":"object","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"commiter":{"$ref":"#/components/schemas/CommitUser"},"message":{"type":"string","x-go-name":"Message"},"sha":{"type":"string","x-go-name":"ID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiCommitList":{"description":"WikiCommitList commit/revision list","type":"object","properties":{"commits":{"type":"array","items":{"$ref":"#/components/schemas/WikiCommit"},"x-go-name":"WikiCommits"},"count":{"type":"integer","format":"int64","x-go-name":"Count"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiPage":{"description":"WikiPage a wiki page","type":"object","properties":{"commit_count":{"type":"integer","format":"int64","x-go-name":"CommitCount"},"content_base64":{"description":"Page content, base64 encoded","type":"string","x-go-name":"ContentBase64"},"footer":{"type":"string","x-go-name":"Footer"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit":{"$ref":"#/components/schemas/WikiCommit"},"sidebar":{"type":"string","x-go-name":"Sidebar"},"sub_url":{"type":"string","x-go-name":"SubURL"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiPageMetaData":{"description":"WikiPageMetaData wiki page meta information","type":"object","properties":{"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit":{"$ref":"#/components/schemas/WikiCommit"},"sub_url":{"type":"string","x-go-name":"SubURL"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"}}}}},"plugin-redoc-3":{"url":"redocusaurus/plugin-redoc-3.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"description":"This documentation describes the Gitea API.","title":"Gitea API.","license":{"name":"MIT","url":"http://opensource.org/licenses/MIT"},"version":"1.19.4"},"paths":{"/activitypub/user-id/{user-id}":{"get":{"tags":["activitypub"],"summary":"Returns the Person actor for a user","operationId":"activitypubPerson","parameters":[{"description":"user ID of the user","name":"user-id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ActivityPub"}}}},"/activitypub/user-id/{user-id}/inbox":{"post":{"tags":["activitypub"],"summary":"Send to the inbox","operationId":"activitypubPersonInbox","parameters":[{"description":"user ID of the user","name":"user-id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/admin/cron":{"get":{"tags":["admin"],"summary":"List cron tasks","operationId":"adminCronList","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CronList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/cron/{task}":{"post":{"tags":["admin"],"summary":"Run cron task","operationId":"adminCronRun","parameters":[{"description":"task to run","name":"task","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/admin/hooks":{"get":{"tags":["admin"],"summary":"List system\'s webhooks","operationId":"adminListHooks","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["admin"],"summary":"Create a hook","operationId":"adminCreateHook","requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/admin/hooks/{id}":{"get":{"tags":["admin"],"summary":"Get a hook","operationId":"adminGetHook","parameters":[{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"}}},"delete":{"tags":["admin"],"summary":"Delete a hook","operationId":"adminDeleteHook","parameters":[{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["admin"],"summary":"Update a hook","operationId":"adminEditHook","parameters":[{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/admin/orgs":{"get":{"tags":["admin"],"summary":"List all organizations","operationId":"adminGetAllOrgs","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/unadopted":{"get":{"tags":["admin"],"summary":"List unadopted repositories","operationId":"adminUnadoptedList","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"pattern of repositories to search for","name":"pattern","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/StringSlice"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/unadopted/{owner}/{repo}":{"post":{"tags":["admin"],"summary":"Adopt unadopted files as a repository","operationId":"adminAdoptRepository","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["admin"],"summary":"Delete unadopted files","operationId":"adminDeleteUnadoptedRepository","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/admin/users":{"get":{"tags":["admin"],"summary":"List all users","operationId":"adminGetAllUsers","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["admin"],"summary":"Create a user","operationId":"adminCreateUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserOption"}}}},"responses":{"201":{"$ref":"#/components/responses/User"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}":{"delete":{"tags":["admin"],"summary":"Delete a user","operationId":"adminDeleteUser","parameters":[{"description":"username of user to delete","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"purge the user from the system completely","name":"purge","in":"query","schema":{"type":"boolean"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}},"patch":{"tags":["admin"],"summary":"Edit an existing user","operationId":"adminEditUser","parameters":[{"description":"username of user to edit","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditUserOption"}}}},"responses":{"200":{"$ref":"#/components/responses/User"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/keys":{"post":{"tags":["admin"],"summary":"Add a public key on behalf of a user","operationId":"adminCreatePublicKey","parameters":[{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/PublicKey"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/keys/{id}":{"delete":{"tags":["admin"],"summary":"Delete a user\'s public key","operationId":"adminDeleteUserPublicKey","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/admin/users/{username}/orgs":{"post":{"tags":["admin"],"summary":"Create an organization","operationId":"adminCreateOrg","parameters":[{"description":"username of the user that will own the created organization","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOrgOption"},"responses":{"201":{"$ref":"#/components/responses/Organization"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/admin/users/{username}/repos":{"post":{"tags":["admin"],"summary":"Create a repository on behalf of a user","operationId":"adminCreateRepo","parameters":[{"description":"username of the user. This user will own the created repository","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRepoOption"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/markdown":{"post":{"tags":["miscellaneous"],"summary":"Render a markdown document as HTML","operationId":"renderMarkdown","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MarkdownOption"}}}},"responses":{"200":{"$ref":"#/components/responses/MarkdownRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/markdown/raw":{"post":{"tags":["miscellaneous"],"summary":"Render raw markdown as HTML","operationId":"renderMarkdownRaw","requestBody":{"content":{"text/plain":{"schema":{"type":"string"}}},"description":"Request body to render","required":true},"responses":{"200":{"$ref":"#/components/responses/MarkdownRender"},"422":{"$ref":"#/components/responses/validationError"}}}},"/nodeinfo":{"get":{"tags":["miscellaneous"],"summary":"Returns the nodeinfo of the Gitea application","operationId":"getNodeInfo","responses":{"200":{"$ref":"#/components/responses/NodeInfo"}}}},"/notifications":{"get":{"tags":["notification"],"summary":"List users\'s notification threads","operationId":"notifyGetList","parameters":[{"description":"If true, show notifications marked as read. Default value is false","name":"all","in":"query","schema":{"type":"boolean"}},{"description":"Show notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread & pinned.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"filter notifications by subject type","name":"subject-type","in":"query","explode":true,"schema":{"type":"array","items":{"enum":["issue","pull","commit","repository"],"type":"string"}}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThreadList"}}},"put":{"tags":["notification"],"summary":"Mark notification threads as read, pinned or unread","operationId":"notifyReadList","parameters":[{"description":"Describes the last point that notifications were checked. Anything updated since this time will not be updated.","name":"last_read_at","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"If true, mark all notifications on this repo. Default value is false","name":"all","in":"query","schema":{"type":"string"}},{"description":"Mark notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Status to mark notifications as, Defaults to read.","name":"to-status","in":"query","schema":{"type":"string"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThreadList"}}}},"/notifications/new":{"get":{"tags":["notification"],"summary":"Check if unread notifications exist","operationId":"notifyNewAvailable","responses":{"200":{"$ref":"#/components/responses/NotificationCount"}}}},"/notifications/threads/{id}":{"get":{"tags":["notification"],"summary":"Get notification thread by ID","operationId":"notifyGetThread","parameters":[{"description":"id of notification thread","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThread"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["notification"],"summary":"Mark notification thread as read by ID","operationId":"notifyReadThread","parameters":[{"description":"id of notification thread","name":"id","in":"path","required":true,"schema":{"type":"string"}},{"description":"Status to mark notifications as","name":"to-status","in":"query","schema":{"type":"string","default":"read"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThread"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/org/{org}/repos":{"post":{"tags":["organization"],"summary":"Create a repository in an organization","operationId":"createOrgRepoDeprecated","deprecated":true,"parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs":{"get":{"tags":["organization"],"summary":"Get list of organizations","operationId":"orgGetAll","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"}}},"post":{"tags":["organization"],"summary":"Create an organization","operationId":"orgCreate","requestBody":{"$ref":"#/components/requestBodies/CreateOrgOption"},"responses":{"201":{"$ref":"#/components/responses/Organization"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}":{"get":{"tags":["organization"],"summary":"Get an organization","operationId":"orgGet","parameters":[{"description":"name of the organization to get","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Organization"}}},"delete":{"tags":["organization"],"summary":"Delete an organization","operationId":"orgDelete","parameters":[{"description":"organization that is to be deleted","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["organization"],"summary":"Edit an organization","operationId":"orgEdit","parameters":[{"description":"name of the organization to edit","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditOrgOption"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/Organization"}}}},"/orgs/{org}/hooks":{"get":{"tags":["organization"],"summary":"List an organization\'s webhooks","operationId":"orgListHooks","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["organization"],"summary":"Create a hook","operationId":"orgCreateHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateHookOption"},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/orgs/{org}/hooks/{id}":{"get":{"tags":["organization"],"summary":"Get a hook","operationId":"orgGetHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"}}},"delete":{"tags":["organization"],"summary":"Delete a hook","operationId":"orgDeleteHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["organization"],"summary":"Update a hook","operationId":"orgEditHook","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to update","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditHookOption"},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/orgs/{org}/labels":{"get":{"tags":["organization"],"summary":"List an organization\'s labels","operationId":"orgListLabels","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"}}},"post":{"tags":["organization"],"summary":"Create a label for an organization","operationId":"orgCreateLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateLabelOption"},"responses":{"201":{"$ref":"#/components/responses/Label"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/labels/{id}":{"get":{"tags":["organization"],"summary":"Get a single label","operationId":"orgGetLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Label"}}},"delete":{"tags":["organization"],"summary":"Delete a label","operationId":"orgDeleteLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["organization"],"summary":"Update a label","operationId":"orgEditLabel","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditLabelOption"},"responses":{"200":{"$ref":"#/components/responses/Label"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/members":{"get":{"tags":["organization"],"summary":"List an organization\'s members","operationId":"orgListMembers","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/orgs/{org}/members/{username}":{"get":{"tags":["organization"],"summary":"Check if a user is a member of an organization","operationId":"orgIsMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"user is a member"},"303":{"description":"redirection to /orgs/{org}/public_members/{username}"},"404":{"description":"user is not a member"}}},"delete":{"tags":["organization"],"summary":"Remove a member from an organization","operationId":"orgDeleteMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"member removed"}}}},"/orgs/{org}/public_members":{"get":{"tags":["organization"],"summary":"List an organization\'s public members","operationId":"orgListPublicMembers","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/orgs/{org}/public_members/{username}":{"get":{"tags":["organization"],"summary":"Check if a user is a public member of an organization","operationId":"orgIsPublicMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"user is a public member"},"404":{"description":"user is not a public member"}}},"put":{"tags":["organization"],"summary":"Publicize a user\'s membership","operationId":"orgPublicizeMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"membership publicized"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["organization"],"summary":"Conceal a user\'s membership","operationId":"orgConcealMember","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/orgs/{org}/repos":{"get":{"tags":["organization"],"summary":"List an organization\'s repos","operationId":"orgListRepos","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}},"post":{"tags":["organization"],"summary":"Create a repository in an organization","operationId":"createOrgRepo","parameters":[{"description":"name of organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/orgs/{org}/teams":{"get":{"tags":["organization"],"summary":"List an organization\'s teams","operationId":"orgListTeams","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"}}},"post":{"tags":["organization"],"summary":"Create a team","operationId":"orgCreateTeam","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTeamOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Team"},"422":{"$ref":"#/components/responses/validationError"}}}},"/orgs/{org}/teams/search":{"get":{"tags":["organization"],"summary":"Search for teams within an organization","operationId":"teamSearch","parameters":[{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"keywords to search","name":"q","in":"query","schema":{"type":"string"}},{"description":"include search within team description (defaults to true)","name":"include_desc","in":"query","schema":{"type":"boolean"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"description":"SearchResults of a successful search","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Team"}},"ok":{"type":"boolean"}}}}}}}}},"/packages/{owner}":{"get":{"tags":["package"],"summary":"Gets all packages of an owner","operationId":"listPackages","parameters":[{"description":"owner of the packages","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"package type filter","name":"type","in":"query","schema":{"type":"string","enum":["cargo","chef","composer","conan","conda","container","generic","helm","maven","npm","nuget","pub","pypi","rubygems","vagrant"]}},{"description":"name filter","name":"q","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PackageList"}}}},"/packages/{owner}/{type}/{name}/{version}":{"get":{"tags":["package"],"summary":"Gets a package","operationId":"getPackage","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Package"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["package"],"summary":"Delete a package","operationId":"deletePackage","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/packages/{owner}/{type}/{name}/{version}/files":{"get":{"tags":["package"],"summary":"Gets all files of a package","operationId":"listPackageFiles","parameters":[{"description":"owner of the package","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of the package","name":"type","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the package","name":"name","in":"path","required":true,"schema":{"type":"string"}},{"description":"version of the package","name":"version","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PackageFileList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/issues/search":{"get":{"tags":["issue"],"summary":"Search for issues across the repositories that the user has access to","operationId":"issueSearchIssues","parameters":[{"description":"whether issue is open or closed","name":"state","in":"query","schema":{"type":"string"}},{"description":"comma separated list of labels. Fetch only issues that have any of this labels. Non existent labels are discarded","name":"labels","in":"query","schema":{"type":"string"}},{"description":"comma separated list of milestone names. Fetch only issues that have any of this milestones. Non existent are discarded","name":"milestones","in":"query","schema":{"type":"string"}},{"description":"search string","name":"q","in":"query","schema":{"type":"string"}},{"description":"repository to prioritize in the results","name":"priority_repo_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"filter by type (issues / pulls) if set","name":"type","in":"query","schema":{"type":"string"}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"filter (issues / pulls) assigned to you, default is false","name":"assigned","in":"query","schema":{"type":"boolean"}},{"description":"filter (issues / pulls) created by you, default is false","name":"created","in":"query","schema":{"type":"boolean"}},{"description":"filter (issues / pulls) mentioning you, default is false","name":"mentioned","in":"query","schema":{"type":"boolean"}},{"description":"filter pulls requesting your review, default is false","name":"review_requested","in":"query","schema":{"type":"boolean"}},{"description":"filter by owner","name":"owner","in":"query","schema":{"type":"string"}},{"description":"filter by team (requires organization owner parameter to be provided)","name":"team","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"}}}},"/repos/migrate":{"post":{"tags":["repository"],"summary":"Migrate a remote git repository","operationId":"repoMigrate","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MigrateRepoOptions"}}}},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/search":{"get":{"tags":["repository"],"summary":"Search for repositories","operationId":"repoSearch","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"Limit search to repositories with keyword as topic","name":"topic","in":"query","schema":{"type":"boolean"}},{"description":"include search of keyword within repository description","name":"includeDesc","in":"query","schema":{"type":"boolean"}},{"description":"search only for repos that the user with the given id owns or contributes to","name":"uid","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"repo owner to prioritize in the results","name":"priority_owner_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"search only for repos that belong to the given team id","name":"team_id","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"search only for repos that the user with the given id has starred","name":"starredBy","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"include private repositories this user has access to (defaults to true)","name":"private","in":"query","schema":{"type":"boolean"}},{"description":"show only pubic, private or all repositories (defaults to all)","name":"is_private","in":"query","schema":{"type":"boolean"}},{"description":"include template repositories this user has access to (defaults to true)","name":"template","in":"query","schema":{"type":"boolean"}},{"description":"show only archived, non-archived or all repositories (defaults to all)","name":"archived","in":"query","schema":{"type":"boolean"}},{"description":"type of repository to search for. Supported values are \\"fork\\", \\"source\\", \\"mirror\\" and \\"collaborative\\"","name":"mode","in":"query","schema":{"type":"string"}},{"description":"if `uid` is given, search only for repos that the user owns","name":"exclusive","in":"query","schema":{"type":"boolean"}},{"description":"sort repos by attribute. Supported values are \\"alpha\\", \\"created\\", \\"updated\\", \\"size\\", and \\"id\\". Default is \\"alpha\\"","name":"sort","in":"query","schema":{"type":"string"}},{"description":"sort order, either \\"asc\\" (ascending) or \\"desc\\" (descending). Default is \\"asc\\", ignored if \\"sort\\" is not specified.","name":"order","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/SearchResults"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}":{"get":{"tags":["repository"],"summary":"Get a repository","operationId":"repoGet","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"}}},"delete":{"tags":["repository"],"summary":"Delete a repository","operationId":"repoDelete","parameters":[{"description":"owner of the repo to delete","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to delete","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}},"patch":{"tags":["repository"],"summary":"Edit a repository\'s properties. Only fields that are set will be changed.","operationId":"repoEdit","parameters":[{"description":"owner of the repo to edit","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to edit","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditRepoOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditRepoOption"}}},"description":"Properties of a repo that you can edit"},"responses":{"200":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/archive/{archive}":{"get":{"tags":["repository"],"summary":"Get an archive of a repository","operationId":"repoGetArchive","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the git reference for download with attached archive format (e.g. master.zip)","name":"archive","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"success"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/assignees":{"get":{"tags":["repository"],"summary":"Return all users that have write access and can be assigned to issues","operationId":"repoGetAssignees","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/repos/{owner}/{repo}/branch_protections":{"get":{"tags":["repository"],"summary":"List branch protections for a repository","operationId":"repoListBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/BranchProtectionList"}}},"post":{"tags":["repository"],"summary":"Create a branch protections for a repository","operationId":"repoCreateBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateBranchProtectionOption"}}}},"responses":{"201":{"$ref":"#/components/responses/BranchProtection"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/branch_protections/{name}":{"get":{"tags":["repository"],"summary":"Get a specific branch protection for the repository","operationId":"repoGetBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/BranchProtection"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a specific branch protection for the repository","operationId":"repoDeleteBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a branch protections for a repository. Only fields that are set will be changed","operationId":"repoEditBranchProtection","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of protected branch","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditBranchProtectionOption"}}}},"responses":{"200":{"$ref":"#/components/responses/BranchProtection"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/branches":{"get":{"tags":["repository"],"summary":"List a repository\'s branches","operationId":"repoListBranches","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/BranchList"}}},"post":{"tags":["repository"],"summary":"Create a branch","operationId":"repoCreateBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateBranchRepoOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Branch"},"404":{"description":"The old branch does not exist."},"409":{"description":"The branch with the same name already exists."}}}},"/repos/{owner}/{repo}/branches/{branch}":{"get":{"tags":["repository"],"summary":"Retrieve a specific branch from a repository, including its effective branch protection","operationId":"repoGetBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"branch to get","name":"branch","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Branch"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a specific branch from a repository","operationId":"repoDeleteBranch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"branch to delete","name":"branch","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/collaborators":{"get":{"tags":["repository"],"summary":"List a repository\'s collaborators","operationId":"repoListCollaborators","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/repos/{owner}/{repo}/collaborators/{collaborator}":{"get":{"tags":["repository"],"summary":"Check if a user is a collaborator of a repository","operationId":"repoCheckCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"put":{"tags":["repository"],"summary":"Add a collaborator to a repository","operationId":"repoAddCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator to add","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddCollaboratorOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/AddCollaboratorOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a collaborator from a repository","operationId":"repoDeleteCollaborator","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator to delete","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/collaborators/{collaborator}/permission":{"get":{"tags":["repository"],"summary":"Get repository permissions for a user","operationId":"repoGetRepoPermissions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of the collaborator","name":"collaborator","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/RepoCollaboratorPermission"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/commits":{"get":{"tags":["repository"],"summary":"Get a list of all commits from a repository","operationId":"repoGetAllCommits","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"SHA or branch to start listing commits from (usually \'master\')","name":"sha","in":"query","schema":{"type":"string"}},{"description":"filepath of a file/dir","name":"path","in":"query","schema":{"type":"string"}},{"description":"include diff stats for every commit (disable for speedup, default \'true\')","name":"stat","in":"query","schema":{"type":"boolean"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results (ignored if used with \'path\')","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitList"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/EmptyRepository"}}}},"/repos/{owner}/{repo}/commits/{ref}/status":{"get":{"tags":["repository"],"summary":"Get a commit\'s combined status, by branch/tag/commit reference","operationId":"repoGetCombinedStatusByRef","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of branch/tag/commit","name":"ref","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CombinedStatus"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/commits/{ref}/statuses":{"get":{"tags":["repository"],"summary":"Get a commit\'s statuses, by branch/tag/commit reference","operationId":"repoListStatusesByRef","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of branch/tag/commit","name":"ref","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","leastindex","highestindex"]}},{"description":"type of state","name":"state","in":"query","schema":{"type":"string","enum":["pending","success","error","failure","warning"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitStatusList"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/contents":{"get":{"tags":["repository"],"summary":"Gets the metadata of all the entries of the root dir","operationId":"repoGetContentsList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ContentsListResponse"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/contents/{filepath}":{"get":{"tags":["repository"],"summary":"Gets the metadata and contents (if a file) of an entry in a repository, or a list of entries if a dir","operationId":"repoGetContents","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the dir, file, symlink or submodule in the repo","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ContentsResponse"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["repository"],"summary":"Update a file in a repository","operationId":"repoUpdateFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to update","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/UpdateFileOptions"},"responses":{"200":{"$ref":"#/components/responses/FileResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}},"post":{"tags":["repository"],"summary":"Create a file in a repository","operationId":"repoCreateFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to create","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateFileOptions"}}},"required":true},"responses":{"201":{"$ref":"#/components/responses/FileResponse"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["repository"],"summary":"Delete a file in a repository","operationId":"repoDeleteFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"path of the file to delete","name":"filepath","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteFileOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/FileDeleteResponse"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/diffpatch":{"post":{"tags":["repository"],"summary":"Apply diff patch to repository","operationId":"repoApplyDiffPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/UpdateFileOptions"},"responses":{"200":{"$ref":"#/components/responses/FileResponse"}}}},"/repos/{owner}/{repo}/editorconfig/{filepath}":{"get":{"tags":["repository"],"summary":"Get the EditorConfig definitions of a file in a repository","operationId":"repoGetEditorConfig","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"success"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/forks":{"get":{"tags":["repository"],"summary":"List a repository\'s forks","operationId":"listForks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}},"post":{"tags":["repository"],"summary":"Fork a repository","operationId":"createFork","parameters":[{"description":"owner of the repo to fork","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to fork","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateForkOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateForkOption"}}}},"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/blobs/{sha}":{"get":{"tags":["repository"],"summary":"Gets the blob of a repository.","operationId":"GetBlob","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitBlobResponse"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/git/commits/{sha}":{"get":{"tags":["repository"],"summary":"Get a single commit from a repository","operationId":"repoGetSingleCommit","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"a git ref or commit sha","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Commit"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/commits/{sha}.{diffType}":{"get":{"tags":["repository"],"summary":"Get a commit\'s diff or patch","operationId":"repoDownloadCommitDiffOrPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"SHA of the commit to get","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"whether the output is diff or patch","name":"diffType","in":"path","required":true,"schema":{"type":"string","enum":["diff","patch"]}}],"responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/notes/{sha}":{"get":{"tags":["repository"],"summary":"Get a note corresponding to a single commit from a repository","operationId":"repoGetNote","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"a git ref or commit sha","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Note"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/git/refs":{"get":{"tags":["repository"],"summary":"Get specified ref or filtered repository\'s refs","operationId":"repoListAllGitRefs","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ReferenceList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/refs/{ref}":{"get":{"tags":["repository"],"summary":"Get specified ref or filtered repository\'s refs","operationId":"repoListGitRefs","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"part or full name of the ref","name":"ref","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/ReferenceList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/git/tags/{sha}":{"get":{"tags":["repository"],"summary":"Gets the tag object of an annotated tag (not lightweight tags)","operationId":"GetAnnotatedTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the tag. The Git tags API only supports annotated tag objects, not lightweight tags.","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/AnnotatedTag"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/git/trees/{sha}":{"get":{"tags":["repository"],"summary":"Gets the tree of a repository.","operationId":"GetTree","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"show all directories and files","name":"recursive","in":"query","schema":{"type":"boolean"}},{"description":"page number; the \'truncated\' field in the response will be true if there are still more items after this page, false if the last page","name":"page","in":"query","schema":{"type":"integer"}},{"description":"number of items per page","name":"per_page","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GitTreeResponse"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/hooks":{"get":{"tags":["repository"],"summary":"List the hooks in a repository","operationId":"repoListHooks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/HookList"}}},"post":{"tags":["repository"],"summary":"Create a hook","operationId":"repoCreateHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateHookOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Hook"}}}},"/repos/{owner}/{repo}/hooks/git":{"get":{"tags":["repository"],"summary":"List the Git hooks in a repository","operationId":"repoListGitHooks","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitHookList"}}}},"/repos/{owner}/{repo}/hooks/git/{id}":{"get":{"tags":["repository"],"summary":"Get a Git hook","operationId":"repoGetGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/GitHook"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a Git hook in a repository","operationId":"repoDeleteGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a Git hook in a repository","operationId":"repoEditGitHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditGitHookOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditGitHookOption"}}}},"responses":{"200":{"$ref":"#/components/responses/GitHook"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/hooks/{id}":{"get":{"tags":["repository"],"summary":"Get a hook","operationId":"repoGetHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Hook"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a hook in a repository","operationId":"repoDeleteHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a hook in a repository","operationId":"repoEditHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the hook","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditHookOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/EditHookOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Hook"}}}},"/repos/{owner}/{repo}/hooks/{id}/tests":{"post":{"tags":["repository"],"summary":"Test a push webhook","operationId":"repoTestHook","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the hook to test","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"The name of the commit/branch/tag, indicates which commit will be loaded to the webhook payload.","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/repos/{owner}/{repo}/issue_templates":{"get":{"tags":["repository"],"summary":"Get available issue templates for a repository","operationId":"repoGetIssueTemplates","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/IssueTemplates"}}}},"/repos/{owner}/{repo}/issues":{"get":{"tags":["issue"],"summary":"List a repository\'s issues","operationId":"issueListIssues","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"whether issue is open or closed","name":"state","in":"query","schema":{"type":"string","enum":["closed","open","all"]}},{"description":"comma separated list of labels. Fetch only issues that have any of this labels. Non existent labels are discarded","name":"labels","in":"query","schema":{"type":"string"}},{"description":"search string","name":"q","in":"query","schema":{"type":"string"}},{"description":"filter by type (issues / pulls) if set","name":"type","in":"query","schema":{"type":"string","enum":["issues","pulls"]}},{"description":"comma separated list of milestone names or ids. It uses names and fall back to ids. Fetch only issues that have any of this milestones. Non existent milestones are discarded","name":"milestones","in":"query","schema":{"type":"string"}},{"description":"Only show items updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show items updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show items which were created by the the given user","name":"created_by","in":"query","schema":{"type":"string"}},{"description":"Only show items for which the given user is assigned","name":"assigned_by","in":"query","schema":{"type":"string"}},{"description":"Only show items in which the given user was mentioned","name":"mentioned_by","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/IssueList"}}},"post":{"tags":["issue"],"summary":"Create an issue. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueCreateIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateIssueOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Issue"},"403":{"$ref":"#/components/responses/forbidden"},"412":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/issues/comments":{"get":{"tags":["issue"],"summary":"List all comments in a repository","operationId":"issueGetRepoComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"if provided, only comments updated since the provided time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommentList"}}}},"/repos/{owner}/{repo}/issues/comments/{id}":{"get":{"tags":["issue"],"summary":"Get a comment","operationId":"issueGetComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete a comment","operationId":"issueDeleteComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of comment to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit a comment","operationId":"issueEditComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditIssueCommentOption"},"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/assets":{"get":{"tags":["issue"],"summary":"List comment\'s attachments","operationId":"issueListIssueCommentAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"},"404":{"$ref":"#/components/responses/error"}}},"post":{"tags":["issue"],"summary":"Create a comment attachment","operationId":"issueCreateIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/assets/{attachment_id}":{"get":{"tags":["issue"],"summary":"Get a comment attachment","operationId":"issueGetIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["issue"],"summary":"Delete a comment attachment","operationId":"issueDeleteIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/error"}}},"patch":{"tags":["issue"],"summary":"Edit a comment attachment","operationId":"issueEditIssueCommentAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/comments/{id}/reactions":{"get":{"tags":["issue"],"summary":"Get a list of reactions from a comment of an issue","operationId":"issueGetCommentReactions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/ReactionList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["issue"],"summary":"Add a reaction to a comment of an issue","operationId":"issuePostCommentReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/Reaction"},"201":{"$ref":"#/components/responses/Reaction"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["issue"],"summary":"Remove a reaction from a comment of an issue","operationId":"issueDeleteCommentReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/issues/{index}":{"get":{"tags":["issue"],"summary":"Get an issue","operationId":"issueGetIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Issue"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Delete an issue","operationId":"issueDelete","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of issue to delete","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit an issue. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueEditIssue","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to edit","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditIssueOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Issue"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"412":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/{index}/assets":{"get":{"tags":["issue"],"summary":"List issue\'s attachments","operationId":"issueListIssueAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"},"404":{"$ref":"#/components/responses/error"}}},"post":{"tags":["issue"],"summary":"Create an issue attachment","operationId":"issueCreateIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/{index}/assets/{attachment_id}":{"get":{"tags":["issue"],"summary":"Get an issue attachment","operationId":"issueGetIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["issue"],"summary":"Delete an issue attachment","operationId":"issueDeleteIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/error"}}},"patch":{"tags":["issue"],"summary":"Edit an issue attachment","operationId":"issueEditIssueAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"404":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/issues/{index}/comments":{"get":{"tags":["issue"],"summary":"List all comments on an issue","operationId":"issueGetComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"if provided, only comments updated since the specified time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/CommentList"}}},"post":{"tags":["issue"],"summary":"Add a comment to an issue","operationId":"issueCreateComment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateIssueCommentOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Comment"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/issues/{index}/comments/{id}":{"delete":{"tags":["issue"],"summary":"Delete a comment","operationId":"issueDeleteCommentDeprecated","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"this parameter is ignored","name":"index","in":"path","required":true,"schema":{"type":"integer"}},{"description":"id of comment to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["issue"],"summary":"Edit a comment","operationId":"issueEditCommentDeprecated","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"this parameter is ignored","name":"index","in":"path","required":true,"schema":{"type":"integer"}},{"description":"id of the comment to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditIssueCommentOption"},"responses":{"200":{"$ref":"#/components/responses/Comment"},"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/deadline":{"post":{"tags":["issue"],"summary":"Set an issue deadline. If set to null, the deadline is deleted. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"issueEditIssueDeadline","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to create or update a deadline on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditDeadlineOption"}}}},"responses":{"201":{"$ref":"#/components/responses/IssueDeadline"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/labels":{"get":{"tags":["issue"],"summary":"Get an issue\'s labels","operationId":"issueGetLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["issue"],"summary":"Replace an issue\'s labels","operationId":"issueReplaceLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueLabelsOption"},"responses":{"200":{"$ref":"#/components/responses/LabelList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["issue"],"summary":"Add a label to an issue","operationId":"issueAddLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/IssueLabelsOption"},"responses":{"200":{"$ref":"#/components/responses/LabelList"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["issue"],"summary":"Remove all labels from an issue","operationId":"issueClearLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/issues/{index}/labels/{id}":{"delete":{"tags":["issue"],"summary":"Remove a label from an issue","operationId":"issueRemoveLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the label to remove","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/issues/{index}/reactions":{"get":{"tags":["issue"],"summary":"Get a list reactions of an issue","operationId":"issueGetIssueReactions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ReactionList"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["issue"],"summary":"Add a reaction to an issue","operationId":"issuePostIssueReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/Reaction"},"201":{"$ref":"#/components/responses/Reaction"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["issue"],"summary":"Remove a reaction from an issue","operationId":"issueDeleteIssueReaction","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditReactionOption"},"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/delete":{"delete":{"tags":["issue"],"summary":"Delete an issue\'s existing stopwatch.","operationId":"issueDeleteStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to stop the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot cancel a non existent stopwatch"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/start":{"post":{"tags":["issue"],"summary":"Start stopwatch on an issue.","operationId":"issueStartStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to create the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"201":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot start a stopwatch again if it already exists"}}}},"/repos/{owner}/{repo}/issues/{index}/stopwatch/stop":{"post":{"tags":["issue"],"summary":"Stop an issue\'s existing stopwatch.","operationId":"issueStopStopWatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to stop the stopwatch on","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"201":{"$ref":"#/components/responses/empty"},"403":{"description":"Not repo writer, user does not have rights to toggle stopwatch"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"Cannot stop a non existent stopwatch"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions":{"get":{"tags":["issue"],"summary":"Get users who subscribed on an issue.","operationId":"issueSubscriptions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions/check":{"get":{"tags":["issue"],"summary":"Check if user is subscribed to an issue","operationId":"issueCheckSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/subscriptions/{user}":{"put":{"tags":["issue"],"summary":"Subscribe user to issue","operationId":"issueAddSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"user to subscribe","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Already subscribed"},"201":{"description":"Successfully Subscribed"},"304":{"description":"User can only subscribe itself if he is no admin"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["issue"],"summary":"Unsubscribe user from issue","operationId":"issueDeleteSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"user witch unsubscribe","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Already unsubscribed"},"201":{"description":"Successfully Unsubscribed"},"304":{"description":"User can only subscribe itself if he is no admin"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/issues/{index}/timeline":{"get":{"tags":["issue"],"summary":"List all comments and events on an issue","operationId":"issueGetCommentsAndTimeline","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"if provided, only comments updated since the specified time are returned.","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"if provided, only comments updated before the provided time are returned.","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/TimelineList"}}}},"/repos/{owner}/{repo}/issues/{index}/times":{"get":{"tags":["issue"],"summary":"List an issue\'s tracked times","operationId":"issueTrackedTimes","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"optional filter by user (available for issue managers)","name":"user","in":"query","schema":{"type":"string"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["issue"],"summary":"Add tracked time to a issue","operationId":"issueAddTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AddTimeOption"}}}},"responses":{"200":{"$ref":"#/components/responses/TrackedTime"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["issue"],"summary":"Reset a tracked time of an issue","operationId":"issueResetTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue to add tracked time to","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/issues/{index}/times/{id}":{"delete":{"tags":["issue"],"summary":"Delete specific tracked time","operationId":"issueDeleteTime","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the issue","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of time to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/keys":{"get":{"tags":["repository"],"summary":"List a repository\'s keys","operationId":"repoListKeys","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the key_id to search for","name":"key_id","in":"query","schema":{"type":"integer"}},{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/DeployKeyList"}}},"post":{"tags":["repository"],"summary":"Add a key to a repository","operationId":"repoCreateKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/DeployKey"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/keys/{id}":{"get":{"tags":["repository"],"summary":"Get a repository\'s key by id","operationId":"repoGetKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/DeployKey"}}},"delete":{"tags":["repository"],"summary":"Delete a key from a repository","operationId":"repoDeleteKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/labels":{"get":{"tags":["issue"],"summary":"Get all of a repository\'s labels","operationId":"issueListLabels","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/LabelList"}}},"post":{"tags":["issue"],"summary":"Create a label","operationId":"issueCreateLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateLabelOption"},"responses":{"201":{"$ref":"#/components/responses/Label"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/labels/{id}":{"get":{"tags":["issue"],"summary":"Get a single label","operationId":"issueGetLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Label"}}},"delete":{"tags":["issue"],"summary":"Delete a label","operationId":"issueDeleteLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["issue"],"summary":"Update a label","operationId":"issueEditLabel","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the label to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditLabelOption"},"responses":{"200":{"$ref":"#/components/responses/Label"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/languages":{"get":{"tags":["repository"],"summary":"Get languages and number of bytes of code written","operationId":"repoGetLanguages","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/LanguageStatistics"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/media/{filepath}":{"get":{"tags":["repository"],"summary":"Get a file or it\'s LFS object from a repository","operationId":"repoGetRawFileOrLFS","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of the file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns raw file content."},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/milestones":{"get":{"tags":["issue"],"summary":"Get all of a repository\'s opened milestones","operationId":"issueGetMilestonesList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"Milestone state, Recognized values are open, closed and all. Defaults to \\"open\\"","name":"state","in":"query","schema":{"type":"string"}},{"description":"filter by milestone name","name":"name","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/MilestoneList"}}},"post":{"tags":["issue"],"summary":"Create a milestone","operationId":"issueCreateMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMilestoneOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Milestone"}}}},"/repos/{owner}/{repo}/milestones/{id}":{"get":{"tags":["issue"],"summary":"Get a milestone","operationId":"issueGetMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to get, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Milestone"}}},"delete":{"tags":["issue"],"summary":"Delete a milestone","operationId":"issueDeleteMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to delete, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["issue"],"summary":"Update a milestone","operationId":"issueEditMilestone","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"the milestone to edit, identified by ID and if not available by name","name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditMilestoneOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Milestone"}}}},"/repos/{owner}/{repo}/mirror-sync":{"post":{"tags":["repository"],"summary":"Sync a mirrored repository","operationId":"repoMirrorSync","parameters":[{"description":"owner of the repo to sync","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to sync","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/notifications":{"get":{"tags":["notification"],"summary":"List users\'s notification threads on a specific repo","operationId":"notifyGetRepoList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"If true, show notifications marked as read. Default value is false","name":"all","in":"query","schema":{"type":"boolean"}},{"description":"Show notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread & pinned","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"filter notifications by subject type","name":"subject-type","in":"query","explode":true,"schema":{"type":"array","items":{"enum":["issue","pull","commit","repository"],"type":"string"}}},{"description":"Only show notifications updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show notifications updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/NotificationThreadList"}}},"put":{"tags":["notification"],"summary":"Mark notification threads as read, pinned or unread on a specific repo","operationId":"notifyReadRepoList","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"If true, mark all notifications on this repo. Default value is false","name":"all","in":"query","schema":{"type":"string"}},{"description":"Mark notifications with the provided status types. Options are: unread, read and/or pinned. Defaults to unread.","name":"status-types","in":"query","explode":true,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Status to mark notifications as. Defaults to read.","name":"to-status","in":"query","schema":{"type":"string"}},{"description":"Describes the last point that notifications were checked. Anything updated since this time will not be updated.","name":"last_read_at","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"205":{"$ref":"#/components/responses/NotificationThreadList"}}}},"/repos/{owner}/{repo}/pulls":{"get":{"tags":["repository"],"summary":"List a repo\'s pull requests","operationId":"repoListPullRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"State of pull request: open or closed (optional)","name":"state","in":"query","schema":{"type":"string","enum":["closed","open","all"]}},{"description":"Type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","mostcomment","leastcomment","priority"]}},{"description":"ID of the milestone","name":"milestone","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"Label IDs","name":"labels","in":"query","explode":true,"schema":{"type":"array","items":{"type":"integer","format":"int64"}}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequestList"}}},"post":{"tags":["repository"],"summary":"Create a pull request","operationId":"repoCreatePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePullRequestOption"}}}},"responses":{"201":{"$ref":"#/components/responses/PullRequest"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}":{"get":{"tags":["repository"],"summary":"Get a pull request","operationId":"repoGetPullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullRequest"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Update a pull request. If using deadline only the date will be taken into account, and time of day ignored.","operationId":"repoEditPullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to edit","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditPullRequestOption"}}}},"responses":{"201":{"$ref":"#/components/responses/PullRequest"},"403":{"$ref":"#/components/responses/forbidden"},"409":{"$ref":"#/components/responses/error"},"412":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}.{diffType}":{"get":{"tags":["repository"],"summary":"Get a pull request diff or patch","operationId":"repoDownloadPullDiffOrPatch","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"whether the output is diff or patch","name":"diffType","in":"path","required":true,"schema":{"type":"string","enum":["diff","patch"]}},{"description":"whether to include binary file changes. if true, the diff is applicable with `git apply`","name":"binary","in":"query","schema":{"type":"boolean"}}],"responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/commits":{"get":{"tags":["repository"],"summary":"Get commits for a pull request","operationId":"repoGetPullRequestCommits","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/files":{"get":{"tags":["repository"],"summary":"Get changed files for a pull request","operationId":"repoGetPullRequestFiles","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"skip to given file","name":"skip-to","in":"query","schema":{"type":"string"}},{"description":"whitespace behavior","name":"whitespace","in":"query","schema":{"type":"string","enum":["ignore-all","ignore-change","ignore-eol","show-all"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ChangedFileList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/merge":{"get":{"tags":["repository"],"summary":"Check if a pull request has been merged","operationId":"repoPullRequestIsMerged","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"pull request has been merged"},"404":{"description":"pull request has not been merged"}}},"post":{"tags":["repository"],"summary":"Merge a pull request","operationId":"repoMergePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to merge","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MergePullRequestOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/MergePullRequestOption"}}}},"responses":{"200":{"$ref":"#/components/responses/empty"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/error"}}},"delete":{"tags":["repository"],"summary":"Cancel the scheduled auto merge for the given pull request","operationId":"repoCancelScheduledAutoMerge","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to merge","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/requested_reviewers":{"post":{"tags":["repository"],"summary":"create review requests for a pull request","operationId":"repoCreatePullReviewRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/PullReviewRequestOptions"},"responses":{"201":{"$ref":"#/components/responses/PullReviewList"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"cancel review requests for a pull request","operationId":"repoDeletePullReviewRequests","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/PullReviewRequestOptions"},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews":{"get":{"tags":["repository"],"summary":"List all reviews for a pull request","operationId":"repoListPullReviews","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PullReviewList"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Create a review to an pull request","operationId":"repoCreatePullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreatePullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}":{"get":{"tags":["repository"],"summary":"Get a specific review for a pull request","operationId":"repoGetPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"}}},"post":{"tags":["repository"],"summary":"Submit a pending review to an pull request","operationId":"repoSubmitPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubmitPullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/SubmitPullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a specific review from a pull request","operationId":"repoDeletePullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/comments":{"get":{"tags":["repository"],"summary":"Get a specific review for a pull request","operationId":"repoGetPullReviewComments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReviewCommentList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/dismissals":{"post":{"tags":["repository"],"summary":"Dismiss a review for a pull request","operationId":"repoDismissPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DismissPullReviewOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/DismissPullReviewOptions"}}},"required":true},"responses":{"200":{"$ref":"#/components/responses/PullReview"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/reviews/{id}/undismissals":{"post":{"tags":["repository"],"summary":"Cancel to dismiss a review for a pull request","operationId":"repoUnDismissPullReview","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the review","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PullReview"},"403":{"$ref":"#/components/responses/forbidden"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/pulls/{index}/update":{"post":{"tags":["repository"],"summary":"Merge PR\'s baseBranch into headBranch","operationId":"repoUpdatePullRequest","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"index of the pull request to get","name":"index","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"how to update pull request","name":"style","in":"query","schema":{"type":"string","enum":["merge","rebase"]}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/push_mirrors":{"get":{"tags":["repository"],"summary":"Get all push mirrors of the repository","operationId":"repoListPushMirrors","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PushMirrorList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}},"post":{"tags":["repository"],"summary":"add a push mirror to the repository","operationId":"repoAddPushMirror","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePushMirrorOption"}}}},"responses":{"201":{"$ref":"#/components/responses/PushMirror"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/push_mirrors-sync":{"post":{"tags":["repository"],"summary":"Sync all push mirrored repository","operationId":"repoPushMirrorSync","parameters":[{"description":"owner of the repo to sync","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to sync","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/push_mirrors/{name}":{"get":{"tags":["repository"],"summary":"Get push mirror of the repository by remoteName","operationId":"repoGetPushMirrorByRemoteName","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"remote name of push mirror","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/PushMirror"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"tags":["repository"],"summary":"deletes a push mirror from a repository by remoteName","operationId":"repoDeletePushMirror","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"remote name of the pushMirror","name":"name","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"400":{"$ref":"#/components/responses/error"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/raw/{filepath}":{"get":{"tags":["repository"],"summary":"Get a file from a repository","operationId":"repoGetRawFile","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filepath of the file to get","name":"filepath","in":"path","required":true,"schema":{"type":"string"}},{"description":"The name of the commit/branch/tag. Default the repository\u2019s default branch (usually master)","name":"ref","in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Returns raw file content."},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases":{"get":{"tags":["repository"],"summary":"List a repo\'s releases","operationId":"repoListReleases","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"filter (exclude / include) drafts, if you dont have repo write access none will show","name":"draft","in":"query","schema":{"type":"boolean"}},{"description":"filter (exclude / include) pre-releases","name":"pre-release","in":"query","schema":{"type":"boolean"}},{"description":"page size of results, deprecated - use limit","name":"per_page","in":"query","schema":{"type":"integer"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/ReleaseList"}}},"post":{"tags":["repository"],"summary":"Create a release","operationId":"repoCreateRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateReleaseOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"},"409":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/releases/latest":{"get":{"tags":["repository"],"summary":"Gets the most recent non-prerelease, non-draft release of a repository, sorted by created_at","operationId":"repoGetLatestRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases/tags/{tag}":{"get":{"tags":["repository"],"summary":"Get a release by tag name","operationId":"repoGetReleaseByTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"tag name of the release to get","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a release by tag name","operationId":"repoDeleteReleaseByTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"tag name of the release to delete","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"}}}},"/repos/{owner}/{repo}/releases/{id}":{"get":{"tags":["repository"],"summary":"Get a release","operationId":"repoGetRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a release","operationId":"repoDeleteRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["repository"],"summary":"Update a release","operationId":"repoEditRelease","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release to edit","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditReleaseOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Release"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/releases/{id}/assets":{"get":{"tags":["repository"],"summary":"List release\'s attachments","operationId":"repoListReleaseAttachments","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/AttachmentList"}}},"post":{"tags":["repository"],"summary":"Create a release attachment","operationId":"repoCreateReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"name of the attachment","name":"name","in":"query","schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/issueCreateIssueCommentAttachment"},"responses":{"201":{"$ref":"#/components/responses/Attachment"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/releases/{id}/assets/{attachment_id}":{"get":{"tags":["repository"],"summary":"Get a release attachment","operationId":"repoGetReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to get","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Attachment"}}},"delete":{"tags":["repository"],"summary":"Delete a release attachment","operationId":"repoDeleteReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to delete","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"patch":{"tags":["repository"],"summary":"Edit a release attachment","operationId":"repoEditReleaseAttachment","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"id of the release","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"id of the attachment to edit","name":"attachment_id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/EditAttachmentOptions"},"responses":{"201":{"$ref":"#/components/responses/Attachment"}}}},"/repos/{owner}/{repo}/reviewers":{"get":{"tags":["repository"],"summary":"Return all users that can be requested to review in this repo","operationId":"repoGetReviewers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/repos/{owner}/{repo}/signing-key.gpg":{"get":{"tags":["repository"],"summary":"Get signing-key.gpg for given repository","operationId":"repoSigningKey","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"GPG armored public key","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/repos/{owner}/{repo}/stargazers":{"get":{"tags":["repository"],"summary":"List a repo\'s stargazers","operationId":"repoListStargazers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/repos/{owner}/{repo}/statuses/{sha}":{"get":{"tags":["repository"],"summary":"Get a commit\'s statuses","operationId":"repoListStatuses","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}},{"description":"type of sort","name":"sort","in":"query","schema":{"type":"string","enum":["oldest","recentupdate","leastupdate","leastindex","highestindex"]}},{"description":"type of state","name":"state","in":"query","schema":{"type":"string","enum":["pending","success","error","failure","warning"]}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/CommitStatusList"},"400":{"$ref":"#/components/responses/error"}}},"post":{"tags":["repository"],"summary":"Create a commit status","operationId":"repoCreateStatus","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"sha of the commit","name":"sha","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateStatusOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateStatusOption"}}}},"responses":{"201":{"$ref":"#/components/responses/CommitStatus"},"400":{"$ref":"#/components/responses/error"}}}},"/repos/{owner}/{repo}/subscribers":{"get":{"tags":["repository"],"summary":"List a repo\'s watchers","operationId":"repoListSubscribers","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/repos/{owner}/{repo}/subscription":{"get":{"tags":["repository"],"summary":"Check if the current user is watching a repo","operationId":"userCurrentCheckSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"},"404":{"description":"User is not watching this repo or repo do not exist"}}},"put":{"tags":["repository"],"summary":"Watch a repo","operationId":"userCurrentPutSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WatchInfo"}}},"delete":{"tags":["repository"],"summary":"Unwatch a repo","operationId":"userCurrentDeleteSubscription","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/repos/{owner}/{repo}/tags":{"get":{"tags":["repository"],"summary":"List a repository\'s tags","operationId":"repoListTags","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results, default maximum page size is 50","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TagList"}}},"post":{"tags":["repository"],"summary":"Create a new git tag in a repository","operationId":"repoCreateTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTagOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateTagOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Tag"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/conflict"}}}},"/repos/{owner}/{repo}/tags/{tag}":{"get":{"tags":["repository"],"summary":"Get the tag of a repository by tag name","operationId":"repoGetTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of tag","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Tag"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a repository\'s tag by name","operationId":"repoDeleteTag","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of tag to delete","name":"tag","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/empty"},"409":{"$ref":"#/components/responses/conflict"}}}},"/repos/{owner}/{repo}/teams":{"get":{"tags":["repository"],"summary":"List a repository\'s teams","operationId":"repoListTeams","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"}}}},"/repos/{owner}/{repo}/teams/{team}":{"get":{"tags":["repository"],"summary":"Check if a team is assigned to a repository","operationId":"repoCheckTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Team"},"404":{"$ref":"#/components/responses/notFound"},"405":{"$ref":"#/components/responses/error"}}},"put":{"tags":["repository"],"summary":"Add a team to a repository","operationId":"repoAddTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"405":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["repository"],"summary":"Delete a team from a repository","operationId":"repoDeleteTeam","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"team name","name":"team","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"405":{"$ref":"#/components/responses/error"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/times":{"get":{"tags":["repository"],"summary":"List a repo\'s tracked times","operationId":"repoTrackedTimes","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"optional filter by user (available for issue managers)","name":"user","in":"query","schema":{"type":"string"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/times/{user}":{"get":{"tags":["repository"],"summary":"List a user\'s tracked times in a repo","operationId":"userTrackedTimes","deprecated":true,"parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of user","name":"user","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/topics":{"get":{"tags":["repository"],"summary":"Get list of topics that a repository has","operationId":"repoListTopics","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TopicNames"}}},"put":{"tags":["repository"],"summary":"Replace list of topics for a repository","operationId":"repoUpdateTopics","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepoTopicOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/RepoTopicOptions"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}}},"/repos/{owner}/{repo}/topics/{topic}":{"put":{"tags":["repository"],"summary":"Add a topic to a repository","operationId":"repoAddTopic","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the topic to add","name":"topic","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}},"delete":{"tags":["repository"],"summary":"Delete a topic from a repository","operationId":"repoDeleteTopic","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the topic to delete","name":"topic","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"422":{"$ref":"#/components/responses/invalidTopicsError"}}}},"/repos/{owner}/{repo}/transfer":{"post":{"tags":["repository"],"summary":"Transfer a repo ownership","operationId":"repoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransferRepoOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/TransferRepoOption"}}},"description":"Transfer Options","required":true},"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/repos/{owner}/{repo}/transfer/accept":{"post":{"tags":["repository"],"summary":"Accept a repo transfer","operationId":"acceptRepoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"202":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/transfer/reject":{"post":{"tags":["repository"],"summary":"Reject a repo transfer","operationId":"rejectRepoTransfer","parameters":[{"description":"owner of the repo to transfer","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to transfer","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/wiki/new":{"post":{"tags":["repository"],"summary":"Create a wiki page","operationId":"repoCreateWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateWikiPageOptions"},"responses":{"201":{"$ref":"#/components/responses/WikiPage"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/wiki/page/{pageName}":{"get":{"tags":["repository"],"summary":"Get a wiki page","operationId":"repoGetWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/WikiPage"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["repository"],"summary":"Delete a wiki page","operationId":"repoDeleteWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["repository"],"summary":"Edit a wiki page","operationId":"repoEditWikiPage","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateWikiPageOptions"},"responses":{"200":{"$ref":"#/components/responses/WikiPage"},"400":{"$ref":"#/components/responses/error"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/repos/{owner}/{repo}/wiki/pages":{"get":{"tags":["repository"],"summary":"Get all wiki pages","operationId":"repoGetWikiPages","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/WikiPageList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{owner}/{repo}/wiki/revisions/{pageName}":{"get":{"tags":["repository"],"summary":"Get revisions of a wiki page","operationId":"repoGetWikiPageRevisions","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the page","name":"pageName","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/WikiCommitList"},"404":{"$ref":"#/components/responses/notFound"}}}},"/repos/{template_owner}/{template_repo}/generate":{"post":{"tags":["repository"],"summary":"Create a repository using a template","operationId":"generateRepo","parameters":[{"description":"name of the template repository owner","name":"template_owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the template repository","name":"template_repo","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenerateRepoOption"}}}},"responses":{"201":{"$ref":"#/components/responses/Repository"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/repositories/{id}":{"get":{"tags":["repository"],"summary":"Get a repository by id","operationId":"repoGetByID","parameters":[{"description":"id of the repo to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"}}}},"/settings/api":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for api","operationId":"getGeneralAPISettings","responses":{"200":{"$ref":"#/components/responses/GeneralAPISettings"}}}},"/settings/attachment":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for Attachment","operationId":"getGeneralAttachmentSettings","responses":{"200":{"$ref":"#/components/responses/GeneralAttachmentSettings"}}}},"/settings/repository":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for repositories","operationId":"getGeneralRepositorySettings","responses":{"200":{"$ref":"#/components/responses/GeneralRepoSettings"}}}},"/settings/ui":{"get":{"tags":["settings"],"summary":"Get instance\'s global settings for ui","operationId":"getGeneralUISettings","responses":{"200":{"$ref":"#/components/responses/GeneralUISettings"}}}},"/signing-key.gpg":{"get":{"tags":["miscellaneous"],"summary":"Get default signing-key.gpg","operationId":"getSigningKey","responses":{"200":{"description":"GPG armored public key","content":{"text/plain":{"schema":{"type":"string"}}}}}}},"/teams/{id}":{"get":{"tags":["organization"],"summary":"Get a team","operationId":"orgGetTeam","parameters":[{"description":"id of the team to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/Team"}}},"delete":{"tags":["organization"],"summary":"Delete a team","operationId":"orgDeleteTeam","parameters":[{"description":"id of the team to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"team deleted"}}},"patch":{"tags":["organization"],"summary":"Edit a team","operationId":"orgEditTeam","parameters":[{"description":"id of the team to edit","name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditTeamOption"}}}},"responses":{"200":{"$ref":"#/components/responses/Team"}}}},"/teams/{id}/members":{"get":{"tags":["organization"],"summary":"List a team\'s members","operationId":"orgListTeamMembers","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/teams/{id}/members/{username}":{"get":{"tags":["organization"],"summary":"List a particular member of team","operationId":"orgListTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the member to list","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/User"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["organization"],"summary":"Add a team member","operationId":"orgAddTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the user to add","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["organization"],"summary":"Remove a team member","operationId":"orgRemoveTeamMember","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"username of the user to remove","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/teams/{id}/repos":{"get":{"tags":["organization"],"summary":"List a team\'s repos","operationId":"orgListTeamRepos","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/teams/{id}/repos/{org}/{repo}":{"get":{"tags":["organization"],"summary":"List a particular repo of team","operationId":"orgListTeamRepo","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to list","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to list","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/Repository"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["organization"],"summary":"Add a repository to a team","operationId":"orgAddTeamRepository","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to add","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to add","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}},"delete":{"description":"This does not delete the repository, it only removes the repository from the team.","tags":["organization"],"summary":"Remove a repository from a team","operationId":"orgRemoveTeamRepository","parameters":[{"description":"id of the team","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"organization that owns the repo to remove","name":"org","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to remove","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/topics/search":{"get":{"tags":["repository"],"summary":"search topics via keyword","operationId":"topicSearch","parameters":[{"description":"keywords to search","name":"q","in":"query","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TopicListResponse"},"403":{"$ref":"#/components/responses/forbidden"}}}},"/user":{"get":{"tags":["user"],"summary":"Get the authenticated user","operationId":"userGetCurrent","responses":{"200":{"$ref":"#/components/responses/User"}}}},"/user/applications/oauth2":{"get":{"tags":["user"],"summary":"List the authenticated user\'s oauth2 applications","operationId":"userGetOauth2Application","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OAuth2ApplicationList"}}},"post":{"tags":["user"],"summary":"creates a new OAuth2 application","operationId":"userCreateOAuth2Application","requestBody":{"$ref":"#/components/requestBodies/CreateOAuth2ApplicationOptions"},"responses":{"201":{"$ref":"#/components/responses/OAuth2Application"},"400":{"$ref":"#/components/responses/error"}}}},"/user/applications/oauth2/{id}":{"get":{"tags":["user"],"summary":"get an OAuth2 Application","operationId":"userGetOAuth2Application","parameters":[{"description":"Application ID to be found","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/OAuth2Application"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"delete an OAuth2 Application","operationId":"userDeleteOAuth2Application","parameters":[{"description":"token to be deleted","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"patch":{"tags":["user"],"summary":"update an OAuth2 Application, this includes regenerating the client secret","operationId":"userUpdateOAuth2Application","parameters":[{"description":"application to be updated","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"$ref":"#/components/requestBodies/CreateOAuth2ApplicationOptions"},"responses":{"200":{"$ref":"#/components/responses/OAuth2Application"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/emails":{"get":{"tags":["user"],"summary":"List the authenticated user\'s email addresses","operationId":"userListEmails","responses":{"200":{"$ref":"#/components/responses/EmailList"}}},"post":{"tags":["user"],"summary":"Add email addresses","operationId":"userAddEmail","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateEmailOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateEmailOption"}}}},"responses":{"201":{"$ref":"#/components/responses/EmailList"},"422":{"$ref":"#/components/responses/validationError"}}},"delete":{"tags":["user"],"summary":"Delete email addresses","operationId":"userDeleteEmail","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeleteEmailOption"}},"text/plain":{"schema":{"$ref":"#/components/schemas/DeleteEmailOption"}}}},"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/followers":{"get":{"tags":["user"],"summary":"List the authenticated user\'s followers","operationId":"userCurrentListFollowers","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/user/following":{"get":{"tags":["user"],"summary":"List the users that the authenticated user is following","operationId":"userCurrentListFollowing","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/user/following/{username}":{"get":{"tags":["user"],"summary":"Check whether a user is followed by the authenticated user","operationId":"userCurrentCheckFollowing","parameters":[{"description":"username of followed user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["user"],"summary":"Follow a user","operationId":"userCurrentPutFollow","parameters":[{"description":"username of user to follow","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"delete":{"tags":["user"],"summary":"Unfollow a user","operationId":"userCurrentDeleteFollow","parameters":[{"description":"username of user to unfollow","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/user/gpg_key_token":{"get":{"tags":["user"],"summary":"Get a Token to verify","operationId":"getVerificationToken","responses":{"200":{"$ref":"#/components/responses/string"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/gpg_key_verify":{"post":{"tags":["user"],"summary":"Verify a GPG key","operationId":"userVerifyGPGKey","responses":{"201":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/gpg_keys":{"get":{"tags":["user"],"summary":"List the authenticated user\'s GPG keys","operationId":"userCurrentListGPGKeys","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKeyList"}}},"post":{"tags":["user"],"summary":"Create a GPG key","operationId":"userCurrentPostGPGKey","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateGPGKeyOption"}}}},"responses":{"201":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/gpg_keys/{id}":{"get":{"tags":["user"],"summary":"Get a GPG key","operationId":"userCurrentGetGPGKey","parameters":[{"description":"id of key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKey"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Remove a GPG key","operationId":"userCurrentDeleteGPGKey","parameters":[{"description":"id of key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/keys":{"get":{"tags":["user"],"summary":"List the authenticated user\'s public keys","operationId":"userCurrentListKeys","parameters":[{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKeyList"}}},"post":{"tags":["user"],"summary":"Create a public key","operationId":"userCurrentPostKey","requestBody":{"$ref":"#/components/requestBodies/CreateKeyOption"},"responses":{"201":{"$ref":"#/components/responses/PublicKey"},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/keys/{id}":{"get":{"tags":["user"],"summary":"Get a public key","operationId":"userCurrentGetKey","parameters":[{"description":"id of key to get","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKey"},"404":{"$ref":"#/components/responses/notFound"}}},"delete":{"tags":["user"],"summary":"Delete a public key","operationId":"userCurrentDeleteKey","parameters":[{"description":"id of key to delete","name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/user/orgs":{"get":{"tags":["organization"],"summary":"List the current user\'s organizations","operationId":"orgListCurrentUserOrgs","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"}}}},"/user/repos":{"get":{"tags":["user"],"summary":"List the repos that the authenticated user owns","operationId":"userCurrentListRepos","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}},"post":{"tags":["repository","user"],"summary":"Create a repository","operationId":"createCurrentUserRepo","requestBody":{"$ref":"#/components/requestBodies/CreateRepoOption"},"responses":{"201":{"$ref":"#/components/responses/Repository"},"400":{"$ref":"#/components/responses/error"},"409":{"description":"The repository with the same name already exists."},"422":{"$ref":"#/components/responses/validationError"}}}},"/user/settings":{"get":{"tags":["user"],"summary":"Get user settings","operationId":"getUserSettings","responses":{"200":{"$ref":"#/components/responses/UserSettings"}}},"patch":{"tags":["user"],"summary":"Update user settings","operationId":"updateUserSettings","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSettingsOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/UserSettingsOptions"}}}},"responses":{"200":{"$ref":"#/components/responses/UserSettings"}}}},"/user/starred":{"get":{"tags":["user"],"summary":"The repos that the authenticated user has starred","operationId":"userCurrentListStarred","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/user/starred/{owner}/{repo}":{"get":{"tags":["user"],"summary":"Whether the authenticated is starring the repo","operationId":"userCurrentCheckStarring","parameters":[{"description":"owner of the repo","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}},"put":{"tags":["user"],"summary":"Star the given repo","operationId":"userCurrentPutStar","parameters":[{"description":"owner of the repo to star","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to star","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}},"delete":{"tags":["user"],"summary":"Unstar the given repo","operationId":"userCurrentDeleteStar","parameters":[{"description":"owner of the repo to unstar","name":"owner","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the repo to unstar","name":"repo","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"}}}},"/user/stopwatches":{"get":{"tags":["user"],"summary":"Get list of all existing stopwatches","operationId":"userGetStopWatches","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/StopWatchList"}}}},"/user/subscriptions":{"get":{"tags":["user"],"summary":"List repositories watched by the authenticated user","operationId":"userCurrentListSubscriptions","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/user/teams":{"get":{"tags":["user"],"summary":"List all the teams a user belongs to","operationId":"userListTeams","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/TeamList"}}}},"/user/times":{"get":{"tags":["user"],"summary":"List the current user\'s tracked times","operationId":"userCurrentTrackedTimes","parameters":[{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}},{"description":"Only show times updated after the given time. This is a timestamp in RFC 3339 format","name":"since","in":"query","schema":{"type":"string","format":"date-time"}},{"description":"Only show times updated before the given time. This is a timestamp in RFC 3339 format","name":"before","in":"query","schema":{"type":"string","format":"date-time"}}],"responses":{"200":{"$ref":"#/components/responses/TrackedTimeList"}}}},"/users/search":{"get":{"tags":["user"],"summary":"Search for users","operationId":"userSearch","parameters":[{"description":"keyword","name":"q","in":"query","schema":{"type":"string"}},{"description":"ID of the user to search for","name":"uid","in":"query","schema":{"type":"integer","format":"int64"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"description":"SearchResults of a successful search","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/User"}},"ok":{"type":"boolean"}}}}}}}}},"/users/{username}":{"get":{"tags":["user"],"summary":"Get a user","operationId":"userGet","parameters":[{"description":"username of user to get","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/User"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/followers":{"get":{"tags":["user"],"summary":"List the given user\'s followers","operationId":"userListFollowers","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/users/{username}/following":{"get":{"tags":["user"],"summary":"List the users that the given user is following","operationId":"userListFollowing","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/UserList"}}}},"/users/{username}/following/{target}":{"get":{"tags":["user"],"summary":"Check if one user is following another user","operationId":"userCheckFollowing","parameters":[{"description":"username of following user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"username of followed user","name":"target","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/gpg_keys":{"get":{"tags":["user"],"summary":"List the given user\'s GPG keys","operationId":"userListGPGKeys","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/GPGKeyList"}}}},"/users/{username}/heatmap":{"get":{"tags":["user"],"summary":"Get a user\'s heatmap","operationId":"userGetHeatmapData","parameters":[{"description":"username of user to get","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/UserHeatmapData"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/keys":{"get":{"tags":["user"],"summary":"List the given user\'s public keys","operationId":"userListKeys","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"fingerprint of the key","name":"fingerprint","in":"query","schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/PublicKeyList"}}}},"/users/{username}/orgs":{"get":{"tags":["organization"],"summary":"List a user\'s organizations","operationId":"orgListUserOrgs","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationList"}}}},"/users/{username}/orgs/{org}/permissions":{"get":{"tags":["organization"],"summary":"Get user permissions in organization","operationId":"orgGetUserPermissions","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"name of the organization","name":"org","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"$ref":"#/components/responses/OrganizationPermissions"},"403":{"$ref":"#/components/responses/forbidden"},"404":{"$ref":"#/components/responses/notFound"}}}},"/users/{username}/repos":{"get":{"tags":["user"],"summary":"List the repos owned by the given user","operationId":"userListRepos","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/users/{username}/starred":{"get":{"tags":["user"],"summary":"The repos that the given user has starred","operationId":"userListStarred","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/users/{username}/subscriptions":{"get":{"tags":["user"],"summary":"List the repositories watched by a user","operationId":"userListSubscriptions","parameters":[{"description":"username of the user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/RepositoryList"}}}},"/users/{username}/tokens":{"get":{"tags":["user"],"summary":"List the authenticated user\'s access tokens","operationId":"userGetTokens","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"page number of results to return (1-based)","name":"page","in":"query","schema":{"type":"integer"}},{"description":"page size of results","name":"limit","in":"query","schema":{"type":"integer"}}],"responses":{"200":{"$ref":"#/components/responses/AccessTokenList"}}},"post":{"tags":["user"],"summary":"Create an access token","operationId":"userCreateToken","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateAccessTokenOption"}}}},"responses":{"201":{"$ref":"#/components/responses/AccessToken"},"400":{"$ref":"#/components/responses/error"}}}},"/users/{username}/tokens/{token}":{"delete":{"tags":["user"],"summary":"delete an access token","operationId":"userDeleteAccessToken","parameters":[{"description":"username of user","name":"username","in":"path","required":true,"schema":{"type":"string"}},{"description":"token to be deleted, identified by ID and if not available by name","name":"token","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"$ref":"#/components/responses/empty"},"404":{"$ref":"#/components/responses/notFound"},"422":{"$ref":"#/components/responses/error"}}}},"/version":{"get":{"tags":["miscellaneous"],"summary":"Returns the version of the Gitea application","operationId":"getVersion","responses":{"200":{"$ref":"#/components/responses/ServerVersion"}}}}},"security":[{"BasicAuth":[]},{"Token":[]},{"AccessToken":[]},{"AuthorizationHeaderToken":[]},{"SudoParam":[]},{"SudoHeader":[]},{"TOTPHeader":[]}],"servers":[{"url":"https://gitea.com/api/v1"}],"components":{"responses":{"AccessToken":{"description":"AccessToken represents an API access token.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessToken"}},"text/html":{"schema":{"$ref":"#/components/schemas/AccessToken"}}}},"AccessTokenList":{"description":"AccessTokenList represents a list of API access token.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccessToken"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccessToken"}}}}},"ActivityPub":{"description":"ActivityPub","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActivityPub"}},"text/html":{"schema":{"$ref":"#/components/schemas/ActivityPub"}}}},"AnnotatedTag":{"description":"AnnotatedTag","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnnotatedTag"}},"text/html":{"schema":{"$ref":"#/components/schemas/AnnotatedTag"}}}},"Attachment":{"description":"Attachment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Attachment"}},"text/html":{"schema":{"$ref":"#/components/schemas/Attachment"}}}},"AttachmentList":{"description":"AttachmentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"}}}}},"Branch":{"description":"Branch","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Branch"}},"text/html":{"schema":{"$ref":"#/components/schemas/Branch"}}}},"BranchList":{"description":"BranchList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Branch"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Branch"}}}}},"BranchProtection":{"description":"BranchProtection","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BranchProtection"}},"text/html":{"schema":{"$ref":"#/components/schemas/BranchProtection"}}}},"BranchProtectionList":{"description":"BranchProtectionList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BranchProtection"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/BranchProtection"}}}}},"ChangedFileList":{"description":"ChangedFileList","headers":{"X-HasMore":{"description":"True if there is another page","schema":{"type":"boolean"}},"X-Page":{"description":"The current page","schema":{"type":"integer","format":"int64"}},"X-PageCount":{"description":"Total number of pages","schema":{"type":"integer","format":"int64"}},"X-PerPage":{"description":"Commits per page","schema":{"type":"integer","format":"int64"}},"X-Total":{"description":"Total commit count","schema":{"type":"integer","format":"int64"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ChangedFile"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ChangedFile"}}}}},"CombinedStatus":{"description":"CombinedStatus","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CombinedStatus"}},"text/html":{"schema":{"$ref":"#/components/schemas/CombinedStatus"}}}},"Comment":{"description":"Comment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Comment"}},"text/html":{"schema":{"$ref":"#/components/schemas/Comment"}}}},"CommentList":{"description":"CommentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Comment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Comment"}}}}},"Commit":{"description":"Commit","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Commit"}},"text/html":{"schema":{"$ref":"#/components/schemas/Commit"}}}},"CommitList":{"description":"CommitList","headers":{"X-HasMore":{"description":"True if there is another page","schema":{"type":"boolean"}},"X-Page":{"description":"The current page","schema":{"type":"integer","format":"int64"}},"X-PageCount":{"description":"Total number of pages","schema":{"type":"integer","format":"int64"}},"X-PerPage":{"description":"Commits per page","schema":{"type":"integer","format":"int64"}},"X-Total":{"description":"Total commit count","schema":{"type":"integer","format":"int64"}}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Commit"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Commit"}}}}},"CommitStatus":{"description":"CommitStatus","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CommitStatus"}},"text/html":{"schema":{"$ref":"#/components/schemas/CommitStatus"}}}},"CommitStatusList":{"description":"CommitStatusList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"}}}}},"ContentsListResponse":{"description":"ContentsListResponse","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ContentsResponse"}}}}},"ContentsResponse":{"description":"ContentsResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContentsResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/ContentsResponse"}}}},"CronList":{"description":"CronList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Cron"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Cron"}}}}},"DeployKey":{"description":"DeployKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeployKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/DeployKey"}}}},"DeployKeyList":{"description":"DeployKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeployKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DeployKey"}}}}},"EmailList":{"description":"EmailList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Email"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Email"}}}}},"EmptyRepository":{"description":"EmptyRepository","content":{"application/json":{"schema":{"$ref":"#/components/schemas/APIError"}},"text/html":{"schema":{"$ref":"#/components/schemas/APIError"}}}},"FileDeleteResponse":{"description":"FileDeleteResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileDeleteResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FileDeleteResponse"}}}},"FileResponse":{"description":"FileResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FileResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/FileResponse"}}}},"GPGKey":{"description":"GPGKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GPGKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/GPGKey"}}}},"GPGKeyList":{"description":"GPGKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"}}}}},"GeneralAPISettings":{"description":"GeneralAPISettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralAPISettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralAPISettings"}}}},"GeneralAttachmentSettings":{"description":"GeneralAttachmentSettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralAttachmentSettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralAttachmentSettings"}}}},"GeneralRepoSettings":{"description":"GeneralRepoSettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralRepoSettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralRepoSettings"}}}},"GeneralUISettings":{"description":"GeneralUISettings","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GeneralUISettings"}},"text/html":{"schema":{"$ref":"#/components/schemas/GeneralUISettings"}}}},"GitBlobResponse":{"description":"GitBlobResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitBlobResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitBlobResponse"}}}},"GitHook":{"description":"GitHook","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitHook"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitHook"}}}},"GitHookList":{"description":"GitHookList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GitHook"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GitHook"}}}}},"GitTreeResponse":{"description":"GitTreeResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GitTreeResponse"}},"text/html":{"schema":{"$ref":"#/components/schemas/GitTreeResponse"}}}},"Hook":{"description":"Hook","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Hook"}},"text/html":{"schema":{"$ref":"#/components/schemas/Hook"}}}},"HookList":{"description":"HookList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Hook"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Hook"}}}}},"Issue":{"description":"Issue","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Issue"}},"text/html":{"schema":{"$ref":"#/components/schemas/Issue"}}}},"IssueDeadline":{"description":"IssueDeadline","content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueDeadline"}},"text/html":{"schema":{"$ref":"#/components/schemas/IssueDeadline"}}}},"IssueList":{"description":"IssueList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Issue"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Issue"}}}}},"IssueTemplates":{"description":"IssueTemplates","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssueTemplate"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/IssueTemplate"}}}}},"Label":{"description":"Label","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Label"}},"text/html":{"schema":{"$ref":"#/components/schemas/Label"}}}},"LabelList":{"description":"LabelList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Label"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Label"}}}}},"LanguageStatistics":{"description":"LanguageStatistics","content":{"application/json":{"schema":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}}},"text/html":{"schema":{"type":"object","additionalProperties":{"type":"integer","format":"int64"}}}}},"MarkdownRender":{"description":"MarkdownRender is a rendered markdown document","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"Milestone":{"description":"Milestone","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Milestone"}},"text/html":{"schema":{"$ref":"#/components/schemas/Milestone"}}}},"MilestoneList":{"description":"MilestoneList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Milestone"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Milestone"}}}}},"NodeInfo":{"description":"NodeInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NodeInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/NodeInfo"}}}},"Note":{"description":"Note","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Note"}},"text/html":{"schema":{"$ref":"#/components/schemas/Note"}}}},"NotificationCount":{"description":"Number of unread notifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationCount"}},"text/html":{"schema":{"$ref":"#/components/schemas/NotificationCount"}}}},"NotificationThread":{"description":"NotificationThread","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotificationThread"}},"text/html":{"schema":{"$ref":"#/components/schemas/NotificationThread"}}}},"NotificationThreadList":{"description":"NotificationThreadList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/NotificationThread"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/NotificationThread"}}}}},"OAuth2Application":{"description":"OAuth2Application","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OAuth2Application"}},"text/html":{"schema":{"$ref":"#/components/schemas/OAuth2Application"}}}},"OAuth2ApplicationList":{"description":"OAuth2ApplicationList represents a list of OAuth2 applications.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OAuth2Application"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OAuth2Application"}}}}},"Organization":{"description":"Organization","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Organization"}},"text/html":{"schema":{"$ref":"#/components/schemas/Organization"}}}},"OrganizationList":{"description":"OrganizationList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Organization"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Organization"}}}}},"OrganizationPermissions":{"description":"OrganizationPermissions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrganizationPermissions"}},"text/html":{"schema":{"$ref":"#/components/schemas/OrganizationPermissions"}}}},"Package":{"description":"Package","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Package"}},"text/html":{"schema":{"$ref":"#/components/schemas/Package"}}}},"PackageFileList":{"description":"PackageFileList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PackageFile"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PackageFile"}}}}},"PackageList":{"description":"PackageList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Package"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Package"}}}}},"PublicKey":{"description":"PublicKey","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PublicKey"}},"text/html":{"schema":{"$ref":"#/components/schemas/PublicKey"}}}},"PublicKeyList":{"description":"PublicKeyList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PublicKey"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PublicKey"}}}}},"PullRequest":{"description":"PullRequest","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullRequest"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullRequest"}}}},"PullRequestList":{"description":"PullRequestList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullRequest"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullRequest"}}}}},"PullReview":{"description":"PullReview","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReview"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullReview"}}}},"PullReviewComment":{"description":"PullComment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReviewComment"}},"text/html":{"schema":{"$ref":"#/components/schemas/PullReviewComment"}}}},"PullReviewCommentList":{"description":"PullCommentList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReviewComment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReviewComment"}}}}},"PullReviewList":{"description":"PullReviewList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReview"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PullReview"}}}}},"PushMirror":{"description":"PushMirror","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PushMirror"}},"text/html":{"schema":{"$ref":"#/components/schemas/PushMirror"}}}},"PushMirrorList":{"description":"PushMirrorList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PushMirror"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PushMirror"}}}}},"Reaction":{"description":"Reaction","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Reaction"}},"text/html":{"schema":{"$ref":"#/components/schemas/Reaction"}}}},"ReactionList":{"description":"ReactionList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reaction"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reaction"}}}}},"Reference":{"description":"Reference","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Reference"}},"text/html":{"schema":{"$ref":"#/components/schemas/Reference"}}}},"ReferenceList":{"description":"ReferenceList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Reference"}}}}},"Release":{"description":"Release","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Release"}},"text/html":{"schema":{"$ref":"#/components/schemas/Release"}}}},"ReleaseList":{"description":"ReleaseList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Release"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Release"}}}}},"RepoCollaboratorPermission":{"description":"RepoCollaboratorPermission","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RepoCollaboratorPermission"}},"text/html":{"schema":{"$ref":"#/components/schemas/RepoCollaboratorPermission"}}}},"Repository":{"description":"Repository","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Repository"}},"text/html":{"schema":{"$ref":"#/components/schemas/Repository"}}}},"RepositoryList":{"description":"RepositoryList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Repository"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Repository"}}}}},"SearchResults":{"description":"SearchResults","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchResults"}},"text/html":{"schema":{"$ref":"#/components/schemas/SearchResults"}}}},"ServerVersion":{"description":"ServerVersion","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServerVersion"}},"text/html":{"schema":{"$ref":"#/components/schemas/ServerVersion"}}}},"StopWatch":{"description":"StopWatch","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StopWatch"}},"text/html":{"schema":{"$ref":"#/components/schemas/StopWatch"}}}},"StopWatchList":{"description":"StopWatchList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StopWatch"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/StopWatch"}}}}},"StringSlice":{"description":"StringSlice","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}},"text/html":{"schema":{"type":"array","items":{"type":"string"}}}}},"Tag":{"description":"Tag","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Tag"}},"text/html":{"schema":{"$ref":"#/components/schemas/Tag"}}}},"TagList":{"description":"TagList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Tag"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Tag"}}}}},"Team":{"description":"Team","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Team"}},"text/html":{"schema":{"$ref":"#/components/schemas/Team"}}}},"TeamList":{"description":"TeamList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Team"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Team"}}}}},"TimelineList":{"description":"TimelineList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TimelineComment"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TimelineComment"}}}}},"TopicListResponse":{"description":"TopicListResponse","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TopicResponse"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TopicResponse"}}}}},"TopicNames":{"description":"TopicNames","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TopicName"}},"text/html":{"schema":{"$ref":"#/components/schemas/TopicName"}}}},"TrackedTime":{"description":"TrackedTime","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TrackedTime"}},"text/html":{"schema":{"$ref":"#/components/schemas/TrackedTime"}}}},"TrackedTimeList":{"description":"TrackedTimeList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TrackedTime"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TrackedTime"}}}}},"User":{"description":"User","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}},"text/html":{"schema":{"$ref":"#/components/schemas/User"}}}},"UserHeatmapData":{"description":"UserHeatmapData","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserHeatmapData"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserHeatmapData"}}}}},"UserList":{"description":"UserList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}}},"UserSettings":{"description":"UserSettings","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserSettings"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/UserSettings"}}}}},"WatchInfo":{"description":"WatchInfo","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WatchInfo"}},"text/html":{"schema":{"$ref":"#/components/schemas/WatchInfo"}}}},"WikiCommitList":{"description":"WikiCommitList","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WikiCommitList"}},"text/html":{"schema":{"$ref":"#/components/schemas/WikiCommitList"}}}},"WikiPage":{"description":"WikiPage","content":{"application/json":{"schema":{"$ref":"#/components/schemas/WikiPage"}},"text/html":{"schema":{"$ref":"#/components/schemas/WikiPage"}}}},"WikiPageList":{"description":"WikiPageList","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WikiPageMetaData"}}},"text/html":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/WikiPageMetaData"}}}}},"conflict":{"description":"APIConflict is a conflict empty response"},"empty":{"description":"APIEmpty is an empty response"},"error":{"description":"APIError is error format response","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}},"forbidden":{"description":"APIForbiddenError is a forbidden error response","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}},"invalidTopicsError":{"description":"APIInvalidTopicsError is error format response to invalid topics","headers":{"invalidTopics":{"schema":{"type":"array","items":{"type":"string"}},"style":"simple"},"message":{"schema":{"type":"string"}}}},"notFound":{"description":"APINotFound is a not found empty response"},"parameterBodies":{"description":"parameterBodies","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreatePushMirrorOption"}},"text/html":{"schema":{"$ref":"#/components/schemas/CreatePushMirrorOption"}}}},"redirect":{"description":"APIRedirect is a redirect response"},"string":{"description":"APIString is a string response","content":{"application/json":{"schema":{"type":"string"}},"text/html":{"schema":{"type":"string"}}}},"validationError":{"description":"APIValidationError is error format response related to input validation","headers":{"message":{"schema":{"type":"string"}},"url":{"schema":{"type":"string"}}}}},"requestBodies":{"CreateOAuth2ApplicationOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOAuth2ApplicationOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/CreateOAuth2ApplicationOptions"}}},"required":true},"CreateWikiPageOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateWikiPageOptions"}}}},"EditLabelOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditLabelOption"}}}},"CreateKeyOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateKeyOption"}}}},"CreateOrgOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateOrgOption"}}},"required":true},"IssueLabelsOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/IssueLabelsOption"}}}},"CreateHookOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateHookOption"}}},"required":true},"EditReactionOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditReactionOption"}}}},"EditHookOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditHookOption"}}}},"CreateRepoOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateRepoOption"}}}},"CreateLabelOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateLabelOption"}}}},"UpdateFileOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateFileOptions"}}},"required":true},"EditIssueCommentOption":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditIssueCommentOption"}}}},"issueCreateIssueCommentAttachment":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"attachment":{"description":"attachment to upload","type":"string","format":"binary"}},"required":["attachment"]}}},"required":true},"EditAttachmentOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EditAttachmentOptions"}}}},"PullReviewRequestOptions":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PullReviewRequestOptions"}},"text/plain":{"schema":{"$ref":"#/components/schemas/PullReviewRequestOptions"}}},"required":true}},"securitySchemes":{"AccessToken":{"type":"apiKey","name":"access_token","in":"query"},"AuthorizationHeaderToken":{"description":"API tokens must be prepended with \\"token\\" followed by a space.","type":"apiKey","name":"Authorization","in":"header"},"BasicAuth":{"type":"http","scheme":"basic"},"SudoHeader":{"description":"Sudo API request as the user provided as the key. Admin privileges are required.","type":"apiKey","name":"Sudo","in":"header"},"SudoParam":{"description":"Sudo API request as the user provided as the key. Admin privileges are required.","type":"apiKey","name":"sudo","in":"query"},"TOTPHeader":{"description":"Must be used in combination with BasicAuth if two-factor authentication is enabled.","type":"apiKey","name":"X-GITEA-OTP","in":"header"},"Token":{"type":"apiKey","name":"token","in":"query"}},"schemas":{"APIError":{"description":"APIError is an api error with a message","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AccessToken":{"type":"object","title":"AccessToken represents an API access token.","properties":{"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"scopes":{"type":"array","items":{"type":"string"},"x-go-name":"Scopes"},"sha1":{"type":"string","x-go-name":"Token"},"token_last_eight":{"type":"string","x-go-name":"TokenLastEight"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ActivityPub":{"description":"ActivityPub type","type":"object","properties":{"@context":{"type":"string","x-go-name":"Context"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AddCollaboratorOption":{"description":"AddCollaboratorOption options when adding a user as a collaborator of a repository","type":"object","properties":{"permission":{"type":"string","x-go-name":"Permission"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AddTimeOption":{"description":"AddTimeOption options for adding time to an issue","type":"object","required":["time"],"properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"time":{"description":"time in seconds","type":"integer","format":"int64","x-go-name":"Time"},"user_name":{"description":"User who spent the time (optional)","type":"string","x-go-name":"User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AnnotatedTag":{"description":"AnnotatedTag represents an annotated tag","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"object":{"$ref":"#/components/schemas/AnnotatedTagObject"},"sha":{"type":"string","x-go-name":"SHA"},"tag":{"type":"string","x-go-name":"Tag"},"tagger":{"$ref":"#/components/schemas/CommitUser"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"AnnotatedTagObject":{"description":"AnnotatedTagObject contains meta information of the tag object","type":"object","properties":{"sha":{"type":"string","x-go-name":"SHA"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Attachment":{"description":"Attachment a generic attachment","type":"object","properties":{"browser_download_url":{"type":"string","x-go-name":"DownloadURL"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"download_count":{"type":"integer","format":"int64","x-go-name":"DownloadCount"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"uuid":{"type":"string","x-go-name":"UUID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Branch":{"description":"Branch represents a repository branch","type":"object","properties":{"commit":{"$ref":"#/components/schemas/PayloadCommit"},"effective_branch_protection_name":{"type":"string","x-go-name":"EffectiveBranchProtectionName"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"name":{"type":"string","x-go-name":"Name"},"protected":{"type":"boolean","x-go-name":"Protected"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"user_can_merge":{"type":"boolean","x-go-name":"UserCanMerge"},"user_can_push":{"type":"boolean","x-go-name":"UserCanPush"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"BranchProtection":{"description":"BranchProtection represents a branch protection for a repository","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"branch_name":{"description":"Deprecated: true","type":"string","x-go-name":"BranchName"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"rule_name":{"type":"string","x-go-name":"RuleName"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ChangedFile":{"description":"ChangedFile store information about files affected by the pull request","type":"object","properties":{"additions":{"type":"integer","format":"int64","x-go-name":"Additions"},"changes":{"type":"integer","format":"int64","x-go-name":"Changes"},"contents_url":{"type":"string","x-go-name":"ContentsURL"},"deletions":{"type":"integer","format":"int64","x-go-name":"Deletions"},"filename":{"type":"string","x-go-name":"Filename"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"previous_filename":{"type":"string","x-go-name":"PreviousFilename"},"raw_url":{"type":"string","x-go-name":"RawURL"},"status":{"type":"string","x-go-name":"Status"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CombinedStatus":{"description":"CombinedStatus holds the combined state of several statuses for a single commit","type":"object","properties":{"commit_url":{"type":"string","x-go-name":"CommitURL"},"repository":{"$ref":"#/components/schemas/Repository"},"sha":{"type":"string","x-go-name":"SHA"},"state":{"$ref":"#/components/schemas/CommitStatusState"},"statuses":{"type":"array","items":{"$ref":"#/components/schemas/CommitStatus"},"x-go-name":"Statuses"},"total_count":{"type":"integer","format":"int64","x-go-name":"TotalCount"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Comment":{"description":"Comment represents a comment on a commit or issue","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"body":{"type":"string","x-go-name":"Body"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue_url":{"type":"string","x-go-name":"IssueURL"},"original_author":{"type":"string","x-go-name":"OriginalAuthor"},"original_author_id":{"type":"integer","format":"int64","x-go-name":"OriginalAuthorID"},"pull_request_url":{"type":"string","x-go-name":"PRURL"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Commit":{"type":"object","title":"Commit contains information generated from a Git commit.","properties":{"author":{"$ref":"#/components/schemas/User"},"commit":{"$ref":"#/components/schemas/RepoCommit"},"committer":{"$ref":"#/components/schemas/User"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"files":{"type":"array","items":{"$ref":"#/components/schemas/CommitAffectedFiles"},"x-go-name":"Files"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"parents":{"type":"array","items":{"$ref":"#/components/schemas/CommitMeta"},"x-go-name":"Parents"},"sha":{"type":"string","x-go-name":"SHA"},"stats":{"$ref":"#/components/schemas/CommitStats"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitAffectedFiles":{"description":"CommitAffectedFiles store information about files affected by the commit","type":"object","properties":{"filename":{"type":"string","x-go-name":"Filename"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitDateOptions":{"description":"CommitDateOptions store dates for GIT_AUTHOR_DATE and GIT_COMMITTER_DATE","type":"object","properties":{"author":{"type":"string","format":"date-time","x-go-name":"Author"},"committer":{"type":"string","format":"date-time","x-go-name":"Committer"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitMeta":{"type":"object","title":"CommitMeta contains meta information of a commit in terms of API.","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"sha":{"type":"string","x-go-name":"SHA"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStats":{"description":"CommitStats is statistics for a RepoCommit","type":"object","properties":{"additions":{"type":"integer","format":"int64","x-go-name":"Additions"},"deletions":{"type":"integer","format":"int64","x-go-name":"Deletions"},"total":{"type":"integer","format":"int64","x-go-name":"Total"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStatus":{"description":"CommitStatus holds a single status of a single Commit","type":"object","properties":{"context":{"type":"string","x-go-name":"Context"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"creator":{"$ref":"#/components/schemas/User"},"description":{"type":"string","x-go-name":"Description"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"status":{"$ref":"#/components/schemas/CommitStatusState"},"target_url":{"type":"string","x-go-name":"TargetURL"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitStatusState":{"description":"CommitStatusState holds the state of a CommitStatus\\nIt can be \\"pending\\", \\"success\\", \\"error\\", \\"failure\\", and \\"warning\\"","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"CommitUser":{"type":"object","title":"CommitUser contains information of a user in the context of a commit.","properties":{"date":{"type":"string","x-go-name":"Date"},"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ContentsResponse":{"description":"ContentsResponse contains information about a repo\'s entry\'s (dir, file, symlink, submodule) metadata and content","type":"object","properties":{"_links":{"$ref":"#/components/schemas/FileLinksResponse"},"content":{"description":"`content` is populated when `type` is `file`, otherwise null","type":"string","x-go-name":"Content"},"download_url":{"type":"string","x-go-name":"DownloadURL"},"encoding":{"description":"`encoding` is populated when `type` is `file`, otherwise null","type":"string","x-go-name":"Encoding"},"git_url":{"type":"string","x-go-name":"GitURL"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit_sha":{"type":"string","x-go-name":"LastCommitSHA"},"name":{"type":"string","x-go-name":"Name"},"path":{"type":"string","x-go-name":"Path"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"submodule_git_url":{"description":"`submodule_git_url` is populated when `type` is `submodule`, otherwise null","type":"string","x-go-name":"SubmoduleGitURL"},"target":{"description":"`target` is populated when `type` is `symlink`, otherwise null","type":"string","x-go-name":"Target"},"type":{"description":"`type` will be `file`, `dir`, `symlink`, or `submodule`","type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateAccessTokenOption":{"description":"CreateAccessTokenOption options when create access token","type":"object","required":["name"],"properties":{"name":{"type":"string","x-go-name":"Name"},"scopes":{"type":"array","items":{"type":"string"},"x-go-name":"Scopes"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateBranchProtectionOption":{"description":"CreateBranchProtectionOption options for creating a branch protection","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"branch_name":{"description":"Deprecated: true","type":"string","x-go-name":"BranchName"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"rule_name":{"type":"string","x-go-name":"RuleName"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateBranchRepoOption":{"description":"CreateBranchRepoOption options when creating a branch in a repository","type":"object","required":["new_branch_name"],"properties":{"new_branch_name":{"description":"Name of the branch to create","type":"string","uniqueItems":true,"x-go-name":"BranchName"},"old_branch_name":{"description":"Name of the old branch to create from","type":"string","uniqueItems":true,"x-go-name":"OldBranchName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateEmailOption":{"description":"CreateEmailOption options when creating email addresses","type":"object","properties":{"emails":{"description":"email addresses to add","type":"array","items":{"type":"string"},"x-go-name":"Emails"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateFileOptions":{"description":"CreateFileOptions options for creating files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["content"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"content":{"description":"content must be base64 encoded","type":"string","x-go-name":"Content"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateForkOption":{"description":"CreateForkOption options for creating a fork","type":"object","properties":{"name":{"description":"name of the forked repository","type":"string","x-go-name":"Name"},"organization":{"description":"organization name, if forking into an organization","type":"string","x-go-name":"Organization"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateGPGKeyOption":{"description":"CreateGPGKeyOption options create user GPG key","type":"object","required":["armored_public_key"],"properties":{"armored_public_key":{"description":"An armored GPG key to add","type":"string","uniqueItems":true,"x-go-name":"ArmoredKey"},"armored_signature":{"type":"string","x-go-name":"Signature"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateHookOption":{"description":"CreateHookOption options when create a hook","type":"object","required":["type","config"],"properties":{"active":{"type":"boolean","default":false,"x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"$ref":"#/components/schemas/CreateHookOptionConfig"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"},"type":{"type":"string","enum":["dingtalk","discord","gitea","gogs","msteams","slack","telegram","feishu","wechatwork","packagist"],"x-go-name":"Type"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateHookOptionConfig":{"description":"CreateHookOptionConfig has all config options in it\\nrequired are \\"content_type\\" and \\"url\\" Required","type":"object","additionalProperties":{"type":"string"},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateIssueCommentOption":{"description":"CreateIssueCommentOption options for creating a comment on an issue","type":"object","required":["body"],"properties":{"body":{"type":"string","x-go-name":"Body"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateIssueOption":{"description":"CreateIssueOption options to create one issue","type":"object","required":["title"],"properties":{"assignee":{"description":"deprecated","type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"closed":{"type":"boolean","x-go-name":"Closed"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"labels":{"description":"list of label ids","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"description":"milestone id","type":"integer","format":"int64","x-go-name":"Milestone"},"ref":{"type":"string","x-go-name":"Ref"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateKeyOption":{"description":"CreateKeyOption options when creating a key","type":"object","required":["title","key"],"properties":{"key":{"description":"An armored SSH key to add","type":"string","uniqueItems":true,"x-go-name":"Key"},"read_only":{"description":"Describe if the key has only read access or read/write","type":"boolean","x-go-name":"ReadOnly"},"title":{"description":"Title of the key to add","type":"string","uniqueItems":true,"x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateLabelOption":{"description":"CreateLabelOption options for creating a label","type":"object","required":["name","color"],"properties":{"color":{"type":"string","x-go-name":"Color","example":"#00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateMilestoneOption":{"description":"CreateMilestoneOption options for creating a milestone","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"state":{"type":"string","enum":["open","closed"],"x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateOAuth2ApplicationOptions":{"description":"CreateOAuth2ApplicationOptions holds options to create an oauth2 application","type":"object","properties":{"confidential_client":{"type":"boolean","x-go-name":"ConfidentialClient"},"name":{"type":"string","x-go-name":"Name"},"redirect_uris":{"type":"array","items":{"type":"string"},"x-go-name":"RedirectURIs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateOrgOption":{"description":"CreateOrgOption options for creating an organization","type":"object","required":["username"],"properties":{"description":{"type":"string","x-go-name":"Description"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"username":{"type":"string","x-go-name":"UserName"},"visibility":{"description":"possible values are `public` (default), `limited` or `private`","type":"string","enum":["public","limited","private"],"x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullRequestOption":{"description":"CreatePullRequestOption options when creating a pull request","type":"object","properties":{"assignee":{"type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"base":{"type":"string","x-go-name":"Base"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"head":{"type":"string","x-go-name":"Head"},"labels":{"type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullReviewComment":{"description":"CreatePullReviewComment represent a review comment for creation api","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"new_position":{"description":"if comment to new file line or 0","type":"integer","format":"int64","x-go-name":"NewLineNum"},"old_position":{"description":"if comment to old file line or 0","type":"integer","format":"int64","x-go-name":"OldLineNum"},"path":{"description":"the tree path","type":"string","x-go-name":"Path"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePullReviewOptions":{"description":"CreatePullReviewOptions are options to create a pull review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"comments":{"type":"array","items":{"$ref":"#/components/schemas/CreatePullReviewComment"},"x-go-name":"Comments"},"commit_id":{"type":"string","x-go-name":"CommitID"},"event":{"$ref":"#/components/schemas/ReviewStateType"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreatePushMirrorOption":{"type":"object","title":"CreatePushMirrorOption represents need information to create a push mirror of a repository.","properties":{"interval":{"type":"string","x-go-name":"Interval"},"remote_address":{"type":"string","x-go-name":"RemoteAddress"},"remote_password":{"type":"string","x-go-name":"RemotePassword"},"remote_username":{"type":"string","x-go-name":"RemoteUsername"},"sync_on_commit":{"type":"boolean","x-go-name":"SyncOnCommit"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateReleaseOption":{"description":"CreateReleaseOption options when creating a release","type":"object","required":["tag_name"],"properties":{"body":{"type":"string","x-go-name":"Note"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"tag_name":{"type":"string","x-go-name":"TagName"},"target_commitish":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateRepoOption":{"description":"CreateRepoOption options when creating repository","type":"object","required":["name"],"properties":{"auto_init":{"description":"Whether the repository should be auto-initialized?","type":"boolean","x-go-name":"AutoInit"},"default_branch":{"description":"DefaultBranch of the repository (used when initializes and in template)","type":"string","x-go-name":"DefaultBranch"},"description":{"description":"Description of the repository to create","type":"string","x-go-name":"Description"},"gitignores":{"description":"Gitignores to use","type":"string","x-go-name":"Gitignores"},"issue_labels":{"description":"Label-Set to use","type":"string","x-go-name":"IssueLabels"},"license":{"description":"License to use","type":"string","x-go-name":"License"},"name":{"description":"Name of the repository to create","type":"string","uniqueItems":true,"x-go-name":"Name"},"private":{"description":"Whether the repository is private","type":"boolean","x-go-name":"Private"},"readme":{"description":"Readme of the repository to create","type":"string","x-go-name":"Readme"},"template":{"description":"Whether the repository is template","type":"boolean","x-go-name":"Template"},"trust_model":{"description":"TrustModel of the repository","type":"string","enum":["default","collaborator","committer","collaboratorcommitter"],"x-go-name":"TrustModel"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateStatusOption":{"description":"CreateStatusOption holds the information needed to create a new CommitStatus for a Commit","type":"object","properties":{"context":{"type":"string","x-go-name":"Context"},"description":{"type":"string","x-go-name":"Description"},"state":{"$ref":"#/components/schemas/CommitStatusState"},"target_url":{"type":"string","x-go-name":"TargetURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateTagOption":{"description":"CreateTagOption options when creating a tag","type":"object","required":["tag_name"],"properties":{"message":{"type":"string","x-go-name":"Message"},"tag_name":{"type":"string","x-go-name":"TagName"},"target":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateTeamOption":{"description":"CreateTeamOption options for creating a team","type":"object","required":["name"],"properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"permission":{"type":"string","enum":["read","write","admin"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":{"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateUserOption":{"description":"CreateUserOption create user options","type":"object","required":["username","email","password"],"properties":{"created_at":{"description":"For explicitly setting the user creation timestamp. Useful when users are\\nmigrated from other systems. When omitted, the user\'s creation timestamp\\nwill be set to \\"now\\".","type":"string","format":"date-time","x-go-name":"Created"},"email":{"type":"string","format":"email","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"login_name":{"type":"string","x-go-name":"LoginName"},"must_change_password":{"type":"boolean","x-go-name":"MustChangePassword"},"password":{"type":"string","x-go-name":"Password"},"restricted":{"type":"boolean","x-go-name":"Restricted"},"send_notify":{"type":"boolean","x-go-name":"SendNotify"},"source_id":{"type":"integer","format":"int64","x-go-name":"SourceID"},"username":{"type":"string","x-go-name":"Username"},"visibility":{"type":"string","x-go-name":"Visibility"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"CreateWikiPageOptions":{"description":"CreateWikiPageOptions form for creating wiki","type":"object","properties":{"content_base64":{"description":"content must be base64 encoded","type":"string","x-go-name":"ContentBase64"},"message":{"description":"optional commit message summarizing the change","type":"string","x-go-name":"Message"},"title":{"description":"page title. leave empty to keep unchanged","type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Cron":{"description":"Cron represents a Cron task","type":"object","properties":{"exec_times":{"type":"integer","format":"int64","x-go-name":"ExecTimes"},"name":{"type":"string","x-go-name":"Name"},"next":{"type":"string","format":"date-time","x-go-name":"Next"},"prev":{"type":"string","format":"date-time","x-go-name":"Prev"},"schedule":{"type":"string","x-go-name":"Schedule"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeleteEmailOption":{"description":"DeleteEmailOption options when deleting email addresses","type":"object","properties":{"emails":{"description":"email addresses to delete","type":"array","items":{"type":"string"},"x-go-name":"Emails"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeleteFileOptions":{"description":"DeleteFileOptions options for deleting files (used for other File structs below)\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["sha"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"sha":{"description":"sha is the SHA for the file that already exists","type":"string","x-go-name":"SHA"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DeployKey":{"description":"DeployKey a deploy key","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"fingerprint":{"type":"string","x-go-name":"Fingerprint"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key":{"type":"string","x-go-name":"Key"},"key_id":{"type":"integer","format":"int64","x-go-name":"KeyID"},"read_only":{"type":"boolean","x-go-name":"ReadOnly"},"repository":{"$ref":"#/components/schemas/Repository"},"title":{"type":"string","x-go-name":"Title"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"DismissPullReviewOptions":{"description":"DismissPullReviewOptions are options to dismiss a pull review","type":"object","properties":{"message":{"type":"string","x-go-name":"Message"},"priors":{"type":"boolean","x-go-name":"Priors"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditAttachmentOptions":{"description":"EditAttachmentOptions options for editing attachments","type":"object","properties":{"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditBranchProtectionOption":{"description":"EditBranchProtectionOption options for editing a branch protection","type":"object","properties":{"approvals_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistTeams"},"approvals_whitelist_username":{"type":"array","items":{"type":"string"},"x-go-name":"ApprovalsWhitelistUsernames"},"block_on_official_review_requests":{"type":"boolean","x-go-name":"BlockOnOfficialReviewRequests"},"block_on_outdated_branch":{"type":"boolean","x-go-name":"BlockOnOutdatedBranch"},"block_on_rejected_reviews":{"type":"boolean","x-go-name":"BlockOnRejectedReviews"},"dismiss_stale_approvals":{"type":"boolean","x-go-name":"DismissStaleApprovals"},"enable_approvals_whitelist":{"type":"boolean","x-go-name":"EnableApprovalsWhitelist"},"enable_merge_whitelist":{"type":"boolean","x-go-name":"EnableMergeWhitelist"},"enable_push":{"type":"boolean","x-go-name":"EnablePush"},"enable_push_whitelist":{"type":"boolean","x-go-name":"EnablePushWhitelist"},"enable_status_check":{"type":"boolean","x-go-name":"EnableStatusCheck"},"merge_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistTeams"},"merge_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"MergeWhitelistUsernames"},"protected_file_patterns":{"type":"string","x-go-name":"ProtectedFilePatterns"},"push_whitelist_deploy_keys":{"type":"boolean","x-go-name":"PushWhitelistDeployKeys"},"push_whitelist_teams":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistTeams"},"push_whitelist_usernames":{"type":"array","items":{"type":"string"},"x-go-name":"PushWhitelistUsernames"},"require_signed_commits":{"type":"boolean","x-go-name":"RequireSignedCommits"},"required_approvals":{"type":"integer","format":"int64","x-go-name":"RequiredApprovals"},"status_check_contexts":{"type":"array","items":{"type":"string"},"x-go-name":"StatusCheckContexts"},"unprotected_file_patterns":{"type":"string","x-go-name":"UnprotectedFilePatterns"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditDeadlineOption":{"description":"EditDeadlineOption options for creating a deadline","type":"object","required":["due_date"],"properties":{"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditGitHookOption":{"description":"EditGitHookOption options when modifying one Git hook","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditHookOption":{"description":"EditHookOption options when modify one hook","type":"object","properties":{"active":{"type":"boolean","x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"branch_filter":{"type":"string","x-go-name":"BranchFilter"},"config":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"Config"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditIssueCommentOption":{"description":"EditIssueCommentOption options for editing a comment","type":"object","required":["body"],"properties":{"body":{"type":"string","x-go-name":"Body"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditIssueOption":{"description":"EditIssueOption options for editing an issue","type":"object","properties":{"assignee":{"description":"deprecated","type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"ref":{"type":"string","x-go-name":"Ref"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"},"unset_due_date":{"type":"boolean","x-go-name":"RemoveDeadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditLabelOption":{"description":"EditLabelOption options for editing a label","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"#00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditMilestoneOption":{"description":"EditMilestoneOption options for editing a milestone","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditOrgOption":{"description":"EditOrgOption options for editing an organization","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"visibility":{"description":"possible values are `public`, `limited` or `private`","type":"string","enum":["public","limited","private"],"x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditPullRequestOption":{"description":"EditPullRequestOption options when modify pull request","type":"object","properties":{"allow_maintainer_edit":{"type":"boolean","x-go-name":"AllowMaintainerEdit"},"assignee":{"type":"string","x-go-name":"Assignee"},"assignees":{"type":"array","items":{"type":"string"},"x-go-name":"Assignees"},"base":{"type":"string","x-go-name":"Base"},"body":{"type":"string","x-go-name":"Body"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"labels":{"type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"},"milestone":{"type":"integer","format":"int64","x-go-name":"Milestone"},"state":{"type":"string","x-go-name":"State"},"title":{"type":"string","x-go-name":"Title"},"unset_due_date":{"type":"boolean","x-go-name":"RemoveDeadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditReactionOption":{"description":"EditReactionOption contain the reaction type","type":"object","properties":{"content":{"type":"string","x-go-name":"Reaction"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditReleaseOption":{"description":"EditReleaseOption options when editing a release","type":"object","properties":{"body":{"type":"string","x-go-name":"Note"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"tag_name":{"type":"string","x-go-name":"TagName"},"target_commitish":{"type":"string","x-go-name":"Target"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditRepoOption":{"description":"EditRepoOption options when editing a repository\'s properties","type":"object","properties":{"allow_manual_merge":{"description":"either `true` to allow mark pr as merged manually, or `false` to prevent it.","type":"boolean","x-go-name":"AllowManualMerge"},"allow_merge_commits":{"description":"either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.","type":"boolean","x-go-name":"AllowMerge"},"allow_rebase":{"description":"either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.","type":"boolean","x-go-name":"AllowRebase"},"allow_rebase_explicit":{"description":"either `true` to allow rebase with explicit merge commits (--no-ff), or `false` to prevent rebase with explicit merge commits.","type":"boolean","x-go-name":"AllowRebaseMerge"},"allow_rebase_update":{"description":"either `true` to allow updating pull request branch by rebase, or `false` to prevent it.","type":"boolean","x-go-name":"AllowRebaseUpdate"},"allow_squash_merge":{"description":"either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.","type":"boolean","x-go-name":"AllowSquash"},"archived":{"description":"set to `true` to archive this repository.","type":"boolean","x-go-name":"Archived"},"autodetect_manual_merge":{"description":"either `true` to enable AutodetectManualMerge, or `false` to prevent it. Note: In some special cases, misjudgments can occur.","type":"boolean","x-go-name":"AutodetectManualMerge"},"default_allow_maintainer_edit":{"description":"set to `true` to allow edits from maintainers by default","type":"boolean","x-go-name":"DefaultAllowMaintainerEdit"},"default_branch":{"description":"sets the default branch for this repository.","type":"string","x-go-name":"DefaultBranch"},"default_delete_branch_after_merge":{"description":"set to `true` to delete pr branch after merge by default","type":"boolean","x-go-name":"DefaultDeleteBranchAfterMerge"},"default_merge_style":{"description":"set to a merge style to be used by this repository: \\"merge\\", \\"rebase\\", \\"rebase-merge\\", or \\"squash\\".","type":"string","x-go-name":"DefaultMergeStyle"},"description":{"description":"a short description of the repository.","type":"string","x-go-name":"Description"},"enable_prune":{"description":"enable prune - remove obsolete remote-tracking references","type":"boolean","x-go-name":"EnablePrune"},"external_tracker":{"$ref":"#/components/schemas/ExternalTracker"},"external_wiki":{"$ref":"#/components/schemas/ExternalWiki"},"has_issues":{"description":"either `true` to enable issues for this repository or `false` to disable them.","type":"boolean","x-go-name":"HasIssues"},"has_projects":{"description":"either `true` to enable project unit, or `false` to disable them.","type":"boolean","x-go-name":"HasProjects"},"has_pull_requests":{"description":"either `true` to allow pull requests, or `false` to prevent pull request.","type":"boolean","x-go-name":"HasPullRequests"},"has_wiki":{"description":"either `true` to enable the wiki for this repository or `false` to disable it.","type":"boolean","x-go-name":"HasWiki"},"ignore_whitespace_conflicts":{"description":"either `true` to ignore whitespace for conflicts, or `false` to not ignore whitespace.","type":"boolean","x-go-name":"IgnoreWhitespaceConflicts"},"internal_tracker":{"$ref":"#/components/schemas/InternalTracker"},"mirror_interval":{"description":"set to a string like `8h30m0s` to set the mirror interval time","type":"string","x-go-name":"MirrorInterval"},"name":{"description":"name of the repository","type":"string","uniqueItems":true,"x-go-name":"Name"},"private":{"description":"either `true` to make the repository private or `false` to make it public.\\nNote: you will get a 422 error if the organization restricts changing repository visibility to organization\\nowners and a non-owner tries to change the value of private.","type":"boolean","x-go-name":"Private"},"template":{"description":"either `true` to make this repository a template or `false` to make it a normal repository","type":"boolean","x-go-name":"Template"},"website":{"description":"a URL with more information about the repository.","type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditTeamOption":{"description":"EditTeamOption options for editing a team","type":"object","required":["name"],"properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"permission":{"type":"string","enum":["read","write","admin"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":{"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"EditUserOption":{"description":"EditUserOption edit user options","type":"object","required":["source_id","login_name"],"properties":{"active":{"type":"boolean","x-go-name":"Active"},"admin":{"type":"boolean","x-go-name":"Admin"},"allow_create_organization":{"type":"boolean","x-go-name":"AllowCreateOrganization"},"allow_git_hook":{"type":"boolean","x-go-name":"AllowGitHook"},"allow_import_local":{"type":"boolean","x-go-name":"AllowImportLocal"},"description":{"type":"string","x-go-name":"Description"},"email":{"type":"string","format":"email","x-go-name":"Email"},"full_name":{"type":"string","x-go-name":"FullName"},"location":{"type":"string","x-go-name":"Location"},"login_name":{"type":"string","x-go-name":"LoginName"},"max_repo_creation":{"type":"integer","format":"int64","x-go-name":"MaxRepoCreation"},"must_change_password":{"type":"boolean","x-go-name":"MustChangePassword"},"password":{"type":"string","x-go-name":"Password"},"prohibit_login":{"type":"boolean","x-go-name":"ProhibitLogin"},"restricted":{"type":"boolean","x-go-name":"Restricted"},"source_id":{"type":"integer","format":"int64","x-go-name":"SourceID"},"visibility":{"type":"string","x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Email":{"description":"Email an email address belonging to a user","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"primary":{"type":"boolean","x-go-name":"Primary"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ExternalTracker":{"description":"ExternalTracker represents settings for external tracker","type":"object","properties":{"external_tracker_format":{"description":"External Issue Tracker URL Format. Use the placeholders {user}, {repo} and {index} for the username, repository name and issue index.","type":"string","x-go-name":"ExternalTrackerFormat"},"external_tracker_regexp_pattern":{"description":"External Issue Tracker issue regular expression","type":"string","x-go-name":"ExternalTrackerRegexpPattern"},"external_tracker_style":{"description":"External Issue Tracker Number Format, either `numeric`, `alphanumeric`, or `regexp`","type":"string","x-go-name":"ExternalTrackerStyle"},"external_tracker_url":{"description":"URL of external issue tracker.","type":"string","x-go-name":"ExternalTrackerURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ExternalWiki":{"description":"ExternalWiki represents setting for external wiki","type":"object","properties":{"external_wiki_url":{"description":"URL of external wiki.","type":"string","x-go-name":"ExternalWikiURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileCommitResponse":{"type":"object","title":"FileCommitResponse contains information generated from a Git commit for a repo\'s file.","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"committer":{"$ref":"#/components/schemas/CommitUser"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"message":{"type":"string","x-go-name":"Message"},"parents":{"type":"array","items":{"$ref":"#/components/schemas/CommitMeta"},"x-go-name":"Parents"},"sha":{"type":"string","x-go-name":"SHA"},"tree":{"$ref":"#/components/schemas/CommitMeta"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileDeleteResponse":{"description":"FileDeleteResponse contains information about a repo\'s file that was deleted","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"content":{"x-go-name":"Content"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileLinksResponse":{"description":"FileLinksResponse contains the links for a repo\'s file","type":"object","properties":{"git":{"type":"string","x-go-name":"GitURL"},"html":{"type":"string","x-go-name":"HTMLURL"},"self":{"type":"string","x-go-name":"Self"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"FileResponse":{"description":"FileResponse contains information about a repo\'s file","type":"object","properties":{"commit":{"$ref":"#/components/schemas/FileCommitResponse"},"content":{"$ref":"#/components/schemas/ContentsResponse"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GPGKey":{"description":"GPGKey a user GPG key to sign commit and tag in repository","type":"object","properties":{"can_certify":{"type":"boolean","x-go-name":"CanCertify"},"can_encrypt_comms":{"type":"boolean","x-go-name":"CanEncryptComms"},"can_encrypt_storage":{"type":"boolean","x-go-name":"CanEncryptStorage"},"can_sign":{"type":"boolean","x-go-name":"CanSign"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"emails":{"type":"array","items":{"$ref":"#/components/schemas/GPGKeyEmail"},"x-go-name":"Emails"},"expires_at":{"type":"string","format":"date-time","x-go-name":"Expires"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key_id":{"type":"string","x-go-name":"KeyID"},"primary_key_id":{"type":"string","x-go-name":"PrimaryKeyID"},"public_key":{"type":"string","x-go-name":"PublicKey"},"subkeys":{"type":"array","items":{"$ref":"#/components/schemas/GPGKey"},"x-go-name":"SubsKey"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GPGKeyEmail":{"description":"GPGKeyEmail an email attached to a GPGKey","type":"object","properties":{"email":{"type":"string","x-go-name":"Email"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralAPISettings":{"description":"GeneralAPISettings contains global api settings exposed by it","type":"object","properties":{"default_git_trees_per_page":{"type":"integer","format":"int64","x-go-name":"DefaultGitTreesPerPage"},"default_max_blob_size":{"type":"integer","format":"int64","x-go-name":"DefaultMaxBlobSize"},"default_paging_num":{"type":"integer","format":"int64","x-go-name":"DefaultPagingNum"},"max_response_items":{"type":"integer","format":"int64","x-go-name":"MaxResponseItems"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralAttachmentSettings":{"description":"GeneralAttachmentSettings contains global Attachment settings exposed by API","type":"object","properties":{"allowed_types":{"type":"string","x-go-name":"AllowedTypes"},"enabled":{"type":"boolean","x-go-name":"Enabled"},"max_files":{"type":"integer","format":"int64","x-go-name":"MaxFiles"},"max_size":{"type":"integer","format":"int64","x-go-name":"MaxSize"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralRepoSettings":{"description":"GeneralRepoSettings contains global repository settings exposed by API","type":"object","properties":{"http_git_disabled":{"type":"boolean","x-go-name":"HTTPGitDisabled"},"lfs_disabled":{"type":"boolean","x-go-name":"LFSDisabled"},"migrations_disabled":{"type":"boolean","x-go-name":"MigrationsDisabled"},"mirrors_disabled":{"type":"boolean","x-go-name":"MirrorsDisabled"},"stars_disabled":{"type":"boolean","x-go-name":"StarsDisabled"},"time_tracking_disabled":{"type":"boolean","x-go-name":"TimeTrackingDisabled"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GeneralUISettings":{"description":"GeneralUISettings contains global ui settings exposed by API","type":"object","properties":{"allowed_reactions":{"type":"array","items":{"type":"string"},"x-go-name":"AllowedReactions"},"custom_emojis":{"type":"array","items":{"type":"string"},"x-go-name":"CustomEmojis"},"default_theme":{"type":"string","x-go-name":"DefaultTheme"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GenerateRepoOption":{"description":"GenerateRepoOption options when creating repository using a template","type":"object","required":["owner","name"],"properties":{"avatar":{"description":"include avatar of the template repo","type":"boolean","x-go-name":"Avatar"},"default_branch":{"description":"Default branch of the new repository","type":"string","x-go-name":"DefaultBranch"},"description":{"description":"Description of the repository to create","type":"string","x-go-name":"Description"},"git_content":{"description":"include git content of default branch in template repo","type":"boolean","x-go-name":"GitContent"},"git_hooks":{"description":"include git hooks in template repo","type":"boolean","x-go-name":"GitHooks"},"labels":{"description":"include labels in template repo","type":"boolean","x-go-name":"Labels"},"name":{"description":"Name of the repository to create","type":"string","uniqueItems":true,"x-go-name":"Name"},"owner":{"description":"The organization or person who will own the new repository","type":"string","x-go-name":"Owner"},"private":{"description":"Whether the repository is private","type":"boolean","x-go-name":"Private"},"topics":{"description":"include topics in template repo","type":"boolean","x-go-name":"Topics"},"webhooks":{"description":"include webhooks in template repo","type":"boolean","x-go-name":"Webhooks"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitBlobResponse":{"description":"GitBlobResponse represents a git blob","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"},"encoding":{"type":"string","x-go-name":"Encoding"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitEntry":{"description":"GitEntry represents a git tree","type":"object","properties":{"mode":{"type":"string","x-go-name":"Mode"},"path":{"type":"string","x-go-name":"Path"},"sha":{"type":"string","x-go-name":"SHA"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitHook":{"description":"GitHook represents a Git repository hook","type":"object","properties":{"content":{"type":"string","x-go-name":"Content"},"is_active":{"type":"boolean","x-go-name":"IsActive"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitObject":{"type":"object","title":"GitObject represents a Git object.","properties":{"sha":{"type":"string","x-go-name":"SHA"},"type":{"type":"string","x-go-name":"Type"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"GitTreeResponse":{"description":"GitTreeResponse returns a git tree","type":"object","properties":{"page":{"type":"integer","format":"int64","x-go-name":"Page"},"sha":{"type":"string","x-go-name":"SHA"},"total_count":{"type":"integer","format":"int64","x-go-name":"TotalCount"},"tree":{"type":"array","items":{"$ref":"#/components/schemas/GitEntry"},"x-go-name":"Entries"},"truncated":{"type":"boolean","x-go-name":"Truncated"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Hook":{"description":"Hook a hook is a web hook when one repository changed","type":"object","properties":{"active":{"type":"boolean","x-go-name":"Active"},"authorization_header":{"type":"string","x-go-name":"AuthorizationHeader"},"config":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"Config"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"events":{"type":"array","items":{"type":"string"},"x-go-name":"Events"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"type":{"type":"string","x-go-name":"Type"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Identity":{"description":"Identity for a person\'s identity like an author or committer","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"type":"string","x-go-name":"Name"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"InternalTracker":{"description":"InternalTracker represents settings for internal tracker","type":"object","properties":{"allow_only_contributors_to_track_time":{"description":"Let only contributors track time (Built-in issue tracker)","type":"boolean","x-go-name":"AllowOnlyContributorsToTrackTime"},"enable_issue_dependencies":{"description":"Enable dependencies for issues and pull requests (Built-in issue tracker)","type":"boolean","x-go-name":"EnableIssueDependencies"},"enable_time_tracker":{"description":"Enable time tracking (Built-in issue tracker)","type":"boolean","x-go-name":"EnableTimeTracker"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Issue":{"description":"Issue represents an issue in a repository","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"assignee":{"$ref":"#/components/schemas/User"},"assignees":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"Assignees"},"body":{"type":"string","x-go-name":"Body"},"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"comments":{"type":"integer","format":"int64","x-go-name":"Comments"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_locked":{"type":"boolean","x-go-name":"IsLocked"},"labels":{"type":"array","items":{"$ref":"#/components/schemas/Label"},"x-go-name":"Labels"},"milestone":{"$ref":"#/components/schemas/Milestone"},"number":{"type":"integer","format":"int64","x-go-name":"Index"},"original_author":{"type":"string","x-go-name":"OriginalAuthor"},"original_author_id":{"type":"integer","format":"int64","x-go-name":"OriginalAuthorID"},"pull_request":{"$ref":"#/components/schemas/PullRequestMeta"},"ref":{"type":"string","x-go-name":"Ref"},"repository":{"$ref":"#/components/schemas/RepositoryMeta"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueDeadline":{"description":"IssueDeadline represents an issue deadline","type":"object","properties":{"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueFormField":{"description":"IssueFormField represents a form field","type":"object","properties":{"attributes":{"type":"object","additionalProperties":{},"x-go-name":"Attributes"},"id":{"type":"string","x-go-name":"ID"},"type":{"$ref":"#/components/schemas/IssueFormFieldType"},"validations":{"type":"object","additionalProperties":{},"x-go-name":"Validations"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueFormFieldType":{"type":"string","title":"IssueFormFieldType defines issue form field type, can be \\"markdown\\", \\"textarea\\", \\"input\\", \\"dropdown\\" or \\"checkboxes\\"","x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueLabelsOption":{"description":"IssueLabelsOption a collection of labels","type":"object","properties":{"labels":{"description":"list of label IDs","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"Labels"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueTemplate":{"description":"IssueTemplate represents an issue template for a repository","type":"object","properties":{"about":{"type":"string","x-go-name":"About"},"body":{"type":"array","items":{"$ref":"#/components/schemas/IssueFormField"},"x-go-name":"Fields"},"content":{"type":"string","x-go-name":"Content"},"file_name":{"type":"string","x-go-name":"FileName"},"labels":{"$ref":"#/components/schemas/IssueTemplateLabels"},"name":{"type":"string","x-go-name":"Name"},"ref":{"type":"string","x-go-name":"Ref"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"IssueTemplateLabels":{"type":"array","items":{"type":"string"},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Label":{"description":"Label a label to an issue or a pr","type":"object","properties":{"color":{"type":"string","x-go-name":"Color","example":"00aabb"},"description":{"type":"string","x-go-name":"Description"},"exclusive":{"type":"boolean","x-go-name":"Exclusive","example":false},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MarkdownOption":{"description":"MarkdownOption markdown options","type":"object","properties":{"Context":{"description":"Context to render\\n\\nin: body","type":"string"},"Mode":{"description":"Mode to render\\n\\nin: body","type":"string"},"Text":{"description":"Text markdown to render\\n\\nin: body","type":"string"},"Wiki":{"description":"Is it a wiki page ?\\n\\nin: body","type":"boolean"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"MergePullRequestOption":{"description":"MergePullRequestForm form for merging Pull Request","type":"object","required":["Do"],"properties":{"Do":{"type":"string","enum":["merge","rebase","rebase-merge","squash","manually-merged"]},"MergeCommitID":{"type":"string"},"MergeMessageField":{"type":"string"},"MergeTitleField":{"type":"string"},"delete_branch_after_merge":{"type":"boolean","x-go-name":"DeleteBranchAfterMerge"},"force_merge":{"type":"boolean","x-go-name":"ForceMerge"},"head_commit_id":{"type":"string","x-go-name":"HeadCommitID"},"merge_when_checks_succeed":{"type":"boolean","x-go-name":"MergeWhenChecksSucceed"}},"x-go-name":"MergePullRequestForm","x-go-package":"code.gitea.io/gitea/services/forms"},"MigrateRepoOptions":{"description":"MigrateRepoOptions options for migrating repository\'s\\nthis is used to interact with api v1","type":"object","required":["clone_addr","repo_name"],"properties":{"auth_password":{"type":"string","x-go-name":"AuthPassword"},"auth_token":{"type":"string","x-go-name":"AuthToken"},"auth_username":{"type":"string","x-go-name":"AuthUsername"},"clone_addr":{"type":"string","x-go-name":"CloneAddr"},"description":{"type":"string","x-go-name":"Description"},"issues":{"type":"boolean","x-go-name":"Issues"},"labels":{"type":"boolean","x-go-name":"Labels"},"lfs":{"type":"boolean","x-go-name":"LFS"},"lfs_endpoint":{"type":"string","x-go-name":"LFSEndpoint"},"milestones":{"type":"boolean","x-go-name":"Milestones"},"mirror":{"type":"boolean","x-go-name":"Mirror"},"mirror_interval":{"type":"string","x-go-name":"MirrorInterval"},"private":{"type":"boolean","x-go-name":"Private"},"pull_requests":{"type":"boolean","x-go-name":"PullRequests"},"releases":{"type":"boolean","x-go-name":"Releases"},"repo_name":{"type":"string","x-go-name":"RepoName"},"repo_owner":{"description":"Name of User or Organisation who will own Repo after migration","type":"string","x-go-name":"RepoOwner"},"service":{"type":"string","enum":["git","github","gitea","gitlab","gogs","onedev","gitbucket","codebase"],"x-go-name":"Service"},"uid":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"RepoOwnerID"},"wiki":{"type":"boolean","x-go-name":"Wiki"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Milestone":{"description":"Milestone milestone is a collection of issues on one repository","type":"object","properties":{"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"closed_issues":{"type":"integer","format":"int64","x-go-name":"ClosedIssues"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"description":{"type":"string","x-go-name":"Description"},"due_on":{"type":"string","format":"date-time","x-go-name":"Deadline"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"open_issues":{"type":"integer","format":"int64","x-go-name":"OpenIssues"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfo":{"description":"NodeInfo contains standardized way of exposing metadata about a server running one of the distributed social networks","type":"object","properties":{"metadata":{"type":"object","x-go-name":"Metadata"},"openRegistrations":{"type":"boolean","x-go-name":"OpenRegistrations"},"protocols":{"type":"array","items":{"type":"string"},"x-go-name":"Protocols"},"services":{"$ref":"#/components/schemas/NodeInfoServices"},"software":{"$ref":"#/components/schemas/NodeInfoSoftware"},"usage":{"$ref":"#/components/schemas/NodeInfoUsage"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoServices":{"description":"NodeInfoServices contains the third party sites this server can connect to via their application API","type":"object","properties":{"inbound":{"type":"array","items":{"type":"string"},"x-go-name":"Inbound"},"outbound":{"type":"array","items":{"type":"string"},"x-go-name":"Outbound"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoSoftware":{"description":"NodeInfoSoftware contains Metadata about server software in use","type":"object","properties":{"homepage":{"type":"string","x-go-name":"Homepage"},"name":{"type":"string","x-go-name":"Name"},"repository":{"type":"string","x-go-name":"Repository"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoUsage":{"description":"NodeInfoUsage contains usage statistics for this server","type":"object","properties":{"localComments":{"type":"integer","format":"int64","x-go-name":"LocalComments"},"localPosts":{"type":"integer","format":"int64","x-go-name":"LocalPosts"},"users":{"$ref":"#/components/schemas/NodeInfoUsageUsers"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NodeInfoUsageUsers":{"description":"NodeInfoUsageUsers contains statistics about the users of this server","type":"object","properties":{"activeHalfyear":{"type":"integer","format":"int64","x-go-name":"ActiveHalfyear"},"activeMonth":{"type":"integer","format":"int64","x-go-name":"ActiveMonth"},"total":{"type":"integer","format":"int64","x-go-name":"Total"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Note":{"description":"Note contains information related to a git note","type":"object","properties":{"commit":{"$ref":"#/components/schemas/Commit"},"message":{"type":"string","x-go-name":"Message"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationCount":{"description":"NotificationCount number of unread notifications","type":"object","properties":{"new":{"type":"integer","format":"int64","x-go-name":"New"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationSubject":{"description":"NotificationSubject contains the notification subject (Issue/Pull/Commit)","type":"object","properties":{"html_url":{"type":"string","x-go-name":"HTMLURL"},"latest_comment_html_url":{"type":"string","x-go-name":"LatestCommentHTMLURL"},"latest_comment_url":{"type":"string","x-go-name":"LatestCommentURL"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"type":{"$ref":"#/components/schemas/NotifySubjectType"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotificationThread":{"description":"NotificationThread expose Notification on API","type":"object","properties":{"id":{"type":"integer","format":"int64","x-go-name":"ID"},"pinned":{"type":"boolean","x-go-name":"Pinned"},"repository":{"$ref":"#/components/schemas/Repository"},"subject":{"$ref":"#/components/schemas/NotificationSubject"},"unread":{"type":"boolean","x-go-name":"Unread"},"updated_at":{"type":"string","format":"date-time","x-go-name":"UpdatedAt"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"NotifySubjectType":{"description":"NotifySubjectType represent type of notification subject","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"OAuth2Application":{"type":"object","title":"OAuth2Application represents an OAuth2 application.","properties":{"client_id":{"type":"string","x-go-name":"ClientID"},"client_secret":{"type":"string","x-go-name":"ClientSecret"},"confidential_client":{"type":"boolean","x-go-name":"ConfidentialClient"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"redirect_uris":{"type":"array","items":{"type":"string"},"x-go-name":"RedirectURIs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Organization":{"description":"Organization represents an organization","type":"object","properties":{"avatar_url":{"type":"string","x-go-name":"AvatarURL"},"description":{"type":"string","x-go-name":"Description"},"full_name":{"type":"string","x-go-name":"FullName"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"location":{"type":"string","x-go-name":"Location"},"name":{"type":"string","x-go-name":"Name"},"repo_admin_change_team_access":{"type":"boolean","x-go-name":"RepoAdminChangeTeamAccess"},"username":{"description":"deprecated","type":"string","x-go-name":"UserName"},"visibility":{"type":"string","x-go-name":"Visibility"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"OrganizationPermissions":{"description":"OrganizationPermissions list different users permissions on an organization","type":"object","properties":{"can_create_repository":{"type":"boolean","x-go-name":"CanCreateRepository"},"can_read":{"type":"boolean","x-go-name":"CanRead"},"can_write":{"type":"boolean","x-go-name":"CanWrite"},"is_admin":{"type":"boolean","x-go-name":"IsAdmin"},"is_owner":{"type":"boolean","x-go-name":"IsOwner"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PRBranchInfo":{"description":"PRBranchInfo information about a branch","type":"object","properties":{"label":{"type":"string","x-go-name":"Name"},"ref":{"type":"string","x-go-name":"Ref"},"repo":{"$ref":"#/components/schemas/Repository"},"repo_id":{"type":"integer","format":"int64","x-go-name":"RepoID"},"sha":{"type":"string","x-go-name":"Sha"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Package":{"description":"Package represents a package","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"creator":{"$ref":"#/components/schemas/User"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"owner":{"$ref":"#/components/schemas/User"},"repository":{"$ref":"#/components/schemas/Repository"},"type":{"type":"string","x-go-name":"Type"},"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PackageFile":{"description":"PackageFile represents a package file","type":"object","properties":{"Size":{"type":"integer","format":"int64"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"md5":{"type":"string","x-go-name":"HashMD5"},"name":{"type":"string","x-go-name":"Name"},"sha1":{"type":"string","x-go-name":"HashSHA1"},"sha256":{"type":"string","x-go-name":"HashSHA256"},"sha512":{"type":"string","x-go-name":"HashSHA512"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadCommit":{"description":"PayloadCommit represents a commit","type":"object","properties":{"added":{"type":"array","items":{"type":"string"},"x-go-name":"Added"},"author":{"$ref":"#/components/schemas/PayloadUser"},"committer":{"$ref":"#/components/schemas/PayloadUser"},"id":{"description":"sha1 hash of the commit","type":"string","x-go-name":"ID"},"message":{"type":"string","x-go-name":"Message"},"modified":{"type":"array","items":{"type":"string"},"x-go-name":"Modified"},"removed":{"type":"array","items":{"type":"string"},"x-go-name":"Removed"},"timestamp":{"type":"string","format":"date-time","x-go-name":"Timestamp"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadCommitVerification":{"description":"PayloadCommitVerification represents the GPG verification of a commit","type":"object","properties":{"payload":{"type":"string","x-go-name":"Payload"},"reason":{"type":"string","x-go-name":"Reason"},"signature":{"type":"string","x-go-name":"Signature"},"signer":{"$ref":"#/components/schemas/PayloadUser"},"verified":{"type":"boolean","x-go-name":"Verified"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PayloadUser":{"description":"PayloadUser represents the author or committer of a commit","type":"object","properties":{"email":{"type":"string","format":"email","x-go-name":"Email"},"name":{"description":"Full name of the commit author","type":"string","x-go-name":"Name"},"username":{"type":"string","x-go-name":"UserName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Permission":{"description":"Permission represents a set of permissions","type":"object","properties":{"admin":{"type":"boolean","x-go-name":"Admin"},"pull":{"type":"boolean","x-go-name":"Pull"},"push":{"type":"boolean","x-go-name":"Push"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PublicKey":{"description":"PublicKey publickey is a user key to push code to repository","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"fingerprint":{"type":"string","x-go-name":"Fingerprint"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"key":{"type":"string","x-go-name":"Key"},"key_type":{"type":"string","x-go-name":"KeyType"},"read_only":{"type":"boolean","x-go-name":"ReadOnly"},"title":{"type":"string","x-go-name":"Title"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullRequest":{"description":"PullRequest represents a pull request","type":"object","properties":{"allow_maintainer_edit":{"type":"boolean","x-go-name":"AllowMaintainerEdit"},"assignee":{"$ref":"#/components/schemas/User"},"assignees":{"type":"array","items":{"$ref":"#/components/schemas/User"},"x-go-name":"Assignees"},"base":{"$ref":"#/components/schemas/PRBranchInfo"},"body":{"type":"string","x-go-name":"Body"},"closed_at":{"type":"string","format":"date-time","x-go-name":"Closed"},"comments":{"type":"integer","format":"int64","x-go-name":"Comments"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"diff_url":{"type":"string","x-go-name":"DiffURL"},"due_date":{"type":"string","format":"date-time","x-go-name":"Deadline"},"head":{"$ref":"#/components/schemas/PRBranchInfo"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"is_locked":{"type":"boolean","x-go-name":"IsLocked"},"labels":{"type":"array","items":{"$ref":"#/components/schemas/Label"},"x-go-name":"Labels"},"merge_base":{"type":"string","x-go-name":"MergeBase"},"merge_commit_sha":{"type":"string","x-go-name":"MergedCommitID"},"mergeable":{"type":"boolean","x-go-name":"Mergeable"},"merged":{"type":"boolean","x-go-name":"HasMerged"},"merged_at":{"type":"string","format":"date-time","x-go-name":"Merged"},"merged_by":{"$ref":"#/components/schemas/User"},"milestone":{"$ref":"#/components/schemas/Milestone"},"number":{"type":"integer","format":"int64","x-go-name":"Index"},"patch_url":{"type":"string","x-go-name":"PatchURL"},"state":{"$ref":"#/components/schemas/StateType"},"title":{"type":"string","x-go-name":"Title"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"url":{"type":"string","x-go-name":"URL"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullRequestMeta":{"description":"PullRequestMeta PR info if an issue is a PR","type":"object","properties":{"merged":{"type":"boolean","x-go-name":"HasMerged"},"merged_at":{"type":"string","format":"date-time","x-go-name":"Merged"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReview":{"description":"PullReview represents a pull request review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"comments_count":{"type":"integer","format":"int64","x-go-name":"CodeCommentsCount"},"commit_id":{"type":"string","x-go-name":"CommitID"},"dismissed":{"type":"boolean","x-go-name":"Dismissed"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"official":{"type":"boolean","x-go-name":"Official"},"pull_request_url":{"type":"string","x-go-name":"HTMLPullURL"},"stale":{"type":"boolean","x-go-name":"Stale"},"state":{"$ref":"#/components/schemas/ReviewStateType"},"submitted_at":{"type":"string","format":"date-time","x-go-name":"Submitted"},"team":{"$ref":"#/components/schemas/Team"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReviewComment":{"description":"PullReviewComment represents a comment on a pull request review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"commit_id":{"type":"string","x-go-name":"CommitID"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"diff_hunk":{"type":"string","x-go-name":"DiffHunk"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"original_commit_id":{"type":"string","x-go-name":"OrigCommitID"},"original_position":{"type":"integer","format":"uint64","x-go-name":"OldLineNum"},"path":{"type":"string","x-go-name":"Path"},"position":{"type":"integer","format":"uint64","x-go-name":"LineNum"},"pull_request_review_id":{"type":"integer","format":"int64","x-go-name":"ReviewID"},"pull_request_url":{"type":"string","x-go-name":"HTMLPullURL"},"resolver":{"$ref":"#/components/schemas/User"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PullReviewRequestOptions":{"description":"PullReviewRequestOptions are options to add or remove pull review requests","type":"object","properties":{"reviewers":{"type":"array","items":{"type":"string"},"x-go-name":"Reviewers"},"team_reviewers":{"type":"array","items":{"type":"string"},"x-go-name":"TeamReviewers"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"PushMirror":{"description":"PushMirror represents information of a push mirror","type":"object","properties":{"created":{"type":"string","x-go-name":"CreatedUnix"},"interval":{"type":"string","x-go-name":"Interval"},"last_error":{"type":"string","x-go-name":"LastError"},"last_update":{"type":"string","x-go-name":"LastUpdateUnix"},"remote_address":{"type":"string","x-go-name":"RemoteAddress"},"remote_name":{"type":"string","x-go-name":"RemoteName"},"repo_name":{"type":"string","x-go-name":"RepoName"},"sync_on_commit":{"type":"boolean","x-go-name":"SyncOnCommit"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Reaction":{"description":"Reaction contain one reaction","type":"object","properties":{"content":{"type":"string","x-go-name":"Reaction"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Reference":{"type":"object","title":"Reference represents a Git reference.","properties":{"object":{"$ref":"#/components/schemas/GitObject"},"ref":{"type":"string","x-go-name":"Ref"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Release":{"description":"Release represents a repository release","type":"object","properties":{"assets":{"type":"array","items":{"$ref":"#/components/schemas/Attachment"},"x-go-name":"Attachments"},"author":{"$ref":"#/components/schemas/User"},"body":{"type":"string","x-go-name":"Note"},"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"draft":{"type":"boolean","x-go-name":"IsDraft"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Title"},"prerelease":{"type":"boolean","x-go-name":"IsPrerelease"},"published_at":{"type":"string","format":"date-time","x-go-name":"PublishedAt"},"tag_name":{"type":"string","x-go-name":"TagName"},"tarball_url":{"type":"string","x-go-name":"TarURL"},"target_commitish":{"type":"string","x-go-name":"Target"},"url":{"type":"string","x-go-name":"URL"},"zipball_url":{"type":"string","x-go-name":"ZipURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoCollaboratorPermission":{"description":"RepoCollaboratorPermission to get repository permission for a collaborator","type":"object","properties":{"permission":{"type":"string","x-go-name":"Permission"},"role_name":{"type":"string","x-go-name":"RoleName"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoCommit":{"type":"object","title":"RepoCommit contains information of a commit in the context of a repository.","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"committer":{"$ref":"#/components/schemas/CommitUser"},"message":{"type":"string","x-go-name":"Message"},"tree":{"$ref":"#/components/schemas/CommitMeta"},"url":{"type":"string","x-go-name":"URL"},"verification":{"$ref":"#/components/schemas/PayloadCommitVerification"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoTopicOptions":{"description":"RepoTopicOptions a collection of repo topic names","type":"object","properties":{"topics":{"description":"list of topic names","type":"array","items":{"type":"string"},"x-go-name":"Topics"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepoTransfer":{"description":"RepoTransfer represents a pending repo transfer","type":"object","properties":{"doer":{"$ref":"#/components/schemas/User"},"recipient":{"$ref":"#/components/schemas/User"},"teams":{"type":"array","items":{"$ref":"#/components/schemas/Team"},"x-go-name":"Teams"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Repository":{"description":"Repository represents a repository","type":"object","properties":{"allow_merge_commits":{"type":"boolean","x-go-name":"AllowMerge"},"allow_rebase":{"type":"boolean","x-go-name":"AllowRebase"},"allow_rebase_explicit":{"type":"boolean","x-go-name":"AllowRebaseMerge"},"allow_rebase_update":{"type":"boolean","x-go-name":"AllowRebaseUpdate"},"allow_squash_merge":{"type":"boolean","x-go-name":"AllowSquash"},"archived":{"type":"boolean","x-go-name":"Archived"},"avatar_url":{"type":"string","x-go-name":"AvatarURL"},"clone_url":{"type":"string","x-go-name":"CloneURL"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"default_allow_maintainer_edit":{"type":"boolean","x-go-name":"DefaultAllowMaintainerEdit"},"default_branch":{"type":"string","x-go-name":"DefaultBranch"},"default_delete_branch_after_merge":{"type":"boolean","x-go-name":"DefaultDeleteBranchAfterMerge"},"default_merge_style":{"type":"string","x-go-name":"DefaultMergeStyle"},"description":{"type":"string","x-go-name":"Description"},"empty":{"type":"boolean","x-go-name":"Empty"},"external_tracker":{"$ref":"#/components/schemas/ExternalTracker"},"external_wiki":{"$ref":"#/components/schemas/ExternalWiki"},"fork":{"type":"boolean","x-go-name":"Fork"},"forks_count":{"type":"integer","format":"int64","x-go-name":"Forks"},"full_name":{"type":"string","x-go-name":"FullName"},"has_issues":{"type":"boolean","x-go-name":"HasIssues"},"has_projects":{"type":"boolean","x-go-name":"HasProjects"},"has_pull_requests":{"type":"boolean","x-go-name":"HasPullRequests"},"has_wiki":{"type":"boolean","x-go-name":"HasWiki"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"ignore_whitespace_conflicts":{"type":"boolean","x-go-name":"IgnoreWhitespaceConflicts"},"internal":{"type":"boolean","x-go-name":"Internal"},"internal_tracker":{"$ref":"#/components/schemas/InternalTracker"},"language":{"type":"string","x-go-name":"Language"},"languages_url":{"type":"string","x-go-name":"LanguagesURL"},"link":{"type":"string","x-go-name":"Link"},"mirror":{"type":"boolean","x-go-name":"Mirror"},"mirror_interval":{"type":"string","x-go-name":"MirrorInterval"},"mirror_updated":{"type":"string","format":"date-time","x-go-name":"MirrorUpdated"},"name":{"type":"string","x-go-name":"Name"},"open_issues_count":{"type":"integer","format":"int64","x-go-name":"OpenIssues"},"open_pr_counter":{"type":"integer","format":"int64","x-go-name":"OpenPulls"},"original_url":{"type":"string","x-go-name":"OriginalURL"},"owner":{"$ref":"#/components/schemas/User"},"parent":{"$ref":"#/components/schemas/Repository"},"permissions":{"$ref":"#/components/schemas/Permission"},"private":{"type":"boolean","x-go-name":"Private"},"release_counter":{"type":"integer","format":"int64","x-go-name":"Releases"},"repo_transfer":{"$ref":"#/components/schemas/RepoTransfer"},"size":{"type":"integer","format":"int64","x-go-name":"Size"},"ssh_url":{"type":"string","x-go-name":"SSHURL"},"stars_count":{"type":"integer","format":"int64","x-go-name":"Stars"},"template":{"type":"boolean","x-go-name":"Template"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"watchers_count":{"type":"integer","format":"int64","x-go-name":"Watchers"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"RepositoryMeta":{"description":"RepositoryMeta basic repository information","type":"object","properties":{"full_name":{"type":"string","x-go-name":"FullName"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"name":{"type":"string","x-go-name":"Name"},"owner":{"type":"string","x-go-name":"Owner"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ReviewStateType":{"description":"ReviewStateType review state type","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"SearchResults":{"description":"SearchResults results of a successful search","type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Repository"},"x-go-name":"Data"},"ok":{"type":"boolean","x-go-name":"OK"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"ServerVersion":{"description":"ServerVersion wraps the version of the server","type":"object","properties":{"version":{"type":"string","x-go-name":"Version"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"StateType":{"description":"StateType issue state type","type":"string","x-go-package":"code.gitea.io/gitea/modules/structs"},"StopWatch":{"description":"StopWatch represent a running stopwatch","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"duration":{"type":"string","x-go-name":"Duration"},"issue_index":{"type":"integer","format":"int64","x-go-name":"IssueIndex"},"issue_title":{"type":"string","x-go-name":"IssueTitle"},"repo_name":{"type":"string","x-go-name":"RepoName"},"repo_owner_name":{"type":"string","x-go-name":"RepoOwnerName"},"seconds":{"type":"integer","format":"int64","x-go-name":"Seconds"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"SubmitPullReviewOptions":{"description":"SubmitPullReviewOptions are options to submit a pending pull review","type":"object","properties":{"body":{"type":"string","x-go-name":"Body"},"event":{"$ref":"#/components/schemas/ReviewStateType"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Tag":{"description":"Tag represents a repository tag","type":"object","properties":{"commit":{"$ref":"#/components/schemas/CommitMeta"},"id":{"type":"string","x-go-name":"ID"},"message":{"type":"string","x-go-name":"Message"},"name":{"type":"string","x-go-name":"Name"},"tarball_url":{"type":"string","x-go-name":"TarballURL"},"zipball_url":{"type":"string","x-go-name":"ZipballURL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"Team":{"description":"Team represents a team in an organization","type":"object","properties":{"can_create_org_repo":{"type":"boolean","x-go-name":"CanCreateOrgRepo"},"description":{"type":"string","x-go-name":"Description"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"includes_all_repositories":{"type":"boolean","x-go-name":"IncludesAllRepositories"},"name":{"type":"string","x-go-name":"Name"},"organization":{"$ref":"#/components/schemas/Organization"},"permission":{"type":"string","enum":["none","read","write","admin","owner"],"x-go-name":"Permission"},"units":{"type":"array","items":{"type":"string"},"x-go-name":"Units","example":["repo.code","repo.issues","repo.ext_issues","repo.wiki","repo.pulls","repo.releases","repo.projects","repo.ext_wiki"]},"units_map":{"type":"object","additionalProperties":{"type":"string"},"x-go-name":"UnitsMap","example":{"repo.code":"read","repo.ext_issues":"none","repo.ext_wiki":"none","repo.issues":"write","repo.projects":"none","repo.pulls":"owner","repo.releases":"none","repo.wiki":"admin"}}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TimeStamp":{"description":"TimeStamp defines a timestamp","type":"integer","format":"int64","x-go-package":"code.gitea.io/gitea/modules/timeutil"},"TimelineComment":{"description":"TimelineComment represents a timeline comment (comment of any type) on a commit or issue","type":"object","properties":{"assignee":{"$ref":"#/components/schemas/User"},"assignee_team":{"$ref":"#/components/schemas/Team"},"body":{"type":"string","x-go-name":"Body"},"created_at":{"type":"string","format":"date-time","x-go-name":"Created"},"dependent_issue":{"$ref":"#/components/schemas/Issue"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue_url":{"type":"string","x-go-name":"IssueURL"},"label":{"$ref":"#/components/schemas/Label"},"milestone":{"$ref":"#/components/schemas/Milestone"},"new_ref":{"type":"string","x-go-name":"NewRef"},"new_title":{"type":"string","x-go-name":"NewTitle"},"old_milestone":{"$ref":"#/components/schemas/Milestone"},"old_project_id":{"type":"integer","format":"int64","x-go-name":"OldProjectID"},"old_ref":{"type":"string","x-go-name":"OldRef"},"old_title":{"type":"string","x-go-name":"OldTitle"},"project_id":{"type":"integer","format":"int64","x-go-name":"ProjectID"},"pull_request_url":{"type":"string","x-go-name":"PRURL"},"ref_action":{"type":"string","x-go-name":"RefAction"},"ref_comment":{"$ref":"#/components/schemas/Comment"},"ref_commit_sha":{"description":"commit SHA where issue/PR was referenced","type":"string","x-go-name":"RefCommitSHA"},"ref_issue":{"$ref":"#/components/schemas/Issue"},"removed_assignee":{"description":"whether the assignees were removed or added","type":"boolean","x-go-name":"RemovedAssignee"},"resolve_doer":{"$ref":"#/components/schemas/User"},"review_id":{"type":"integer","format":"int64","x-go-name":"ReviewID"},"tracked_time":{"$ref":"#/components/schemas/TrackedTime"},"type":{"type":"string","x-go-name":"Type"},"updated_at":{"type":"string","format":"date-time","x-go-name":"Updated"},"user":{"$ref":"#/components/schemas/User"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TopicName":{"description":"TopicName a list of repo topic names","type":"object","properties":{"topics":{"type":"array","items":{"type":"string"},"x-go-name":"TopicNames"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TopicResponse":{"description":"TopicResponse for returning topics","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"repo_count":{"type":"integer","format":"int64","x-go-name":"RepoCount"},"topic_name":{"type":"string","x-go-name":"Name"},"updated":{"type":"string","format":"date-time","x-go-name":"Updated"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TrackedTime":{"description":"TrackedTime worked time for an issue / pr","type":"object","properties":{"created":{"type":"string","format":"date-time","x-go-name":"Created"},"id":{"type":"integer","format":"int64","x-go-name":"ID"},"issue":{"$ref":"#/components/schemas/Issue"},"issue_id":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"IssueID"},"time":{"description":"Time in seconds","type":"integer","format":"int64","x-go-name":"Time"},"user_id":{"description":"deprecated (only for backwards compatibility)","type":"integer","format":"int64","x-go-name":"UserID"},"user_name":{"type":"string","x-go-name":"UserName"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"TransferRepoOption":{"description":"TransferRepoOption options when transfer a repository\'s ownership","type":"object","required":["new_owner"],"properties":{"new_owner":{"type":"string","x-go-name":"NewOwner"},"team_ids":{"description":"ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.","type":"array","items":{"type":"integer","format":"int64"},"x-go-name":"TeamIDs"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UpdateFileOptions":{"description":"UpdateFileOptions options for updating files\\nNote: `author` and `committer` are optional (if only one is given, it will be used for the other, otherwise the authenticated user will be used)","type":"object","required":["sha","content"],"properties":{"author":{"$ref":"#/components/schemas/Identity"},"branch":{"description":"branch (optional) to base this file from. if not given, the default branch is used","type":"string","x-go-name":"BranchName"},"committer":{"$ref":"#/components/schemas/Identity"},"content":{"description":"content must be base64 encoded","type":"string","x-go-name":"Content"},"dates":{"$ref":"#/components/schemas/CommitDateOptions"},"from_path":{"description":"from_path (optional) is the path of the original file which will be moved/renamed to the path in the URL","type":"string","x-go-name":"FromPath"},"message":{"description":"message (optional) for the commit of this file. if not supplied, a default message will be used","type":"string","x-go-name":"Message"},"new_branch":{"description":"new_branch (optional) will make a new branch from `branch` before creating the file","type":"string","x-go-name":"NewBranchName"},"sha":{"description":"sha is the SHA for the file that already exists","type":"string","x-go-name":"SHA"},"signoff":{"description":"Add a Signed-off-by trailer by the committer at the end of the commit log message.","type":"boolean","x-go-name":"Signoff"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"User":{"description":"User represents a user","type":"object","properties":{"active":{"description":"Is user active","type":"boolean","x-go-name":"IsActive"},"avatar_url":{"description":"URL to the user\'s avatar","type":"string","x-go-name":"AvatarURL"},"created":{"type":"string","format":"date-time","x-go-name":"Created"},"description":{"description":"the user\'s description","type":"string","x-go-name":"Description"},"email":{"type":"string","format":"email","x-go-name":"Email"},"followers_count":{"description":"user counts","type":"integer","format":"int64","x-go-name":"Followers"},"following_count":{"type":"integer","format":"int64","x-go-name":"Following"},"full_name":{"description":"the user\'s full name","type":"string","x-go-name":"FullName"},"id":{"description":"the user\'s id","type":"integer","format":"int64","x-go-name":"ID"},"is_admin":{"description":"Is the user an administrator","type":"boolean","x-go-name":"IsAdmin"},"language":{"description":"User locale","type":"string","x-go-name":"Language"},"last_login":{"type":"string","format":"date-time","x-go-name":"LastLogin"},"location":{"description":"the user\'s location","type":"string","x-go-name":"Location"},"login":{"description":"the user\'s username","type":"string","x-go-name":"UserName"},"login_name":{"description":"the user\'s authentication sign-in name.","type":"string","default":"empty","x-go-name":"LoginName"},"prohibit_login":{"description":"Is user login prohibited","type":"boolean","x-go-name":"ProhibitLogin"},"restricted":{"description":"Is user restricted","type":"boolean","x-go-name":"Restricted"},"starred_repos_count":{"type":"integer","format":"int64","x-go-name":"StarredRepos"},"visibility":{"description":"User visibility level option: public, limited, private","type":"string","x-go-name":"Visibility"},"website":{"description":"the user\'s website","type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UserHeatmapData":{"description":"UserHeatmapData represents the data needed to create a heatmap","type":"object","properties":{"contributions":{"type":"integer","format":"int64","x-go-name":"Contributions"},"timestamp":{"$ref":"#/components/schemas/TimeStamp"}},"x-go-package":"code.gitea.io/gitea/models/activities"},"UserSettings":{"description":"UserSettings represents user settings","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"diff_view_style":{"type":"string","x-go-name":"DiffViewStyle"},"full_name":{"type":"string","x-go-name":"FullName"},"hide_activity":{"type":"boolean","x-go-name":"HideActivity"},"hide_email":{"description":"Privacy","type":"boolean","x-go-name":"HideEmail"},"language":{"type":"string","x-go-name":"Language"},"location":{"type":"string","x-go-name":"Location"},"theme":{"type":"string","x-go-name":"Theme"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"UserSettingsOptions":{"description":"UserSettingsOptions represents options to change user settings","type":"object","properties":{"description":{"type":"string","x-go-name":"Description"},"diff_view_style":{"type":"string","x-go-name":"DiffViewStyle"},"full_name":{"type":"string","x-go-name":"FullName"},"hide_activity":{"type":"boolean","x-go-name":"HideActivity"},"hide_email":{"description":"Privacy","type":"boolean","x-go-name":"HideEmail"},"language":{"type":"string","x-go-name":"Language"},"location":{"type":"string","x-go-name":"Location"},"theme":{"type":"string","x-go-name":"Theme"},"website":{"type":"string","x-go-name":"Website"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WatchInfo":{"description":"WatchInfo represents an API watch status of one repository","type":"object","properties":{"created_at":{"type":"string","format":"date-time","x-go-name":"CreatedAt"},"ignored":{"type":"boolean","x-go-name":"Ignored"},"reason":{"x-go-name":"Reason"},"repository_url":{"type":"string","x-go-name":"RepositoryURL"},"subscribed":{"type":"boolean","x-go-name":"Subscribed"},"url":{"type":"string","x-go-name":"URL"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiCommit":{"description":"WikiCommit page commit/revision","type":"object","properties":{"author":{"$ref":"#/components/schemas/CommitUser"},"commiter":{"$ref":"#/components/schemas/CommitUser"},"message":{"type":"string","x-go-name":"Message"},"sha":{"type":"string","x-go-name":"ID"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiCommitList":{"description":"WikiCommitList commit/revision list","type":"object","properties":{"commits":{"type":"array","items":{"$ref":"#/components/schemas/WikiCommit"},"x-go-name":"WikiCommits"},"count":{"type":"integer","format":"int64","x-go-name":"Count"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiPage":{"description":"WikiPage a wiki page","type":"object","properties":{"commit_count":{"type":"integer","format":"int64","x-go-name":"CommitCount"},"content_base64":{"description":"Page content, base64 encoded","type":"string","x-go-name":"ContentBase64"},"footer":{"type":"string","x-go-name":"Footer"},"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit":{"$ref":"#/components/schemas/WikiCommit"},"sidebar":{"type":"string","x-go-name":"Sidebar"},"sub_url":{"type":"string","x-go-name":"SubURL"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"},"WikiPageMetaData":{"description":"WikiPageMetaData wiki page meta information","type":"object","properties":{"html_url":{"type":"string","x-go-name":"HTMLURL"},"last_commit":{"$ref":"#/components/schemas/WikiCommit"},"sub_url":{"type":"string","x-go-name":"SubURL"},"title":{"type":"string","x-go-name":"Title"}},"x-go-package":"code.gitea.io/gitea/modules/structs"}}}}}},"docusaurus-theme-redoc":{"theme-redoc":{"lightTheme":{"typography":{"fontFamily":"var(--ifm-font-family-base)","fontSize":"var(--ifm-font-size-base)","lineHeight":"var(--ifm-line-height-base)","fontWeightLight":"var(--ifm-font-weight-light)","fontWeightRegular":"var(--ifm-font-weight-base)","fontWeightBold":"var(--ifm-font-weight-bold)","headings":{"fontFamily":"var(--ifm-heading-font-family)","fontWeight":"var(--ifm-heading-font-weight)","lineHeight":"var(--ifm-heading-line-height)"},"code":{"fontFamily":"var(--ifm-font-family-monospace)","lineHeight":"var(--ifm-pre-line-height)"}},"sidebar":{"width":"300px","backgroundColor":"#ffffff"},"rightPanel":{"backgroundColor":"#303846"},"colors":{"primary":{"main":"#1890ff"}},"theme":{"prism":{"additionalLanguages":["scala"]}}},"darkTheme":{"typography":{"fontFamily":"var(--ifm-font-family-base)","fontSize":"var(--ifm-font-size-base)","lineHeight":"var(--ifm-line-height-base)","fontWeightLight":"var(--ifm-font-weight-light)","fontWeightRegular":"var(--ifm-font-weight-base)","fontWeightBold":"var(--ifm-font-weight-bold)","headings":{"fontFamily":"var(--ifm-heading-font-family)","fontWeight":"var(--ifm-heading-font-weight)","lineHeight":"var(--ifm-heading-line-height)"},"code":{"fontFamily":"var(--ifm-font-family-monospace)","lineHeight":"var(--ifm-pre-line-height)"}},"sidebar":{"width":"300px","backgroundColor":"rgb(24, 25, 26)","textColor":"#f5f6f7","arrow":{"color":"#f5f6f7"}},"colors":{"text":{"primary":"#f5f6f7","secondary":"rgba(255, 255, 255, 1)"},"gray":{"50":"#FAFAFA","100":"#F5F5F5"},"border":{"dark":"#ffffff","light":"rgba(0,0,0, 0.1)"},"primary":{"main":"#1890ff"}},"schema":{"nestedBackground":"rgb(24, 25, 26)","typeNameColor":"rgba(255, 255, 255, 1)","typeTitleColor":"rgba(255, 255, 255, 1)"},"theme":{"prism":{"additionalLanguages":["scala"]}}},"options":{"scrollYOffset":"nav.navbar","expandSingleSchemaField":true,"menuToggle":true,"suppressWarnings":true}}},"docusaurus-plugin-content-docs":{"default":{"path":"/","versions":[{"name":"current","label":"1.22-dev","isLast":false,"path":"/next","mainDocId":"intro","docs":[{"id":"administration/adding-legal-pages","path":"/next/administration/adding-legal-pages","sidebar":"docs"},{"id":"administration/backup-and-restore","path":"/next/administration/backup-and-restore","sidebar":"docs"},{"id":"administration/cmd-embedded","path":"/next/administration/cmd-embedded","sidebar":"docs"},{"id":"administration/command-line","path":"/next/administration/command-line","sidebar":"docs"},{"id":"administration/config-cheat-sheet","path":"/next/administration/config-cheat-sheet","sidebar":"docs"},{"id":"administration/customizing-gitea","path":"/next/administration/customizing-gitea","sidebar":"docs"},{"id":"administration/email-setup","path":"/next/administration/email-setup","sidebar":"docs"},{"id":"administration/environment-variables","path":"/next/administration/environment-variables","sidebar":"docs"},{"id":"administration/external-renderers","path":"/next/administration/external-renderers","sidebar":"docs"},{"id":"administration/fail2ban-setup","path":"/next/administration/fail2ban-setup","sidebar":"docs"},{"id":"administration/git-lfs-support","path":"/next/administration/git-lfs-setup","sidebar":"docs"},{"id":"administration/https-support","path":"/next/administration/https-setup","sidebar":"docs"},{"id":"administration/logging-config","path":"/next/administration/logging-config","sidebar":"docs"},{"id":"administration/mail-templates","path":"/next/administration/mail-templates","sidebar":"docs"},{"id":"administration/repo-indexer","path":"/next/administration/repo-indexer","sidebar":"docs"},{"id":"administration/reverse-proxies","path":"/next/administration/reverse-proxies","sidebar":"docs"},{"id":"administration/search-engines-indexation","path":"/next/administration/search-engines-indexation","sidebar":"docs"},{"id":"administration/signing","path":"/next/administration/signing","sidebar":"docs"},{"id":"awesome","path":"/next/awesome"},{"id":"contributing/guidelines-backend","path":"/next/contributing/guidelines-backend","sidebar":"docs"},{"id":"contributing/guidelines-frontend","path":"/next/contributing/guidelines-frontend","sidebar":"docs"},{"id":"contributing/guidelines-refactoring","path":"/next/contributing/guidelines-refactoring","sidebar":"docs"},{"id":"contributing/localization","path":"/next/contributing/localization","sidebar":"docs"},{"id":"development/api-usage","path":"/next/development/api-usage","sidebar":"docs"},{"id":"development/hacking-on-gitea","path":"/next/development/hacking-on-gitea","sidebar":"docs"},{"id":"development/integrations","path":"/next/development/integrations","sidebar":"docs"},{"id":"development/migrations","path":"/next/development/migrations-interfaces","sidebar":"docs"},{"id":"development/oauth2-provider","path":"/next/development/oauth2-provider","sidebar":"docs"},{"id":"help/faq","path":"/next/help/faq","sidebar":"docs"},{"id":"help/support","path":"/next/help/support","sidebar":"docs"},{"id":"installation/comparison","path":"/next/installation/comparison","sidebar":"docs"},{"id":"installation/database-preparation","path":"/next/installation/database-prep","sidebar":"docs"},{"id":"installation/from-binary","path":"/next/installation/install-from-binary","sidebar":"docs"},{"id":"installation/from-package","path":"/next/installation/install-from-package","sidebar":"docs"},{"id":"installation/from-source","path":"/next/installation/install-from-source","sidebar":"docs"},{"id":"installation/on-cloud-provider","path":"/next/installation/install-on-cloud-provider","sidebar":"docs"},{"id":"installation/on-kubernetes","path":"/next/installation/install-on-kubernetes","sidebar":"docs"},{"id":"installation/run-as-service-in-ubuntu","path":"/next/installation/linux-service","sidebar":"docs"},{"id":"installation/upgrade-from-gitea","path":"/next/installation/upgrade-from-gitea","sidebar":"docs"},{"id":"installation/windows-service","path":"/next/installation/windows-service","sidebar":"docs"},{"id":"installation/with-docker","path":"/next/installation/install-with-docker","sidebar":"docs"},{"id":"installation/with-docker-rootless","path":"/next/installation/install-with-docker-rootless","sidebar":"docs"},{"id":"intro","path":"/next/","sidebar":"docs"},{"id":"usage/actions/act-runner","path":"/next/usage/actions/act-runner","sidebar":"docs"},{"id":"usage/actions/comparison","path":"/next/usage/actions/comparison","sidebar":"docs"},{"id":"usage/actions/design","path":"/next/usage/actions/design","sidebar":"docs"},{"id":"usage/actions/faq","path":"/next/usage/actions/faq","sidebar":"docs"},{"id":"usage/actions/overview","path":"/next/usage/actions/overview","sidebar":"docs"},{"id":"usage/actions/quickstart","path":"/next/usage/actions/quickstart","sidebar":"docs"},{"id":"usage/agit-support","path":"/next/usage/agit-setup","sidebar":"docs"},{"id":"usage/authentication","path":"/next/usage/authentication","sidebar":"docs"},{"id":"usage/badge","path":"/next/usage/badge","sidebar":"docs"},{"id":"usage/blame","path":"/next/usage/blame","sidebar":"docs"},{"id":"usage/blocking-users","path":"/next/usage/blocking-user","sidebar":"docs"},{"id":"usage/clone-filter","path":"/next/usage/clone-filters","sidebar":"docs"},{"id":"usage/code-owners","path":"/next/usage/code-owners","sidebar":"docs"},{"id":"usage/incoming-email","path":"/next/usage/incoming-email","sidebar":"docs"},{"id":"usage/issue-pull-request-templates","path":"/next/usage/issue-pull-request-templates","sidebar":"docs"},{"id":"usage/labels","path":"/next/usage/labels","sidebar":"docs"},{"id":"usage/linked-references","path":"/next/usage/automatically-linked-references","sidebar":"docs"},{"id":"usage/merge-message-templates","path":"/next/usage/merge-message-templates","sidebar":"docs"},{"id":"usage/multi-factor-authentication","path":"/next/usage/multi-factor-authentication","sidebar":"docs"},{"id":"usage/packages/alpine","path":"/next/usage/packages/alpine","sidebar":"docs"},{"id":"usage/packages/cargo","path":"/next/usage/packages/cargo","sidebar":"docs"},{"id":"usage/packages/chef","path":"/next/usage/packages/chef","sidebar":"docs"},{"id":"usage/packages/composer","path":"/next/usage/packages/composer","sidebar":"docs"},{"id":"usage/packages/conan","path":"/next/usage/packages/conan","sidebar":"docs"},{"id":"usage/packages/conda","path":"/next/usage/packages/conda","sidebar":"docs"},{"id":"usage/packages/container","path":"/next/usage/packages/container","sidebar":"docs"},{"id":"usage/packages/cran","path":"/next/usage/packages/cran","sidebar":"docs"},{"id":"usage/packages/debian","path":"/next/usage/packages/debian","sidebar":"docs"},{"id":"usage/packages/generic","path":"/next/usage/packages/generic","sidebar":"docs"},{"id":"usage/packages/go","path":"/next/usage/packages/go","sidebar":"docs"},{"id":"usage/packages/helm","path":"/next/usage/packages/helm","sidebar":"docs"},{"id":"usage/packages/maven","path":"/next/usage/packages/maven","sidebar":"docs"},{"id":"usage/packages/npm","path":"/next/usage/packages/npm","sidebar":"docs"},{"id":"usage/packages/nuget","path":"/next/usage/packages/nuget","sidebar":"docs"},{"id":"usage/packages/overview","path":"/next/usage/packages/overview","sidebar":"docs"},{"id":"usage/packages/pub","path":"/next/usage/packages/pub","sidebar":"docs"},{"id":"usage/packages/pypi","path":"/next/usage/packages/pypi","sidebar":"docs"},{"id":"usage/packages/rpm","path":"/next/usage/packages/rpm","sidebar":"docs"},{"id":"usage/packages/rubygems","path":"/next/usage/packages/rubygems","sidebar":"docs"},{"id":"usage/packages/storage","path":"/next/usage/packages/storage","sidebar":"docs"},{"id":"usage/packages/swift","path":"/next/usage/packages/swift","sidebar":"docs"},{"id":"usage/packages/vagrant","path":"/next/usage/packages/vagrant","sidebar":"docs"},{"id":"usage/permissions","path":"/next/usage/permissions","sidebar":"docs"},{"id":"usage/profile-readme","path":"/next/usage/profile-readme","sidebar":"docs"},{"id":"usage/protected-tags","path":"/next/usage/protected-tags","sidebar":"docs"},{"id":"usage/pull-request","path":"/next/usage/pull-request","sidebar":"docs"},{"id":"usage/push","path":"/next/usage/push","sidebar":"docs"},{"id":"usage/repo-mirror","path":"/next/usage/repo-mirror","sidebar":"docs"},{"id":"usage/secrets","path":"/next/usage/secrets","sidebar":"docs"},{"id":"usage/template-repositories","path":"/next/usage/template-repositories","sidebar":"docs"},{"id":"usage/webhooks","path":"/next/usage/webhooks","sidebar":"docs"},{"id":"/category/installation","path":"/next/category/installation","sidebar":"docs"},{"id":"/category/administration","path":"/next/category/administration","sidebar":"docs"},{"id":"/category/usage","path":"/next/category/usage","sidebar":"docs"},{"id":"/category/development","path":"/next/category/development","sidebar":"docs"},{"id":"/category/contributing","path":"/next/category/contributing","sidebar":"docs"},{"id":"/category/help","path":"/next/category/help","sidebar":"docs"}],"draftIds":[],"sidebars":{"docs":{"link":{"path":"/next/","label":"What is Gitea?"}}}},{"name":"1.21","label":"1.21.7","isLast":true,"path":"/","mainDocId":"intro","docs":[{"id":"administration/adding-legal-pages","path":"/administration/adding-legal-pages","sidebar":"docs"},{"id":"administration/backup-and-restore","path":"/administration/backup-and-restore","sidebar":"docs"},{"id":"administration/cmd-embedded","path":"/administration/cmd-embedded","sidebar":"docs"},{"id":"administration/command-line","path":"/administration/command-line","sidebar":"docs"},{"id":"administration/config-cheat-sheet","path":"/administration/config-cheat-sheet","sidebar":"docs"},{"id":"administration/customizing-gitea","path":"/administration/customizing-gitea","sidebar":"docs"},{"id":"administration/email-setup","path":"/administration/email-setup","sidebar":"docs"},{"id":"administration/environment-variables","path":"/administration/environment-variables","sidebar":"docs"},{"id":"administration/external-renderers","path":"/administration/external-renderers","sidebar":"docs"},{"id":"administration/fail2ban-setup","path":"/administration/fail2ban-setup","sidebar":"docs"},{"id":"administration/git-lfs-support","path":"/administration/git-lfs-setup","sidebar":"docs"},{"id":"administration/https-support","path":"/administration/https-setup","sidebar":"docs"},{"id":"administration/logging-config","path":"/administration/logging-config","sidebar":"docs"},{"id":"administration/mail-templates","path":"/administration/mail-templates","sidebar":"docs"},{"id":"administration/repo-indexer","path":"/administration/repo-indexer","sidebar":"docs"},{"id":"administration/reverse-proxies","path":"/administration/reverse-proxies","sidebar":"docs"},{"id":"administration/search-engines-indexation","path":"/administration/search-engines-indexation","sidebar":"docs"},{"id":"administration/signing","path":"/administration/signing","sidebar":"docs"},{"id":"awesome","path":"/awesome"},{"id":"contributing/guidelines-backend","path":"/contributing/guidelines-backend","sidebar":"docs"},{"id":"contributing/guidelines-frontend","path":"/contributing/guidelines-frontend","sidebar":"docs"},{"id":"contributing/guidelines-refactoring","path":"/contributing/guidelines-refactoring","sidebar":"docs"},{"id":"contributing/localization","path":"/contributing/localization","sidebar":"docs"},{"id":"development/api-usage","path":"/development/api-usage","sidebar":"docs"},{"id":"development/hacking-on-gitea","path":"/development/hacking-on-gitea","sidebar":"docs"},{"id":"development/integrations","path":"/development/integrations","sidebar":"docs"},{"id":"development/migrations","path":"/development/migrations-interfaces","sidebar":"docs"},{"id":"development/oauth2-provider","path":"/development/oauth2-provider","sidebar":"docs"},{"id":"help/faq","path":"/help/faq","sidebar":"docs"},{"id":"help/support","path":"/help/support","sidebar":"docs"},{"id":"installation/comparison","path":"/installation/comparison","sidebar":"docs"},{"id":"installation/database-preparation","path":"/installation/database-prep","sidebar":"docs"},{"id":"installation/from-binary","path":"/installation/install-from-binary","sidebar":"docs"},{"id":"installation/from-package","path":"/installation/install-from-package","sidebar":"docs"},{"id":"installation/from-source","path":"/installation/install-from-source","sidebar":"docs"},{"id":"installation/on-cloud-provider","path":"/installation/install-on-cloud-provider","sidebar":"docs"},{"id":"installation/on-kubernetes","path":"/installation/install-on-kubernetes","sidebar":"docs"},{"id":"installation/run-as-service-in-ubuntu","path":"/installation/linux-service","sidebar":"docs"},{"id":"installation/upgrade-from-gitea","path":"/installation/upgrade-from-gitea","sidebar":"docs"},{"id":"installation/upgrade-from-gogs","path":"/installation/upgrade-from-gogs","sidebar":"docs"},{"id":"installation/windows-service","path":"/installation/windows-service","sidebar":"docs"},{"id":"installation/with-docker","path":"/installation/install-with-docker","sidebar":"docs"},{"id":"installation/with-docker-rootless","path":"/installation/install-with-docker-rootless","sidebar":"docs"},{"id":"intro","path":"/","sidebar":"docs"},{"id":"usage/actions/act-runner","path":"/usage/actions/act-runner","sidebar":"docs"},{"id":"usage/actions/comparison","path":"/usage/actions/comparison","sidebar":"docs"},{"id":"usage/actions/design","path":"/usage/actions/design","sidebar":"docs"},{"id":"usage/actions/faq","path":"/usage/actions/faq","sidebar":"docs"},{"id":"usage/actions/overview","path":"/usage/actions/overview","sidebar":"docs"},{"id":"usage/actions/quickstart","path":"/usage/actions/quickstart","sidebar":"docs"},{"id":"usage/agit-support","path":"/usage/agit-setup","sidebar":"docs"},{"id":"usage/authentication","path":"/usage/authentication","sidebar":"docs"},{"id":"usage/blame","path":"/usage/blame","sidebar":"docs"},{"id":"usage/clone-filter","path":"/usage/clone-filters","sidebar":"docs"},{"id":"usage/code-owners","path":"/usage/code-owners","sidebar":"docs"},{"id":"usage/incoming-email","path":"/usage/incoming-email","sidebar":"docs"},{"id":"usage/issue-pull-request-templates","path":"/usage/issue-pull-request-templates","sidebar":"docs"},{"id":"usage/labels","path":"/usage/labels","sidebar":"docs"},{"id":"usage/linked-references","path":"/usage/automatically-linked-references","sidebar":"docs"},{"id":"usage/merge-message-templates","path":"/usage/merge-message-templates","sidebar":"docs"},{"id":"usage/multi-factor-authentication","path":"/usage/multi-factor-authentication","sidebar":"docs"},{"id":"usage/packages/alpine","path":"/usage/packages/alpine","sidebar":"docs"},{"id":"usage/packages/cargo","path":"/usage/packages/cargo","sidebar":"docs"},{"id":"usage/packages/chef","path":"/usage/packages/chef","sidebar":"docs"},{"id":"usage/packages/composer","path":"/usage/packages/composer","sidebar":"docs"},{"id":"usage/packages/conan","path":"/usage/packages/conan","sidebar":"docs"},{"id":"usage/packages/conda","path":"/usage/packages/conda","sidebar":"docs"},{"id":"usage/packages/container","path":"/usage/packages/container","sidebar":"docs"},{"id":"usage/packages/cran","path":"/usage/packages/cran","sidebar":"docs"},{"id":"usage/packages/debian","path":"/usage/packages/debian","sidebar":"docs"},{"id":"usage/packages/generic","path":"/usage/packages/generic","sidebar":"docs"},{"id":"usage/packages/go","path":"/usage/packages/go","sidebar":"docs"},{"id":"usage/packages/helm","path":"/usage/packages/helm","sidebar":"docs"},{"id":"usage/packages/maven","path":"/usage/packages/maven","sidebar":"docs"},{"id":"usage/packages/npm","path":"/usage/packages/npm","sidebar":"docs"},{"id":"usage/packages/nuget","path":"/usage/packages/nuget","sidebar":"docs"},{"id":"usage/packages/overview","path":"/usage/packages/overview","sidebar":"docs"},{"id":"usage/packages/pub","path":"/usage/packages/pub","sidebar":"docs"},{"id":"usage/packages/pypi","path":"/usage/packages/pypi","sidebar":"docs"},{"id":"usage/packages/rpm","path":"/usage/packages/rpm","sidebar":"docs"},{"id":"usage/packages/rubygems","path":"/usage/packages/rubygems","sidebar":"docs"},{"id":"usage/packages/storage","path":"/usage/packages/storage","sidebar":"docs"},{"id":"usage/packages/swift","path":"/usage/packages/swift","sidebar":"docs"},{"id":"usage/packages/vagrant","path":"/usage/packages/vagrant","sidebar":"docs"},{"id":"usage/permissions","path":"/usage/permissions","sidebar":"docs"},{"id":"usage/profile-readme","path":"/usage/profile-readme","sidebar":"docs"},{"id":"usage/protected-tags","path":"/usage/protected-tags","sidebar":"docs"},{"id":"usage/pull-request","path":"/usage/pull-request","sidebar":"docs"},{"id":"usage/push","path":"/usage/push","sidebar":"docs"},{"id":"usage/repo-mirror","path":"/usage/repo-mirror","sidebar":"docs"},{"id":"usage/secrets","path":"/usage/secrets","sidebar":"docs"},{"id":"usage/template-repositories","path":"/usage/template-repositories","sidebar":"docs"},{"id":"usage/webhooks","path":"/usage/webhooks","sidebar":"docs"},{"id":"/category/installation","path":"/category/installation","sidebar":"docs"},{"id":"/category/administration","path":"/category/administration","sidebar":"docs"},{"id":"/category/usage","path":"/category/usage","sidebar":"docs"},{"id":"/category/development","path":"/category/development","sidebar":"docs"},{"id":"/category/contributing","path":"/category/contributing","sidebar":"docs"},{"id":"/category/help","path":"/category/help","sidebar":"docs"}],"draftIds":[],"sidebars":{"docs":{"link":{"path":"/","label":"What is Gitea?"}}}},{"name":"1.20","label":"1.20.6","isLast":false,"path":"/1.20","mainDocId":"intro","docs":[{"id":"administration/adding-legal-pages","path":"/1.20/administration/adding-legal-pages","sidebar":"docs"},{"id":"administration/backup-and-restore","path":"/1.20/administration/backup-and-restore","sidebar":"docs"},{"id":"administration/cmd-embedded","path":"/1.20/administration/cmd-embedded","sidebar":"docs"},{"id":"administration/command-line","path":"/1.20/administration/command-line","sidebar":"docs"},{"id":"administration/config-cheat-sheet","path":"/1.20/administration/config-cheat-sheet","sidebar":"docs"},{"id":"administration/customizing-gitea","path":"/1.20/administration/customizing-gitea","sidebar":"docs"},{"id":"administration/email-setup","path":"/1.20/administration/email-setup","sidebar":"docs"},{"id":"administration/environment-variables","path":"/1.20/administration/environment-variables","sidebar":"docs"},{"id":"administration/external-renderers","path":"/1.20/administration/external-renderers","sidebar":"docs"},{"id":"administration/fail2ban-setup","path":"/1.20/administration/fail2ban-setup","sidebar":"docs"},{"id":"administration/git-lfs-support","path":"/1.20/administration/git-lfs-setup","sidebar":"docs"},{"id":"administration/https-support","path":"/1.20/administration/https-setup","sidebar":"docs"},{"id":"administration/logging-config","path":"/1.20/administration/logging-config","sidebar":"docs"},{"id":"administration/mail-templates","path":"/1.20/administration/mail-templates","sidebar":"docs"},{"id":"administration/repo-indexer","path":"/1.20/administration/repo-indexer","sidebar":"docs"},{"id":"administration/reverse-proxies","path":"/1.20/administration/reverse-proxies","sidebar":"docs"},{"id":"administration/search-engines-indexation","path":"/1.20/administration/search-engines-indexation","sidebar":"docs"},{"id":"administration/signing","path":"/1.20/administration/signing","sidebar":"docs"},{"id":"awesome","path":"/1.20/awesome"},{"id":"contributing/guidelines-backend","path":"/1.20/contributing/guidelines-backend","sidebar":"docs"},{"id":"contributing/guidelines-frontend","path":"/1.20/contributing/guidelines-frontend","sidebar":"docs"},{"id":"contributing/guidelines-refactoring","path":"/1.20/contributing/guidelines-refactoring","sidebar":"docs"},{"id":"contributing/localization","path":"/1.20/contributing/localization","sidebar":"docs"},{"id":"development/api-usage","path":"/1.20/development/api-usage","sidebar":"docs"},{"id":"development/hacking-on-gitea","path":"/1.20/development/hacking-on-gitea","sidebar":"docs"},{"id":"development/integrations","path":"/1.20/development/integrations","sidebar":"docs"},{"id":"development/migrations","path":"/1.20/development/migrations-interfaces","sidebar":"docs"},{"id":"development/oauth2-provider","path":"/1.20/development/oauth2-provider","sidebar":"docs"},{"id":"help/faq","path":"/1.20/help/faq","sidebar":"docs"},{"id":"help/support","path":"/1.20/help/support","sidebar":"docs"},{"id":"installation/comparison","path":"/1.20/installation/comparison","sidebar":"docs"},{"id":"installation/database-preparation","path":"/1.20/installation/database-prep","sidebar":"docs"},{"id":"installation/from-binary","path":"/1.20/installation/install-from-binary","sidebar":"docs"},{"id":"installation/from-package","path":"/1.20/installation/install-from-package","sidebar":"docs"},{"id":"installation/from-source","path":"/1.20/installation/install-from-source","sidebar":"docs"},{"id":"installation/on-cloud-provider","path":"/1.20/installation/install-on-cloud-provider","sidebar":"docs"},{"id":"installation/on-kubernetes","path":"/1.20/installation/install-on-kubernetes","sidebar":"docs"},{"id":"installation/run-as-service-in-ubuntu","path":"/1.20/installation/linux-service","sidebar":"docs"},{"id":"installation/upgrade-from-gitea","path":"/1.20/installation/upgrade-from-gitea","sidebar":"docs"},{"id":"installation/upgrade-from-gogs","path":"/1.20/installation/upgrade-from-gogs","sidebar":"docs"},{"id":"installation/windows-service","path":"/1.20/installation/windows-service","sidebar":"docs"},{"id":"installation/with-docker","path":"/1.20/installation/install-with-docker","sidebar":"docs"},{"id":"installation/with-docker-rootless","path":"/1.20/installation/install-with-docker-rootless","sidebar":"docs"},{"id":"intro","path":"/1.20/","sidebar":"docs"},{"id":"usage/actions/act-runner","path":"/1.20/usage/actions/act-runner","sidebar":"docs"},{"id":"usage/actions/comparison","path":"/1.20/usage/actions/comparison","sidebar":"docs"},{"id":"usage/actions/design","path":"/1.20/usage/actions/design","sidebar":"docs"},{"id":"usage/actions/faq","path":"/1.20/usage/actions/faq","sidebar":"docs"},{"id":"usage/actions/overview","path":"/1.20/usage/actions/overview","sidebar":"docs"},{"id":"usage/actions/quickstart","path":"/1.20/usage/actions/quickstart","sidebar":"docs"},{"id":"usage/agit-support","path":"/1.20/usage/agit-setup","sidebar":"docs"},{"id":"usage/authentication","path":"/1.20/usage/authentication","sidebar":"docs"},{"id":"usage/clone-filter","path":"/1.20/usage/clone-filters","sidebar":"docs"},{"id":"usage/incoming-email","path":"/1.20/usage/incoming-email","sidebar":"docs"},{"id":"usage/issue-pull-request-templates","path":"/1.20/usage/issue-pull-request-templates","sidebar":"docs"},{"id":"usage/labels","path":"/1.20/usage/labels","sidebar":"docs"},{"id":"usage/linked-references","path":"/1.20/usage/automatically-linked-references","sidebar":"docs"},{"id":"usage/merge-message-templates","path":"/1.20/usage/merge-message-templates","sidebar":"docs"},{"id":"usage/multi-factor-authentication","path":"/1.20/usage/multi-factor-authentication","sidebar":"docs"},{"id":"usage/packages/alpine","path":"/1.20/usage/packages/alpine","sidebar":"docs"},{"id":"usage/packages/cargo","path":"/1.20/usage/packages/cargo","sidebar":"docs"},{"id":"usage/packages/chef","path":"/1.20/usage/packages/chef","sidebar":"docs"},{"id":"usage/packages/composer","path":"/1.20/usage/packages/composer","sidebar":"docs"},{"id":"usage/packages/conan","path":"/1.20/usage/packages/conan","sidebar":"docs"},{"id":"usage/packages/conda","path":"/1.20/usage/packages/conda","sidebar":"docs"},{"id":"usage/packages/container","path":"/1.20/usage/packages/container","sidebar":"docs"},{"id":"usage/packages/cran","path":"/1.20/usage/packages/cran","sidebar":"docs"},{"id":"usage/packages/debian","path":"/1.20/usage/packages/debian","sidebar":"docs"},{"id":"usage/packages/generic","path":"/1.20/usage/packages/generic","sidebar":"docs"},{"id":"usage/packages/go","path":"/1.20/usage/packages/go","sidebar":"docs"},{"id":"usage/packages/helm","path":"/1.20/usage/packages/helm","sidebar":"docs"},{"id":"usage/packages/maven","path":"/1.20/usage/packages/maven","sidebar":"docs"},{"id":"usage/packages/npm","path":"/1.20/usage/packages/npm","sidebar":"docs"},{"id":"usage/packages/nuget","path":"/1.20/usage/packages/nuget","sidebar":"docs"},{"id":"usage/packages/overview","path":"/1.20/usage/packages/overview","sidebar":"docs"},{"id":"usage/packages/pub","path":"/1.20/usage/packages/pub","sidebar":"docs"},{"id":"usage/packages/pypi","path":"/1.20/usage/packages/pypi","sidebar":"docs"},{"id":"usage/packages/rpm","path":"/1.20/usage/packages/rpm","sidebar":"docs"},{"id":"usage/packages/rubygems","path":"/1.20/usage/packages/rubygems","sidebar":"docs"},{"id":"usage/packages/storage","path":"/1.20/usage/packages/storage","sidebar":"docs"},{"id":"usage/packages/swift","path":"/1.20/usage/packages/swift","sidebar":"docs"},{"id":"usage/packages/vagrant","path":"/1.20/usage/packages/vagrant","sidebar":"docs"},{"id":"usage/permissions","path":"/1.20/usage/permissions","sidebar":"docs"},{"id":"usage/profile-readme","path":"/1.20/usage/profile-readme","sidebar":"docs"},{"id":"usage/protected-tags","path":"/1.20/usage/protected-tags","sidebar":"docs"},{"id":"usage/pull-request","path":"/1.20/usage/pull-request","sidebar":"docs"},{"id":"usage/push","path":"/1.20/usage/push","sidebar":"docs"},{"id":"usage/repo-mirror","path":"/1.20/usage/repo-mirror","sidebar":"docs"},{"id":"usage/secrets","path":"/1.20/usage/secrets","sidebar":"docs"},{"id":"usage/template-repositories","path":"/1.20/usage/template-repositories","sidebar":"docs"},{"id":"usage/webhooks","path":"/1.20/usage/webhooks","sidebar":"docs"},{"id":"/category/installation","path":"/1.20/category/installation","sidebar":"docs"},{"id":"/category/administration","path":"/1.20/category/administration","sidebar":"docs"},{"id":"/category/usage","path":"/1.20/category/usage","sidebar":"docs"},{"id":"/category/development","path":"/1.20/category/development","sidebar":"docs"},{"id":"/category/contributing","path":"/1.20/category/contributing","sidebar":"docs"},{"id":"/category/help","path":"/1.20/category/help","sidebar":"docs"}],"draftIds":[],"sidebars":{"docs":{"link":{"path":"/1.20/","label":"What is Gitea?"}}}},{"name":"1.19","label":"1.19.4","isLast":false,"path":"/1.19","mainDocId":"intro","docs":[{"id":"administration/adding-legal-pages","path":"/1.19/administration/adding-legal-pages","sidebar":"docs"},{"id":"administration/backup-and-restore","path":"/1.19/administration/backup-and-restore","sidebar":"docs"},{"id":"administration/cmd-embedded","path":"/1.19/administration/cmd-embedded","sidebar":"docs"},{"id":"administration/command-line","path":"/1.19/administration/command-line","sidebar":"docs"},{"id":"administration/config-cheat-sheet","path":"/1.19/administration/config-cheat-sheet","sidebar":"docs"},{"id":"administration/customizing-gitea","path":"/1.19/administration/customizing-gitea","sidebar":"docs"},{"id":"administration/email-setup","path":"/1.19/administration/email-setup","sidebar":"docs"},{"id":"administration/environment-variables","path":"/1.19/administration/environment-variables","sidebar":"docs"},{"id":"administration/external-renderers","path":"/1.19/administration/external-renderers","sidebar":"docs"},{"id":"administration/fail2ban-setup","path":"/1.19/administration/fail2ban-setup","sidebar":"docs"},{"id":"administration/git-lfs-support","path":"/1.19/administration/git-lfs-setup","sidebar":"docs"},{"id":"administration/https-support","path":"/1.19/administration/https-setup","sidebar":"docs"},{"id":"administration/logging-documentation","path":"/1.19/administration/logging-configuration","sidebar":"docs"},{"id":"administration/mail-templates","path":"/1.19/administration/mail-templates","sidebar":"docs"},{"id":"administration/repo-indexer","path":"/1.19/administration/repo-indexer","sidebar":"docs"},{"id":"administration/reverse-proxies","path":"/1.19/administration/reverse-proxies","sidebar":"docs"},{"id":"administration/search-engines-indexation","path":"/1.19/administration/search-engines-indexation","sidebar":"docs"},{"id":"administration/signing","path":"/1.19/administration/signing","sidebar":"docs"},{"id":"awesome","path":"/1.19/awesome"},{"id":"contributing/guidelines-backend","path":"/1.19/contributing/guidelines-backend","sidebar":"docs"},{"id":"contributing/guidelines-frontend","path":"/1.19/contributing/guidelines-frontend","sidebar":"docs"},{"id":"contributing/guidelines-refactoring","path":"/1.19/contributing/guidelines-refactoring","sidebar":"docs"},{"id":"contributing/localization","path":"/1.19/contributing/localization","sidebar":"docs"},{"id":"development/api-usage","path":"/1.19/development/api-usage","sidebar":"docs"},{"id":"development/hacking-on-gitea","path":"/1.19/development/hacking-on-gitea","sidebar":"docs"},{"id":"development/integrations","path":"/1.19/development/integrations","sidebar":"docs"},{"id":"development/migrations","path":"/1.19/development/migrations-interfaces","sidebar":"docs"},{"id":"development/oauth2-provider","path":"/1.19/development/oauth2-provider","sidebar":"docs"},{"id":"help/faq","path":"/1.19/help/faq","sidebar":"docs"},{"id":"help/seek-help","path":"/1.19/help/seek-help","sidebar":"docs"},{"id":"installation/comparison","path":"/1.19/installation/comparison","sidebar":"docs"},{"id":"installation/database-preparation","path":"/1.19/installation/database-prep","sidebar":"docs"},{"id":"installation/from-binary","path":"/1.19/installation/install-from-binary","sidebar":"docs"},{"id":"installation/from-package","path":"/1.19/installation/install-from-package","sidebar":"docs"},{"id":"installation/from-source","path":"/1.19/installation/install-from-source","sidebar":"docs"},{"id":"installation/on-cloud-provider","path":"/1.19/installation/install-on-cloud-provider","sidebar":"docs"},{"id":"installation/on-kubernetes","path":"/1.19/installation/install-on-kubernetes","sidebar":"docs"},{"id":"installation/run-as-service-in-ubuntu","path":"/1.19/installation/linux-service","sidebar":"docs"},{"id":"installation/upgrade-from-gitea","path":"/1.19/installation/upgrade-from-gitea","sidebar":"docs"},{"id":"installation/upgrade-from-gogs","path":"/1.19/installation/upgrade-from-gogs","sidebar":"docs"},{"id":"installation/windows-service","path":"/1.19/installation/windows-service","sidebar":"docs"},{"id":"installation/with-docker","path":"/1.19/installation/install-with-docker","sidebar":"docs"},{"id":"installation/with-docker-rootless","path":"/1.19/installation/install-with-docker-rootless","sidebar":"docs"},{"id":"intro","path":"/1.19/","sidebar":"docs"},{"id":"packages/cargo","path":"/1.19/packages/usage/packages/cargo","sidebar":"docs"},{"id":"packages/chef","path":"/1.19/packages/usage/packages/chef","sidebar":"docs"},{"id":"packages/composer","path":"/1.19/packages/usage/packages/composer","sidebar":"docs"},{"id":"packages/conan","path":"/1.19/packages/usage/packages/conan","sidebar":"docs"},{"id":"packages/conda","path":"/1.19/packages/usage/packages/conda","sidebar":"docs"},{"id":"packages/container","path":"/1.19/packages/usage/packages/container","sidebar":"docs"},{"id":"packages/generic","path":"/1.19/packages/usage/packages/generic","sidebar":"docs"},{"id":"packages/helm","path":"/1.19/packages/usage/packages/helm","sidebar":"docs"},{"id":"packages/maven","path":"/1.19/packages/usage/packages/maven","sidebar":"docs"},{"id":"packages/npm","path":"/1.19/packages/usage/packages/npm","sidebar":"docs"},{"id":"packages/nuget","path":"/1.19/packages/usage/packages/nuget","sidebar":"docs"},{"id":"packages/overview","path":"/1.19/packages/usage/packages/overview","sidebar":"docs"},{"id":"packages/pub","path":"/1.19/packages/usage/packages/pub","sidebar":"docs"},{"id":"packages/pypi","path":"/1.19/packages/usage/packages/pypi","sidebar":"docs"},{"id":"packages/rubygems","path":"/1.19/packages/usage/packages/rubygems","sidebar":"docs"},{"id":"packages/storage","path":"/1.19/packages/usage/packages/storage","sidebar":"docs"},{"id":"packages/vagrant","path":"/1.19/packages/usage/packages/vagrant","sidebar":"docs"},{"id":"usage/agit-support","path":"/1.19/usage/agit-setup","sidebar":"docs"},{"id":"usage/authentication","path":"/1.19/usage/authentication","sidebar":"docs"},{"id":"usage/clone-filter","path":"/1.19/usage/clone-filters","sidebar":"docs"},{"id":"usage/incoming-email","path":"/1.19/usage/incoming-email","sidebar":"docs"},{"id":"usage/issue-pull-request-templates","path":"/1.19/usage/issue-pull-request-templates","sidebar":"docs"},{"id":"usage/labels","path":"/1.19/usage/labels","sidebar":"docs"},{"id":"usage/linked-references","path":"/1.19/usage/automatically-linked-references","sidebar":"docs"},{"id":"usage/merge-message-templates","path":"/1.19/usage/merge-message-templates","sidebar":"docs"},{"id":"usage/permissions","path":"/1.19/usage/permissions","sidebar":"docs"},{"id":"usage/protected-tags","path":"/1.19/usage/protected-tags","sidebar":"docs"},{"id":"usage/pull-request","path":"/1.19/usage/pull-request","sidebar":"docs"},{"id":"usage/push","path":"/1.19/usage/push","sidebar":"docs"},{"id":"usage/repo-mirror","path":"/1.19/usage/repo-mirror","sidebar":"docs"},{"id":"usage/secrets","path":"/1.19/usage/usage/secrets","sidebar":"docs"},{"id":"usage/template-repositories","path":"/1.19/usage/template-repositories","sidebar":"docs"},{"id":"usage/webhooks","path":"/1.19/usage/webhooks","sidebar":"docs"},{"id":"/category/installation","path":"/1.19/category/installation","sidebar":"docs"},{"id":"/category/administration","path":"/1.19/category/administration","sidebar":"docs"},{"id":"/category/usage","path":"/1.19/category/usage","sidebar":"docs"},{"id":"/category/development","path":"/1.19/category/development","sidebar":"docs"},{"id":"/category/contributing","path":"/1.19/category/contributing","sidebar":"docs"},{"id":"/category/help","path":"/1.19/category/help","sidebar":"docs"}],"draftIds":[],"sidebars":{"docs":{"link":{"path":"/1.19/","label":"What is Gitea?"}}}}],"breadcrumbs":true}}}'),i=JSON.parse('{"defaultLocale":"en-us","locales":["en-us","zh-cn"],"path":"i18n","currentLocale":"en-us","localeConfigs":{"en-us":{"label":"English","direction":"ltr","htmlLang":"en-us","calendar":"gregory","path":"en-us"},"zh-cn":{"label":"\u4e2d\u6587","direction":"ltr","htmlLang":"zh-cn","calendar":"gregory","path":"zh-cn"}}}');var a=n(57529);const p=JSON.parse('{"docusaurusVersion":"3.1.1","siteVersion":"0.0.0","pluginVersions":{"docusaurus-plugin-content-docs":{"type":"package","name":"@docusaurus/plugin-content-docs","version":"3.1.1"},"docusaurus-plugin-content-pages":{"type":"package","name":"@docusaurus/plugin-content-pages","version":"3.1.1"},"docusaurus-plugin-google-gtag":{"type":"package","name":"@docusaurus/plugin-google-gtag","version":"3.1.1"},"docusaurus-plugin-sitemap":{"type":"package","name":"@docusaurus/plugin-sitemap","version":"3.1.1"},"docusaurus-plugin-redoc":{"type":"package","name":"docusaurus-plugin-redoc","version":"2.0.2"},"docusaurus-theme-classic":{"type":"package","name":"@docusaurus/theme-classic","version":"3.1.1"},"docusaurus-theme-redoc":{"type":"package","name":"docusaurus-theme-redoc","version":"2.0.2"},"docusaurus-plugin-plausible":{"type":"package","name":"docusaurus-plugin-plausible","version":"0.0.5"},"@easyops-cn/docusaurus-search-local":{"type":"package","name":"@easyops-cn/docusaurus-search-local","version":"0.40.1"}}}');var c=n(85893);const m={siteConfig:s.default,siteMetadata:p,globalData:o,i18n:i,codeTranslations:a},d=r.createContext(m);function u(e){let{children:t}=e;return(0,c.jsx)(d.Provider,{value:m,children:t})}},44763:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=n(67294),s=n(10412),o=n(35742),i=n(18780),a=n(51859),p=n(85893);function c(e){let{error:t,tryAgain:n}=e;return(0,p.jsxs)("div",{style:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"flex-start",minHeight:"100vh",width:"100%",maxWidth:"80ch",fontSize:"20px",margin:"0 auto",padding:"1rem"},children:[(0,p.jsx)("h1",{style:{fontSize:"3rem"},children:"This page crashed"}),(0,p.jsx)("button",{type:"button",onClick:n,style:{margin:"1rem 0",fontSize:"2rem",cursor:"pointer",borderRadius:20,padding:"1rem"},children:"Try again"}),(0,p.jsx)(m,{error:t})]})}function m(e){let{error:t}=e;const n=(0,i.getErrorCausalChain)(t).map((e=>e.message)).join("\n\nCause:\n");return(0,p.jsx)("p",{style:{whiteSpace:"pre-wrap"},children:n})}function d(e){let{error:t,tryAgain:n}=e;return(0,p.jsxs)(l,{fallback:()=>(0,p.jsx)(c,{error:t,tryAgain:n}),children:[(0,p.jsx)(o.Z,{children:(0,p.jsx)("title",{children:"Page Error"})}),(0,p.jsx)(a.Z,{children:(0,p.jsx)(c,{error:t,tryAgain:n})})]})}const u=e=>(0,p.jsx)(d,{...e});class l extends r.Component{constructor(e){super(e),this.state={error:null}}componentDidCatch(e){s.default.canUseDOM&&this.setState({error:e})}render(){const{children:e}=this.props,{error:t}=this.state;if(t){const e={error:t,tryAgain:()=>this.setState({error:null})};return(this.props.fallback??u)(e)}return e??null}}},10412:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>s});const r="undefined"!=typeof window&&"document"in window&&"createElement"in window.document,s={canUseDOM:r,canUseEventListeners:r&&("addEventListener"in window||"attachEvent"in window),canUseIntersectionObserver:r&&"IntersectionObserver"in window,canUseViewport:r&&"screen"in window}},35742:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});n(67294);var r=n(70405),s=n(85893);function o(e){return(0,s.jsx)(r.ql,{...e})}},33692:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=n(67294),s=n(73727),o=n(18780),i=n(52263),a=n(13919),p=n(10412),c=n(28138),m=n(44996),d=n(85893);function u(e,t){let{isNavLink:n,to:u,href:l,activeClassName:g,isActive:h,"data-noBrokenLinkCheck":f,autoAddBaseUrl:y=!0,...b}=e;const{siteConfig:{trailingSlash:x,baseUrl:w}}=(0,i.Z)(),{withBaseUrl:v}=(0,m.C)(),k=(0,c.Z)(),q=(0,r.useRef)(null);(0,r.useImperativeHandle)(t,(()=>q.current));const $=u||l;const _=(0,a.Z)($),I=$?.replace("pathname://","");let C=void 0!==I?(R=I,y&&(e=>e.startsWith("/"))(R)?v(R):R):void 0;var R;C&&_&&(C=(0,o.applyTrailingSlash)(C,{trailingSlash:x,baseUrl:w}));const L=(0,r.useRef)(!1),T=n?s.OL:s.rU,S=p.default.canUseIntersectionObserver,P=(0,r.useRef)(),A=()=>{L.current||null==C||(window.docusaurus.preload(C),L.current=!0)};(0,r.useEffect)((()=>(!S&&_&&null!=C&&window.docusaurus.prefetch(C),()=>{S&&P.current&&P.current.disconnect()})),[P,C,S,_]);const O=C?.startsWith("#")??!1,j=!b.target||"_self"===b.target,E=!C||!_||!j||O;return f||!O&&E||k.collectLink(C),b.id&&k.collectAnchor(b.id),E?(0,d.jsx)("a",{ref:q,href:C,...$&&!_&&{target:"_blank",rel:"noopener noreferrer"},...b}):(0,d.jsx)(T,{...b,onMouseEnter:A,onTouchStart:A,innerRef:e=>{q.current=e,S&&e&&_&&(P.current=new window.IntersectionObserver((t=>{t.forEach((t=>{e===t.target&&(t.isIntersecting||t.intersectionRatio>0)&&(P.current.unobserve(e),P.current.disconnect(),null!=C&&window.docusaurus.prefetch(C))}))})),P.current.observe(e))},to:C,...n&&{isActive:h,activeClassName:g}})}const l=r.forwardRef(u)},95999:(e,t,n)=>{"use strict";n.d(t,{Z:()=>c,I:()=>p});var r=n(67294),s=n(85893);function o(e,t){const n=e.split(/(\{\w+\})/).map(((e,n)=>{if(n%2==1){const n=t?.[e.slice(1,-1)];if(void 0!==n)return n}return e}));return n.some((e=>(0,r.isValidElement)(e)))?n.map(((e,t)=>(0,r.isValidElement)(e)?r.cloneElement(e,{key:t}):e)).filter((e=>""!==e)):n.join("")}var i=n(57529);function a(e){let{id:t,message:n}=e;if(void 0===t&&void 0===n)throw new Error("Docusaurus translation declarations must have at least a translation id or a default translation message");return i[t??n]??n??t}function p(e,t){let{message:n,id:r}=e;return o(a({message:n,id:r}),t)}function c(e){let{children:t,id:n,values:r}=e;if(t&&"string"!=typeof t)throw console.warn("Illegal <Translate> children",t),new Error("The Docusaurus <Translate> component only accept simple string values");const i=a({message:t,id:n});return(0,s.jsx)(s.Fragment,{children:o(i,r)})}},29935:(e,t,n)=>{"use strict";n.d(t,{m:()=>r});const r="default"},13919:(e,t,n)=>{"use strict";function r(e){return/^(?:\w*:|\/\/)/.test(e)}function s(e){return void 0!==e&&!r(e)}n.d(t,{Z:()=>s,b:()=>r})},44996:(e,t,n)=>{"use strict";n.d(t,{C:()=>i,Z:()=>a});var r=n(67294),s=n(52263),o=n(13919);function i(){const{siteConfig:{baseUrl:e,url:t}}=(0,s.Z)(),n=(0,r.useCallback)(((n,r)=>function(e,t,n,r){let{forcePrependBaseUrl:s=!1,absolute:i=!1}=void 0===r?{}:r;if(!n||n.startsWith("#")||(0,o.b)(n))return n;if(s)return t+n.replace(/^\//,"");if(n===t.replace(/\/$/,""))return t;const a=n.startsWith(t)?n:t+n.replace(/^\//,"");return i?e+a:a}(t,e,n,r)),[t,e]);return{withBaseUrl:n}}function a(e,t){void 0===t&&(t={});const{withBaseUrl:n}=i();return n(e,t)}},28138:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(67294);n(85893);const s=r.createContext({collectAnchor:()=>{},collectLink:()=>{}}),o=()=>(0,r.useContext)(s);function i(){return o()}},52263:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(67294),s=n(58940);function o(){return(0,r.useContext)(s._)}},28084:(e,t,n)=>{"use strict";n.d(t,{OD:()=>o,eZ:()=>i});var r=n(52263),s=n(29935);function o(e,t){void 0===t&&(t={});const n=function(){const{globalData:e}=(0,r.Z)();return e}()[e];if(!n&&t.failfast)throw new Error(`Docusaurus plugin global data not found for "${e}" plugin.`);return n}function i(e,t,n){void 0===t&&(t=s.m),void 0===n&&(n={});const r=o(e),i=r?.[t];if(!i&&n.failfast)throw new Error(`Docusaurus plugin global data not found for "${e}" plugin with id "${t}".`);return i}},72389:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(67294),s=n(98934);function o(){return(0,r.useContext)(s._)}},20469:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(67294);const s=n(10412).default.canUseDOM?r.useLayoutEffect:r.useEffect},99670:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});const r=e=>"object"==typeof e&&!!e&&Object.keys(e).length>0;function s(e){const t={};return function e(n,s){Object.entries(n).forEach((n=>{let[o,i]=n;const a=s?`${s}.${o}`:o;r(i)?e(i,a):t[a]=i}))}(e),t}},30226:(e,t,n)=>{"use strict";n.d(t,{_:()=>o,z:()=>i});var r=n(67294),s=n(85893);const o=r.createContext(null);function i(e){let{children:t,value:n}=e;const i=r.useContext(o),a=(0,r.useMemo)((()=>function(e){let{parent:t,value:n}=e;if(!t){if(!n)throw new Error("Unexpected: no Docusaurus route context found");if(!("plugin"in n))throw new Error("Unexpected: Docusaurus topmost route context has no `plugin` attribute");return n}const r={...t.data,...n?.data};return{plugin:t.plugin,data:r}}({parent:i,value:n})),[i,n]);return(0,s.jsx)(o.Provider,{value:a,children:t})}},94104:(e,t,n)=>{"use strict";n.d(t,{Iw:()=>l,gA:()=>m,_r:()=>p,Jo:()=>g,zh:()=>c,yW:()=>u,gB:()=>d});var r=n(16550),s=n(28084);const o=e=>e.versions.find((e=>e.isLast));function i(e,t){const n=function(e,t){const n=o(e);return[...e.versions.filter((e=>e!==n)),n].find((e=>!!(0,r.LX)(t,{path:e.path,exact:!1,strict:!1})))}(e,t),s=n?.docs.find((e=>!!(0,r.LX)(t,{path:e.path,exact:!0,strict:!1})));return{activeVersion:n,activeDoc:s,alternateDocVersions:s?function(t){const n={};return e.versions.forEach((e=>{e.docs.forEach((r=>{r.id===t&&(n[e.name]=r)}))})),n}(s.id):{}}}const a={},p=()=>(0,s.OD)("docusaurus-plugin-content-docs")??a,c=e=>(0,s.eZ)("docusaurus-plugin-content-docs",e,{failfast:!0});function m(e){void 0===e&&(e={});const t=p(),{pathname:n}=(0,r.TH)();return function(e,t,n){void 0===n&&(n={});const s=Object.entries(e).sort(((e,t)=>t[1].path.localeCompare(e[1].path))).find((e=>{let[,n]=e;return!!(0,r.LX)(t,{path:n.path,exact:!1,strict:!1})})),o=s?{pluginId:s[0],pluginData:s[1]}:void 0;if(!o&&n.failfast)throw new Error(`Can't find active docs plugin for "${t}" pathname, while it was expected to be found. Maybe you tried to use a docs feature that can only be used on a docs-related page? Existing docs plugin paths are: ${Object.values(e).map((e=>e.path)).join(", ")}`);return o}(t,n,e)}function d(e){return c(e).versions}function u(e){const t=c(e);return o(t)}function l(e){const t=c(e),{pathname:n}=(0,r.TH)();return i(t,n)}function g(e){const t=c(e),{pathname:n}=(0,r.TH)();return function(e,t){const n=o(e);return{latestDocSuggestion:i(e,t).alternateDocVersions[n.name],latestVersionSuggestion:n}}(t,n)}},56657:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>r});const r={onRouteDidUpdate(e){let{location:t,previousLocation:n}=e;!n||t.pathname===n.pathname&&t.search===n.search&&t.hash===n.hash||setTimeout((()=>{window.gtag("set","page_path",t.pathname+t.search+t.hash),window.gtag("event","page_view")}))}}},18320:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>o});var r=n(74865),s=n.n(r);s().configure({showSpinner:!1});const o={onRouteUpdate(e){let{location:t,previousLocation:n}=e;if(n&&t.pathname!==n.pathname){const e=window.setTimeout((()=>{s().start()}),200);return()=>window.clearTimeout(e)}},onRouteDidUpdate(){s().done()}}},3310:(e,t,n)=>{"use strict";n.r(t);var r=n(42573),s=n(36809);!function(e){const{themeConfig:{prism:t}}=s.default,{additionalLanguages:r}=t;globalThis.Prism=e,r.forEach((e=>{"php"===e&&n(96854),n(6726)(`./prism-${e}`)})),delete globalThis.Prism}(r.p1)},92503:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});n(67294);var r=n(90512),s=n(95999),o=n(86668),i=n(33692),a=n(28138);const p={anchorWithStickyNavbar:"anchorWithStickyNavbar_LWe7",anchorWithHideOnScrollNavbar:"anchorWithHideOnScrollNavbar_WYt5"};var c=n(85893);function m(e){let{as:t,id:n,...m}=e;const d=(0,a.Z)(),{navbar:{hideOnScroll:u}}=(0,o.L)();if("h1"===t||!n)return(0,c.jsx)(t,{...m,id:void 0});d.collectAnchor(n);const l=(0,s.I)({id:"theme.common.headingLinkTitle",message:"Direct link to {heading}",description:"Title for link to heading"},{heading:"string"==typeof m.children?m.children:n});return(0,c.jsxs)(t,{...m,className:(0,r.Z)("anchor",u?p.anchorWithHideOnScrollNavbar:p.anchorWithStickyNavbar,m.className),id:n,children:[m.children,(0,c.jsx)(i.Z,{className:"hash-link",to:`#${n}`,"aria-label":l,title:l,children:"\u200b"})]})}},39471:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});n(67294);const r={iconExternalLink:"iconExternalLink_nPIU"};var s=n(85893);function o(e){let{width:t=13.5,height:n=13.5}=e;return(0,s.jsx)("svg",{width:t,height:n,"aria-hidden":"true",viewBox:"0 0 24 24",className:r.iconExternalLink,children:(0,s.jsx)("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})})}},51859:(e,t,n)=>{"use strict";n.d(t,{Z:()=>jt});var r=n(67294),s=n(90512),o=n(44763),i=n(1944),a=n(16550),p=n(95999),c=n(85936),m=n(85893);const d="__docusaurus_skipToContent_fallback";function u(e){e.setAttribute("tabindex","-1"),e.focus(),e.removeAttribute("tabindex")}function l(){const e=(0,r.useRef)(null),{action:t}=(0,a.k6)(),n=(0,r.useCallback)((e=>{e.preventDefault();const t=document.querySelector("main:first-of-type")??document.getElementById(d);t&&u(t)}),[]);return(0,c.S)((n=>{let{location:r}=n;e.current&&!r.hash&&"PUSH"===t&&u(e.current)})),{containerRef:e,onClick:n}}const g=(0,p.I)({id:"theme.common.skipToMainContent",description:"The skip to content label used for accessibility, allowing to rapidly navigate to main content with keyboard tab/enter navigation",message:"Skip to main content"});function h(e){const t=e.children??g,{containerRef:n,onClick:r}=l();return(0,m.jsx)("div",{ref:n,role:"region","aria-label":g,children:(0,m.jsx)("a",{...e,href:`#${d}`,onClick:r,children:t})})}var f=n(35281),y=n(19727);const b={skipToContent:"skipToContent_fXgn"};function x(){return(0,m.jsx)(h,{className:b.skipToContent})}var w=n(86668),v=n(59689);function k(e){let{width:t=21,height:n=21,color:r="currentColor",strokeWidth:s=1.2,className:o,...i}=e;return(0,m.jsx)("svg",{viewBox:"0 0 15 15",width:t,height:n,...i,children:(0,m.jsx)("g",{stroke:r,strokeWidth:s,children:(0,m.jsx)("path",{d:"M.75.75l13.5 13.5M14.25.75L.75 14.25"})})})}const q={closeButton:"closeButton_CVFx"};function $(e){return(0,m.jsx)("button",{type:"button","aria-label":(0,p.I)({id:"theme.AnnouncementBar.closeButtonAriaLabel",message:"Close",description:"The ARIA label for close button of announcement bar"}),...e,className:(0,s.Z)("clean-btn close",q.closeButton,e.className),children:(0,m.jsx)(k,{width:14,height:14,strokeWidth:3.1})})}const _={content:"content_knG7"};function I(e){const{announcementBar:t}=(0,w.L)(),{content:n}=t;return(0,m.jsx)("div",{...e,className:(0,s.Z)(_.content,e.className),dangerouslySetInnerHTML:{__html:n}})}const C={announcementBar:"announcementBar_mb4j",announcementBarPlaceholder:"announcementBarPlaceholder_vyr4",announcementBarClose:"announcementBarClose_gvF7",announcementBarContent:"announcementBarContent_xLdY"};function R(){const{announcementBar:e}=(0,w.L)(),{isActive:t,close:n}=(0,v.nT)();if(!t)return null;const{backgroundColor:r,textColor:s,isCloseable:o}=e;return(0,m.jsxs)("div",{className:C.announcementBar,style:{backgroundColor:r,color:s},role:"banner",children:[o&&(0,m.jsx)("div",{className:C.announcementBarPlaceholder}),(0,m.jsx)(I,{className:C.announcementBarContent}),o&&(0,m.jsx)($,{onClick:n,className:C.announcementBarClose})]})}var L=n(72961),T=n(12466);var S=n(902),P=n(13102);const A=r.createContext(null);function O(e){let{children:t}=e;const n=function(){const e=(0,L.e)(),t=(0,P.HY)(),[n,s]=(0,r.useState)(!1),o=null!==t.component,i=(0,S.D9)(o);return(0,r.useEffect)((()=>{o&&!i&&s(!0)}),[o,i]),(0,r.useEffect)((()=>{o?e.shown||s(!0):s(!1)}),[e.shown,o]),(0,r.useMemo)((()=>[n,s]),[n])}();return(0,m.jsx)(A.Provider,{value:n,children:t})}function j(e){if(e.component){const t=e.component;return(0,m.jsx)(t,{...e.props})}}function E(){const e=(0,r.useContext)(A);if(!e)throw new S.i6("NavbarSecondaryMenuDisplayProvider");const[t,n]=e,s=(0,r.useCallback)((()=>n(!1)),[n]),o=(0,P.HY)();return(0,r.useMemo)((()=>({shown:t,hide:s,content:j(o)})),[s,o,t])}function F(e){let{header:t,primaryMenu:n,secondaryMenu:r}=e;const{shown:o}=E();return(0,m.jsxs)("div",{className:"navbar-sidebar",children:[t,(0,m.jsxs)("div",{className:(0,s.Z)("navbar-sidebar__items",{"navbar-sidebar__items--show-secondary":o}),children:[(0,m.jsx)("div",{className:"navbar-sidebar__item menu",children:n}),(0,m.jsx)("div",{className:"navbar-sidebar__item menu",children:r})]})]})}var D=n(92949),U=n(72389);function G(e){return(0,m.jsx)("svg",{viewBox:"0 0 24 24",width:24,height:24,...e,children:(0,m.jsx)("path",{fill:"currentColor",d:"M12,9c1.65,0,3,1.35,3,3s-1.35,3-3,3s-3-1.35-3-3S10.35,9,12,9 M12,7c-2.76,0-5,2.24-5,5s2.24,5,5,5s5-2.24,5-5 S14.76,7,12,7L12,7z M2,13l2,0c0.55,0,1-0.45,1-1s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S1.45,13,2,13z M20,13l2,0c0.55,0,1-0.45,1-1 s-0.45-1-1-1l-2,0c-0.55,0-1,0.45-1,1S19.45,13,20,13z M11,2v2c0,0.55,0.45,1,1,1s1-0.45,1-1V2c0-0.55-0.45-1-1-1S11,1.45,11,2z M11,20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45,19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03,0-1.41L5.99,4.58z M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03,0-1.41 L18.36,16.95z M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z"})})}function N(e){return(0,m.jsx)("svg",{viewBox:"0 0 24 24",width:24,height:24,...e,children:(0,m.jsx)("path",{fill:"currentColor",d:"M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"})})}const z={toggle:"toggle_vylO",toggleButton:"toggleButton_gllP",darkToggleIcon:"darkToggleIcon_wfgR",lightToggleIcon:"lightToggleIcon_pyhR",toggleButtonDisabled:"toggleButtonDisabled_aARS"};function B(e){let{className:t,buttonClassName:n,value:r,onChange:o}=e;const i=(0,U.Z)(),a=(0,p.I)({message:"Switch between dark and light mode (currently {mode})",id:"theme.colorToggle.ariaLabel",description:"The ARIA label for the navbar color mode toggle"},{mode:"dark"===r?(0,p.I)({message:"dark mode",id:"theme.colorToggle.ariaLabel.mode.dark",description:"The name for the dark color mode"}):(0,p.I)({message:"light mode",id:"theme.colorToggle.ariaLabel.mode.light",description:"The name for the light color mode"})});return(0,m.jsx)("div",{className:(0,s.Z)(z.toggle,t),children:(0,m.jsxs)("button",{className:(0,s.Z)("clean-btn",z.toggleButton,!i&&z.toggleButtonDisabled,n),type:"button",onClick:()=>o("dark"===r?"light":"dark"),disabled:!i,title:a,"aria-label":a,"aria-live":"polite",children:[(0,m.jsx)(G,{className:(0,s.Z)(z.toggleIcon,z.lightToggleIcon)}),(0,m.jsx)(N,{className:(0,s.Z)(z.toggleIcon,z.darkToggleIcon)})]})})}const M=r.memo(B),H={darkNavbarColorModeToggle:"darkNavbarColorModeToggle_X3D1"};function W(e){let{className:t}=e;const n=(0,w.L)().navbar.style,r=(0,w.L)().colorMode.disableSwitch,{colorMode:s,setColorMode:o}=(0,D.I)();return r?null:(0,m.jsx)(M,{className:t,buttonClassName:"dark"===n?H.darkNavbarColorModeToggle:void 0,value:s,onChange:o})}var K=n(21327);function V(){return(0,m.jsx)(K.Z,{className:"navbar__brand",imageClassName:"navbar__logo",titleClassName:"navbar__title text--truncate"})}function Q(){const e=(0,L.e)();return(0,m.jsx)("button",{type:"button","aria-label":(0,p.I)({id:"theme.docs.sidebar.closeSidebarButtonAriaLabel",message:"Close navigation bar",description:"The ARIA label for close button of mobile sidebar"}),className:"clean-btn navbar-sidebar__close",onClick:()=>e.toggle(),children:(0,m.jsx)(k,{color:"var(--ifm-color-emphasis-600)"})})}function Z(){return(0,m.jsxs)("div",{className:"navbar-sidebar__brand",children:[(0,m.jsx)(V,{}),(0,m.jsx)(W,{className:"margin-right--md"}),(0,m.jsx)(Q,{})]})}var X=n(33692),Y=n(44996),J=n(13919);function ee(e,t){return void 0!==e&&void 0!==t&&new RegExp(e,"gi").test(t)}var te=n(39471);function ne(e){let{activeBasePath:t,activeBaseRegex:n,to:r,href:s,label:o,html:i,isDropdownLink:a,prependBaseUrlToHref:p,...c}=e;const d=(0,Y.Z)(r),u=(0,Y.Z)(t),l=(0,Y.Z)(s,{forcePrependBaseUrl:!0}),g=o&&s&&!(0,J.Z)(s),h=i?{dangerouslySetInnerHTML:{__html:i}}:{children:(0,m.jsxs)(m.Fragment,{children:[o,g&&(0,m.jsx)(te.Z,{...a&&{width:12,height:12}})]})};return s?(0,m.jsx)(X.Z,{href:p?l:s,...c,...h}):(0,m.jsx)(X.Z,{to:d,isNavLink:!0,...(t||n)&&{isActive:(e,t)=>n?ee(n,t.pathname):t.pathname.startsWith(u)},...c,...h})}function re(e){let{className:t,isDropdownItem:n=!1,...r}=e;const o=(0,m.jsx)(ne,{className:(0,s.Z)(n?"dropdown__link":"navbar__item navbar__link",t),isDropdownLink:n,...r});return n?(0,m.jsx)("li",{children:o}):o}function se(e){let{className:t,isDropdownItem:n,...r}=e;return(0,m.jsx)("li",{className:"menu__list-item",children:(0,m.jsx)(ne,{className:(0,s.Z)("menu__link",t),...r})})}function oe(e){let{mobile:t=!1,position:n,...r}=e;const s=t?se:re;return(0,m.jsx)(s,{...r,activeClassName:r.activeClassName??(t?"menu__link--active":"navbar__link--active")})}var ie=n(86043),ae=n(48596),pe=n(52263);const ce={dropdownNavbarItemMobile:"dropdownNavbarItemMobile_S0Fm"};function me(e,t){return e.some((e=>function(e,t){return!!(0,ae.Mg)(e.to,t)||!!ee(e.activeBaseRegex,t)||!(!e.activeBasePath||!t.startsWith(e.activeBasePath))}(e,t)))}function de(e){let{items:t,position:n,className:o,onClick:i,...a}=e;const p=(0,r.useRef)(null),[c,d]=(0,r.useState)(!1);return(0,r.useEffect)((()=>{const e=e=>{p.current&&!p.current.contains(e.target)&&d(!1)};return document.addEventListener("mousedown",e),document.addEventListener("touchstart",e),document.addEventListener("focusin",e),()=>{document.removeEventListener("mousedown",e),document.removeEventListener("touchstart",e),document.removeEventListener("focusin",e)}}),[p]),(0,m.jsxs)("div",{ref:p,className:(0,s.Z)("navbar__item","dropdown","dropdown--hoverable",{"dropdown--right":"right"===n,"dropdown--show":c}),children:[(0,m.jsx)(ne,{"aria-haspopup":"true","aria-expanded":c,role:"button",href:a.to?void 0:"#",className:(0,s.Z)("navbar__link",o),...a,onClick:a.to?void 0:e=>e.preventDefault(),onKeyDown:e=>{"Enter"===e.key&&(e.preventDefault(),d(!c))},children:a.children??a.label}),(0,m.jsx)("ul",{className:"dropdown__menu",children:t.map(((e,t)=>(0,r.createElement)(Ke,{isDropdownItem:!0,activeClassName:"dropdown__link--active",...e,key:t})))})]})}function ue(e){let{items:t,className:n,position:o,onClick:i,...p}=e;const c=function(){const{siteConfig:{baseUrl:e}}=(0,pe.Z)(),{pathname:t}=(0,a.TH)();return t.replace(e,"/")}(),d=me(t,c),{collapsed:u,toggleCollapsed:l,setCollapsed:g}=(0,ie.u)({initialState:()=>!d});return(0,r.useEffect)((()=>{d&&g(!d)}),[c,d,g]),(0,m.jsxs)("li",{className:(0,s.Z)("menu__list-item",{"menu__list-item--collapsed":u}),children:[(0,m.jsx)(ne,{role:"button",className:(0,s.Z)(ce.dropdownNavbarItemMobile,"menu__link menu__link--sublist menu__link--sublist-caret",n),...p,onClick:e=>{e.preventDefault(),l()},children:p.children??p.label}),(0,m.jsx)(ie.z,{lazy:!0,as:"ul",className:"menu__list",collapsed:u,children:t.map(((e,t)=>(0,r.createElement)(Ke,{mobile:!0,isDropdownItem:!0,onClick:i,activeClassName:"menu__link--active",...e,key:t})))})]})}function le(e){let{mobile:t=!1,...n}=e;const r=t?ue:de;return(0,m.jsx)(r,{...n})}var ge=n(94711);function he(e){let{width:t=20,height:n=20,...r}=e;return(0,m.jsx)("svg",{viewBox:"0 0 24 24",width:t,height:n,"aria-hidden":!0,...r,children:(0,m.jsx)("path",{fill:"currentColor",d:"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"})})}const fe="iconLanguage_nlXk";var ye=n(61029),be=n(1728),xe=n(60373),we=n(94104),ve=n(90022),ke=n(98202),qe=n(73926),$e=n(91073),_e=n(82539),Ie=n(10726);const Ce='<svg width="20" height="20" viewBox="0 0 20 20"><path d="M17 6v12c0 .52-.2 1-1 1H4c-.7 0-1-.33-1-1V2c0-.55.42-1 1-1h8l5 5zM14 8h-3.13c-.51 0-.87-.34-.87-.87V4" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linejoin="round"></path></svg>',Re='<svg width="20" height="20" viewBox="0 0 20 20"><path d="M13 13h4-4V8H7v5h6v4-4H7V8H3h4V3v5h6V3v5h4-4v5zm-6 0v4-4H3h4z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg>',Le='<svg width="20" height="20" viewBox="0 0 20 20"><path d="M17 5H3h14zm0 5H3h14zm0 5H3h14z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linejoin="round"></path></svg>',Te='<svg width="20" height="20" viewBox="0 0 20 20"><g stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"><path d="M18 3v4c0 2-2 4-4 4H2"></path><path d="M8 17l-6-6 6-6"></path></g></svg>',Se='<svg width="40" height="40" viewBox="0 0 20 20" fill="none" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"><path d="M15.5 4.8c2 3 1.7 7-1 9.7h0l4.3 4.3-4.3-4.3a7.8 7.8 0 01-9.8 1m-2.2-2.2A7.8 7.8 0 0113.2 2.4M2 18L18 2"></path></svg>',Pe='<svg viewBox="0 0 24 54"><g stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"><path d="M8 6v42M20 27H8.3"></path></g></svg>',Ae='<svg viewBox="0 0 24 54"><g stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"><path d="M8 6v21M20 27H8.3"></path></g></svg>',Oe={searchBar:"searchBar_RVTs",dropdownMenu:"dropdownMenu_qbY6",searchBarLeft:"searchBarLeft_MXDe",suggestion:"suggestion_fB_2",cursor:"cursor_eG29",hitTree:"hitTree_kk6K",hitIcon:"hitIcon_a7Zy",hitPath:"hitPath_ieM4",noResultsIcon:"noResultsIcon_EBY5",hitFooter:"hitFooter_E9YW",hitWrapper:"hitWrapper_sAK8",hitTitle:"hitTitle_vyVt",hitAction:"hitAction_NqkB",hideAction:"hideAction_vcyE",noResults:"noResults_l6Q3",searchBarContainer:"searchBarContainer_NW3z",searchBarLoadingRing:"searchBarLoadingRing_YnHq",searchClearButton:"searchClearButton_qk4g",searchIndexLoading:"searchIndexLoading_EJ1f",searchHintContainer:"searchHintContainer_Pkmr",searchHint:"searchHint_iIMx",focused:"focused_OWtg",input:"input_FOTf",hint:"hint_URu1",suggestions:"suggestions_X8XU",dataset:"dataset_QiCy",empty:"empty_eITn"};function je(e){let{document:t,type:n,page:r,metadata:s,tokens:o,isInterOfTree:i,isLastOfTree:a}=e;const p=0===n,c=1===n,m=[];i?m.push(Pe):a&&m.push(Ae);const d=m.map((e=>`<span class="${Oe.hitTree}">${e}</span>`)),u=`<span class="${Oe.hitIcon}">${p?Ce:c?Re:Le}</span>`,l=[`<span class="${Oe.hitTitle}">${(0,Ie.o)(t.t,(0,$e.m)(s,"t"),o)}</span>`];if(!i&&!a&&ye.H6){const e=r?(r.b??[]).concat(r.t).concat(t.s&&t.s!==r.t?t.s:[]):t.b;l.push(`<span class="${Oe.hitPath}">${(0,qe.e)(e??[])}</span>`)}else p||l.push(`<span class="${Oe.hitPath}">${(0,_e.C)(r.t||(t.u.startsWith("/docs/api-reference/")?"API Reference":""),o)}</span>`);const g=`<span class="${Oe.hitAction}">${Te}</span>`;return[...d,u,`<span class="${Oe.hitWrapper}">`,...l,"</span>",g].join("")}function Ee(){return`<span class="${Oe.noResults}"><span class="${Oe.noResultsIcon}">${Se}</span><span>${(0,p.I)({id:"theme.SearchBar.noResultsText",message:"No results"})}</span></span>`}var Fe=n(80311),De=n(50051);async function Ue(){const e=await Promise.all([n.e(8443),n.e(5525)]).then(n.t.bind(n,68443,23)),t=e.default;return t.noConflict?t.noConflict():e.noConflict&&e.noConflict(),t}const Ge="_highlight";const Ne=function(e){let{handleSearchBarToggle:t}=e;const n=(0,U.Z)(),{siteConfig:{baseUrl:s},i18n:{currentLocale:o}}=(0,pe.Z)(),i=(0,we.gA)();let c=s;try{const{preferredVersion:e}=(0,xe.J)(i?.pluginId??ye.gQ);e&&!e.isLast&&(c=e.path+"/")}catch(F){if(ye.l9&&!(F instanceof S.i6))throw F}const d=(0,a.k6)(),u=(0,a.TH)(),l=(0,r.useRef)(null),g=(0,r.useRef)(new Map),h=(0,r.useRef)(!1),[f,y]=(0,r.useState)(!1),[b,x]=(0,r.useState)(!1),[w,v]=(0,r.useState)(""),k=(0,r.useRef)(null),q=(0,r.useRef)(""),[$,_]=(0,r.useState)("");(0,r.useEffect)((()=>{if(!Array.isArray(ye.Kc))return;let e="";if(u.pathname.startsWith(c)){const t=u.pathname.substring(c.length);let n;for(const e of ye.Kc){const r="string"==typeof e?e:e.path;if(t===r||t.startsWith(`${r}/`)){n=r;break}}n&&(e=n)}q.current!==e&&(g.current.delete(e),q.current=e),_(e)}),[u.pathname,c]);const I=!!ye.hG&&Array.isArray(ye.Kc)&&""===$,C=(0,r.useCallback)((async()=>{if(I||g.current.get($))return;g.current.set($,"loading"),k.current?.autocomplete.destroy(),y(!0);const[{wrappedIndexes:e,zhDictionary:t},n]=await Promise.all([(0,ve.w)(c,$),Ue()]);if(k.current=n(l.current,{hint:!1,autoselect:!0,openOnFocus:!0,cssClasses:{root:(0,be.Z)(Oe.searchBar,{[Oe.searchBarLeft]:"left"===ye.pu}),noPrefix:!0,dropdownMenu:Oe.dropdownMenu,input:Oe.input,hint:Oe.hint,suggestions:Oe.suggestions,suggestion:Oe.suggestion,cursor:Oe.cursor,dataset:Oe.dataset,empty:Oe.empty}},[{source:(0,ke.v)(e,t,ye.qo),templates:{suggestion:je,empty:Ee,footer:e=>{let{query:t,isEmpty:n}=e;if(n&&(!$||!ye.pQ))return;const r=(e=>{let{query:t,isEmpty:n}=e;const r=document.createElement("a"),i=new URLSearchParams;let a;if(i.set("q",t),$){const e=$&&Array.isArray(ye.Kc)?ye.Kc.find((e=>"string"==typeof e?e===$:e.path===$)):$,t=e?(0,De._)(e,o).label:$;a=ye.pQ&&n?(0,p.I)({id:"theme.SearchBar.seeAllOutsideContext",message:"See results outside {context}"},{context:t}):(0,p.I)({id:"theme.SearchBar.searchInContext",message:"See all results in {context}"},{context:t})}else a=(0,p.I)({id:"theme.SearchBar.seeAll",message:"See all results"});if(!$||!Array.isArray(ye.Kc)||ye.pQ&&n||i.set("ctx",$),c!==s){if(!c.startsWith(s))throw new Error(`Version url '${c}' does not start with base url '${s}', this is a bug of \`@easyops-cn/docusaurus-search-local\`, please report it.`);i.set("version",c.substring(s.length))}const m=`${s}search?${i.toString()}`;return r.href=m,r.textContent=a,r.addEventListener("click",(e=>{e.ctrlKey||e.metaKey||(e.preventDefault(),k.current?.autocomplete.close(),d.push(m))})),r})({query:t,isEmpty:n}),i=document.createElement("div");return i.className=Oe.hitFooter,i.appendChild(r),i}}}]).on("autocomplete:selected",(function(e,t){let{document:{u:n,h:r},tokens:s}=t;l.current?.blur();let o=n;if(ye.vc&&s.length>0){const e=new URLSearchParams;for(const t of s)e.append(Ge,t);o+=`?${e.toString()}`}r&&(o+=r),d.push(o)})).on("autocomplete:closed",(()=>{l.current?.blur()})),g.current.set($,"done"),y(!1),h.current){const e=l.current;e.value&&k.current?.autocomplete.open(),e.focus()}}),[I,$,c,s,d]);(0,r.useEffect)((()=>{if(!ye.vc)return;const e=n?new URLSearchParams(u.search).getAll(Ge):[];setTimeout((()=>{const t=document.querySelector("article");if(!t)return;const n=new ye.vc(t);n.unmark(),0!==e.length&&n.mark(e),v(e.join(" ")),k.current?.autocomplete.setVal(e.join(" "))}))}),[n,u.search,u.pathname]);const[R,L]=(0,r.useState)(!1),T=(0,r.useCallback)((()=>{h.current=!0,C(),L(!0),t?.(!0)}),[t,C]),P=(0,r.useCallback)((()=>{L(!1),t?.(!1)}),[t]),A=(0,r.useCallback)((()=>{C()}),[C]),O=(0,r.useCallback)((e=>{v(e.target.value),e.target.value&&x(!0)}),[]),j=!!n&&/mac/i.test(navigator.userAgentData?.platform??navigator.platform);(0,r.useEffect)((()=>{if(!ye.AY)return;const e=e=>{!(j?e.metaKey:e.ctrlKey)||"k"!==e.key&&"K"!==e.key||(e.preventDefault(),l.current?.focus(),T())};return document.addEventListener("keydown",e),()=>{document.removeEventListener("keydown",e)}}),[j,T]);const E=(0,r.useCallback)((()=>{const e=new URLSearchParams(u.search);e.delete(Ge);const t=e.toString(),n=u.pathname+(""!=t?`?${t}`:"")+u.hash;n!=u.pathname+u.search+u.hash&&d.push(n),v(""),k.current?.autocomplete.setVal("")}),[u.pathname,u.search,u.hash,d]);return(0,m.jsxs)("div",{className:(0,be.Z)("navbar__search",Oe.searchBarContainer,{[Oe.searchIndexLoading]:f&&b,[Oe.focused]:R}),hidden:I,children:[(0,m.jsx)("input",{placeholder:(0,p.I)({id:"theme.SearchBar.label",message:"Search",description:"The ARIA label and placeholder for search button"}),"aria-label":"Search",className:"navbar__search-input",onMouseEnter:A,onFocus:T,onBlur:P,onChange:O,ref:l,value:w}),(0,m.jsx)(Fe.Z,{className:Oe.searchBarLoadingRing}),ye.AY&&ye.t_&&(""!==w?(0,m.jsx)("button",{className:Oe.searchClearButton,onClick:E,children:"\u2715"}):n&&(0,m.jsxs)("div",{className:Oe.searchHintContainer,children:[(0,m.jsx)("kbd",{className:Oe.searchHint,children:j?"\u2318":"ctrl"}),(0,m.jsx)("kbd",{className:Oe.searchHint,children:"K"})]}))]})},ze={navbarSearchContainer:"navbarSearchContainer_Bca1"};function Be(e){let{children:t,className:n}=e;return(0,m.jsx)("div",{className:(0,s.Z)(n,ze.navbarSearchContainer),children:t})}var Me=n(52802);const He=e=>e.docs.find((t=>t.id===e.mainDocId));const We={default:oe,localeDropdown:function(e){let{mobile:t,dropdownItemsBefore:n,dropdownItemsAfter:r,queryString:s="",...o}=e;const{i18n:{currentLocale:i,locales:c,localeConfigs:d}}=(0,pe.Z)(),u=(0,ge.l)(),{search:l,hash:g}=(0,a.TH)(),h=[...n,...c.map((e=>{const n=`${`pathname://${u.createUrl({locale:e,fullyQualified:!1})}`}${l}${g}${s}`;return{label:d[e].label,lang:d[e].htmlLang,to:n,target:"_self",autoAddBaseUrl:!1,className:e===i?t?"menu__link--active":"dropdown__link--active":""}})),...r],f=t?(0,p.I)({message:"Languages",id:"theme.navbar.mobileLanguageDropdown.label",description:"The label for the mobile language switcher dropdown"}):d[i].label;return(0,m.jsx)(le,{...o,mobile:t,label:(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(he,{className:fe}),f]}),items:h})},search:function(e){let{mobile:t,className:n}=e;return t?null:(0,m.jsx)(Be,{className:n,children:(0,m.jsx)(Ne,{})})},dropdown:le,html:function(e){let{value:t,className:n,mobile:r=!1,isDropdownItem:o=!1}=e;const i=o?"li":"div";return(0,m.jsx)(i,{className:(0,s.Z)({navbar__item:!r&&!o,"menu__list-item":r},n),dangerouslySetInnerHTML:{__html:t}})},doc:function(e){let{docId:t,label:n,docsPluginId:r,...s}=e;const{activeDoc:o}=(0,we.Iw)(r),i=(0,Me.vY)(t,r),a=o?.path===i?.path;return null===i||i.unlisted&&!a?null:(0,m.jsx)(oe,{exact:!0,...s,isActive:()=>a||!!o?.sidebar&&o.sidebar===i.sidebar,label:n??i.id,to:i.path})},docSidebar:function(e){let{sidebarId:t,label:n,docsPluginId:r,...s}=e;const{activeDoc:o}=(0,we.Iw)(r),i=(0,Me.oz)(t,r).link;if(!i)throw new Error(`DocSidebarNavbarItem: Sidebar with ID "${t}" doesn't have anything to be linked to.`);return(0,m.jsx)(oe,{exact:!0,...s,isActive:()=>o?.sidebar===t,label:n??i.label,to:i.path})},docsVersion:function(e){let{label:t,to:n,docsPluginId:r,...s}=e;const o=(0,Me.lO)(r)[0],i=t??o.label,a=n??(e=>e.docs.find((t=>t.id===e.mainDocId)))(o).path;return(0,m.jsx)(oe,{...s,label:i,to:a})},docsVersionDropdown:function(e){let{mobile:t,docsPluginId:n,dropdownActiveClassDisabled:r,dropdownItemsBefore:s,dropdownItemsAfter:o,...i}=e;const{search:c,hash:d}=(0,a.TH)(),u=(0,we.Iw)(n),l=(0,we.gB)(n),{savePreferredVersionName:g}=(0,xe.J)(n),h=[...s,...l.map((e=>{const t=u.alternateDocVersions[e.name]??He(e);return{label:e.label,to:`${t.path}${c}${d}`,isActive:()=>e===u.activeVersion,onClick:()=>g(e.name)}})),...o],f=(0,Me.lO)(n)[0],y=t&&h.length>1?(0,p.I)({id:"theme.navbar.mobileVersionsDropdown.label",message:"Versions",description:"The label for the navbar versions dropdown on mobile view"}):f.label,b=t&&h.length>1?void 0:He(f).path;return h.length<=1?(0,m.jsx)(oe,{...i,mobile:t,label:y,to:b,isActive:r?()=>!1:void 0}):(0,m.jsx)(le,{...i,mobile:t,label:y,to:b,items:h,isActive:r?()=>!1:void 0})},"custom-apiDropdown":function(e){const{pathname:t}=(0,a.TH)();let n=e.label,r=!1;for(const o of e.items)if(t===o.to||t===`/zh-cn${o.to}`){e.mobile||(n=o.label),r=!0;break}const s={...e,label:n};return(0,m.jsx)(le,{...s,className:"api-dropdown"+(r?"":" gt-hidden")})}};function Ke(e){let{type:t,...n}=e;const r=function(e,t){return e&&"default"!==e?e:"items"in t?"dropdown":"default"}(t,n),s=We[r];if(!s)throw new Error(`No NavbarItem component found for type "${t}".`);return(0,m.jsx)(s,{...n})}function Ve(){const e=(0,L.e)(),t=(0,w.L)().navbar.items;return(0,m.jsx)("ul",{className:"menu__list",children:t.map(((t,n)=>(0,r.createElement)(Ke,{mobile:!0,...t,onClick:()=>e.toggle(),key:n})))})}function Qe(e){return(0,m.jsx)("button",{...e,type:"button",className:"clean-btn navbar-sidebar__back",children:(0,m.jsx)(p.Z,{id:"theme.navbar.mobileSidebarSecondaryMenu.backButtonLabel",description:"The label of the back button to return to main menu, inside the mobile navbar sidebar secondary menu (notably used to display the docs sidebar)",children:"\u2190 Back to main menu"})})}function Ze(){const e=0===(0,w.L)().navbar.items.length,t=E();return(0,m.jsxs)(m.Fragment,{children:[!e&&(0,m.jsx)(Qe,{onClick:()=>t.hide()}),t.content]})}function Xe(){const e=(0,L.e)();var t;return void 0===(t=e.shown)&&(t=!0),(0,r.useEffect)((()=>(document.body.style.overflow=t?"hidden":"visible",()=>{document.body.style.overflow="visible"})),[t]),e.shouldRender?(0,m.jsx)(F,{header:(0,m.jsx)(Z,{}),primaryMenu:(0,m.jsx)(Ve,{}),secondaryMenu:(0,m.jsx)(Ze,{})}):null}const Ye={navbarHideable:"navbarHideable_m1mJ",navbarHidden:"navbarHidden_jGov"};function Je(e){return(0,m.jsx)("div",{role:"presentation",...e,className:(0,s.Z)("navbar-sidebar__backdrop",e.className)})}function et(e){let{children:t}=e;const{navbar:{hideOnScroll:n,style:o}}=(0,w.L)(),i=(0,L.e)(),{navbarRef:a,isNavbarVisible:d}=function(e){const[t,n]=(0,r.useState)(e),s=(0,r.useRef)(!1),o=(0,r.useRef)(0),i=(0,r.useCallback)((e=>{null!==e&&(o.current=e.getBoundingClientRect().height)}),[]);return(0,T.RF)(((t,r)=>{let{scrollY:i}=t;if(!e)return;if(i<o.current)return void n(!0);if(s.current)return void(s.current=!1);const a=r?.scrollY,p=document.documentElement.scrollHeight-o.current,c=window.innerHeight;a&&i>=a?n(!1):i+c<p&&n(!0)})),(0,c.S)((t=>{if(!e)return;const r=t.location.hash;if(r?document.getElementById(r.substring(1)):void 0)return s.current=!0,void n(!1);n(!0)})),{navbarRef:i,isNavbarVisible:t}}(n);return(0,m.jsxs)("nav",{ref:a,"aria-label":(0,p.I)({id:"theme.NavBar.navAriaLabel",message:"Main",description:"The ARIA label for the main navigation"}),className:(0,s.Z)("navbar","navbar--fixed-top",n&&[Ye.navbarHideable,!d&&Ye.navbarHidden],{"navbar--dark":"dark"===o,"navbar--primary":"primary"===o,"navbar-sidebar--show":i.shown}),children:[t,(0,m.jsx)(Je,{onClick:i.toggle}),(0,m.jsx)(Xe,{})]})}var tt=n(18780);const nt={errorBoundaryError:"errorBoundaryError_a6uf",errorBoundaryFallback:"errorBoundaryFallback_VBag"};function rt(e){return(0,m.jsx)("button",{type:"button",...e,children:(0,m.jsx)(p.Z,{id:"theme.ErrorPageContent.tryAgain",description:"The label of the button to try again rendering when the React error boundary captures an error",children:"Try again"})})}function st(e){let{error:t}=e;const n=(0,tt.getErrorCausalChain)(t).map((e=>e.message)).join("\n\nCause:\n");return(0,m.jsx)("p",{className:nt.errorBoundaryError,children:n})}class ot extends r.Component{componentDidCatch(e,t){throw this.props.onError(e,t)}render(){return this.props.children}}const it="right";function at(e){let{width:t=30,height:n=30,className:r,...s}=e;return(0,m.jsx)("svg",{className:r,width:t,height:n,viewBox:"0 0 30 30","aria-hidden":"true",...s,children:(0,m.jsx)("path",{stroke:"currentColor",strokeLinecap:"round",strokeMiterlimit:"10",strokeWidth:"2",d:"M4 7h22M4 15h22M4 23h22"})})}function pt(){const{toggle:e,shown:t}=(0,L.e)();return(0,m.jsx)("button",{onClick:e,"aria-label":(0,p.I)({id:"theme.docs.sidebar.toggleSidebarButtonAriaLabel",message:"Toggle navigation bar",description:"The ARIA label for hamburger menu button of mobile navigation"}),"aria-expanded":t,className:"navbar__toggle clean-btn",type:"button",children:(0,m.jsx)(at,{})})}const ct={colorModeToggle:"colorModeToggle_DEke"};function mt(e){let{items:t}=e;return(0,m.jsx)(m.Fragment,{children:t.map(((e,t)=>(0,m.jsx)(ot,{onError:t=>new Error(`A theme navbar item failed to render.\nPlease double-check the following navbar item (themeConfig.navbar.items) of your Docusaurus config:\n${JSON.stringify(e,null,2)}`,{cause:t}),children:(0,m.jsx)(Ke,{...e})},t)))})}function dt(e){let{left:t,right:n}=e;return(0,m.jsxs)("div",{className:"navbar__inner",children:[(0,m.jsx)("div",{className:"navbar__items",children:t}),(0,m.jsx)("div",{className:"navbar__items navbar__items--right",children:n})]})}function ut(){const e=(0,L.e)(),t=(0,w.L)().navbar.items,[n,r]=function(e){function t(e){return"left"===(e.position??it)}return[e.filter(t),e.filter((e=>!t(e)))]}(t),s=t.find((e=>"search"===e.type));return(0,m.jsx)(dt,{left:(0,m.jsxs)(m.Fragment,{children:[!e.disabled&&(0,m.jsx)(pt,{}),(0,m.jsx)(V,{}),(0,m.jsx)(mt,{items:n})]}),right:(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(mt,{items:r}),(0,m.jsx)(W,{className:ct.colorModeToggle}),!s&&(0,m.jsx)(Be,{children:(0,m.jsx)(Ne,{})})]})})}function lt(){return(0,m.jsx)(et,{children:(0,m.jsx)(ut,{})})}function gt(e){let{item:t}=e;const{to:n,href:r,label:s,prependBaseUrlToHref:o,...i}=t,a=(0,Y.Z)(n),p=(0,Y.Z)(r,{forcePrependBaseUrl:!0});return(0,m.jsxs)(X.Z,{className:"footer__link-item",...r?{href:o?p:r}:{to:a},...i,children:[s,r&&!(0,J.Z)(r)&&(0,m.jsx)(te.Z,{})]})}function ht(e){let{item:t}=e;return t.html?(0,m.jsx)("li",{className:"footer__item",dangerouslySetInnerHTML:{__html:t.html}}):(0,m.jsx)("li",{className:"footer__item",children:(0,m.jsx)(gt,{item:t})},t.href??t.to)}function ft(e){let{column:t}=e;return(0,m.jsxs)("div",{className:"col footer__col",children:[(0,m.jsx)("div",{className:"footer__title",children:t.title}),(0,m.jsx)("ul",{className:"footer__items clean-list",children:t.items.map(((e,t)=>(0,m.jsx)(ht,{item:e},t)))})]})}function yt(e){let{columns:t}=e;return(0,m.jsx)("div",{className:"row footer__links",children:t.map(((e,t)=>(0,m.jsx)(ft,{column:e},t)))})}function bt(){return(0,m.jsx)("span",{className:"footer__link-separator",children:"\xb7"})}function xt(e){let{item:t}=e;return t.html?(0,m.jsx)("span",{className:"footer__link-item",dangerouslySetInnerHTML:{__html:t.html}}):(0,m.jsx)(gt,{item:t})}function wt(e){let{links:t}=e;return(0,m.jsx)("div",{className:"footer__links text--center",children:(0,m.jsx)("div",{className:"footer__links",children:t.map(((e,n)=>(0,m.jsxs)(r.Fragment,{children:[(0,m.jsx)(xt,{item:e}),t.length!==n+1&&(0,m.jsx)(bt,{})]},n)))})})}function vt(e){let{links:t}=e;return function(e){return"title"in e[0]}(t)?(0,m.jsx)(yt,{columns:t}):(0,m.jsx)(wt,{links:t})}var kt=n(19965);const qt={footerLogoLink:"footerLogoLink_BH7S"};function $t(e){let{logo:t}=e;const{withBaseUrl:n}=(0,Y.C)(),r={light:n(t.src),dark:n(t.srcDark??t.src)};return(0,m.jsx)(kt.Z,{className:(0,s.Z)("footer__logo",t.className),alt:t.alt,sources:r,width:t.width,height:t.height,style:t.style})}function _t(e){let{logo:t}=e;return t.href?(0,m.jsx)(X.Z,{href:t.href,className:qt.footerLogoLink,target:t.target,children:(0,m.jsx)($t,{logo:t})}):(0,m.jsx)($t,{logo:t})}function It(e){let{copyright:t}=e;return(0,m.jsx)("div",{className:"footer__copyright",dangerouslySetInnerHTML:{__html:t}})}function Ct(e){let{style:t,links:n,logo:r,copyright:o}=e;return(0,m.jsx)("footer",{className:(0,s.Z)("footer",{"footer--dark":"dark"===t}),children:(0,m.jsxs)("div",{className:"container container-fluid",children:[n,(r||o)&&(0,m.jsxs)("div",{className:"footer__bottom text--center",children:[r&&(0,m.jsx)("div",{className:"margin-bottom--sm",children:r}),o]})]})})}function Rt(){const{footer:e}=(0,w.L)();if(!e)return null;const{copyright:t,links:n,logo:r,style:s}=e;return(0,m.jsx)(Ct,{style:s,links:n&&n.length>0&&(0,m.jsx)(vt,{links:n}),logo:r&&(0,m.jsx)(_t,{logo:r}),copyright:t&&(0,m.jsx)(It,{copyright:t})})}const Lt=r.memo(Rt),Tt=(0,S.Qc)([D.S,v.pl,T.OC,xe.L5,i.VC,function(e){let{children:t}=e;return(0,m.jsx)(P.n2,{children:(0,m.jsx)(L.M,{children:(0,m.jsx)(O,{children:t})})})}]);function St(e){let{children:t}=e;return(0,m.jsx)(Tt,{children:t})}var Pt=n(92503);function At(e){let{error:t,tryAgain:n}=e;return(0,m.jsx)("main",{className:"container margin-vert--xl",children:(0,m.jsx)("div",{className:"row",children:(0,m.jsxs)("div",{className:"col col--6 col--offset-3",children:[(0,m.jsx)(Pt.Z,{as:"h1",className:"hero__title",children:(0,m.jsx)(p.Z,{id:"theme.ErrorPageContent.title",description:"The title of the fallback page when the page crashed",children:"This page crashed."})}),(0,m.jsx)("div",{className:"margin-vert--lg",children:(0,m.jsx)(rt,{onClick:n,className:"button button--primary shadow--lw"})}),(0,m.jsx)("hr",{}),(0,m.jsx)("div",{className:"margin-vert--md",children:(0,m.jsx)(st,{error:t})})]})})})}const Ot={mainWrapper:"mainWrapper_z2l0"};function jt(e){const{children:t,noFooter:n,wrapperClassName:r,title:a,description:p}=e;return(0,y.t)(),(0,m.jsxs)(St,{children:[(0,m.jsx)(i.d,{title:a,description:p}),(0,m.jsx)(x,{}),(0,m.jsx)(R,{}),(0,m.jsx)(lt,{}),(0,m.jsx)("div",{id:d,className:(0,s.Z)(f.k.wrapper.main,Ot.mainWrapper,r),children:(0,m.jsx)(o.Z,{fallback:e=>(0,m.jsx)(At,{...e}),children:t})}),!n&&(0,m.jsx)(Lt,{})]})}},21327:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});n(67294);var r=n(33692),s=n(44996),o=n(52263),i=n(86668),a=n(19965),p=n(85893);function c(e){let{logo:t,alt:n,imageClassName:r}=e;const o={light:(0,s.Z)(t.src),dark:(0,s.Z)(t.srcDark||t.src)},i=(0,p.jsx)(a.Z,{className:t.className,sources:o,height:t.height,width:t.width,alt:n,style:t.style});return r?(0,p.jsx)("div",{className:r,children:i}):i}function m(e){const{siteConfig:{title:t}}=(0,o.Z)(),{navbar:{title:n,logo:a}}=(0,i.L)(),{imageClassName:m,titleClassName:d,...u}=e,l=(0,s.Z)(a?.href||"/"),g=n?"":t,h=a?.alt??g;return(0,p.jsxs)(r.Z,{to:l,...u,...a?.target&&{target:a.target},children:[a&&(0,p.jsx)(c,{logo:a,alt:h,imageClassName:m}),null!=n&&(0,p.jsx)("b",{className:d,children:n})]})}},90197:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});n(67294);var r=n(35742),s=n(85893);function o(e){let{locale:t,version:n,tag:o}=e;const i=t;return(0,s.jsxs)(r.Z,{children:[t&&(0,s.jsx)("meta",{name:"docusaurus_locale",content:t}),n&&(0,s.jsx)("meta",{name:"docusaurus_version",content:n}),o&&(0,s.jsx)("meta",{name:"docusaurus_tag",content:o}),i&&(0,s.jsx)("meta",{name:"docsearch:language",content:i}),n&&(0,s.jsx)("meta",{name:"docsearch:version",content:n}),o&&(0,s.jsx)("meta",{name:"docsearch:docusaurus_tag",content:o})]})}},19965:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});var r=n(67294),s=n(90512),o=n(72389),i=n(92949);const a={themedComponent:"themedComponent_mlkZ","themedComponent--light":"themedComponent--light_NVdE","themedComponent--dark":"themedComponent--dark_xIcU"};var p=n(85893);function c(e){let{className:t,children:n}=e;const c=(0,o.Z)(),{colorMode:m}=(0,i.I)();return(0,p.jsx)(p.Fragment,{children:(c?"dark"===m?["dark"]:["light"]:["light","dark"]).map((e=>{const o=n({theme:e,className:(0,s.Z)(t,a.themedComponent,a[`themedComponent--${e}`])});return(0,p.jsx)(r.Fragment,{children:o},e)}))})}function m(e){const{sources:t,className:n,alt:r,...s}=e;return(0,p.jsx)(c,{className:n,children:e=>{let{theme:n,className:o}=e;return(0,p.jsx)("img",{src:t[n],alt:r,className:o,...s})}})}},86043:(e,t,n)=>{"use strict";n.d(t,{u:()=>c,z:()=>y});var r=n(67294),s=n(10412),o=n(20469),i=n(91442),a=n(85893);const p="ease-in-out";function c(e){let{initialState:t}=e;const[n,s]=(0,r.useState)(t??!1),o=(0,r.useCallback)((()=>{s((e=>!e))}),[]);return{collapsed:n,setCollapsed:s,toggleCollapsed:o}}const m={display:"none",overflow:"hidden",height:"0px"},d={display:"block",overflow:"visible",height:"auto"};function u(e,t){const n=t?m:d;e.style.display=n.display,e.style.overflow=n.overflow,e.style.height=n.height}function l(e){let{collapsibleRef:t,collapsed:n,animation:s}=e;const o=(0,r.useRef)(!1);(0,r.useEffect)((()=>{const e=t.current;function r(){const t=e.scrollHeight,n=s?.duration??function(e){if((0,i.n)())return 1;const t=e/36;return Math.round(10*(4+15*t**.25+t/5))}(t);return{transition:`height ${n}ms ${s?.easing??p}`,height:`${t}px`}}function a(){const t=r();e.style.transition=t.transition,e.style.height=t.height}if(!o.current)return u(e,n),void(o.current=!0);return e.style.willChange="height",function(){const t=requestAnimationFrame((()=>{n?(a(),requestAnimationFrame((()=>{e.style.height=m.height,e.style.overflow=m.overflow}))):(e.style.display="block",requestAnimationFrame((()=>{a()})))}));return()=>cancelAnimationFrame(t)}()}),[t,n,s])}function g(e){if(!s.default.canUseDOM)return e?m:d}function h(e){let{as:t="div",collapsed:n,children:s,animation:o,onCollapseTransitionEnd:i,className:p,disableSSRStyle:c}=e;const m=(0,r.useRef)(null);return l({collapsibleRef:m,collapsed:n,animation:o}),(0,a.jsx)(t,{ref:m,style:c?void 0:g(n),onTransitionEnd:e=>{"height"===e.propertyName&&(u(m.current,n),i?.(n))},className:p,children:s})}function f(e){let{collapsed:t,...n}=e;const[s,i]=(0,r.useState)(!t),[p,c]=(0,r.useState)(t);return(0,o.Z)((()=>{t||i(!0)}),[t]),(0,o.Z)((()=>{s&&c(t)}),[s,t]),s?(0,a.jsx)(h,{...n,collapsed:p}):null}function y(e){let{lazy:t,...n}=e;const r=t?f:h;return(0,a.jsx)(r,{...n})}},59689:(e,t,n)=>{"use strict";n.d(t,{nT:()=>h,pl:()=>g});var r=n(67294),s=n(72389),o=n(50012),i=n(902),a=n(86668),p=n(85893);const c=(0,o.WA)("docusaurus.announcement.dismiss"),m=(0,o.WA)("docusaurus.announcement.id"),d=()=>"true"===c.get(),u=e=>c.set(String(e)),l=r.createContext(null);function g(e){let{children:t}=e;const n=function(){const{announcementBar:e}=(0,a.L)(),t=(0,s.Z)(),[n,o]=(0,r.useState)((()=>!!t&&d()));(0,r.useEffect)((()=>{o(d())}),[]);const i=(0,r.useCallback)((()=>{u(!0),o(!0)}),[]);return(0,r.useEffect)((()=>{if(!e)return;const{id:t}=e;let n=m.get();"annoucement-bar"===n&&(n="announcement-bar");const r=t!==n;m.set(t),r&&u(!1),!r&&d()||o(!1)}),[e]),(0,r.useMemo)((()=>({isActive:!!e&&!n,close:i})),[e,n,i])}();return(0,p.jsx)(l.Provider,{value:n,children:t})}function h(){const e=(0,r.useContext)(l);if(!e)throw new i.i6("AnnouncementBarProvider");return e}},92949:(e,t,n)=>{"use strict";n.d(t,{I:()=>y,S:()=>f});var r=n(67294),s=n(10412),o=n(902),i=n(50012),a=n(86668),p=n(85893);const c=r.createContext(void 0),m="theme",d=(0,i.WA)(m),u={light:"light",dark:"dark"},l=e=>e===u.dark?u.dark:u.light,g=e=>s.default.canUseDOM?l(document.documentElement.getAttribute("data-theme")):l(e),h=e=>{d.set(l(e))};function f(e){let{children:t}=e;const n=function(){const{colorMode:{defaultMode:e,disableSwitch:t,respectPrefersColorScheme:n}}=(0,a.L)(),[s,o]=(0,r.useState)(g(e));(0,r.useEffect)((()=>{t&&d.del()}),[t]);const i=(0,r.useCallback)((function(t,r){void 0===r&&(r={});const{persist:s=!0}=r;t?(o(t),s&&h(t)):(o(n?window.matchMedia("(prefers-color-scheme: dark)").matches?u.dark:u.light:e),d.del())}),[n,e]);(0,r.useEffect)((()=>{document.documentElement.setAttribute("data-theme",l(s))}),[s]),(0,r.useEffect)((()=>{if(t)return;const e=e=>{if(e.key!==m)return;const t=d.get();null!==t&&i(l(t))};return window.addEventListener("storage",e),()=>window.removeEventListener("storage",e)}),[t,i]);const p=(0,r.useRef)(!1);return(0,r.useEffect)((()=>{if(t&&!n)return;const e=window.matchMedia("(prefers-color-scheme: dark)"),r=()=>{window.matchMedia("print").matches||p.current?p.current=window.matchMedia("print").matches:i(null)};return e.addListener(r),()=>e.removeListener(r)}),[i,t,n]),(0,r.useMemo)((()=>({colorMode:s,setColorMode:i,get isDarkTheme(){return s===u.dark},setLightTheme(){i(u.light)},setDarkTheme(){i(u.dark)}})),[s,i])}();return(0,p.jsx)(c.Provider,{value:n,children:t})}function y(){const e=(0,r.useContext)(c);if(null==e)throw new o.i6("ColorModeProvider","Please see https://docusaurus.io/docs/api/themes/configuration#use-color-mode.");return e}},60373:(e,t,n)=>{"use strict";n.d(t,{J:()=>x,L5:()=>y});var r=n(67294),s=n(94104),o=n(29935),i=n(86668),a=n(52802),p=n(902),c=n(50012),m=n(85893);const d=e=>`docs-preferred-version-${e}`,u={save:(e,t,n)=>{(0,c.WA)(d(e),{persistence:t}).set(n)},read:(e,t)=>(0,c.WA)(d(e),{persistence:t}).get(),clear:(e,t)=>{(0,c.WA)(d(e),{persistence:t}).del()}},l=e=>Object.fromEntries(e.map((e=>[e,{preferredVersionName:null}])));const g=r.createContext(null);function h(){const e=(0,s._r)(),t=(0,i.L)().docs.versionPersistence,n=(0,r.useMemo)((()=>Object.keys(e)),[e]),[o,a]=(0,r.useState)((()=>l(n)));(0,r.useEffect)((()=>{a(function(e){let{pluginIds:t,versionPersistence:n,allDocsData:r}=e;function s(e){const t=u.read(e,n);return r[e].versions.some((e=>e.name===t))?{preferredVersionName:t}:(u.clear(e,n),{preferredVersionName:null})}return Object.fromEntries(t.map((e=>[e,s(e)])))}({allDocsData:e,versionPersistence:t,pluginIds:n}))}),[e,t,n]);return[o,(0,r.useMemo)((()=>({savePreferredVersion:function(e,n){u.save(e,t,n),a((t=>({...t,[e]:{preferredVersionName:n}})))}})),[t])]}function f(e){let{children:t}=e;const n=h();return(0,m.jsx)(g.Provider,{value:n,children:t})}function y(e){let{children:t}=e;return a.cE?(0,m.jsx)(f,{children:t}):(0,m.jsx)(m.Fragment,{children:t})}function b(){const e=(0,r.useContext)(g);if(!e)throw new p.i6("DocsPreferredVersionContextProvider");return e}function x(e){void 0===e&&(e=o.m);const t=(0,s.zh)(e),[n,i]=b(),{preferredVersionName:a}=n[e];return{preferredVersion:t.versions.find((e=>e.name===a))??null,savePreferredVersionName:(0,r.useCallback)((t=>{i.savePreferredVersion(e,t)}),[i,e])}}},1116:(e,t,n)=>{"use strict";n.d(t,{V:()=>c,b:()=>p});var r=n(67294),s=n(902),o=n(85893);const i=Symbol("EmptyContext"),a=r.createContext(i);function p(e){let{children:t,name:n,items:s}=e;const i=(0,r.useMemo)((()=>n&&s?{name:n,items:s}:null),[n,s]);return(0,o.jsx)(a.Provider,{value:i,children:t})}function c(){const e=(0,r.useContext)(a);if(e===i)throw new s.i6("DocsSidebarProvider");return e}},74477:(e,t,n)=>{"use strict";n.d(t,{E:()=>p,q:()=>a});var r=n(67294),s=n(902),o=n(85893);const i=r.createContext(null);function a(e){let{children:t,version:n}=e;return(0,o.jsx)(i.Provider,{value:n,children:t})}function p(){const e=(0,r.useContext)(i);if(null===e)throw new s.i6("DocsVersionProvider");return e}},72961:(e,t,n)=>{"use strict";n.d(t,{M:()=>l,e:()=>g});var r=n(67294),s=n(13102),o=n(87524),i=n(16550),a=n(902);function p(e){!function(e){const t=(0,i.k6)(),n=(0,a.zX)(e);(0,r.useEffect)((()=>t.block(((e,t)=>n(e,t)))),[t,n])}(((t,n)=>{if("POP"===n)return e(t,n)}))}var c=n(86668),m=n(85893);const d=r.createContext(void 0);function u(){const e=function(){const e=(0,s.HY)(),{items:t}=(0,c.L)().navbar;return 0===t.length&&!e.component}(),t=(0,o.i)(),n=!e&&"mobile"===t,[i,a]=(0,r.useState)(!1);p((()=>{if(i)return a(!1),!1}));const m=(0,r.useCallback)((()=>{a((e=>!e))}),[]);return(0,r.useEffect)((()=>{"desktop"===t&&a(!1)}),[t]),(0,r.useMemo)((()=>({disabled:e,shouldRender:n,toggle:m,shown:i})),[e,n,m,i])}function l(e){let{children:t}=e;const n=u();return(0,m.jsx)(d.Provider,{value:n,children:t})}function g(){const e=r.useContext(d);if(void 0===e)throw new a.i6("NavbarMobileSidebarProvider");return e}},13102:(e,t,n)=>{"use strict";n.d(t,{HY:()=>p,Zo:()=>c,n2:()=>a});var r=n(67294),s=n(902),o=n(85893);const i=r.createContext(null);function a(e){let{children:t}=e;const n=(0,r.useState)({component:null,props:null});return(0,o.jsx)(i.Provider,{value:n,children:t})}function p(){const e=(0,r.useContext)(i);if(!e)throw new s.i6("NavbarSecondaryMenuContentProvider");return e[0]}function c(e){let{component:t,props:n}=e;const o=(0,r.useContext)(i);if(!o)throw new s.i6("NavbarSecondaryMenuContentProvider");const[,a]=o,p=(0,s.Ql)(n);return(0,r.useEffect)((()=>{a({component:t,props:p})}),[a,t,p]),(0,r.useEffect)((()=>()=>a({component:null,props:null})),[a]),null}},19727:(e,t,n)=>{"use strict";n.d(t,{h:()=>s,t:()=>o});var r=n(67294);const s="navigation-with-keyboard";function o(){(0,r.useEffect)((()=>{function e(e){"keydown"===e.type&&"Tab"===e.key&&document.body.classList.add(s),"mousedown"===e.type&&document.body.classList.remove(s)}return document.addEventListener("keydown",e),document.addEventListener("mousedown",e),()=>{document.body.classList.remove(s),document.removeEventListener("keydown",e),document.removeEventListener("mousedown",e)}}),[])}},87524:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var r=n(67294),s=n(10412);const o={desktop:"desktop",mobile:"mobile",ssr:"ssr"},i=996;function a(e){let{desktopBreakpoint:t=i}=void 0===e?{}:e;const[n,a]=(0,r.useState)((()=>"ssr"));return(0,r.useEffect)((()=>{function e(){a(function(e){if(!s.default.canUseDOM)throw new Error("getWindowSize() should only be called after React hydration");return window.innerWidth>e?o.desktop:o.mobile}(t))}return e(),window.addEventListener("resize",e),()=>{window.removeEventListener("resize",e)}}),[t]),n}},35281:(e,t,n)=>{"use strict";n.d(t,{k:()=>r});const r={page:{blogListPage:"blog-list-page",blogPostPage:"blog-post-page",blogTagsListPage:"blog-tags-list-page",blogTagPostListPage:"blog-tags-post-list-page",docsDocPage:"docs-doc-page",docsTagsListPage:"docs-tags-list-page",docsTagDocListPage:"docs-tags-doc-list-page",mdxPage:"mdx-page"},wrapper:{main:"main-wrapper",blogPages:"blog-wrapper",docsPages:"docs-wrapper",mdxPages:"mdx-wrapper"},common:{editThisPage:"theme-edit-this-page",lastUpdated:"theme-last-updated",backToTopButton:"theme-back-to-top-button",codeBlock:"theme-code-block",admonition:"theme-admonition",unlistedBanner:"theme-unlisted-banner",admonitionType:e=>`theme-admonition-${e}`},layout:{},docs:{docVersionBanner:"theme-doc-version-banner",docVersionBadge:"theme-doc-version-badge",docBreadcrumbs:"theme-doc-breadcrumbs",docMarkdown:"theme-doc-markdown",docTocMobile:"theme-doc-toc-mobile",docTocDesktop:"theme-doc-toc-desktop",docFooter:"theme-doc-footer",docFooterTagsRow:"theme-doc-footer-tags-row",docFooterEditMetaRow:"theme-doc-footer-edit-meta-row",docSidebarContainer:"theme-doc-sidebar-container",docSidebarMenu:"theme-doc-sidebar-menu",docSidebarItemCategory:"theme-doc-sidebar-item-category",docSidebarItemLink:"theme-doc-sidebar-item-link",docSidebarItemCategoryLevel:e=>`theme-doc-sidebar-item-category-level-${e}`,docSidebarItemLinkLevel:e=>`theme-doc-sidebar-item-link-level-${e}`},blog:{}}},91442:(e,t,n)=>{"use strict";function r(){return window.matchMedia("(prefers-reduced-motion: reduce)").matches}n.d(t,{n:()=>r})},52802:(e,t,n)=>{"use strict";n.d(t,{MN:()=>C,LM:()=>g,_F:()=>b,cE:()=>u,jA:()=>h,xz:()=>l,SN:()=>I,lO:()=>q,vY:()=>_,oz:()=>$,s1:()=>k,f:()=>w});var r=n(67294),s=n(16550),o=n(18790),i=n(94104),a=n(60373),p=n(74477),c=n(1116);function m(e){return Array.from(new Set(e))}var d=n(48596);const u=!!i._r;function l(e){const t=(0,p.E)();if(!e)return;const n=t.docs[e];if(!n)throw new Error(`no version doc found by id=${e}`);return n}function g(e){return"link"!==e.type||e.unlisted?"category"===e.type?function(e){if(e.href&&!e.linkUnlisted)return e.href;for(const t of e.items){const e=g(t);if(e)return e}}(e):void 0:e.href}function h(){const{pathname:e}=(0,s.TH)(),t=(0,c.V)();if(!t)throw new Error("Unexpected: cant find current sidebar in context");const n=v({sidebarItems:t.items,pathname:e,onlyCategories:!0}).slice(-1)[0];if(!n)throw new Error(`${e} is not associated with a category. useCurrentSidebarCategory() should only be used on category index pages.`);return n}const f=(e,t)=>void 0!==e&&(0,d.Mg)(e,t),y=(e,t)=>e.some((e=>b(e,t)));function b(e,t){return"link"===e.type?f(e.href,t):"category"===e.type&&(f(e.href,t)||y(e.items,t))}function x(e,t){switch(e.type){case"category":return b(e,t)||e.items.some((e=>x(e,t)));case"link":return!e.unlisted||b(e,t);default:return!0}}function w(e,t){return(0,r.useMemo)((()=>e.filter((e=>x(e,t)))),[e,t])}function v(e){let{sidebarItems:t,pathname:n,onlyCategories:r=!1}=e;const s=[];return function e(t){for(const o of t)if("category"===o.type&&((0,d.Mg)(o.href,n)||e(o.items))||"link"===o.type&&(0,d.Mg)(o.href,n)){return r&&"category"!==o.type||s.unshift(o),!0}return!1}(t),s}function k(){const e=(0,c.V)(),{pathname:t}=(0,s.TH)(),n=(0,i.gA)()?.pluginData.breadcrumbs;return!1!==n&&e?v({sidebarItems:e.items,pathname:t}):null}function q(e){const{activeVersion:t}=(0,i.Iw)(e),{preferredVersion:n}=(0,a.J)(e),s=(0,i.yW)(e);return(0,r.useMemo)((()=>m([t,n,s].filter(Boolean))),[t,n,s])}function $(e,t){const n=q(t);return(0,r.useMemo)((()=>{const t=n.flatMap((e=>e.sidebars?Object.entries(e.sidebars):[])),r=t.find((t=>t[0]===e));if(!r)throw new Error(`Can't find any sidebar with id "${e}" in version${n.length>1?"s":""} ${n.map((e=>e.name)).join(", ")}".\nAvailable sidebar ids are:\n- ${t.map((e=>e[0])).join("\n- ")}`);return r[1]}),[e,n])}function _(e,t){const n=q(t);return(0,r.useMemo)((()=>{const t=n.flatMap((e=>e.docs)),r=t.find((t=>t.id===e));if(!r){if(n.flatMap((e=>e.draftIds)).includes(e))return null;throw new Error(`Couldn't find any doc with id "${e}" in version${n.length>1?"s":""} "${n.map((e=>e.name)).join(", ")}".\nAvailable doc ids are:\n- ${m(t.map((e=>e.id))).join("\n- ")}`)}return r}),[e,n])}function I(e){let{route:t}=e;const n=(0,s.TH)(),r=(0,p.E)(),i=t.routes,a=i.find((e=>(0,s.LX)(n.pathname,e)));if(!a)return null;const c=a.sidebar,m=c?r.docsSidebars[c]:void 0;return{docElement:(0,o.H)(i),sidebarName:c,sidebarItems:m}}function C(e){return e.filter((e=>!("category"===e.type||"link"===e.type)||!!g(e)))}},1944:(e,t,n)=>{"use strict";n.d(t,{FG:()=>l,d:()=>d,VC:()=>g});var r=n(67294),s=n(90512),o=n(35742),i=n(30226);function a(){const e=r.useContext(i._);if(!e)throw new Error("Unexpected: no Docusaurus route context found");return e}var p=n(44996),c=n(52263);var m=n(85893);function d(e){let{title:t,description:n,keywords:r,image:s,children:i}=e;const a=function(e){const{siteConfig:t}=(0,c.Z)(),{title:n,titleDelimiter:r}=t;return e?.trim().length?`${e.trim()} ${r} ${n}`:n}(t),{withBaseUrl:d}=(0,p.C)(),u=s?d(s,{absolute:!0}):void 0;return(0,m.jsxs)(o.Z,{children:[t&&(0,m.jsx)("title",{children:a}),t&&(0,m.jsx)("meta",{property:"og:title",content:a}),n&&(0,m.jsx)("meta",{name:"description",content:n}),n&&(0,m.jsx)("meta",{property:"og:description",content:n}),r&&(0,m.jsx)("meta",{name:"keywords",content:Array.isArray(r)?r.join(","):r}),u&&(0,m.jsx)("meta",{property:"og:image",content:u}),u&&(0,m.jsx)("meta",{name:"twitter:image",content:u}),i]})}const u=r.createContext(void 0);function l(e){let{className:t,children:n}=e;const i=r.useContext(u),a=(0,s.Z)(i,t);return(0,m.jsxs)(u.Provider,{value:a,children:[(0,m.jsx)(o.Z,{children:(0,m.jsx)("html",{className:a})}),n]})}function g(e){let{children:t}=e;const n=a(),r=`plugin-${n.plugin.name.replace(/docusaurus-(?:plugin|theme)-(?:content-)?/gi,"")}`;const o=`plugin-id-${n.plugin.id}`;return(0,m.jsx)(l,{className:(0,s.Z)(r,o),children:t})}},902:(e,t,n)=>{"use strict";n.d(t,{D9:()=>a,Qc:()=>m,Ql:()=>c,i6:()=>p,zX:()=>i});var r=n(67294),s=n(20469),o=n(85893);function i(e){const t=(0,r.useRef)(e);return(0,s.Z)((()=>{t.current=e}),[e]),(0,r.useCallback)((function(){return t.current(...arguments)}),[])}function a(e){const t=(0,r.useRef)();return(0,s.Z)((()=>{t.current=e})),t.current}class p extends Error{constructor(e,t){super(),this.name="ReactContextError",this.message=`Hook ${this.stack?.split("\n")[1]?.match(/at (?:\w+\.)?(?<name>\w+)/)?.groups.name??""} is called outside the <${e}>. ${t??""}`}}function c(e){const t=Object.entries(e);return t.sort(((e,t)=>e[0].localeCompare(t[0]))),(0,r.useMemo)((()=>e),t.flat())}function m(e){return t=>{let{children:n}=t;return(0,o.jsx)(o.Fragment,{children:e.reduceRight(((e,t)=>(0,o.jsx)(t,{children:e})),n)})}}},48596:(e,t,n)=>{"use strict";n.d(t,{Mg:()=>i,Ns:()=>a});var r=n(67294),s=n(723),o=n(52263);function i(e,t){const n=e=>(!e||e.endsWith("/")?e:`${e}/`)?.toLowerCase();return n(e)===n(t)}function a(){const{baseUrl:e}=(0,o.Z)().siteConfig;return(0,r.useMemo)((()=>function(e){let{baseUrl:t,routes:n}=e;function r(e){return e.path===t&&!0===e.exact}function s(e){return e.path===t&&!e.exact}return function e(t){if(0===t.length)return;return t.find(r)||e(t.filter(s).flatMap((e=>e.routes??[])))}(n)}({routes:s.Z,baseUrl:e})),[e])}},12466:(e,t,n)=>{"use strict";n.d(t,{Ct:()=>l,OC:()=>c,RF:()=>u});var r=n(67294),s=n(10412),o=n(72389),i=(n(20469),n(902)),a=n(85893);const p=r.createContext(void 0);function c(e){let{children:t}=e;const n=function(){const e=(0,r.useRef)(!0);return(0,r.useMemo)((()=>({scrollEventsEnabledRef:e,enableScrollEvents:()=>{e.current=!0},disableScrollEvents:()=>{e.current=!1}})),[])}();return(0,a.jsx)(p.Provider,{value:n,children:t})}function m(){const e=(0,r.useContext)(p);if(null==e)throw new i.i6("ScrollControllerProvider");return e}const d=()=>s.default.canUseDOM?{scrollX:window.pageXOffset,scrollY:window.pageYOffset}:null;function u(e,t){void 0===t&&(t=[]);const{scrollEventsEnabledRef:n}=m(),s=(0,r.useRef)(d()),o=(0,i.zX)(e);(0,r.useEffect)((()=>{const e=()=>{if(!n.current)return;const e=d();o(e,s.current),s.current=e},t={passive:!0};return e(),window.addEventListener("scroll",e,t),()=>window.removeEventListener("scroll",e,t)}),[o,n,...t])}function l(){const e=(0,r.useRef)(null),t=(0,o.Z)()&&"smooth"===getComputedStyle(document.documentElement).scrollBehavior;return{startScroll:n=>{e.current=t?function(e){return window.scrollTo({top:e,behavior:"smooth"}),()=>{}}(n):function(e){let t=null;const n=document.documentElement.scrollTop>e;return function r(){const s=document.documentElement.scrollTop;(n&&s>e||!n&&s<e)&&(t=requestAnimationFrame(r),window.scrollTo(0,Math.floor(.85*(s-e))+e))}(),()=>t&&cancelAnimationFrame(t)}(n)},cancelScroll:()=>e.current?.()}}},43320:(e,t,n)=>{"use strict";n.d(t,{HX:()=>r,os:()=>s});n(52263);const r="default";function s(e,t){return`docs-${e}-${t}`}},50012:(e,t,n)=>{"use strict";n.d(t,{WA:()=>p});n(67294);const r="localStorage";function s(e){let{key:t,oldValue:n,newValue:r,storage:s}=e;if(n===r)return;const o=document.createEvent("StorageEvent");o.initStorageEvent("storage",!1,!1,t,n,r,window.location.href,s),window.dispatchEvent(o)}function o(e){if(void 0===e&&(e=r),"undefined"==typeof window)throw new Error("Browser storage is not available on Node.js/Docusaurus SSR process.");if("none"===e)return null;try{return window[e]}catch(n){return t=n,i||(console.warn("Docusaurus browser storage is not available.\nPossible reasons: running Docusaurus in an iframe, in an incognito browser session, or using too strict browser privacy settings.",t),i=!0),null}var t}let i=!1;const a={get:()=>null,set:()=>{},del:()=>{},listen:()=>()=>{}};function p(e,t){if("undefined"==typeof window)return function(e){function t(){throw new Error(`Illegal storage API usage for storage key "${e}".\nDocusaurus storage APIs are not supposed to be called on the server-rendering process.\nPlease only call storage APIs in effects and event handlers.`)}return{get:t,set:t,del:t,listen:t}}(e);const n=o(t?.persistence);return null===n?a:{get:()=>{try{return n.getItem(e)}catch(t){return console.error(`Docusaurus storage error, can't get key=${e}`,t),null}},set:t=>{try{const r=n.getItem(e);n.setItem(e,t),s({key:e,oldValue:r,newValue:t,storage:n})}catch(r){console.error(`Docusaurus storage error, can't set ${e}=${t}`,r)}},del:()=>{try{const t=n.getItem(e);n.removeItem(e),s({key:e,oldValue:t,newValue:null,storage:n})}catch(t){console.error(`Docusaurus storage error, can't delete key=${e}`,t)}},listen:t=>{try{const r=r=>{r.storageArea===n&&r.key===e&&t(r)};return window.addEventListener("storage",r),()=>window.removeEventListener("storage",r)}catch(r){return console.error(`Docusaurus storage error, can't listen for changes of key=${e}`,r),()=>{}}}}}},94711:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(52263),s=n(16550),o=n(18780);function i(){const{siteConfig:{baseUrl:e,url:t,trailingSlash:n},i18n:{defaultLocale:i,currentLocale:a}}=(0,r.Z)(),{pathname:p}=(0,s.TH)(),c=(0,o.applyTrailingSlash)(p,{trailingSlash:n,baseUrl:e}),m=a===i?e:e.replace(`/${a}/`,"/"),d=c.replace(e,"");return{createUrl:function(e){let{locale:n,fullyQualified:r}=e;return`${r?t:""}${function(e){return e===i?`${m}`:`${m}${e}/`}(n)}${d}`}}}},85936:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(67294),s=n(16550),o=n(902);function i(e){const t=(0,s.TH)(),n=(0,o.D9)(t),i=(0,o.zX)(e);(0,r.useEffect)((()=>{n&&t!==n&&i({location:t,previousLocation:n})}),[i,t,n])}},86668:(e,t,n)=>{"use strict";n.d(t,{L:()=>s});var r=n(52263);function s(){return(0,r.Z)().siteConfig.themeConfig}},8802:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){const{trailingSlash:n,baseUrl:r}=t;if(e.startsWith("#"))return e;if(void 0===n)return e;const[s]=e.split(/[#?]/),o="/"===s||s===r?s:(i=s,n?function(e){return e.endsWith("/")?e:`${e}/`}(i):function(e){return e.endsWith("/")?e.slice(0,-1):e}(i));var i;return e.replace(s,o)}},54143:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getErrorCausalChain=void 0,t.getErrorCausalChain=function e(t){return t.cause?[t,...e(t.cause)]:[t]}},18780:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getErrorCausalChain=t.applyTrailingSlash=t.blogPostContainerID=void 0,t.blogPostContainerID="__blog-post-container";var s=n(8802);Object.defineProperty(t,"applyTrailingSlash",{enumerable:!0,get:function(){return r(s).default}});var o=n(54143);Object.defineProperty(t,"getErrorCausalChain",{enumerable:!0,get:function(){return o.getErrorCausalChain}})},80311:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});n(67294);var r=n(1728);const s={loadingRing:"loadingRing_RJI3","loading-ring":"loading-ring_FB5o"};var o=n(85893);function i(e){let{className:t}=e;return(0,o.jsxs)("div",{className:(0,r.Z)(s.loadingRing,t),children:[(0,o.jsx)("div",{}),(0,o.jsx)("div",{}),(0,o.jsx)("div",{}),(0,o.jsx)("div",{})]})}},90022:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var r=n(31336),s=n.n(r),o=n(61029);const i=new Map;function a(e,t){const n=`${e}${t}`;let r=i.get(n);return r||(r=async function(e,t){{const n=`${e}${o.J.replace("{dir}",t?`-${t.replace(/\//g,"-")}`:"")}`;if(new URL(n,location.origin).origin!==location.origin)throw new Error("Unexpected version url");const r=await(await fetch(n)).json(),i=r.map(((e,t)=>{let{documents:n,index:r}=e;return{type:t,documents:n,index:s().Index.load(r)}})),a=r.reduce(((e,t)=>{for(const n of t.index.invertedIndex)/\p{Unified_Ideograph}/u.test(n[0][0])&&e.add(n[0]);return e}),new Set);return{wrappedIndexes:i,zhDictionary:Array.from(a)}}return{wrappedIndexes:[],zhDictionary:[]}}(e,t),i.set(n,r)),r}},98202:(e,t,n)=>{"use strict";n.d(t,{v:()=>p});var r=n(31336),s=n.n(r);var o=n(61029);function i(e){return a(e).concat(a(e.filter((e=>{const t=e[e.length-1];return!t.trailing&&t.maybeTyping})),!0))}function a(e,t){return e.map((e=>({tokens:e.map((e=>e.value)),term:e.map((e=>({value:e.value,presence:s().Query.presence.REQUIRED,wildcard:(t?e.trailing||e.maybeTyping:e.trailing)?s().Query.wildcard.TRAILING:s().Query.wildcard.NONE})))})))}function p(e,t,n){return function(r,a){const p=function(e,t){if(1===t.length&&["ja","jp","th"].includes(t[0]))return s()[t[0]].tokenizer(e).map((e=>e.toString()));let n=/[^-\s]+/g;return t.includes("zh")&&(n=/\w+|\p{Unified_Ideograph}+/gu),e.toLowerCase().match(n)||[]}(r,o.dK);if(0===p.length)return void a([]);const c=function(e,t){const n=function(e,t){const n=[];return function e(r,s){if(0===r.length)return void n.push(s);const o=r[0];if(/\p{Unified_Ideograph}/u.test(o)){const n=function(e,t){const n=[];return function e(r,s){let o=0,i=!1;for(const a of t)if(r.substr(0,a.length)===a){const t={missed:s.missed,term:s.term.concat({value:a})};r.length>a.length?e(r.substr(a.length),t):n.push(t),i=!0}else for(let t=a.length-1;t>o;t-=1){const p=a.substr(0,t);if(r.substr(0,t)===p){o=t;const a={missed:s.missed,term:s.term.concat({value:p,trailing:!0})};r.length>t?e(r.substr(t),a):n.push(a),i=!0;break}}i||(r.length>0?e(r.substr(1),{missed:s.missed+1,term:s.term}):s.term.length>0&&n.push(s))}(e,{missed:0,term:[]}),n.sort(((e,t)=>{const n=e.missed>0?1:0,r=t.missed>0?1:0;return n!==r?n-r:e.term.length-t.term.length})).map((e=>e.term))}(o,t);for(const t of n){const n=s.concat(...t);e(r.slice(1),n)}}else{const t=s.concat({value:o});e(r.slice(1),t)}}(e,[]),n}(e,t);if(0===n.length)return[{tokens:e,term:e.map((e=>({value:e,presence:s().Query.presence.REQUIRED,wildcard:s().Query.wildcard.LEADING|s().Query.wildcard.TRAILING})))}];for(const s of n)s[s.length-1].maybeTyping=!0;const r=[];for(const i of o.dK)if("en"===i)o._k||r.unshift(s().stopWordFilter);else{const e=s()[i];e.stopWordFilter&&r.unshift(e.stopWordFilter)}let a;if(r.length>0){const e=e=>r.reduce(((e,t)=>e.filter((e=>t(e.value)))),e);a=[];const t=[];for(const r of n){const n=e(r);a.push(n),n.length<r.length&&n.length>0&&t.push(n)}n.push(...t)}else a=n.slice();const p=[];for(const s of a)if(s.length>2)for(let e=s.length-1;e>=0;e-=1)p.push(s.slice(0,e).concat(s.slice(e+1)));return i(n).concat(i(p))}(p,t),m=[];e:for(const{term:t,tokens:s}of c)for(const{documents:r,index:o,type:i}of e)if(m.push(...o.query((e=>{for(const n of t)e.term(n.value,{wildcard:n.wildcard,presence:n.presence})})).slice(0,n).filter((e=>!m.some((t=>t.document.i.toString()===e.ref)))).slice(0,n-m.length).map((t=>{const n=r.find((e=>e.i.toString()===t.ref));return{document:n,type:i,page:0!==i&&e[0].documents.find((e=>e.i===n.p)),metadata:t.matchData.metadata,tokens:s,score:t.score}}))),m.length>=n)break e;!function(e){e.forEach(((e,t)=>{e.index=t})),e.sort(((t,n)=>{let r=t.type>0&&t.page?e.findIndex((e=>e.document===t.page)):t.index,s=n.type>0&&n.page?e.findIndex((e=>e.document===n.page)):n.index;return-1===r&&(r=t.index),-1===s&&(s=n.index),r===s?0===t.type?-1:0===n.type?1:t.index-n.index:r-s}))}(m),function(e){e.forEach(((t,n)=>{n>0&&t.page&&e.some((e=>e.document===t.page))&&(n<e.length-1&&e[n+1].page===t.page?t.isInterOfTree=!0:t.isLastOfTree=!0)}))}(m),a(m)}}},73926:(e,t,n)=>{"use strict";function r(e){return e.join(" \u203a ")}n.d(t,{e:()=>r})},21690:(e,t,n)=>{"use strict";function r(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}n.d(t,{X:()=>r})},91073:(e,t,n)=>{"use strict";function r(e,t){const n=[];for(const r of Object.values(e))r[t]&&n.push(...r[t].position);return n.sort(((e,t)=>e[0]-t[0]||t[1]-e[1]))}n.d(t,{m:()=>r})},82539:(e,t,n)=>{"use strict";n.d(t,{C:()=>s});var r=n(21690);function s(e,t,n){const o=[];for(const i of t){const n=e.toLowerCase().indexOf(i);if(n>=0){n>0&&o.push(s(e.substr(0,n),t)),o.push(`<mark>${(0,r.X)(e.substr(n,i.length))}</mark>`);const a=n+i.length;a<e.length&&o.push(s(e.substr(a),t));break}}return 0===o.length?n?`<mark>${(0,r.X)(e)}</mark>`:(0,r.X)(e):o.join("")}},10726:(e,t,n)=>{"use strict";n.d(t,{o:()=>p});var r=n(21690),s=n(82539);const o=/\w+|\p{Unified_Ideograph}/u;function i(e){const t=[];let n=0,r=e;for(;r.length>0;){const s=r.match(o);if(!s){t.push(r);break}s.index>0&&t.push(r.substring(0,s.index)),t.push(s[0]),n+=s.index+s[0].length,r=e.substring(n)}return t}var a=n(61029);function p(e,t,n,o){void 0===o&&(o=a.Hk);const{chunkIndex:p,chunks:c}=function(e,t,n){const o=[];let a=0,p=0,c=-1;for(;a<t.length;){const[m,d]=t[a];if(a+=1,!(m<p)){if(m>p){const t=i(e.substring(p,m)).map((e=>({html:(0,r.X)(e),textLength:e.length})));for(const e of t)o.push(e)}-1===c&&(c=o.length),p=m+d,o.push({html:(0,s.C)(e.substring(m,p),n,!0),textLength:d})}}if(p<e.length){const t=i(e.substring(p)).map((e=>({html:(0,r.X)(e),textLength:e.length})));for(const e of t)o.push(e)}return{chunkIndex:c,chunks:o}}(e,t,n),m=c.slice(0,p),d=c[p],u=[d.html],l=c.slice(p+1);let g=d.textLength,h=0,f=0,y=!1,b=!1;for(;g<o;)if((h<=f||0===l.length)&&m.length>0){const e=m.pop();g+e.textLength<=o?(u.unshift(e.html),h+=e.textLength,g+=e.textLength):(y=!0,m.length=0)}else{if(!(l.length>0))break;{const e=l.shift();g+e.textLength<=o?(u.push(e.html),f+=e.textLength,g+=e.textLength):(b=!0,l.length=0)}}return(y||m.length>0)&&u.unshift("\u2026"),(b||l.length>0)&&u.push("\u2026"),u.join("")}},50051:(e,t,n)=>{"use strict";function r(e,t){if("string"==typeof e)return{label:e,path:e};{const{label:n,path:r}=e;return"string"==typeof n?{label:n,path:r}:Object.prototype.hasOwnProperty.call(n,t)?{label:n[t],path:r}:{label:r,path:r}}}n.d(t,{_:()=>r})},61029:(e,t,n)=>{"use strict";n.d(t,{vc:()=>i(),gQ:()=>f,H6:()=>u,hG:()=>x,l9:()=>y,dK:()=>a,_k:()=>p,pu:()=>h,AY:()=>l,t_:()=>g,Kc:()=>b,J:()=>c,Hk:()=>d,qo:()=>m,pQ:()=>w});var r=n(31336),s=n.n(r),o=n(813),i=n.n(o);n(30892)(s()),n(91728).w(s()),n(74182)(s());const a=["en","zh"],p=!1,c="search-index{dir}.json",m=8,d=50,u=!0,l=!0,g=!0,h="right",f=void 0,y=!0,b=null,x=!1,w=!1},91728:(e,t,n)=>{"use strict";function r(e){const t=new RegExp("^[^"+e+"]+","u"),n=new RegExp("[^"+e+"]+$","u");return function(e){return e.update((function(e){return e.replace(t,"").replace(n,"")}))}}function s(e,t){e.trimmerSupport.generateTrimmer=r,e.zh=function(){this.pipeline.reset(),this.pipeline.add(e.zh.trimmer,e.zh.stopWordFilter),t&&(this.tokenizer=t)},t&&(e.zh.tokenizer=t),e.zh.wordCharacters="\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29\\u{20000}-\\u{2A6DD}\\u{2A700}-\\u{2B734}\\u{2B740}-\\u{2B81D}\\u{2B820}-\\u{2CEA1}\\u{2CEB0}-\\u{2EBE0}\\u{30000}-\\u{3134A}",e.zh.trimmer=e.trimmerSupport.generateTrimmer(e.zh.wordCharacters),e.Pipeline.registerFunction(e.zh.trimmer,"trimmer-zh"),e.zh.stopWordFilter=e.generateStopWordFilter("\u7684 \u4e00 \u4e0d \u5728 \u4eba \u6709 \u662f \u4e3a \u4ee5 \u4e8e \u4e0a \u4ed6 \u800c \u540e \u4e4b \u6765 \u53ca \u4e86 \u56e0 \u4e0b \u53ef \u5230 \u7531 \u8fd9 \u4e0e \u4e5f \u6b64 \u4f46 \u5e76 \u4e2a \u5176 \u5df2 \u65e0 \u5c0f \u6211 \u4eec \u8d77 \u6700 \u518d \u4eca \u53bb \u597d \u53ea \u53c8 \u6216 \u5f88 \u4ea6 \u67d0 \u628a \u90a3 \u4f60 \u4e43 \u5b83 \u5427 \u88ab \u6bd4 \u522b \u8d81 \u5f53 \u4ece \u5230 \u5f97 \u6253 \u51e1 \u513f \u5c14 \u8be5 \u5404 \u7ed9 \u8ddf \u548c \u4f55 \u8fd8 \u5373 \u51e0 \u65e2 \u770b \u636e \u8ddd \u9760 \u5566 \u4e86 \u53e6 \u4e48 \u6bcf \u4eec \u561b \u62ff \u54ea \u90a3 \u60a8 \u51ed \u4e14 \u5374 \u8ba9 \u4ecd \u5565 \u5982 \u82e5 \u4f7f \u8c01 \u867d \u968f \u540c \u6240 \u5979 \u54c7 \u55e1 \u5f80 \u54ea \u4e9b \u5411 \u6cbf \u54df \u7528 \u4e8e \u54b1 \u5219 \u600e \u66fe \u81f3 \u81f4 \u7740 \u8bf8 \u81ea".split(" ")),e.Pipeline.registerFunction(e.zh.stopWordFilter,"stopWordFilter-zh")}n.d(t,{w:()=>s})},34838:(e,t,n)=>{"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var s=((r=n(10412))&&r.__esModule?r:{default:r}).default.canUseDOM?{onRouteUpdate(e){let{location:t}=e;if(t&&void 0!==window.plausibleExcludePaths&&window.plausibleExcludePaths.some((e=>e.test(t.pathname))))return null;window.plausible("pageview")}}:null;t.default=s},4750:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});r(n(10412)).default.canUseDOM&&(window.Prism=window.Prism||{},window.Prism.manual=!0)},99318:(e,t,n)=>{"use strict";n.d(t,{lX:()=>w,q_:()=>I,ob:()=>l,PP:()=>R,Ep:()=>u});var r=n(87462);function s(e){return"/"===e.charAt(0)}function o(e,t){for(var n=t,r=n+1,s=e.length;r<s;n+=1,r+=1)e[n]=e[r];e.pop()}const i=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],i=t&&t.split("/")||[],a=e&&s(e),p=t&&s(t),c=a||p;if(e&&s(e)?i=r:r.length&&(i.pop(),i=i.concat(r)),!i.length)return"/";if(i.length){var m=i[i.length-1];n="."===m||".."===m||""===m}else n=!1;for(var d=0,u=i.length;u>=0;u--){var l=i[u];"."===l?o(i,u):".."===l?(o(i,u),d++):d&&(o(i,u),d--)}if(!c)for(;d--;d)i.unshift("..");!c||""===i[0]||i[0]&&s(i[0])||i.unshift("");var g=i.join("/");return n&&"/"!==g.substr(-1)&&(g+="/"),g};var a=n(38776);function p(e){return"/"===e.charAt(0)?e:"/"+e}function c(e){return"/"===e.charAt(0)?e.substr(1):e}function m(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function d(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function u(e){var t=e.pathname,n=e.search,r=e.hash,s=t||"/";return n&&"?"!==n&&(s+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(s+="#"===r.charAt(0)?r:"#"+r),s}function l(e,t,n,s){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",s=t.indexOf("#");-1!==s&&(r=t.substr(s),t=t.substr(0,s));var o=t.indexOf("?");return-1!==o&&(n=t.substr(o),t=t.substr(0,o)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e),o.state=t):(void 0===(o=(0,r.Z)({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(a){throw a instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):a}return n&&(o.key=n),s?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=i(o.pathname,s.pathname)):o.pathname=s.pathname:o.pathname||(o.pathname="/"),o}function g(){var e=null;var t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,s){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof r?r(o,s):s(!0):s(!1!==o)}else s(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var h=!("undefined"==typeof window||!window.document||!window.document.createElement);function f(e,t){t(window.confirm(e))}var y="popstate",b="hashchange";function x(){try{return window.history.state||{}}catch(e){return{}}}function w(e){void 0===e&&(e={}),h||(0,a.Z)(!1);var t,n=window.history,s=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e,c=i.forceRefresh,w=void 0!==c&&c,v=i.getUserConfirmation,k=void 0===v?f:v,q=i.keyLength,$=void 0===q?6:q,_=e.basename?d(p(e.basename)):"";function I(e){var t=e||{},n=t.key,r=t.state,s=window.location,o=s.pathname+s.search+s.hash;return _&&(o=m(o,_)),l(o,r,n)}function C(){return Math.random().toString(36).substr(2,$)}var R=g();function L(e){(0,r.Z)(N,e),N.length=n.length,R.notifyListeners(N.location,N.action)}function T(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||A(I(e.state))}function S(){A(I(x()))}var P=!1;function A(e){if(P)P=!1,L();else{R.confirmTransitionTo(e,"POP",k,(function(t){t?L({action:"POP",location:e}):function(e){var t=N.location,n=j.indexOf(t.key);-1===n&&(n=0);var r=j.indexOf(e.key);-1===r&&(r=0);var s=n-r;s&&(P=!0,F(s))}(e)}))}}var O=I(x()),j=[O.key];function E(e){return _+u(e)}function F(e){n.go(e)}var D=0;function U(e){1===(D+=e)&&1===e?(window.addEventListener(y,T),o&&window.addEventListener(b,S)):0===D&&(window.removeEventListener(y,T),o&&window.removeEventListener(b,S))}var G=!1;var N={length:n.length,action:"POP",location:O,createHref:E,push:function(e,t){var r="PUSH",o=l(e,t,C(),N.location);R.confirmTransitionTo(o,r,k,(function(e){if(e){var t=E(o),i=o.key,a=o.state;if(s)if(n.pushState({key:i,state:a},null,t),w)window.location.href=t;else{var p=j.indexOf(N.location.key),c=j.slice(0,p+1);c.push(o.key),j=c,L({action:r,location:o})}else window.location.href=t}}))},replace:function(e,t){var r="REPLACE",o=l(e,t,C(),N.location);R.confirmTransitionTo(o,r,k,(function(e){if(e){var t=E(o),i=o.key,a=o.state;if(s)if(n.replaceState({key:i,state:a},null,t),w)window.location.replace(t);else{var p=j.indexOf(N.location.key);-1!==p&&(j[p]=o.key),L({action:r,location:o})}else window.location.replace(t)}}))},go:F,goBack:function(){F(-1)},goForward:function(){F(1)},block:function(e){void 0===e&&(e=!1);var t=R.setPrompt(e);return G||(U(1),G=!0),function(){return G&&(G=!1,U(-1)),t()}},listen:function(e){var t=R.appendListener(e);return U(1),function(){U(-1),t()}}};return N}var v="hashchange",k={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+c(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:c,decodePath:p},slash:{encodePath:p,decodePath:p}};function q(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function $(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function _(e){window.location.replace(q(window.location.href)+"#"+e)}function I(e){void 0===e&&(e={}),h||(0,a.Z)(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),s=n.getUserConfirmation,o=void 0===s?f:s,i=n.hashType,c=void 0===i?"slash":i,y=e.basename?d(p(e.basename)):"",b=k[c],x=b.encodePath,w=b.decodePath;function I(){var e=w($());return y&&(e=m(e,y)),l(e)}var C=g();function R(e){(0,r.Z)(G,e),G.length=t.length,C.notifyListeners(G.location,G.action)}var L=!1,T=null;function S(){var e,t,n=$(),r=x(n);if(n!==r)_(r);else{var s=I(),i=G.location;if(!L&&(t=s,(e=i).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(T===u(s))return;T=null,function(e){if(L)L=!1,R();else{var t="POP";C.confirmTransitionTo(e,t,o,(function(n){n?R({action:t,location:e}):function(e){var t=G.location,n=j.lastIndexOf(u(t));-1===n&&(n=0);var r=j.lastIndexOf(u(e));-1===r&&(r=0);var s=n-r;s&&(L=!0,E(s))}(e)}))}}(s)}}var P=$(),A=x(P);P!==A&&_(A);var O=I(),j=[u(O)];function E(e){t.go(e)}var F=0;function D(e){1===(F+=e)&&1===e?window.addEventListener(v,S):0===F&&window.removeEventListener(v,S)}var U=!1;var G={length:t.length,action:"POP",location:O,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=q(window.location.href)),n+"#"+x(y+u(e))},push:function(e,t){var n="PUSH",r=l(e,void 0,void 0,G.location);C.confirmTransitionTo(r,n,o,(function(e){if(e){var t=u(r),s=x(y+t);if($()!==s){T=t,function(e){window.location.hash=e}(s);var o=j.lastIndexOf(u(G.location)),i=j.slice(0,o+1);i.push(t),j=i,R({action:n,location:r})}else R()}}))},replace:function(e,t){var n="REPLACE",r=l(e,void 0,void 0,G.location);C.confirmTransitionTo(r,n,o,(function(e){if(e){var t=u(r),s=x(y+t);$()!==s&&(T=t,_(s));var o=j.indexOf(u(G.location));-1!==o&&(j[o]=t),R({action:n,location:r})}}))},go:E,goBack:function(){E(-1)},goForward:function(){E(1)},block:function(e){void 0===e&&(e=!1);var t=C.setPrompt(e);return U||(D(1),U=!0),function(){return U&&(U=!1,D(-1)),t()}},listen:function(e){var t=C.appendListener(e);return D(1),function(){D(-1),t()}}};return G}function C(e,t,n){return Math.min(Math.max(e,t),n)}function R(e){void 0===e&&(e={});var t=e,n=t.getUserConfirmation,s=t.initialEntries,o=void 0===s?["/"]:s,i=t.initialIndex,a=void 0===i?0:i,p=t.keyLength,c=void 0===p?6:p,m=g();function d(e){(0,r.Z)(w,e),w.length=w.entries.length,m.notifyListeners(w.location,w.action)}function h(){return Math.random().toString(36).substr(2,c)}var f=C(a,0,o.length-1),y=o.map((function(e){return l(e,void 0,"string"==typeof e?h():e.key||h())})),b=u;function x(e){var t=C(w.index+e,0,w.entries.length-1),r=w.entries[t];m.confirmTransitionTo(r,"POP",n,(function(e){e?d({action:"POP",location:r,index:t}):d()}))}var w={length:y.length,action:"POP",location:y[f],index:f,entries:y,createHref:b,push:function(e,t){var r="PUSH",s=l(e,t,h(),w.location);m.confirmTransitionTo(s,r,n,(function(e){if(e){var t=w.index+1,n=w.entries.slice(0);n.length>t?n.splice(t,n.length-t,s):n.push(s),d({action:r,location:s,index:t,entries:n})}}))},replace:function(e,t){var r="REPLACE",s=l(e,t,h(),w.location);m.confirmTransitionTo(s,r,n,(function(e){e&&(w.entries[w.index]=s,d({action:r,location:s}))}))},go:x,goBack:function(){x(-1)},goForward:function(){x(1)},canGo:function(e){var t=w.index+e;return t>=0&&t<w.entries.length},block:function(e){return void 0===e&&(e=!1),m.setPrompt(e)},listen:function(e){return m.appendListener(e)}};return w}},8679:(e,t,n)=>{"use strict";var r=n(21296),s={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},a={};function p(e){return r.isMemo(e)?i:a[e.$$typeof]||s}a[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},a[r.Memo]=i;var c=Object.defineProperty,m=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,u=Object.getOwnPropertyDescriptor,l=Object.getPrototypeOf,g=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(g){var s=l(n);s&&s!==g&&e(t,s,r)}var i=m(n);d&&(i=i.concat(d(n)));for(var a=p(t),h=p(n),f=0;f<i.length;++f){var y=i[f];if(!(o[y]||r&&r[y]||h&&h[y]||a&&a[y])){var b=u(n,y);try{c(t,y,b)}catch(x){}}}}return t}},96103:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,s=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,a=n?Symbol.for("react.profiler"):60114,p=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,m=n?Symbol.for("react.async_mode"):60111,d=n?Symbol.for("react.concurrent_mode"):60111,u=n?Symbol.for("react.forward_ref"):60112,l=n?Symbol.for("react.suspense"):60113,g=n?Symbol.for("react.suspense_list"):60120,h=n?Symbol.for("react.memo"):60115,f=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,b=n?Symbol.for("react.fundamental"):60117,x=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function v(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case m:case d:case o:case a:case i:case l:return e;default:switch(e=e&&e.$$typeof){case c:case u:case f:case h:case p:return e;default:return t}}case s:return t}}}function k(e){return v(e)===d}t.AsyncMode=m,t.ConcurrentMode=d,t.ContextConsumer=c,t.ContextProvider=p,t.Element=r,t.ForwardRef=u,t.Fragment=o,t.Lazy=f,t.Memo=h,t.Portal=s,t.Profiler=a,t.StrictMode=i,t.Suspense=l,t.isAsyncMode=function(e){return k(e)||v(e)===m},t.isConcurrentMode=k,t.isContextConsumer=function(e){return v(e)===c},t.isContextProvider=function(e){return v(e)===p},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return v(e)===u},t.isFragment=function(e){return v(e)===o},t.isLazy=function(e){return v(e)===f},t.isMemo=function(e){return v(e)===h},t.isPortal=function(e){return v(e)===s},t.isProfiler=function(e){return v(e)===a},t.isStrictMode=function(e){return v(e)===i},t.isSuspense=function(e){return v(e)===l},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===d||e===a||e===i||e===l||e===g||"object"==typeof e&&null!==e&&(e.$$typeof===f||e.$$typeof===h||e.$$typeof===p||e.$$typeof===c||e.$$typeof===u||e.$$typeof===b||e.$$typeof===x||e.$$typeof===w||e.$$typeof===y)},t.typeOf=v},21296:(e,t,n)=>{"use strict";e.exports=n(96103)},41143:e=>{"use strict";e.exports=function(e,t,n,r,s,o,i,a){if(!e){var p;if(void 0===t)p=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,s,o,i,a],m=0;(p=new Error(t.replace(/%s/g,(function(){return c[m++]})))).name="Invariant Violation"}throw p.framesToPop=1,p}}},5826:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},74182:function(e,t,n){var r,s;r=function(){return function(e){e.multiLanguage=function(){for(var t=Array.prototype.slice.call(arguments),n=t.join("-"),r="",s=[],o=[],i=0;i<t.length;++i)"en"==t[i]?(r+="\\w",s.unshift(e.stopWordFilter),s.push(e.stemmer),o.push(e.stemmer)):(r+=e[t[i]].wordCharacters,e[t[i]].stopWordFilter&&s.unshift(e[t[i]].stopWordFilter),e[t[i]].stemmer&&(s.push(e[t[i]].stemmer),o.push(e[t[i]].stemmer)));var a=e.trimmerSupport.generateTrimmer(r);return e.Pipeline.registerFunction(a,"lunr-multi-trimmer-"+n),s.unshift(a),function(){this.pipeline.reset(),this.pipeline.add.apply(this.pipeline,s),this.searchPipeline&&(this.searchPipeline.reset(),this.searchPipeline.add.apply(this.searchPipeline,o))}}}},void 0===(s="function"==typeof r?r.call(t,n,t,e):r)||(e.exports=s)},30892:function(e,t,n){var r,s;void 0===(s="function"==typeof(r=function(){return function(e){e.stemmerSupport={Among:function(e,t,n,r){if(this.toCharArray=function(e){for(var t=e.length,n=new Array(t),r=0;r<t;r++)n[r]=e.charCodeAt(r);return n},!e&&""!=e||!t&&0!=t||!n)throw"Bad Among initialisation: s:"+e+", substring_i: "+t+", result: "+n;this.s_size=e.length,this.s=this.toCharArray(e),this.substring_i=t,this.result=n,this.method=r},SnowballProgram:function(){var e;return{bra:0,ket:0,limit:0,cursor:0,limit_backward:0,setCurrent:function(t){e=t,this.cursor=0,this.limit=t.length,this.limit_backward=0,this.bra=this.cursor,this.ket=this.limit},getCurrent:function(){var t=e;return e=null,t},in_grouping:function(t,n,r){if(this.cursor<this.limit){var s=e.charCodeAt(this.cursor);if(s<=r&&s>=n&&t[(s-=n)>>3]&1<<(7&s))return this.cursor++,!0}return!1},in_grouping_b:function(t,n,r){if(this.cursor>this.limit_backward){var s=e.charCodeAt(this.cursor-1);if(s<=r&&s>=n&&t[(s-=n)>>3]&1<<(7&s))return this.cursor--,!0}return!1},out_grouping:function(t,n,r){if(this.cursor<this.limit){var s=e.charCodeAt(this.cursor);if(s>r||s<n)return this.cursor++,!0;if(!(t[(s-=n)>>3]&1<<(7&s)))return this.cursor++,!0}return!1},out_grouping_b:function(t,n,r){if(this.cursor>this.limit_backward){var s=e.charCodeAt(this.cursor-1);if(s>r||s<n)return this.cursor--,!0;if(!(t[(s-=n)>>3]&1<<(7&s)))return this.cursor--,!0}return!1},eq_s:function(t,n){if(this.limit-this.cursor<t)return!1;for(var r=0;r<t;r++)if(e.charCodeAt(this.cursor+r)!=n.charCodeAt(r))return!1;return this.cursor+=t,!0},eq_s_b:function(t,n){if(this.cursor-this.limit_backward<t)return!1;for(var r=0;r<t;r++)if(e.charCodeAt(this.cursor-t+r)!=n.charCodeAt(r))return!1;return this.cursor-=t,!0},find_among:function(t,n){for(var r=0,s=n,o=this.cursor,i=this.limit,a=0,p=0,c=!1;;){for(var m=r+(s-r>>1),d=0,u=a<p?a:p,l=t[m],g=u;g<l.s_size;g++){if(o+u==i){d=-1;break}if(d=e.charCodeAt(o+u)-l.s[g])break;u++}if(d<0?(s=m,p=u):(r=m,a=u),s-r<=1){if(r>0||s==r||c)break;c=!0}}for(;;){if(a>=(l=t[r]).s_size){if(this.cursor=o+l.s_size,!l.method)return l.result;var h=l.method();if(this.cursor=o+l.s_size,h)return l.result}if((r=l.substring_i)<0)return 0}},find_among_b:function(t,n){for(var r=0,s=n,o=this.cursor,i=this.limit_backward,a=0,p=0,c=!1;;){for(var m=r+(s-r>>1),d=0,u=a<p?a:p,l=(g=t[m]).s_size-1-u;l>=0;l--){if(o-u==i){d=-1;break}if(d=e.charCodeAt(o-1-u)-g.s[l])break;u++}if(d<0?(s=m,p=u):(r=m,a=u),s-r<=1){if(r>0||s==r||c)break;c=!0}}for(;;){var g;if(a>=(g=t[r]).s_size){if(this.cursor=o-g.s_size,!g.method)return g.result;var h=g.method();if(this.cursor=o-g.s_size,h)return g.result}if((r=g.substring_i)<0)return 0}},replace_s:function(t,n,r){var s=r.length-(n-t),o=e.substring(0,t),i=e.substring(n);return e=o+r+i,this.limit+=s,this.cursor>=n?this.cursor+=s:this.cursor>t&&(this.cursor=t),s},slice_check:function(){if(this.bra<0||this.bra>this.ket||this.ket>this.limit||this.limit>e.length)throw"faulty slice operation"},slice_from:function(e){this.slice_check(),this.replace_s(this.bra,this.ket,e)},slice_del:function(){this.slice_from("")},insert:function(e,t,n){var r=this.replace_s(e,t,n);e<=this.bra&&(this.bra+=r),e<=this.ket&&(this.ket+=r)},slice_to:function(){return this.slice_check(),e.substring(this.bra,this.ket)},eq_v_b:function(e){return this.eq_s_b(e.length,e)}}}},e.trimmerSupport={generateTrimmer:function(e){var t=new RegExp("^[^"+e+"]+"),n=new RegExp("[^"+e+"]+$");return function(e){return"function"==typeof e.update?e.update((function(e){return e.replace(t,"").replace(n,"")})):e.replace(t,"").replace(n,"")}}}}})?r.call(t,n,t,e):r)||(e.exports=s)},31336:(e,t,n)=>{var r,s;!function(){var o,i,a,p,c,m,d,u,l,g,h,f,y,b,x,w,v,k,q,$,_,I,C,R,L,T,S,P,A,O,j=function(e){var t=new j.Builder;return t.pipeline.add(j.trimmer,j.stopWordFilter,j.stemmer),t.searchPipeline.add(j.stemmer),e.call(t,t),t.build()};j.version="2.3.9",j.utils={},j.utils.warn=(o=this,function(e){o.console&&console.warn&&console.warn(e)}),j.utils.asString=function(e){return null==e?"":e.toString()},j.utils.clone=function(e){if(null==e)return e;for(var t=Object.create(null),n=Object.keys(e),r=0;r<n.length;r++){var s=n[r],o=e[s];if(Array.isArray(o))t[s]=o.slice();else{if("string"!=typeof o&&"number"!=typeof o&&"boolean"!=typeof o)throw new TypeError("clone is not deep and does not support nested objects");t[s]=o}}return t},j.FieldRef=function(e,t,n){this.docRef=e,this.fieldName=t,this._stringValue=n},j.FieldRef.joiner="/",j.FieldRef.fromString=function(e){var t=e.indexOf(j.FieldRef.joiner);if(-1===t)throw"malformed field ref string";var n=e.slice(0,t),r=e.slice(t+1);return new j.FieldRef(r,n,e)},j.FieldRef.prototype.toString=function(){return null==this._stringValue&&(this._stringValue=this.fieldName+j.FieldRef.joiner+this.docRef),this._stringValue},j.Set=function(e){if(this.elements=Object.create(null),e){this.length=e.length;for(var t=0;t<this.length;t++)this.elements[e[t]]=!0}else this.length=0},j.Set.complete={intersect:function(e){return e},union:function(){return this},contains:function(){return!0}},j.Set.empty={intersect:function(){return this},union:function(e){return e},contains:function(){return!1}},j.Set.prototype.contains=function(e){return!!this.elements[e]},j.Set.prototype.intersect=function(e){var t,n,r,s=[];if(e===j.Set.complete)return this;if(e===j.Set.empty)return e;this.length<e.length?(t=this,n=e):(t=e,n=this),r=Object.keys(t.elements);for(var o=0;o<r.length;o++){var i=r[o];i in n.elements&&s.push(i)}return new j.Set(s)},j.Set.prototype.union=function(e){return e===j.Set.complete?j.Set.complete:e===j.Set.empty?this:new j.Set(Object.keys(this.elements).concat(Object.keys(e.elements)))},j.idf=function(e,t){var n=0;for(var r in e)"_index"!=r&&(n+=Object.keys(e[r]).length);var s=(t-n+.5)/(n+.5);return Math.log(1+Math.abs(s))},j.Token=function(e,t){this.str=e||"",this.metadata=t||{}},j.Token.prototype.toString=function(){return this.str},j.Token.prototype.update=function(e){return this.str=e(this.str,this.metadata),this},j.Token.prototype.clone=function(e){return e=e||function(e){return e},new j.Token(e(this.str,this.metadata),this.metadata)},j.tokenizer=function(e,t){if(null==e||null==e)return[];if(Array.isArray(e))return e.map((function(e){return new j.Token(j.utils.asString(e).toLowerCase(),j.utils.clone(t))}));for(var n=e.toString().toLowerCase(),r=n.length,s=[],o=0,i=0;o<=r;o++){var a=o-i;if(n.charAt(o).match(j.tokenizer.separator)||o==r){if(a>0){var p=j.utils.clone(t)||{};p.position=[i,a],p.index=s.length,s.push(new j.Token(n.slice(i,o),p))}i=o+1}}return s},j.tokenizer.separator=/[\s\-]+/,j.Pipeline=function(){this._stack=[]},j.Pipeline.registeredFunctions=Object.create(null),j.Pipeline.registerFunction=function(e,t){t in this.registeredFunctions&&j.utils.warn("Overwriting existing registered function: "+t),e.label=t,j.Pipeline.registeredFunctions[e.label]=e},j.Pipeline.warnIfFunctionNotRegistered=function(e){e.label&&e.label in this.registeredFunctions||j.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},j.Pipeline.load=function(e){var t=new j.Pipeline;return e.forEach((function(e){var n=j.Pipeline.registeredFunctions[e];if(!n)throw new Error("Cannot load unregistered function: "+e);t.add(n)})),t},j.Pipeline.prototype.add=function(){Array.prototype.slice.call(arguments).forEach((function(e){j.Pipeline.warnIfFunctionNotRegistered(e),this._stack.push(e)}),this)},j.Pipeline.prototype.after=function(e,t){j.Pipeline.warnIfFunctionNotRegistered(t);var n=this._stack.indexOf(e);if(-1==n)throw new Error("Cannot find existingFn");n+=1,this._stack.splice(n,0,t)},j.Pipeline.prototype.before=function(e,t){j.Pipeline.warnIfFunctionNotRegistered(t);var n=this._stack.indexOf(e);if(-1==n)throw new Error("Cannot find existingFn");this._stack.splice(n,0,t)},j.Pipeline.prototype.remove=function(e){var t=this._stack.indexOf(e);-1!=t&&this._stack.splice(t,1)},j.Pipeline.prototype.run=function(e){for(var t=this._stack.length,n=0;n<t;n++){for(var r=this._stack[n],s=[],o=0;o<e.length;o++){var i=r(e[o],o,e);if(null!=i&&""!==i)if(Array.isArray(i))for(var a=0;a<i.length;a++)s.push(i[a]);else s.push(i)}e=s}return e},j.Pipeline.prototype.runString=function(e,t){var n=new j.Token(e,t);return this.run([n]).map((function(e){return e.toString()}))},j.Pipeline.prototype.reset=function(){this._stack=[]},j.Pipeline.prototype.toJSON=function(){return this._stack.map((function(e){return j.Pipeline.warnIfFunctionNotRegistered(e),e.label}))},j.Vector=function(e){this._magnitude=0,this.elements=e||[]},j.Vector.prototype.positionForIndex=function(e){if(0==this.elements.length)return 0;for(var t=0,n=this.elements.length/2,r=n-t,s=Math.floor(r/2),o=this.elements[2*s];r>1&&(o<e&&(t=s),o>e&&(n=s),o!=e);)r=n-t,s=t+Math.floor(r/2),o=this.elements[2*s];return o==e||o>e?2*s:o<e?2*(s+1):void 0},j.Vector.prototype.insert=function(e,t){this.upsert(e,t,(function(){throw"duplicate index"}))},j.Vector.prototype.upsert=function(e,t,n){this._magnitude=0;var r=this.positionForIndex(e);this.elements[r]==e?this.elements[r+1]=n(this.elements[r+1],t):this.elements.splice(r,0,e,t)},j.Vector.prototype.magnitude=function(){if(this._magnitude)return this._magnitude;for(var e=0,t=this.elements.length,n=1;n<t;n+=2){var r=this.elements[n];e+=r*r}return this._magnitude=Math.sqrt(e)},j.Vector.prototype.dot=function(e){for(var t=0,n=this.elements,r=e.elements,s=n.length,o=r.length,i=0,a=0,p=0,c=0;p<s&&c<o;)(i=n[p])<(a=r[c])?p+=2:i>a?c+=2:i==a&&(t+=n[p+1]*r[c+1],p+=2,c+=2);return t},j.Vector.prototype.similarity=function(e){return this.dot(e)/this.magnitude()||0},j.Vector.prototype.toArray=function(){for(var e=new Array(this.elements.length/2),t=1,n=0;t<this.elements.length;t+=2,n++)e[n]=this.elements[t];return e},j.Vector.prototype.toJSON=function(){return this.elements},j.stemmer=(i={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},a={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},d="^("+(c="[^aeiou][^aeiouy]*")+")?"+(m=(p="[aeiouy]")+"[aeiou]*")+c+"("+m+")?$",u="^("+c+")?"+m+c+m+c,l="^("+c+")?"+p,g=new RegExp("^("+c+")?"+m+c),h=new RegExp(u),f=new RegExp(d),y=new RegExp(l),b=/^(.+?)(ss|i)es$/,x=/^(.+?)([^s])s$/,w=/^(.+?)eed$/,v=/^(.+?)(ed|ing)$/,k=/.$/,q=/(at|bl|iz)$/,$=new RegExp("([^aeiouylsz])\\1$"),_=new RegExp("^"+c+p+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,C=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,R=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,L=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,T=/^(.+?)(s|t)(ion)$/,S=/^(.+?)e$/,P=/ll$/,A=new RegExp("^"+c+p+"[^aeiouwxy]$"),O=function(e){var t,n,r,s,o,p,c;if(e.length<3)return e;if("y"==(r=e.substr(0,1))&&(e=r.toUpperCase()+e.substr(1)),o=x,(s=b).test(e)?e=e.replace(s,"$1$2"):o.test(e)&&(e=e.replace(o,"$1$2")),o=v,(s=w).test(e)){var m=s.exec(e);(s=g).test(m[1])&&(s=k,e=e.replace(s,""))}else o.test(e)&&(t=(m=o.exec(e))[1],(o=y).test(t)&&(p=$,c=_,(o=q).test(e=t)?e+="e":p.test(e)?(s=k,e=e.replace(s,"")):c.test(e)&&(e+="e")));return(s=I).test(e)&&(e=(t=(m=s.exec(e))[1])+"i"),(s=C).test(e)&&(t=(m=s.exec(e))[1],n=m[2],(s=g).test(t)&&(e=t+i[n])),(s=R).test(e)&&(t=(m=s.exec(e))[1],n=m[2],(s=g).test(t)&&(e=t+a[n])),o=T,(s=L).test(e)?(t=(m=s.exec(e))[1],(s=h).test(t)&&(e=t)):o.test(e)&&(t=(m=o.exec(e))[1]+m[2],(o=h).test(t)&&(e=t)),(s=S).test(e)&&(t=(m=s.exec(e))[1],o=f,p=A,((s=h).test(t)||o.test(t)&&!p.test(t))&&(e=t)),o=h,(s=P).test(e)&&o.test(e)&&(s=k,e=e.replace(s,"")),"y"==r&&(e=r.toLowerCase()+e.substr(1)),e},function(e){return e.update(O)}),j.Pipeline.registerFunction(j.stemmer,"stemmer"),j.generateStopWordFilter=function(e){var t=e.reduce((function(e,t){return e[t]=t,e}),{});return function(e){if(e&&t[e.toString()]!==e.toString())return e}},j.stopWordFilter=j.generateStopWordFilter(["a","able","about","across","after","all","almost","also","am","among","an","and","any","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","do","does","either","else","ever","every","for","from","get","got","had","has","have","he","her","hers","him","his","how","however","i","if","in","into","is","it","its","just","least","let","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","off","often","on","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","that","the","their","them","then","there","these","they","this","tis","to","too","twas","us","wants","was","we","were","what","when","where","which","while","who","whom","why","will","with","would","yet","you","your"]),j.Pipeline.registerFunction(j.stopWordFilter,"stopWordFilter"),j.trimmer=function(e){return e.update((function(e){return e.replace(/^\W+/,"").replace(/\W+$/,"")}))},j.Pipeline.registerFunction(j.trimmer,"trimmer"),j.TokenSet=function(){this.final=!1,this.edges={},this.id=j.TokenSet._nextId,j.TokenSet._nextId+=1},j.TokenSet._nextId=1,j.TokenSet.fromArray=function(e){for(var t=new j.TokenSet.Builder,n=0,r=e.length;n<r;n++)t.insert(e[n]);return t.finish(),t.root},j.TokenSet.fromClause=function(e){return"editDistance"in e?j.TokenSet.fromFuzzyString(e.term,e.editDistance):j.TokenSet.fromString(e.term)},j.TokenSet.fromFuzzyString=function(e,t){for(var n=new j.TokenSet,r=[{node:n,editsRemaining:t,str:e}];r.length;){var s=r.pop();if(s.str.length>0){var o,i=s.str.charAt(0);i in s.node.edges?o=s.node.edges[i]:(o=new j.TokenSet,s.node.edges[i]=o),1==s.str.length&&(o.final=!0),r.push({node:o,editsRemaining:s.editsRemaining,str:s.str.slice(1)})}if(0!=s.editsRemaining){if("*"in s.node.edges)var a=s.node.edges["*"];else{a=new j.TokenSet;s.node.edges["*"]=a}if(0==s.str.length&&(a.final=!0),r.push({node:a,editsRemaining:s.editsRemaining-1,str:s.str}),s.str.length>1&&r.push({node:s.node,editsRemaining:s.editsRemaining-1,str:s.str.slice(1)}),1==s.str.length&&(s.node.final=!0),s.str.length>=1){if("*"in s.node.edges)var p=s.node.edges["*"];else{p=new j.TokenSet;s.node.edges["*"]=p}1==s.str.length&&(p.final=!0),r.push({node:p,editsRemaining:s.editsRemaining-1,str:s.str.slice(1)})}if(s.str.length>1){var c,m=s.str.charAt(0),d=s.str.charAt(1);d in s.node.edges?c=s.node.edges[d]:(c=new j.TokenSet,s.node.edges[d]=c),1==s.str.length&&(c.final=!0),r.push({node:c,editsRemaining:s.editsRemaining-1,str:m+s.str.slice(2)})}}}return n},j.TokenSet.fromString=function(e){for(var t=new j.TokenSet,n=t,r=0,s=e.length;r<s;r++){var o=e[r],i=r==s-1;if("*"==o)t.edges[o]=t,t.final=i;else{var a=new j.TokenSet;a.final=i,t.edges[o]=a,t=a}}return n},j.TokenSet.prototype.toArray=function(){for(var e=[],t=[{prefix:"",node:this}];t.length;){var n=t.pop(),r=Object.keys(n.node.edges),s=r.length;n.node.final&&(n.prefix.charAt(0),e.push(n.prefix));for(var o=0;o<s;o++){var i=r[o];t.push({prefix:n.prefix.concat(i),node:n.node.edges[i]})}}return e},j.TokenSet.prototype.toString=function(){if(this._str)return this._str;for(var e=this.final?"1":"0",t=Object.keys(this.edges).sort(),n=t.length,r=0;r<n;r++){var s=t[r];e=e+s+this.edges[s].id}return e},j.TokenSet.prototype.intersect=function(e){for(var t=new j.TokenSet,n=void 0,r=[{qNode:e,output:t,node:this}];r.length;){n=r.pop();for(var s=Object.keys(n.qNode.edges),o=s.length,i=Object.keys(n.node.edges),a=i.length,p=0;p<o;p++)for(var c=s[p],m=0;m<a;m++){var d=i[m];if(d==c||"*"==c){var u=n.node.edges[d],l=n.qNode.edges[c],g=u.final&&l.final,h=void 0;d in n.output.edges?(h=n.output.edges[d]).final=h.final||g:((h=new j.TokenSet).final=g,n.output.edges[d]=h),r.push({qNode:l,output:h,node:u})}}}return t},j.TokenSet.Builder=function(){this.previousWord="",this.root=new j.TokenSet,this.uncheckedNodes=[],this.minimizedNodes={}},j.TokenSet.Builder.prototype.insert=function(e){var t,n=0;if(e<this.previousWord)throw new Error("Out of order word insertion");for(var r=0;r<e.length&&r<this.previousWord.length&&e[r]==this.previousWord[r];r++)n++;this.minimize(n),t=0==this.uncheckedNodes.length?this.root:this.uncheckedNodes[this.uncheckedNodes.length-1].child;for(r=n;r<e.length;r++){var s=new j.TokenSet,o=e[r];t.edges[o]=s,this.uncheckedNodes.push({parent:t,char:o,child:s}),t=s}t.final=!0,this.previousWord=e},j.TokenSet.Builder.prototype.finish=function(){this.minimize(0)},j.TokenSet.Builder.prototype.minimize=function(e){for(var t=this.uncheckedNodes.length-1;t>=e;t--){var n=this.uncheckedNodes[t],r=n.child.toString();r in this.minimizedNodes?n.parent.edges[n.char]=this.minimizedNodes[r]:(n.child._str=r,this.minimizedNodes[r]=n.child),this.uncheckedNodes.pop()}},j.Index=function(e){this.invertedIndex=e.invertedIndex,this.fieldVectors=e.fieldVectors,this.tokenSet=e.tokenSet,this.fields=e.fields,this.pipeline=e.pipeline},j.Index.prototype.search=function(e){return this.query((function(t){new j.QueryParser(e,t).parse()}))},j.Index.prototype.query=function(e){for(var t=new j.Query(this.fields),n=Object.create(null),r=Object.create(null),s=Object.create(null),o=Object.create(null),i=Object.create(null),a=0;a<this.fields.length;a++)r[this.fields[a]]=new j.Vector;e.call(t,t);for(a=0;a<t.clauses.length;a++){var p=t.clauses[a],c=null,m=j.Set.empty;c=p.usePipeline?this.pipeline.runString(p.term,{fields:p.fields}):[p.term];for(var d=0;d<c.length;d++){var u=c[d];p.term=u;var l=j.TokenSet.fromClause(p),g=this.tokenSet.intersect(l).toArray();if(0===g.length&&p.presence===j.Query.presence.REQUIRED){for(var h=0;h<p.fields.length;h++){o[S=p.fields[h]]=j.Set.empty}break}for(var f=0;f<g.length;f++){var y=g[f],b=this.invertedIndex[y],x=b._index;for(h=0;h<p.fields.length;h++){var w=b[S=p.fields[h]],v=Object.keys(w),k=y+"/"+S,q=new j.Set(v);if(p.presence==j.Query.presence.REQUIRED&&(m=m.union(q),void 0===o[S]&&(o[S]=j.Set.complete)),p.presence!=j.Query.presence.PROHIBITED){if(r[S].upsert(x,p.boost,(function(e,t){return e+t})),!s[k]){for(var $=0;$<v.length;$++){var _,I=v[$],C=new j.FieldRef(I,S),R=w[I];void 0===(_=n[C])?n[C]=new j.MatchData(y,S,R):_.add(y,S,R)}s[k]=!0}}else void 0===i[S]&&(i[S]=j.Set.empty),i[S]=i[S].union(q)}}}if(p.presence===j.Query.presence.REQUIRED)for(h=0;h<p.fields.length;h++){o[S=p.fields[h]]=o[S].intersect(m)}}var L=j.Set.complete,T=j.Set.empty;for(a=0;a<this.fields.length;a++){var S;o[S=this.fields[a]]&&(L=L.intersect(o[S])),i[S]&&(T=T.union(i[S]))}var P=Object.keys(n),A=[],O=Object.create(null);if(t.isNegated()){P=Object.keys(this.fieldVectors);for(a=0;a<P.length;a++){C=P[a];var E=j.FieldRef.fromString(C);n[C]=new j.MatchData}}for(a=0;a<P.length;a++){var F=(E=j.FieldRef.fromString(P[a])).docRef;if(L.contains(F)&&!T.contains(F)){var D,U=this.fieldVectors[E],G=r[E.fieldName].similarity(U);if(void 0!==(D=O[F]))D.score+=G,D.matchData.combine(n[E]);else{var N={ref:F,score:G,matchData:n[E]};O[F]=N,A.push(N)}}}return A.sort((function(e,t){return t.score-e.score}))},j.Index.prototype.toJSON=function(){var e=Object.keys(this.invertedIndex).sort().map((function(e){return[e,this.invertedIndex[e]]}),this),t=Object.keys(this.fieldVectors).map((function(e){return[e,this.fieldVectors[e].toJSON()]}),this);return{version:j.version,fields:this.fields,fieldVectors:t,invertedIndex:e,pipeline:this.pipeline.toJSON()}},j.Index.load=function(e){var t={},n={},r=e.fieldVectors,s=Object.create(null),o=e.invertedIndex,i=new j.TokenSet.Builder,a=j.Pipeline.load(e.pipeline);e.version!=j.version&&j.utils.warn("Version mismatch when loading serialised index. Current version of lunr '"+j.version+"' does not match serialized index '"+e.version+"'");for(var p=0;p<r.length;p++){var c=(d=r[p])[0],m=d[1];n[c]=new j.Vector(m)}for(p=0;p<o.length;p++){var d,u=(d=o[p])[0],l=d[1];i.insert(u),s[u]=l}return i.finish(),t.fields=e.fields,t.fieldVectors=n,t.invertedIndex=s,t.tokenSet=i.root,t.pipeline=a,new j.Index(t)},j.Builder=function(){this._ref="id",this._fields=Object.create(null),this._documents=Object.create(null),this.invertedIndex=Object.create(null),this.fieldTermFrequencies={},this.fieldLengths={},this.tokenizer=j.tokenizer,this.pipeline=new j.Pipeline,this.searchPipeline=new j.Pipeline,this.documentCount=0,this._b=.75,this._k1=1.2,this.termIndex=0,this.metadataWhitelist=[]},j.Builder.prototype.ref=function(e){this._ref=e},j.Builder.prototype.field=function(e,t){if(/\//.test(e))throw new RangeError("Field '"+e+"' contains illegal character '/'");this._fields[e]=t||{}},j.Builder.prototype.b=function(e){this._b=e<0?0:e>1?1:e},j.Builder.prototype.k1=function(e){this._k1=e},j.Builder.prototype.add=function(e,t){var n=e[this._ref],r=Object.keys(this._fields);this._documents[n]=t||{},this.documentCount+=1;for(var s=0;s<r.length;s++){var o=r[s],i=this._fields[o].extractor,a=i?i(e):e[o],p=this.tokenizer(a,{fields:[o]}),c=this.pipeline.run(p),m=new j.FieldRef(n,o),d=Object.create(null);this.fieldTermFrequencies[m]=d,this.fieldLengths[m]=0,this.fieldLengths[m]+=c.length;for(var u=0;u<c.length;u++){var l=c[u];if(null==d[l]&&(d[l]=0),d[l]+=1,null==this.invertedIndex[l]){var g=Object.create(null);g._index=this.termIndex,this.termIndex+=1;for(var h=0;h<r.length;h++)g[r[h]]=Object.create(null);this.invertedIndex[l]=g}null==this.invertedIndex[l][o][n]&&(this.invertedIndex[l][o][n]=Object.create(null));for(var f=0;f<this.metadataWhitelist.length;f++){var y=this.metadataWhitelist[f],b=l.metadata[y];null==this.invertedIndex[l][o][n][y]&&(this.invertedIndex[l][o][n][y]=[]),this.invertedIndex[l][o][n][y].push(b)}}}},j.Builder.prototype.calculateAverageFieldLengths=function(){for(var e=Object.keys(this.fieldLengths),t=e.length,n={},r={},s=0;s<t;s++){var o=j.FieldRef.fromString(e[s]),i=o.fieldName;r[i]||(r[i]=0),r[i]+=1,n[i]||(n[i]=0),n[i]+=this.fieldLengths[o]}var a=Object.keys(this._fields);for(s=0;s<a.length;s++){var p=a[s];n[p]=n[p]/r[p]}this.averageFieldLength=n},j.Builder.prototype.createFieldVectors=function(){for(var e={},t=Object.keys(this.fieldTermFrequencies),n=t.length,r=Object.create(null),s=0;s<n;s++){for(var o=j.FieldRef.fromString(t[s]),i=o.fieldName,a=this.fieldLengths[o],p=new j.Vector,c=this.fieldTermFrequencies[o],m=Object.keys(c),d=m.length,u=this._fields[i].boost||1,l=this._documents[o.docRef].boost||1,g=0;g<d;g++){var h,f,y,b=m[g],x=c[b],w=this.invertedIndex[b]._index;void 0===r[b]?(h=j.idf(this.invertedIndex[b],this.documentCount),r[b]=h):h=r[b],f=h*((this._k1+1)*x)/(this._k1*(1-this._b+this._b*(a/this.averageFieldLength[i]))+x),f*=u,f*=l,y=Math.round(1e3*f)/1e3,p.insert(w,y)}e[o]=p}this.fieldVectors=e},j.Builder.prototype.createTokenSet=function(){this.tokenSet=j.TokenSet.fromArray(Object.keys(this.invertedIndex).sort())},j.Builder.prototype.build=function(){return this.calculateAverageFieldLengths(),this.createFieldVectors(),this.createTokenSet(),new j.Index({invertedIndex:this.invertedIndex,fieldVectors:this.fieldVectors,tokenSet:this.tokenSet,fields:Object.keys(this._fields),pipeline:this.searchPipeline})},j.Builder.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},j.MatchData=function(e,t,n){for(var r=Object.create(null),s=Object.keys(n||{}),o=0;o<s.length;o++){var i=s[o];r[i]=n[i].slice()}this.metadata=Object.create(null),void 0!==e&&(this.metadata[e]=Object.create(null),this.metadata[e][t]=r)},j.MatchData.prototype.combine=function(e){for(var t=Object.keys(e.metadata),n=0;n<t.length;n++){var r=t[n],s=Object.keys(e.metadata[r]);null==this.metadata[r]&&(this.metadata[r]=Object.create(null));for(var o=0;o<s.length;o++){var i=s[o],a=Object.keys(e.metadata[r][i]);null==this.metadata[r][i]&&(this.metadata[r][i]=Object.create(null));for(var p=0;p<a.length;p++){var c=a[p];null==this.metadata[r][i][c]?this.metadata[r][i][c]=e.metadata[r][i][c]:this.metadata[r][i][c]=this.metadata[r][i][c].concat(e.metadata[r][i][c])}}}},j.MatchData.prototype.add=function(e,t,n){if(!(e in this.metadata))return this.metadata[e]=Object.create(null),void(this.metadata[e][t]=n);if(t in this.metadata[e])for(var r=Object.keys(n),s=0;s<r.length;s++){var o=r[s];o in this.metadata[e][t]?this.metadata[e][t][o]=this.metadata[e][t][o].concat(n[o]):this.metadata[e][t][o]=n[o]}else this.metadata[e][t]=n},j.Query=function(e){this.clauses=[],this.allFields=e},j.Query.wildcard=new String("*"),j.Query.wildcard.NONE=0,j.Query.wildcard.LEADING=1,j.Query.wildcard.TRAILING=2,j.Query.presence={OPTIONAL:1,REQUIRED:2,PROHIBITED:3},j.Query.prototype.clause=function(e){return"fields"in e||(e.fields=this.allFields),"boost"in e||(e.boost=1),"usePipeline"in e||(e.usePipeline=!0),"wildcard"in e||(e.wildcard=j.Query.wildcard.NONE),e.wildcard&j.Query.wildcard.LEADING&&e.term.charAt(0)!=j.Query.wildcard&&(e.term="*"+e.term),e.wildcard&j.Query.wildcard.TRAILING&&e.term.slice(-1)!=j.Query.wildcard&&(e.term=e.term+"*"),"presence"in e||(e.presence=j.Query.presence.OPTIONAL),this.clauses.push(e),this},j.Query.prototype.isNegated=function(){for(var e=0;e<this.clauses.length;e++)if(this.clauses[e].presence!=j.Query.presence.PROHIBITED)return!1;return!0},j.Query.prototype.term=function(e,t){if(Array.isArray(e))return e.forEach((function(e){this.term(e,j.utils.clone(t))}),this),this;var n=t||{};return n.term=e.toString(),this.clause(n),this},j.QueryParseError=function(e,t,n){this.name="QueryParseError",this.message=e,this.start=t,this.end=n},j.QueryParseError.prototype=new Error,j.QueryLexer=function(e){this.lexemes=[],this.str=e,this.length=e.length,this.pos=0,this.start=0,this.escapeCharPositions=[]},j.QueryLexer.prototype.run=function(){for(var e=j.QueryLexer.lexText;e;)e=e(this)},j.QueryLexer.prototype.sliceString=function(){for(var e=[],t=this.start,n=this.pos,r=0;r<this.escapeCharPositions.length;r++)n=this.escapeCharPositions[r],e.push(this.str.slice(t,n)),t=n+1;return e.push(this.str.slice(t,this.pos)),this.escapeCharPositions.length=0,e.join("")},j.QueryLexer.prototype.emit=function(e){this.lexemes.push({type:e,str:this.sliceString(),start:this.start,end:this.pos}),this.start=this.pos},j.QueryLexer.prototype.escapeCharacter=function(){this.escapeCharPositions.push(this.pos-1),this.pos+=1},j.QueryLexer.prototype.next=function(){if(this.pos>=this.length)return j.QueryLexer.EOS;var e=this.str.charAt(this.pos);return this.pos+=1,e},j.QueryLexer.prototype.width=function(){return this.pos-this.start},j.QueryLexer.prototype.ignore=function(){this.start==this.pos&&(this.pos+=1),this.start=this.pos},j.QueryLexer.prototype.backup=function(){this.pos-=1},j.QueryLexer.prototype.acceptDigitRun=function(){var e,t;do{t=(e=this.next()).charCodeAt(0)}while(t>47&&t<58);e!=j.QueryLexer.EOS&&this.backup()},j.QueryLexer.prototype.more=function(){return this.pos<this.length},j.QueryLexer.EOS="EOS",j.QueryLexer.FIELD="FIELD",j.QueryLexer.TERM="TERM",j.QueryLexer.EDIT_DISTANCE="EDIT_DISTANCE",j.QueryLexer.BOOST="BOOST",j.QueryLexer.PRESENCE="PRESENCE",j.QueryLexer.lexField=function(e){return e.backup(),e.emit(j.QueryLexer.FIELD),e.ignore(),j.QueryLexer.lexText},j.QueryLexer.lexTerm=function(e){if(e.width()>1&&(e.backup(),e.emit(j.QueryLexer.TERM)),e.ignore(),e.more())return j.QueryLexer.lexText},j.QueryLexer.lexEditDistance=function(e){return e.ignore(),e.acceptDigitRun(),e.emit(j.QueryLexer.EDIT_DISTANCE),j.QueryLexer.lexText},j.QueryLexer.lexBoost=function(e){return e.ignore(),e.acceptDigitRun(),e.emit(j.QueryLexer.BOOST),j.QueryLexer.lexText},j.QueryLexer.lexEOS=function(e){e.width()>0&&e.emit(j.QueryLexer.TERM)},j.QueryLexer.termSeparator=j.tokenizer.separator,j.QueryLexer.lexText=function(e){for(;;){var t=e.next();if(t==j.QueryLexer.EOS)return j.QueryLexer.lexEOS;if(92!=t.charCodeAt(0)){if(":"==t)return j.QueryLexer.lexField;if("~"==t)return e.backup(),e.width()>0&&e.emit(j.QueryLexer.TERM),j.QueryLexer.lexEditDistance;if("^"==t)return e.backup(),e.width()>0&&e.emit(j.QueryLexer.TERM),j.QueryLexer.lexBoost;if("+"==t&&1===e.width())return e.emit(j.QueryLexer.PRESENCE),j.QueryLexer.lexText;if("-"==t&&1===e.width())return e.emit(j.QueryLexer.PRESENCE),j.QueryLexer.lexText;if(t.match(j.QueryLexer.termSeparator))return j.QueryLexer.lexTerm}else e.escapeCharacter()}},j.QueryParser=function(e,t){this.lexer=new j.QueryLexer(e),this.query=t,this.currentClause={},this.lexemeIdx=0},j.QueryParser.prototype.parse=function(){this.lexer.run(),this.lexemes=this.lexer.lexemes;for(var e=j.QueryParser.parseClause;e;)e=e(this);return this.query},j.QueryParser.prototype.peekLexeme=function(){return this.lexemes[this.lexemeIdx]},j.QueryParser.prototype.consumeLexeme=function(){var e=this.peekLexeme();return this.lexemeIdx+=1,e},j.QueryParser.prototype.nextClause=function(){var e=this.currentClause;this.query.clause(e),this.currentClause={}},j.QueryParser.parseClause=function(e){var t=e.peekLexeme();if(null!=t)switch(t.type){case j.QueryLexer.PRESENCE:return j.QueryParser.parsePresence;case j.QueryLexer.FIELD:return j.QueryParser.parseField;case j.QueryLexer.TERM:return j.QueryParser.parseTerm;default:var n="expected either a field or a term, found "+t.type;throw t.str.length>=1&&(n+=" with value '"+t.str+"'"),new j.QueryParseError(n,t.start,t.end)}},j.QueryParser.parsePresence=function(e){var t=e.consumeLexeme();if(null!=t){switch(t.str){case"-":e.currentClause.presence=j.Query.presence.PROHIBITED;break;case"+":e.currentClause.presence=j.Query.presence.REQUIRED;break;default:var n="unrecognised presence operator'"+t.str+"'";throw new j.QueryParseError(n,t.start,t.end)}var r=e.peekLexeme();if(null==r){n="expecting term or field, found nothing";throw new j.QueryParseError(n,t.start,t.end)}switch(r.type){case j.QueryLexer.FIELD:return j.QueryParser.parseField;case j.QueryLexer.TERM:return j.QueryParser.parseTerm;default:n="expecting term or field, found '"+r.type+"'";throw new j.QueryParseError(n,r.start,r.end)}}},j.QueryParser.parseField=function(e){var t=e.consumeLexeme();if(null!=t){if(-1==e.query.allFields.indexOf(t.str)){var n=e.query.allFields.map((function(e){return"'"+e+"'"})).join(", "),r="unrecognised field '"+t.str+"', possible fields: "+n;throw new j.QueryParseError(r,t.start,t.end)}e.currentClause.fields=[t.str];var s=e.peekLexeme();if(null==s){r="expecting term, found nothing";throw new j.QueryParseError(r,t.start,t.end)}if(s.type===j.QueryLexer.TERM)return j.QueryParser.parseTerm;r="expecting term, found '"+s.type+"'";throw new j.QueryParseError(r,s.start,s.end)}},j.QueryParser.parseTerm=function(e){var t=e.consumeLexeme();if(null!=t){e.currentClause.term=t.str.toLowerCase(),-1!=t.str.indexOf("*")&&(e.currentClause.usePipeline=!1);var n=e.peekLexeme();if(null!=n)switch(n.type){case j.QueryLexer.TERM:return e.nextClause(),j.QueryParser.parseTerm;case j.QueryLexer.FIELD:return e.nextClause(),j.QueryParser.parseField;case j.QueryLexer.EDIT_DISTANCE:return j.QueryParser.parseEditDistance;case j.QueryLexer.BOOST:return j.QueryParser.parseBoost;case j.QueryLexer.PRESENCE:return e.nextClause(),j.QueryParser.parsePresence;default:var r="Unexpected lexeme type '"+n.type+"'";throw new j.QueryParseError(r,n.start,n.end)}else e.nextClause()}},j.QueryParser.parseEditDistance=function(e){var t=e.consumeLexeme();if(null!=t){var n=parseInt(t.str,10);if(isNaN(n)){var r="edit distance must be numeric";throw new j.QueryParseError(r,t.start,t.end)}e.currentClause.editDistance=n;var s=e.peekLexeme();if(null!=s)switch(s.type){case j.QueryLexer.TERM:return e.nextClause(),j.QueryParser.parseTerm;case j.QueryLexer.FIELD:return e.nextClause(),j.QueryParser.parseField;case j.QueryLexer.EDIT_DISTANCE:return j.QueryParser.parseEditDistance;case j.QueryLexer.BOOST:return j.QueryParser.parseBoost;case j.QueryLexer.PRESENCE:return e.nextClause(),j.QueryParser.parsePresence;default:r="Unexpected lexeme type '"+s.type+"'";throw new j.QueryParseError(r,s.start,s.end)}else e.nextClause()}},j.QueryParser.parseBoost=function(e){var t=e.consumeLexeme();if(null!=t){var n=parseInt(t.str,10);if(isNaN(n)){var r="boost must be numeric";throw new j.QueryParseError(r,t.start,t.end)}e.currentClause.boost=n;var s=e.peekLexeme();if(null!=s)switch(s.type){case j.QueryLexer.TERM:return e.nextClause(),j.QueryParser.parseTerm;case j.QueryLexer.FIELD:return e.nextClause(),j.QueryParser.parseField;case j.QueryLexer.EDIT_DISTANCE:return j.QueryParser.parseEditDistance;case j.QueryLexer.BOOST:return j.QueryParser.parseBoost;case j.QueryLexer.PRESENCE:return e.nextClause(),j.QueryParser.parsePresence;default:r="Unexpected lexeme type '"+s.type+"'";throw new j.QueryParseError(r,s.start,s.end)}else e.nextClause()}},void 0===(s="function"==typeof(r=function(){return j})?r.call(t,n,t,e):r)||(e.exports=s)}()},813:function(e){e.exports=function(){"use strict";var e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},n=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},s=function(){function e(n){var r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5e3;t(this,e),this.ctx=n,this.iframes=r,this.exclude=s,this.iframesTimeout=o}return n(e,[{key:"getContexts",value:function(){var e=[];return(void 0!==this.ctx&&this.ctx?NodeList.prototype.isPrototypeOf(this.ctx)?Array.prototype.slice.call(this.ctx):Array.isArray(this.ctx)?this.ctx:"string"==typeof this.ctx?Array.prototype.slice.call(document.querySelectorAll(this.ctx)):[this.ctx]:[]).forEach((function(t){var n=e.filter((function(e){return e.contains(t)})).length>0;-1!==e.indexOf(t)||n||e.push(t)})),e}},{key:"getIframeContents",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(){},r=void 0;try{var s=e.contentWindow;if(r=s.document,!s||!r)throw new Error("iframe inaccessible")}catch(o){n()}r&&t(r)}},{key:"isIframeBlank",value:function(e){var t="about:blank",n=e.getAttribute("src").trim();return e.contentWindow.location.href===t&&n!==t&&n}},{key:"observeIframeLoad",value:function(e,t,n){var r=this,s=!1,o=null,i=function i(){if(!s){s=!0,clearTimeout(o);try{r.isIframeBlank(e)||(e.removeEventListener("load",i),r.getIframeContents(e,t,n))}catch(a){n()}}};e.addEventListener("load",i),o=setTimeout(i,this.iframesTimeout)}},{key:"onIframeReady",value:function(e,t,n){try{"complete"===e.contentWindow.document.readyState?this.isIframeBlank(e)?this.observeIframeLoad(e,t,n):this.getIframeContents(e,t,n):this.observeIframeLoad(e,t,n)}catch(r){n()}}},{key:"waitForIframes",value:function(e,t){var n=this,r=0;this.forEachIframe(e,(function(){return!0}),(function(e){r++,n.waitForIframes(e.querySelector("html"),(function(){--r||t()}))}),(function(e){e||t()}))}},{key:"forEachIframe",value:function(t,n,r){var s=this,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){},i=t.querySelectorAll("iframe"),a=i.length,p=0;i=Array.prototype.slice.call(i);var c=function(){--a<=0&&o(p)};a||c(),i.forEach((function(t){e.matches(t,s.exclude)?c():s.onIframeReady(t,(function(e){n(t)&&(p++,r(e)),c()}),c)}))}},{key:"createIterator",value:function(e,t,n){return document.createNodeIterator(e,t,n,!1)}},{key:"createInstanceOnIframe",value:function(t){return new e(t.querySelector("html"),this.iframes)}},{key:"compareNodeIframe",value:function(e,t,n){if(e.compareDocumentPosition(n)&Node.DOCUMENT_POSITION_PRECEDING){if(null===t)return!0;if(t.compareDocumentPosition(n)&Node.DOCUMENT_POSITION_FOLLOWING)return!0}return!1}},{key:"getIteratorNode",value:function(e){var t=e.previousNode();return{prevNode:t,node:(null===t||e.nextNode())&&e.nextNode()}}},{key:"checkIframeFilter",value:function(e,t,n,r){var s=!1,o=!1;return r.forEach((function(e,t){e.val===n&&(s=t,o=e.handled)})),this.compareNodeIframe(e,t,n)?(!1!==s||o?!1===s||o||(r[s].handled=!0):r.push({val:n,handled:!0}),!0):(!1===s&&r.push({val:n,handled:!1}),!1)}},{key:"handleOpenIframes",value:function(e,t,n,r){var s=this;e.forEach((function(e){e.handled||s.getIframeContents(e.val,(function(e){s.createInstanceOnIframe(e).forEachNode(t,n,r)}))}))}},{key:"iterateThroughNodes",value:function(e,t,n,r,s){for(var o=this,i=this.createIterator(t,e,r),a=[],p=[],c=void 0,m=void 0,d=function(){var e=o.getIteratorNode(i);return m=e.prevNode,c=e.node};d();)this.iframes&&this.forEachIframe(t,(function(e){return o.checkIframeFilter(c,m,e,a)}),(function(t){o.createInstanceOnIframe(t).forEachNode(e,(function(e){return p.push(e)}),r)})),p.push(c);p.forEach((function(e){n(e)})),this.iframes&&this.handleOpenIframes(a,e,n,r),s()}},{key:"forEachNode",value:function(e,t,n){var r=this,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:function(){},o=this.getContexts(),i=o.length;i||s(),o.forEach((function(o){var a=function(){r.iterateThroughNodes(e,o,t,n,(function(){--i<=0&&s()}))};r.iframes?r.waitForIframes(o,a):a()}))}}],[{key:"matches",value:function(e,t){var n="string"==typeof t?[t]:t,r=e.matches||e.matchesSelector||e.msMatchesSelector||e.mozMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector;if(r){var s=!1;return n.every((function(t){return!r.call(e,t)||(s=!0,!1)})),s}return!1}}]),e}(),o=function(){function o(e){t(this,o),this.ctx=e,this.ie=!1;var n=window.navigator.userAgent;(n.indexOf("MSIE")>-1||n.indexOf("Trident")>-1)&&(this.ie=!0)}return n(o,[{key:"log",value:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"debug",r=this.opt.log;this.opt.debug&&"object"===(void 0===r?"undefined":e(r))&&"function"==typeof r[n]&&r[n]("mark.js: "+t)}},{key:"escapeStr",value:function(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}},{key:"createRegExp",value:function(e){return"disabled"!==this.opt.wildcards&&(e=this.setupWildcardsRegExp(e)),e=this.escapeStr(e),Object.keys(this.opt.synonyms).length&&(e=this.createSynonymsRegExp(e)),(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(e=this.setupIgnoreJoinersRegExp(e)),this.opt.diacritics&&(e=this.createDiacriticsRegExp(e)),e=this.createMergedBlanksRegExp(e),(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(e=this.createJoinersRegExp(e)),"disabled"!==this.opt.wildcards&&(e=this.createWildcardsRegExp(e)),e=this.createAccuracyRegExp(e)}},{key:"createSynonymsRegExp",value:function(e){var t=this.opt.synonyms,n=this.opt.caseSensitive?"":"i",r=this.opt.ignoreJoiners||this.opt.ignorePunctuation.length?"\0":"";for(var s in t)if(t.hasOwnProperty(s)){var o=t[s],i="disabled"!==this.opt.wildcards?this.setupWildcardsRegExp(s):this.escapeStr(s),a="disabled"!==this.opt.wildcards?this.setupWildcardsRegExp(o):this.escapeStr(o);""!==i&&""!==a&&(e=e.replace(new RegExp("("+this.escapeStr(i)+"|"+this.escapeStr(a)+")","gm"+n),r+"("+this.processSynomyms(i)+"|"+this.processSynomyms(a)+")"+r))}return e}},{key:"processSynomyms",value:function(e){return(this.opt.ignoreJoiners||this.opt.ignorePunctuation.length)&&(e=this.setupIgnoreJoinersRegExp(e)),e}},{key:"setupWildcardsRegExp",value:function(e){return(e=e.replace(/(?:\\)*\?/g,(function(e){return"\\"===e.charAt(0)?"?":"\x01"}))).replace(/(?:\\)*\*/g,(function(e){return"\\"===e.charAt(0)?"*":"\x02"}))}},{key:"createWildcardsRegExp",value:function(e){var t="withSpaces"===this.opt.wildcards;return e.replace(/\u0001/g,t?"[\\S\\s]?":"\\S?").replace(/\u0002/g,t?"[\\S\\s]*?":"\\S*")}},{key:"setupIgnoreJoinersRegExp",value:function(e){return e.replace(/[^(|)\\]/g,(function(e,t,n){var r=n.charAt(t+1);return/[(|)\\]/.test(r)||""===r?e:e+"\0"}))}},{key:"createJoinersRegExp",value:function(e){var t=[],n=this.opt.ignorePunctuation;return Array.isArray(n)&&n.length&&t.push(this.escapeStr(n.join(""))),this.opt.ignoreJoiners&&t.push("\\u00ad\\u200b\\u200c\\u200d"),t.length?e.split(/\u0000+/).join("["+t.join("")+"]*"):e}},{key:"createDiacriticsRegExp",value:function(e){var t=this.opt.caseSensitive?"":"i",n=this.opt.caseSensitive?["a\xe0\xe1\u1ea3\xe3\u1ea1\u0103\u1eb1\u1eaf\u1eb3\u1eb5\u1eb7\xe2\u1ea7\u1ea5\u1ea9\u1eab\u1ead\xe4\xe5\u0101\u0105","A\xc0\xc1\u1ea2\xc3\u1ea0\u0102\u1eb0\u1eae\u1eb2\u1eb4\u1eb6\xc2\u1ea6\u1ea4\u1ea8\u1eaa\u1eac\xc4\xc5\u0100\u0104","c\xe7\u0107\u010d","C\xc7\u0106\u010c","d\u0111\u010f","D\u0110\u010e","e\xe8\xe9\u1ebb\u1ebd\u1eb9\xea\u1ec1\u1ebf\u1ec3\u1ec5\u1ec7\xeb\u011b\u0113\u0119","E\xc8\xc9\u1eba\u1ebc\u1eb8\xca\u1ec0\u1ebe\u1ec2\u1ec4\u1ec6\xcb\u011a\u0112\u0118","i\xec\xed\u1ec9\u0129\u1ecb\xee\xef\u012b","I\xcc\xcd\u1ec8\u0128\u1eca\xce\xcf\u012a","l\u0142","L\u0141","n\xf1\u0148\u0144","N\xd1\u0147\u0143","o\xf2\xf3\u1ecf\xf5\u1ecd\xf4\u1ed3\u1ed1\u1ed5\u1ed7\u1ed9\u01a1\u1edf\u1ee1\u1edb\u1edd\u1ee3\xf6\xf8\u014d","O\xd2\xd3\u1ece\xd5\u1ecc\xd4\u1ed2\u1ed0\u1ed4\u1ed6\u1ed8\u01a0\u1ede\u1ee0\u1eda\u1edc\u1ee2\xd6\xd8\u014c","r\u0159","R\u0158","s\u0161\u015b\u0219\u015f","S\u0160\u015a\u0218\u015e","t\u0165\u021b\u0163","T\u0164\u021a\u0162","u\xf9\xfa\u1ee7\u0169\u1ee5\u01b0\u1eeb\u1ee9\u1eed\u1eef\u1ef1\xfb\xfc\u016f\u016b","U\xd9\xda\u1ee6\u0168\u1ee4\u01af\u1eea\u1ee8\u1eec\u1eee\u1ef0\xdb\xdc\u016e\u016a","y\xfd\u1ef3\u1ef7\u1ef9\u1ef5\xff","Y\xdd\u1ef2\u1ef6\u1ef8\u1ef4\u0178","z\u017e\u017c\u017a","Z\u017d\u017b\u0179"]:["a\xe0\xe1\u1ea3\xe3\u1ea1\u0103\u1eb1\u1eaf\u1eb3\u1eb5\u1eb7\xe2\u1ea7\u1ea5\u1ea9\u1eab\u1ead\xe4\xe5\u0101\u0105A\xc0\xc1\u1ea2\xc3\u1ea0\u0102\u1eb0\u1eae\u1eb2\u1eb4\u1eb6\xc2\u1ea6\u1ea4\u1ea8\u1eaa\u1eac\xc4\xc5\u0100\u0104","c\xe7\u0107\u010dC\xc7\u0106\u010c","d\u0111\u010fD\u0110\u010e","e\xe8\xe9\u1ebb\u1ebd\u1eb9\xea\u1ec1\u1ebf\u1ec3\u1ec5\u1ec7\xeb\u011b\u0113\u0119E\xc8\xc9\u1eba\u1ebc\u1eb8\xca\u1ec0\u1ebe\u1ec2\u1ec4\u1ec6\xcb\u011a\u0112\u0118","i\xec\xed\u1ec9\u0129\u1ecb\xee\xef\u012bI\xcc\xcd\u1ec8\u0128\u1eca\xce\xcf\u012a","l\u0142L\u0141","n\xf1\u0148\u0144N\xd1\u0147\u0143","o\xf2\xf3\u1ecf\xf5\u1ecd\xf4\u1ed3\u1ed1\u1ed5\u1ed7\u1ed9\u01a1\u1edf\u1ee1\u1edb\u1edd\u1ee3\xf6\xf8\u014dO\xd2\xd3\u1ece\xd5\u1ecc\xd4\u1ed2\u1ed0\u1ed4\u1ed6\u1ed8\u01a0\u1ede\u1ee0\u1eda\u1edc\u1ee2\xd6\xd8\u014c","r\u0159R\u0158","s\u0161\u015b\u0219\u015fS\u0160\u015a\u0218\u015e","t\u0165\u021b\u0163T\u0164\u021a\u0162","u\xf9\xfa\u1ee7\u0169\u1ee5\u01b0\u1eeb\u1ee9\u1eed\u1eef\u1ef1\xfb\xfc\u016f\u016bU\xd9\xda\u1ee6\u0168\u1ee4\u01af\u1eea\u1ee8\u1eec\u1eee\u1ef0\xdb\xdc\u016e\u016a","y\xfd\u1ef3\u1ef7\u1ef9\u1ef5\xffY\xdd\u1ef2\u1ef6\u1ef8\u1ef4\u0178","z\u017e\u017c\u017aZ\u017d\u017b\u0179"],r=[];return e.split("").forEach((function(s){n.every((function(n){if(-1!==n.indexOf(s)){if(r.indexOf(n)>-1)return!1;e=e.replace(new RegExp("["+n+"]","gm"+t),"["+n+"]"),r.push(n)}return!0}))})),e}},{key:"createMergedBlanksRegExp",value:function(e){return e.replace(/[\s]+/gim,"[\\s]+")}},{key:"createAccuracyRegExp",value:function(e){var t=this,n="!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\xa1\xbf",r=this.opt.accuracy,s="string"==typeof r?r:r.value,o="string"==typeof r?[]:r.limiters,i="";switch(o.forEach((function(e){i+="|"+t.escapeStr(e)})),s){case"partially":default:return"()("+e+")";case"complementary":return"()([^"+(i="\\s"+(i||this.escapeStr(n)))+"]*"+e+"[^"+i+"]*)";case"exactly":return"(^|\\s"+i+")("+e+")(?=$|\\s"+i+")"}}},{key:"getSeparatedKeywords",value:function(e){var t=this,n=[];return e.forEach((function(e){t.opt.separateWordSearch?e.split(" ").forEach((function(e){e.trim()&&-1===n.indexOf(e)&&n.push(e)})):e.trim()&&-1===n.indexOf(e)&&n.push(e)})),{keywords:n.sort((function(e,t){return t.length-e.length})),length:n.length}}},{key:"isNumeric",value:function(e){return Number(parseFloat(e))==e}},{key:"checkRanges",value:function(e){var t=this;if(!Array.isArray(e)||"[object Object]"!==Object.prototype.toString.call(e[0]))return this.log("markRanges() will only accept an array of objects"),this.opt.noMatch(e),[];var n=[],r=0;return e.sort((function(e,t){return e.start-t.start})).forEach((function(e){var s=t.callNoMatchOnInvalidRanges(e,r),o=s.start,i=s.end;s.valid&&(e.start=o,e.length=i-o,n.push(e),r=i)})),n}},{key:"callNoMatchOnInvalidRanges",value:function(e,t){var n=void 0,r=void 0,s=!1;return e&&void 0!==e.start?(r=(n=parseInt(e.start,10))+parseInt(e.length,10),this.isNumeric(e.start)&&this.isNumeric(e.length)&&r-t>0&&r-n>0?s=!0:(this.log("Ignoring invalid or overlapping range: "+JSON.stringify(e)),this.opt.noMatch(e))):(this.log("Ignoring invalid range: "+JSON.stringify(e)),this.opt.noMatch(e)),{start:n,end:r,valid:s}}},{key:"checkWhitespaceRanges",value:function(e,t,n){var r=void 0,s=!0,o=n.length,i=t-o,a=parseInt(e.start,10)-i;return(r=(a=a>o?o:a)+parseInt(e.length,10))>o&&(r=o,this.log("End range automatically set to the max value of "+o)),a<0||r-a<0||a>o||r>o?(s=!1,this.log("Invalid range: "+JSON.stringify(e)),this.opt.noMatch(e)):""===n.substring(a,r).replace(/\s+/g,"")&&(s=!1,this.log("Skipping whitespace only range: "+JSON.stringify(e)),this.opt.noMatch(e)),{start:a,end:r,valid:s}}},{key:"getTextNodes",value:function(e){var t=this,n="",r=[];this.iterator.forEachNode(NodeFilter.SHOW_TEXT,(function(e){r.push({start:n.length,end:(n+=e.textContent).length,node:e})}),(function(e){return t.matchesExclude(e.parentNode)?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT}),(function(){e({value:n,nodes:r})}))}},{key:"matchesExclude",value:function(e){return s.matches(e,this.opt.exclude.concat(["script","style","title","head","html"]))}},{key:"wrapRangeInTextNode",value:function(e,t,n){var r=this.opt.element?this.opt.element:"mark",s=e.splitText(t),o=s.splitText(n-t),i=document.createElement(r);return i.setAttribute("data-markjs","true"),this.opt.className&&i.setAttribute("class",this.opt.className),i.textContent=s.textContent,s.parentNode.replaceChild(i,s),o}},{key:"wrapRangeInMappedTextNode",value:function(e,t,n,r,s){var o=this;e.nodes.every((function(i,a){var p=e.nodes[a+1];if(void 0===p||p.start>t){if(!r(i.node))return!1;var c=t-i.start,m=(n>i.end?i.end:n)-i.start,d=e.value.substr(0,i.start),u=e.value.substr(m+i.start);if(i.node=o.wrapRangeInTextNode(i.node,c,m),e.value=d+u,e.nodes.forEach((function(t,n){n>=a&&(e.nodes[n].start>0&&n!==a&&(e.nodes[n].start-=m),e.nodes[n].end-=m)})),n-=m,s(i.node.previousSibling,i.start),!(n>i.end))return!1;t=i.end}return!0}))}},{key:"wrapMatches",value:function(e,t,n,r,s){var o=this,i=0===t?0:t+1;this.getTextNodes((function(t){t.nodes.forEach((function(t){t=t.node;for(var s=void 0;null!==(s=e.exec(t.textContent))&&""!==s[i];)if(n(s[i],t)){var a=s.index;if(0!==i)for(var p=1;p<i;p++)a+=s[p].length;t=o.wrapRangeInTextNode(t,a,a+s[i].length),r(t.previousSibling),e.lastIndex=0}})),s()}))}},{key:"wrapMatchesAcrossElements",value:function(e,t,n,r,s){var o=this,i=0===t?0:t+1;this.getTextNodes((function(t){for(var a=void 0;null!==(a=e.exec(t.value))&&""!==a[i];){var p=a.index;if(0!==i)for(var c=1;c<i;c++)p+=a[c].length;var m=p+a[i].length;o.wrapRangeInMappedTextNode(t,p,m,(function(e){return n(a[i],e)}),(function(t,n){e.lastIndex=n,r(t)}))}s()}))}},{key:"wrapRangeFromIndex",value:function(e,t,n,r){var s=this;this.getTextNodes((function(o){var i=o.value.length;e.forEach((function(e,r){var a=s.checkWhitespaceRanges(e,i,o.value),p=a.start,c=a.end;a.valid&&s.wrapRangeInMappedTextNode(o,p,c,(function(n){return t(n,e,o.value.substring(p,c),r)}),(function(t){n(t,e)}))})),r()}))}},{key:"unwrapMatches",value:function(e){for(var t=e.parentNode,n=document.createDocumentFragment();e.firstChild;)n.appendChild(e.removeChild(e.firstChild));t.replaceChild(n,e),this.ie?this.normalizeTextNode(t):t.normalize()}},{key:"normalizeTextNode",value:function(e){if(e){if(3===e.nodeType)for(;e.nextSibling&&3===e.nextSibling.nodeType;)e.nodeValue+=e.nextSibling.nodeValue,e.parentNode.removeChild(e.nextSibling);else this.normalizeTextNode(e.firstChild);this.normalizeTextNode(e.nextSibling)}}},{key:"markRegExp",value:function(e,t){var n=this;this.opt=t,this.log('Searching with expression "'+e+'"');var r=0,s="wrapMatches",o=function(e){r++,n.opt.each(e)};this.opt.acrossElements&&(s="wrapMatchesAcrossElements"),this[s](e,this.opt.ignoreGroups,(function(e,t){return n.opt.filter(t,e,r)}),o,(function(){0===r&&n.opt.noMatch(e),n.opt.done(r)}))}},{key:"mark",value:function(e,t){var n=this;this.opt=t;var r=0,s="wrapMatches",o=this.getSeparatedKeywords("string"==typeof e?[e]:e),i=o.keywords,a=o.length,p=this.opt.caseSensitive?"":"i",c=function e(t){var o=new RegExp(n.createRegExp(t),"gm"+p),c=0;n.log('Searching with expression "'+o+'"'),n[s](o,1,(function(e,s){return n.opt.filter(s,t,r,c)}),(function(e){c++,r++,n.opt.each(e)}),(function(){0===c&&n.opt.noMatch(t),i[a-1]===t?n.opt.done(r):e(i[i.indexOf(t)+1])}))};this.opt.acrossElements&&(s="wrapMatchesAcrossElements"),0===a?this.opt.done(r):c(i[0])}},{key:"markRanges",value:function(e,t){var n=this;this.opt=t;var r=0,s=this.checkRanges(e);s&&s.length?(this.log("Starting to mark with the following ranges: "+JSON.stringify(s)),this.wrapRangeFromIndex(s,(function(e,t,r,s){return n.opt.filter(e,t,r,s)}),(function(e,t){r++,n.opt.each(e,t)}),(function(){n.opt.done(r)}))):this.opt.done(r)}},{key:"unmark",value:function(e){var t=this;this.opt=e;var n=this.opt.element?this.opt.element:"*";n+="[data-markjs]",this.opt.className&&(n+="."+this.opt.className),this.log('Removal selector "'+n+'"'),this.iterator.forEachNode(NodeFilter.SHOW_ELEMENT,(function(e){t.unwrapMatches(e)}),(function(e){var r=s.matches(e,n),o=t.matchesExclude(e);return!r||o?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT}),this.opt.done)}},{key:"opt",set:function(e){this._opt=r({},{element:"",className:"",exclude:[],iframes:!1,iframesTimeout:5e3,separateWordSearch:!0,diacritics:!0,synonyms:{},accuracy:"partially",acrossElements:!1,caseSensitive:!1,ignoreJoiners:!1,ignoreGroups:0,ignorePunctuation:[],wildcards:"disabled",each:function(){},noMatch:function(){},filter:function(){return!0},done:function(){},debug:!1,log:window.console},e)},get:function(){return this._opt}},{key:"iterator",get:function(){return new s(this.ctx,this.opt.iframes,this.opt.exclude,this.opt.iframesTimeout)}}]),o}();function i(e){var t=this,n=new o(e);return this.mark=function(e,r){return n.mark(e,r),t},this.markRegExp=function(e,r){return n.markRegExp(e,r),t},this.markRanges=function(e,r){return n.markRanges(e,r),t},this.unmark=function(e){return n.unmark(e),t},this}return i}()},41304:(e,t,n)=>{"use strict";n.r(t)},32497:(e,t,n)=>{"use strict";n.r(t)},52295:(e,t,n)=>{"use strict";n.r(t)},74865:function(e,t,n){var r,s;r=function(){var e,t,n={version:"0.2.0"},r=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function s(e,t,n){return e<t?t:e>n?n:e}function o(e){return 100*(-1+e)}function i(e,t,n){var s;return(s="translate3d"===r.positionUsing?{transform:"translate3d("+o(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+o(e)+"%,0)"}:{"margin-left":o(e)+"%"}).transition="all "+t+"ms "+n,s}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(r[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=s(e,r.minimum,1),n.status=1===e?null:e;var o=n.render(!t),c=o.querySelector(r.barSelector),m=r.speed,d=r.easing;return o.offsetWidth,a((function(t){""===r.positionUsing&&(r.positionUsing=n.getPositioningCSS()),p(c,i(e,m,d)),1===e?(p(o,{transition:"none",opacity:1}),o.offsetWidth,setTimeout((function(){p(o,{transition:"all "+m+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),m)}),m)):setTimeout(t,m)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*s(Math.random()*t,.1,.95)),t=s(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*r.trickleRate)},e=0,t=0,n.promise=function(r){return r&&"resolved"!==r.state()?(0===t&&n.start(),e++,t++,r.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");m(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=r.template;var s,i=t.querySelector(r.barSelector),a=e?"-100":o(n.status||0),c=document.querySelector(r.parent);return p(i,{transition:"all 0 linear",transform:"translate3d("+a+"%,0,0)"}),r.showSpinner||(s=t.querySelector(r.spinnerSelector))&&l(s),c!=document.body&&m(c,"nprogress-custom-parent"),c.appendChild(t),t},n.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&l(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var a=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),p=function(){var e=["Webkit","O","Moz","ms"],t={};function n(e){return e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()}))}function r(t){var n=document.body.style;if(t in n)return t;for(var r,s=e.length,o=t.charAt(0).toUpperCase()+t.slice(1);s--;)if((r=e[s]+o)in n)return r;return t}function s(e){return e=n(e),t[e]||(t[e]=r(e))}function o(e,t,n){t=s(t),e.style[t]=n}return function(e,t){var n,r,s=arguments;if(2==s.length)for(n in t)void 0!==(r=t[n])&&t.hasOwnProperty(n)&&o(e,n,r);else o(e,s[1],s[2])}}();function c(e,t){return("string"==typeof e?e:u(e)).indexOf(" "+t+" ")>=0}function m(e,t){var n=u(e),r=n+t;c(n,t)||(e.className=r.substring(1))}function d(e,t){var n,r=u(e);c(e,t)&&(n=r.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function u(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function l(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n},void 0===(s="function"==typeof r?r.call(t,n,t,e):r)||(e.exports=s)},14779:(e,t,n)=>{var r=n(5826);e.exports=l,e.exports.parse=o,e.exports.compile=function(e,t){return a(o(e,t),t)},e.exports.tokensToFunction=a,e.exports.tokensToRegExp=u;var s=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,t){for(var n,r=[],o=0,i=0,a="",m=t&&t.delimiter||"/";null!=(n=s.exec(e));){var d=n[0],u=n[1],l=n.index;if(a+=e.slice(i,l),i=l+d.length,u)a+=u[1];else{var g=e[i],h=n[2],f=n[3],y=n[4],b=n[5],x=n[6],w=n[7];a&&(r.push(a),a="");var v=null!=h&&null!=g&&g!==h,k="+"===x||"*"===x,q="?"===x||"*"===x,$=n[2]||m,_=y||b;r.push({name:f||o++,prefix:h||"",delimiter:$,optional:q,repeat:k,partial:v,asterisk:!!w,pattern:_?c(_):w?".*":"[^"+p($)+"]+?"})}}return i<e.length&&(a+=e.substr(i)),a&&r.push(a),r}function i(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function a(e,t){for(var n=new Array(e.length),s=0;s<e.length;s++)"object"==typeof e[s]&&(n[s]=new RegExp("^(?:"+e[s].pattern+")$",d(t)));return function(t,s){for(var o="",a=t||{},p=(s||{}).pretty?i:encodeURIComponent,c=0;c<e.length;c++){var m=e[c];if("string"!=typeof m){var d,u=a[m.name];if(null==u){if(m.optional){m.partial&&(o+=m.prefix);continue}throw new TypeError('Expected "'+m.name+'" to be defined')}if(r(u)){if(!m.repeat)throw new TypeError('Expected "'+m.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(m.optional)continue;throw new TypeError('Expected "'+m.name+'" to not be empty')}for(var l=0;l<u.length;l++){if(d=p(u[l]),!n[c].test(d))throw new TypeError('Expected all "'+m.name+'" to match "'+m.pattern+'", but received `'+JSON.stringify(d)+"`");o+=(0===l?m.prefix:m.delimiter)+d}}else{if(d=m.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):p(u),!n[c].test(d))throw new TypeError('Expected "'+m.name+'" to match "'+m.pattern+'", but received "'+d+'"');o+=m.prefix+d}}else o+=m}return o}}function p(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function m(e,t){return e.keys=t,e}function d(e){return e&&e.sensitive?"":"i"}function u(e,t,n){r(t)||(n=t||n,t=[]);for(var s=(n=n||{}).strict,o=!1!==n.end,i="",a=0;a<e.length;a++){var c=e[a];if("string"==typeof c)i+=p(c);else{var u=p(c.prefix),l="(?:"+c.pattern+")";t.push(c),c.repeat&&(l+="(?:"+u+l+")*"),i+=l=c.optional?c.partial?u+"("+l+")?":"(?:"+u+"("+l+"))?":u+"("+l+")"}}var g=p(n.delimiter||"/"),h=i.slice(-g.length)===g;return s||(i=(h?i.slice(0,-g.length):i)+"(?:"+g+"(?=$))?"),i+=o?"$":s&&h?"":"(?="+g+"|$)",m(new RegExp("^"+i,d(n)),t)}function l(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return m(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],s=0;s<e.length;s++)r.push(l(e[s],t,n).source);return m(new RegExp("(?:"+r.join("|")+")",d(n)),t)}(e,t,n):function(e,t,n){return u(o(e,n),t,n)}(e,t,n)}},29901:e=>{e.exports&&(e.exports={core:{meta:{path:"components/prism-core.js",option:"mandatory"},core:"Core"},themes:{meta:{path:"themes/{id}.css",link:"index.html?theme={id}",exclusive:!0},prism:{title:"Default",option:"default"},"prism-dark":"Dark","prism-funky":"Funky","prism-okaidia":{title:"Okaidia",owner:"ocodia"},"prism-twilight":{title:"Twilight",owner:"remybach"},"prism-coy":{title:"Coy",owner:"tshedor"},"prism-solarizedlight":{title:"Solarized Light",owner:"hectormatos2011 "},"prism-tomorrow":{title:"Tomorrow Night",owner:"Rosey"}},languages:{meta:{path:"components/prism-{id}",noCSS:!0,examplesPath:"examples/prism-{id}",addCheckAll:!0},markup:{title:"Markup",alias:["html","xml","svg","mathml","ssml","atom","rss"],aliasTitles:{html:"HTML",xml:"XML",svg:"SVG",mathml:"MathML",ssml:"SSML",atom:"Atom",rss:"RSS"},option:"default"},css:{title:"CSS",option:"default",modify:"markup"},clike:{title:"C-like",option:"default"},javascript:{title:"JavaScript",require:"clike",modify:"markup",optional:"regex",alias:"js",option:"default"},abap:{title:"ABAP",owner:"dellagustin"},abnf:{title:"ABNF",owner:"RunDevelopment"},actionscript:{title:"ActionScript",require:"javascript",modify:"markup",owner:"Golmote"},ada:{title:"Ada",owner:"Lucretia"},agda:{title:"Agda",owner:"xy-ren"},al:{title:"AL",owner:"RunDevelopment"},antlr4:{title:"ANTLR4",alias:"g4",owner:"RunDevelopment"},apacheconf:{title:"Apache Configuration",owner:"GuiTeK"},apex:{title:"Apex",require:["clike","sql"],owner:"RunDevelopment"},apl:{title:"APL",owner:"ngn"},applescript:{title:"AppleScript",owner:"Golmote"},aql:{title:"AQL",owner:"RunDevelopment"},arduino:{title:"Arduino",require:"cpp",alias:"ino",owner:"dkern"},arff:{title:"ARFF",owner:"Golmote"},armasm:{title:"ARM Assembly",alias:"arm-asm",owner:"RunDevelopment"},arturo:{title:"Arturo",alias:"art",optional:["bash","css","javascript","markup","markdown","sql"],owner:"drkameleon"},asciidoc:{alias:"adoc",title:"AsciiDoc",owner:"Golmote"},aspnet:{title:"ASP.NET (C#)",require:["markup","csharp"],owner:"nauzilus"},asm6502:{title:"6502 Assembly",owner:"kzurawel"},asmatmel:{title:"Atmel AVR Assembly",owner:"cerkit"},autohotkey:{title:"AutoHotkey",owner:"aviaryan"},autoit:{title:"AutoIt",owner:"Golmote"},avisynth:{title:"AviSynth",alias:"avs",owner:"Zinfidel"},"avro-idl":{title:"Avro IDL",alias:"avdl",owner:"RunDevelopment"},awk:{title:"AWK",alias:"gawk",aliasTitles:{gawk:"GAWK"},owner:"RunDevelopment"},bash:{title:"Bash",alias:["sh","shell"],aliasTitles:{sh:"Shell",shell:"Shell"},owner:"zeitgeist87"},basic:{title:"BASIC",owner:"Golmote"},batch:{title:"Batch",owner:"Golmote"},bbcode:{title:"BBcode",alias:"shortcode",aliasTitles:{shortcode:"Shortcode"},owner:"RunDevelopment"},bbj:{title:"BBj",owner:"hyyan"},bicep:{title:"Bicep",owner:"johnnyreilly"},birb:{title:"Birb",require:"clike",owner:"Calamity210"},bison:{title:"Bison",require:"c",owner:"Golmote"},bnf:{title:"BNF",alias:"rbnf",aliasTitles:{rbnf:"RBNF"},owner:"RunDevelopment"},bqn:{title:"BQN",owner:"yewscion"},brainfuck:{title:"Brainfuck",owner:"Golmote"},brightscript:{title:"BrightScript",owner:"RunDevelopment"},bro:{title:"Bro",owner:"wayward710"},bsl:{title:"BSL (1C:Enterprise)",alias:"oscript",aliasTitles:{oscript:"OneScript"},owner:"Diversus23"},c:{title:"C",require:"clike",owner:"zeitgeist87"},csharp:{title:"C#",require:"clike",alias:["cs","dotnet"],owner:"mvalipour"},cpp:{title:"C++",require:"c",owner:"zeitgeist87"},cfscript:{title:"CFScript",require:"clike",alias:"cfc",owner:"mjclemente"},chaiscript:{title:"ChaiScript",require:["clike","cpp"],owner:"RunDevelopment"},cil:{title:"CIL",owner:"sbrl"},cilkc:{title:"Cilk/C",require:"c",alias:"cilk-c",owner:"OpenCilk"},cilkcpp:{title:"Cilk/C++",require:"cpp",alias:["cilk-cpp","cilk"],owner:"OpenCilk"},clojure:{title:"Clojure",owner:"troglotit"},cmake:{title:"CMake",owner:"mjrogozinski"},cobol:{title:"COBOL",owner:"RunDevelopment"},coffeescript:{title:"CoffeeScript",require:"javascript",alias:"coffee",owner:"R-osey"},concurnas:{title:"Concurnas",alias:"conc",owner:"jasontatton"},csp:{title:"Content-Security-Policy",owner:"ScottHelme"},cooklang:{title:"Cooklang",owner:"ahue"},coq:{title:"Coq",owner:"RunDevelopment"},crystal:{title:"Crystal",require:"ruby",owner:"MakeNowJust"},"css-extras":{title:"CSS Extras",require:"css",modify:"css",owner:"milesj"},csv:{title:"CSV",owner:"RunDevelopment"},cue:{title:"CUE",owner:"RunDevelopment"},cypher:{title:"Cypher",owner:"RunDevelopment"},d:{title:"D",require:"clike",owner:"Golmote"},dart:{title:"Dart",require:"clike",owner:"Golmote"},dataweave:{title:"DataWeave",owner:"machaval"},dax:{title:"DAX",owner:"peterbud"},dhall:{title:"Dhall",owner:"RunDevelopment"},diff:{title:"Diff",owner:"uranusjr"},django:{title:"Django/Jinja2",require:"markup-templating",alias:"jinja2",owner:"romanvm"},"dns-zone-file":{title:"DNS zone file",owner:"RunDevelopment",alias:"dns-zone"},docker:{title:"Docker",alias:"dockerfile",owner:"JustinBeckwith"},dot:{title:"DOT (Graphviz)",alias:"gv",optional:"markup",owner:"RunDevelopment"},ebnf:{title:"EBNF",owner:"RunDevelopment"},editorconfig:{title:"EditorConfig",owner:"osipxd"},eiffel:{title:"Eiffel",owner:"Conaclos"},ejs:{title:"EJS",require:["javascript","markup-templating"],owner:"RunDevelopment",alias:"eta",aliasTitles:{eta:"Eta"}},elixir:{title:"Elixir",owner:"Golmote"},elm:{title:"Elm",owner:"zwilias"},etlua:{title:"Embedded Lua templating",require:["lua","markup-templating"],owner:"RunDevelopment"},erb:{title:"ERB",require:["ruby","markup-templating"],owner:"Golmote"},erlang:{title:"Erlang",owner:"Golmote"},"excel-formula":{title:"Excel Formula",alias:["xlsx","xls"],owner:"RunDevelopment"},fsharp:{title:"F#",require:"clike",owner:"simonreynolds7"},factor:{title:"Factor",owner:"catb0t"},false:{title:"False",owner:"edukisto"},"firestore-security-rules":{title:"Firestore security rules",require:"clike",owner:"RunDevelopment"},flow:{title:"Flow",require:"javascript",owner:"Golmote"},fortran:{title:"Fortran",owner:"Golmote"},ftl:{title:"FreeMarker Template Language",require:"markup-templating",owner:"RunDevelopment"},gml:{title:"GameMaker Language",alias:"gamemakerlanguage",require:"clike",owner:"LiarOnce"},gap:{title:"GAP (CAS)",owner:"RunDevelopment"},gcode:{title:"G-code",owner:"RunDevelopment"},gdscript:{title:"GDScript",owner:"RunDevelopment"},gedcom:{title:"GEDCOM",owner:"Golmote"},gettext:{title:"gettext",alias:"po",owner:"RunDevelopment"},gherkin:{title:"Gherkin",owner:"hason"},git:{title:"Git",owner:"lgiraudel"},glsl:{title:"GLSL",require:"c",owner:"Golmote"},gn:{title:"GN",alias:"gni",owner:"RunDevelopment"},"linker-script":{title:"GNU Linker Script",alias:"ld",owner:"RunDevelopment"},go:{title:"Go",require:"clike",owner:"arnehormann"},"go-module":{title:"Go module",alias:"go-mod",owner:"RunDevelopment"},gradle:{title:"Gradle",require:"clike",owner:"zeabdelkhalek-badido18"},graphql:{title:"GraphQL",optional:"markdown",owner:"Golmote"},groovy:{title:"Groovy",require:"clike",owner:"robfletcher"},haml:{title:"Haml",require:"ruby",optional:["css","css-extras","coffeescript","erb","javascript","less","markdown","scss","textile"],owner:"Golmote"},handlebars:{title:"Handlebars",require:"markup-templating",alias:["hbs","mustache"],aliasTitles:{mustache:"Mustache"},owner:"Golmote"},haskell:{title:"Haskell",alias:"hs",owner:"bholst"},haxe:{title:"Haxe",require:"clike",optional:"regex",owner:"Golmote"},hcl:{title:"HCL",owner:"outsideris"},hlsl:{title:"HLSL",require:"c",owner:"RunDevelopment"},hoon:{title:"Hoon",owner:"matildepark"},http:{title:"HTTP",optional:["csp","css","hpkp","hsts","javascript","json","markup","uri"],owner:"danielgtaylor"},hpkp:{title:"HTTP Public-Key-Pins",owner:"ScottHelme"},hsts:{title:"HTTP Strict-Transport-Security",owner:"ScottHelme"},ichigojam:{title:"IchigoJam",owner:"BlueCocoa"},icon:{title:"Icon",owner:"Golmote"},"icu-message-format":{title:"ICU Message Format",owner:"RunDevelopment"},idris:{title:"Idris",alias:"idr",owner:"KeenS",require:"haskell"},ignore:{title:".ignore",owner:"osipxd",alias:["gitignore","hgignore","npmignore"],aliasTitles:{gitignore:".gitignore",hgignore:".hgignore",npmignore:".npmignore"}},inform7:{title:"Inform 7",owner:"Golmote"},ini:{title:"Ini",owner:"aviaryan"},io:{title:"Io",owner:"AlesTsurko"},j:{title:"J",owner:"Golmote"},java:{title:"Java",require:"clike",owner:"sherblot"},javadoc:{title:"JavaDoc",require:["markup","java","javadoclike"],modify:"java",optional:"scala",owner:"RunDevelopment"},javadoclike:{title:"JavaDoc-like",modify:["java","javascript","php"],owner:"RunDevelopment"},javastacktrace:{title:"Java stack trace",owner:"RunDevelopment"},jexl:{title:"Jexl",owner:"czosel"},jolie:{title:"Jolie",require:"clike",owner:"thesave"},jq:{title:"JQ",owner:"RunDevelopment"},jsdoc:{title:"JSDoc",require:["javascript","javadoclike","typescript"],modify:"javascript",optional:["actionscript","coffeescript"],owner:"RunDevelopment"},"js-extras":{title:"JS Extras",require:"javascript",modify:"javascript",optional:["actionscript","coffeescript","flow","n4js","typescript"],owner:"RunDevelopment"},json:{title:"JSON",alias:"webmanifest",aliasTitles:{webmanifest:"Web App Manifest"},owner:"CupOfTea696"},json5:{title:"JSON5",require:"json",owner:"RunDevelopment"},jsonp:{title:"JSONP",require:"json",owner:"RunDevelopment"},jsstacktrace:{title:"JS stack trace",owner:"sbrl"},"js-templates":{title:"JS Templates",require:"javascript",modify:"javascript",optional:["css","css-extras","graphql","markdown","markup","sql"],owner:"RunDevelopment"},julia:{title:"Julia",owner:"cdagnino"},keepalived:{title:"Keepalived Configure",owner:"dev-itsheng"},keyman:{title:"Keyman",owner:"mcdurdin"},kotlin:{title:"Kotlin",alias:["kt","kts"],aliasTitles:{kts:"Kotlin Script"},require:"clike",owner:"Golmote"},kumir:{title:"KuMir (\u041a\u0443\u041c\u0438\u0440)",alias:"kum",owner:"edukisto"},kusto:{title:"Kusto",owner:"RunDevelopment"},latex:{title:"LaTeX",alias:["tex","context"],aliasTitles:{tex:"TeX",context:"ConTeXt"},owner:"japborst"},latte:{title:"Latte",require:["clike","markup-templating","php"],owner:"nette"},less:{title:"Less",require:"css",optional:"css-extras",owner:"Golmote"},lilypond:{title:"LilyPond",require:"scheme",alias:"ly",owner:"RunDevelopment"},liquid:{title:"Liquid",require:"markup-templating",owner:"cinhtau"},lisp:{title:"Lisp",alias:["emacs","elisp","emacs-lisp"],owner:"JuanCaicedo"},livescript:{title:"LiveScript",owner:"Golmote"},llvm:{title:"LLVM IR",owner:"porglezomp"},log:{title:"Log file",optional:"javastacktrace",owner:"RunDevelopment"},lolcode:{title:"LOLCODE",owner:"Golmote"},lua:{title:"Lua",owner:"Golmote"},magma:{title:"Magma (CAS)",owner:"RunDevelopment"},makefile:{title:"Makefile",owner:"Golmote"},markdown:{title:"Markdown",require:"markup",optional:"yaml",alias:"md",owner:"Golmote"},"markup-templating":{title:"Markup templating",require:"markup",owner:"Golmote"},mata:{title:"Mata",owner:"RunDevelopment"},matlab:{title:"MATLAB",owner:"Golmote"},maxscript:{title:"MAXScript",owner:"RunDevelopment"},mel:{title:"MEL",owner:"Golmote"},mermaid:{title:"Mermaid",owner:"RunDevelopment"},metafont:{title:"METAFONT",owner:"LaeriExNihilo"},mizar:{title:"Mizar",owner:"Golmote"},mongodb:{title:"MongoDB",owner:"airs0urce",require:"javascript"},monkey:{title:"Monkey",owner:"Golmote"},moonscript:{title:"MoonScript",alias:"moon",owner:"RunDevelopment"},n1ql:{title:"N1QL",owner:"TMWilds"},n4js:{title:"N4JS",require:"javascript",optional:"jsdoc",alias:"n4jsd",owner:"bsmith-n4"},"nand2tetris-hdl":{title:"Nand To Tetris HDL",owner:"stephanmax"},naniscript:{title:"Naninovel Script",owner:"Elringus",alias:"nani"},nasm:{title:"NASM",owner:"rbmj"},neon:{title:"NEON",owner:"nette"},nevod:{title:"Nevod",owner:"nezaboodka"},nginx:{title:"nginx",owner:"volado"},nim:{title:"Nim",owner:"Golmote"},nix:{title:"Nix",owner:"Golmote"},nsis:{title:"NSIS",owner:"idleberg"},objectivec:{title:"Objective-C",require:"c",alias:"objc",owner:"uranusjr"},ocaml:{title:"OCaml",owner:"Golmote"},odin:{title:"Odin",owner:"edukisto"},opencl:{title:"OpenCL",require:"c",modify:["c","cpp"],owner:"Milania1"},openqasm:{title:"OpenQasm",alias:"qasm",owner:"RunDevelopment"},oz:{title:"Oz",owner:"Golmote"},parigp:{title:"PARI/GP",owner:"Golmote"},parser:{title:"Parser",require:"markup",owner:"Golmote"},pascal:{title:"Pascal",alias:"objectpascal",aliasTitles:{objectpascal:"Object Pascal"},owner:"Golmote"},pascaligo:{title:"Pascaligo",owner:"DefinitelyNotAGoat"},psl:{title:"PATROL Scripting Language",owner:"bertysentry"},pcaxis:{title:"PC-Axis",alias:"px",owner:"RunDevelopment"},peoplecode:{title:"PeopleCode",alias:"pcode",owner:"RunDevelopment"},perl:{title:"Perl",owner:"Golmote"},php:{title:"PHP",require:"markup-templating",owner:"milesj"},phpdoc:{title:"PHPDoc",require:["php","javadoclike"],modify:"php",owner:"RunDevelopment"},"php-extras":{title:"PHP Extras",require:"php",modify:"php",owner:"milesj"},"plant-uml":{title:"PlantUML",alias:"plantuml",owner:"RunDevelopment"},plsql:{title:"PL/SQL",require:"sql",owner:"Golmote"},powerquery:{title:"PowerQuery",alias:["pq","mscript"],owner:"peterbud"},powershell:{title:"PowerShell",owner:"nauzilus"},processing:{title:"Processing",require:"clike",owner:"Golmote"},prolog:{title:"Prolog",owner:"Golmote"},promql:{title:"PromQL",owner:"arendjr"},properties:{title:".properties",owner:"Golmote"},protobuf:{title:"Protocol Buffers",require:"clike",owner:"just-boris"},pug:{title:"Pug",require:["markup","javascript"],optional:["coffeescript","ejs","handlebars","less","livescript","markdown","scss","stylus","twig"],owner:"Golmote"},puppet:{title:"Puppet",owner:"Golmote"},pure:{title:"Pure",optional:["c","cpp","fortran"],owner:"Golmote"},purebasic:{title:"PureBasic",require:"clike",alias:"pbfasm",owner:"HeX0R101"},purescript:{title:"PureScript",require:"haskell",alias:"purs",owner:"sriharshachilakapati"},python:{title:"Python",alias:"py",owner:"multipetros"},qsharp:{title:"Q#",require:"clike",alias:"qs",owner:"fedonman"},q:{title:"Q (kdb+ database)",owner:"Golmote"},qml:{title:"QML",require:"javascript",owner:"RunDevelopment"},qore:{title:"Qore",require:"clike",owner:"temnroegg"},r:{title:"R",owner:"Golmote"},racket:{title:"Racket",require:"scheme",alias:"rkt",owner:"RunDevelopment"},cshtml:{title:"Razor C#",alias:"razor",require:["markup","csharp"],optional:["css","css-extras","javascript","js-extras"],owner:"RunDevelopment"},jsx:{title:"React JSX",require:["markup","javascript"],optional:["jsdoc","js-extras","js-templates"],owner:"vkbansal"},tsx:{title:"React TSX",require:["jsx","typescript"]},reason:{title:"Reason",require:"clike",owner:"Golmote"},regex:{title:"Regex",owner:"RunDevelopment"},rego:{title:"Rego",owner:"JordanSh"},renpy:{title:"Ren'py",alias:"rpy",owner:"HyuchiaDiego"},rescript:{title:"ReScript",alias:"res",owner:"vmarcosp"},rest:{title:"reST (reStructuredText)",owner:"Golmote"},rip:{title:"Rip",owner:"ravinggenius"},roboconf:{title:"Roboconf",owner:"Golmote"},robotframework:{title:"Robot Framework",alias:"robot",owner:"RunDevelopment"},ruby:{title:"Ruby",require:"clike",alias:"rb",owner:"samflores"},rust:{title:"Rust",owner:"Golmote"},sas:{title:"SAS",optional:["groovy","lua","sql"],owner:"Golmote"},sass:{title:"Sass (Sass)",require:"css",optional:"css-extras",owner:"Golmote"},scss:{title:"Sass (SCSS)",require:"css",optional:"css-extras",owner:"MoOx"},scala:{title:"Scala",require:"java",owner:"jozic"},scheme:{title:"Scheme",owner:"bacchus123"},"shell-session":{title:"Shell session",require:"bash",alias:["sh-session","shellsession"],owner:"RunDevelopment"},smali:{title:"Smali",owner:"RunDevelopment"},smalltalk:{title:"Smalltalk",owner:"Golmote"},smarty:{title:"Smarty",require:"markup-templating",optional:"php",owner:"Golmote"},sml:{title:"SML",alias:"smlnj",aliasTitles:{smlnj:"SML/NJ"},owner:"RunDevelopment"},solidity:{title:"Solidity (Ethereum)",alias:"sol",require:"clike",owner:"glachaud"},"solution-file":{title:"Solution file",alias:"sln",owner:"RunDevelopment"},soy:{title:"Soy (Closure Template)",require:"markup-templating",owner:"Golmote"},sparql:{title:"SPARQL",require:"turtle",owner:"Triply-Dev",alias:"rq"},"splunk-spl":{title:"Splunk SPL",owner:"RunDevelopment"},sqf:{title:"SQF: Status Quo Function (Arma 3)",require:"clike",owner:"RunDevelopment"},sql:{title:"SQL",owner:"multipetros"},squirrel:{title:"Squirrel",require:"clike",owner:"RunDevelopment"},stan:{title:"Stan",owner:"RunDevelopment"},stata:{title:"Stata Ado",require:["mata","java","python"],owner:"RunDevelopment"},iecst:{title:"Structured Text (IEC 61131-3)",owner:"serhioromano"},stylus:{title:"Stylus",owner:"vkbansal"},supercollider:{title:"SuperCollider",alias:"sclang",owner:"RunDevelopment"},swift:{title:"Swift",owner:"chrischares"},systemd:{title:"Systemd configuration file",owner:"RunDevelopment"},"t4-templating":{title:"T4 templating",owner:"RunDevelopment"},"t4-cs":{title:"T4 Text Templates (C#)",require:["t4-templating","csharp"],alias:"t4",owner:"RunDevelopment"},"t4-vb":{title:"T4 Text Templates (VB)",require:["t4-templating","vbnet"],owner:"RunDevelopment"},tap:{title:"TAP",owner:"isaacs",require:"yaml"},tcl:{title:"Tcl",owner:"PeterChaplin"},tt2:{title:"Template Toolkit 2",require:["clike","markup-templating"],owner:"gflohr"},textile:{title:"Textile",require:"markup",optional:"css",owner:"Golmote"},toml:{title:"TOML",owner:"RunDevelopment"},tremor:{title:"Tremor",alias:["trickle","troy"],owner:"darach",aliasTitles:{trickle:"trickle",troy:"troy"}},turtle:{title:"Turtle",alias:"trig",aliasTitles:{trig:"TriG"},owner:"jakubklimek"},twig:{title:"Twig",require:"markup-templating",owner:"brandonkelly"},typescript:{title:"TypeScript",require:"javascript",optional:"js-templates",alias:"ts",owner:"vkbansal"},typoscript:{title:"TypoScript",alias:"tsconfig",aliasTitles:{tsconfig:"TSConfig"},owner:"dkern"},unrealscript:{title:"UnrealScript",alias:["uscript","uc"],owner:"RunDevelopment"},uorazor:{title:"UO Razor Script",owner:"jaseowns"},uri:{title:"URI",alias:"url",aliasTitles:{url:"URL"},owner:"RunDevelopment"},v:{title:"V",require:"clike",owner:"taggon"},vala:{title:"Vala",require:"clike",optional:"regex",owner:"TemplarVolk"},vbnet:{title:"VB.Net",require:"basic",owner:"Bigsby"},velocity:{title:"Velocity",require:"markup",owner:"Golmote"},verilog:{title:"Verilog",owner:"a-rey"},vhdl:{title:"VHDL",owner:"a-rey"},vim:{title:"vim",owner:"westonganger"},"visual-basic":{title:"Visual Basic",alias:["vb","vba"],aliasTitles:{vba:"VBA"},owner:"Golmote"},warpscript:{title:"WarpScript",owner:"RunDevelopment"},wasm:{title:"WebAssembly",owner:"Golmote"},"web-idl":{title:"Web IDL",alias:"webidl",owner:"RunDevelopment"},wgsl:{title:"WGSL",owner:"Dr4gonthree"},wiki:{title:"Wiki markup",require:"markup",owner:"Golmote"},wolfram:{title:"Wolfram language",alias:["mathematica","nb","wl"],aliasTitles:{mathematica:"Mathematica",nb:"Mathematica Notebook"},owner:"msollami"},wren:{title:"Wren",owner:"clsource"},xeora:{title:"Xeora",require:"markup",alias:"xeoracube",aliasTitles:{xeoracube:"XeoraCube"},owner:"freakmaxi"},"xml-doc":{title:"XML doc (.net)",require:"markup",modify:["csharp","fsharp","vbnet"],owner:"RunDevelopment"},xojo:{title:"Xojo (REALbasic)",owner:"Golmote"},xquery:{title:"XQuery",require:"markup",owner:"Golmote"},yaml:{title:"YAML",alias:"yml",owner:"hason"},yang:{title:"YANG",owner:"RunDevelopment"},zig:{title:"Zig",owner:"RunDevelopment"}},plugins:{meta:{path:"plugins/{id}/prism-{id}",link:"plugins/{id}/"},"line-highlight":{title:"Line Highlight",description:"Highlights specific lines and/or line ranges."},"line-numbers":{title:"Line Numbers",description:"Line number at the beginning of code lines.",owner:"kuba-kubula"},"show-invisibles":{title:"Show Invisibles",description:"Show hidden characters such as tabs and line breaks.",optional:["autolinker","data-uri-highlight"]},autolinker:{title:"Autolinker",description:"Converts URLs and emails in code to clickable links. Parses Markdown links in comments."},wpd:{title:"WebPlatform Docs",description:'Makes tokens link to <a href="https://webplatform.github.io/docs/">WebPlatform.org documentation</a>. The links open in a new tab.'},"custom-class":{title:"Custom Class",description:"This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.",owner:"dvkndn",noCSS:!0},"file-highlight":{title:"File Highlight",description:"Fetch external files and highlight them with Prism. Used on the Prism website itself.",noCSS:!0},"show-language":{title:"Show Language",description:"Display the highlighted language in code blocks (inline code does not show the label).",owner:"nauzilus",noCSS:!0,require:"toolbar"},"jsonp-highlight":{title:"JSONP Highlight",description:"Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).",noCSS:!0,owner:"nauzilus"},"highlight-keywords":{title:"Highlight Keywords",description:"Adds special CSS classes for each keyword for fine-grained highlighting.",owner:"vkbansal",noCSS:!0},"remove-initial-line-feed":{title:"Remove initial line feed",description:"Removes the initial line feed in code blocks.",owner:"Golmote",noCSS:!0},"inline-color":{title:"Inline color",description:"Adds a small inline preview for colors in style sheets.",require:"css-extras",owner:"RunDevelopment"},previewers:{title:"Previewers",description:"Previewers for angles, colors, gradients, easing and time.",require:"css-extras",owner:"Golmote"},autoloader:{title:"Autoloader",description:"Automatically loads the needed languages to highlight the code blocks.",owner:"Golmote",noCSS:!0},"keep-markup":{title:"Keep Markup",description:"Prevents custom markup from being dropped out during highlighting.",owner:"Golmote",optional:"normalize-whitespace",noCSS:!0},"command-line":{title:"Command Line",description:"Display a command line with a prompt and, optionally, the output/response from the commands.",owner:"chriswells0"},"unescaped-markup":{title:"Unescaped Markup",description:"Write markup without having to escape anything."},"normalize-whitespace":{title:"Normalize Whitespace",description:"Supports multiple operations to normalize whitespace in code blocks.",owner:"zeitgeist87",optional:"unescaped-markup",noCSS:!0},"data-uri-highlight":{title:"Data-URI Highlight",description:"Highlights data-URI contents.",owner:"Golmote",noCSS:!0},toolbar:{title:"Toolbar",description:"Attach a toolbar for plugins to easily register buttons on the top of a code block.",owner:"mAAdhaTTah"},"copy-to-clipboard":{title:"Copy to Clipboard Button",description:"Add a button that copies the code block to the clipboard when clicked.",owner:"mAAdhaTTah",require:"toolbar",noCSS:!0},"download-button":{title:"Download Button",description:"A button in the toolbar of a code block adding a convenient way to download a code file.",owner:"Golmote",require:"toolbar",noCSS:!0},"match-braces":{title:"Match braces",description:"Highlights matching braces.",owner:"RunDevelopment"},"diff-highlight":{title:"Diff Highlight",description:"Highlights the code inside diff blocks.",owner:"RunDevelopment",require:"diff"},"filter-highlight-all":{title:"Filter highlightAll",description:"Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.",owner:"RunDevelopment",noCSS:!0},treeview:{title:"Treeview",description:"A language with special styles to highlight file system tree structures.",owner:"Golmote"}}})},2885:(e,t,n)=>{const r=n(29901),s=n(39642),o=new Set;function i(e){void 0===e?e=Object.keys(r.languages).filter((e=>"meta"!=e)):Array.isArray(e)||(e=[e]);const t=[...o,...Object.keys(Prism.languages)];s(r,e,t).load((e=>{if(!(e in r.languages))return void(i.silent||console.warn("Language does not exist: "+e));const t="./prism-"+e;delete n.c[n(16500).resolve(t)],delete Prism.languages[e],n(16500)(t),o.add(e)}))}i.silent=!1,e.exports=i},96854:()=>{!function(e){function t(e,t){return"___"+e.toUpperCase()+t+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(n,r,s,o){if(n.language===r){var i=n.tokenStack=[];n.code=n.code.replace(s,(function(e){if("function"==typeof o&&!o(e))return e;for(var s,a=i.length;-1!==n.code.indexOf(s=t(r,a));)++a;return i[a]=e,s})),n.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(n,r){if(n.language===r&&n.tokenStack){n.grammar=e.languages[r];var s=0,o=Object.keys(n.tokenStack);!function i(a){for(var p=0;p<a.length&&!(s>=o.length);p++){var c=a[p];if("string"==typeof c||c.content&&"string"==typeof c.content){var m=o[s],d=n.tokenStack[m],u="string"==typeof c?c:c.content,l=t(r,m),g=u.indexOf(l);if(g>-1){++s;var h=u.substring(0,g),f=new e.Token(r,e.tokenize(d,n.grammar),"language-"+r,d),y=u.substring(g+l.length),b=[];h&&b.push.apply(b,i([h])),b.push(f),y&&b.push.apply(b,i([y])),"string"==typeof c?a.splice.apply(a,[p,1].concat(b)):c.content=b}}else c.content&&i(c.content)}return a}(n.tokens)}}}})}(Prism)},6726:(e,t,n)=>{var r={"./":2885};function s(e){var t=o(e);return n(t)}function o(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}s.keys=function(){return Object.keys(r)},s.resolve=o,e.exports=s,s.id=6726},16500:(e,t,n)=>{var r={"./":2885};function s(e){var t=o(e);return n(t)}function o(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}s.keys=function(){return Object.keys(r)},s.resolve=o,e.exports=s,s.id=16500},39642:e=>{"use strict";var t=function(){var e=function(){};function t(e,t){Array.isArray(e)?e.forEach(t):null!=e&&t(e,0)}function n(e){for(var t={},n=0,r=e.length;n<r;n++)t[e[n]]=!0;return t}function r(e){var n={},r=[];function s(r,o){if(!(r in n)){o.push(r);var i=o.indexOf(r);if(i<o.length-1)throw new Error("Circular dependency: "+o.slice(i).join(" -> "));var a={},p=e[r];if(p){function c(t){if(!(t in e))throw new Error(r+" depends on an unknown component "+t);if(!(t in a))for(var i in s(t,o),a[t]=!0,n[t])a[i]=!0}t(p.require,c),t(p.optional,c),t(p.modify,c)}n[r]=a,o.pop()}}return function(e){var t=n[e];return t||(s(e,r),t=n[e]),t}}function s(e){for(var t in e)return!0;return!1}return function(o,i,a){var p=function(e){var t={};for(var n in e){var r=e[n];for(var s in r)if("meta"!=s){var o=r[s];t[s]="string"==typeof o?{title:o}:o}}return t}(o),c=function(e){var n;return function(r){if(r in e)return r;if(!n)for(var s in n={},e){var o=e[s];t(o&&o.alias,(function(t){if(t in n)throw new Error(t+" cannot be alias for both "+s+" and "+n[t]);if(t in e)throw new Error(t+" cannot be alias of "+s+" because it is a component.");n[t]=s}))}return n[r]||r}}(p);i=i.map(c),a=(a||[]).map(c);var m=n(i),d=n(a);i.forEach((function e(n){var r=p[n];t(r&&r.require,(function(t){t in d||(m[t]=!0,e(t))}))}));for(var u,l=r(p),g=m;s(g);){for(var h in u={},g){var f=p[h];t(f&&f.modify,(function(e){e in d&&(u[e]=!0)}))}for(var y in d)if(!(y in m))for(var b in l(y))if(b in m){u[y]=!0;break}for(var x in g=u)m[x]=!0}var w={getIds:function(){var e=[];return w.load((function(t){e.push(t)})),e},load:function(t,n){return function(t,n,r,s){var o=s?s.series:void 0,i=s?s.parallel:e,a={},p={};function c(e){if(e in a)return a[e];p[e]=!0;var s,m=[];for(var d in t(e))d in n&&m.push(d);if(0===m.length)s=r(e);else{var u=i(m.map((function(e){var t=c(e);return delete p[e],t})));o?s=o(u,(function(){return r(e)})):r(e)}return a[e]=s}for(var m in n)c(m);var d=[];for(var u in p)d.push(a[u]);return i(d)}(l,m,t,n)}};return w}}();e.exports=t},92703:(e,t,n)=>{"use strict";var r=n(50414);function s(){}function o(){}o.resetWarningCache=s,e.exports=function(){function e(e,t,n,s,o,i){if(i!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:s};return n.PropTypes=n,n}},45697:(e,t,n)=>{e.exports=n(92703)()},50414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},64448:(e,t,n)=>{"use strict";var r=n(67294),s=n(63840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,a={};function p(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(a[e]=t,e=0;e<t.length;e++)i.add(t[e])}var m=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,u=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,l={},g={};function h(e,t,n,r,s,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=s,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var f={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){f[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];f[t]=new h(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){f[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){f[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){f[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){f[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){f[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){f[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){f[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function x(e,t,n,r){var s=f.hasOwnProperty(t)?f[t]:null;(null!==s?0!==s.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,s,r)&&(n=null),r||null===s?function(e){return!!d.call(g,e)||!d.call(l,e)&&(u.test(e)?g[e]=!0:(l[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):s.mustUseProperty?e[s.propertyName]=null===n?3!==s.type&&"":n:(t=s.attributeName,r=s.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(s=s.type)||4===s&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);f[t]=new h(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);f[t]=new h(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);f[t]=new h(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){f[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),f.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){f[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,v=Symbol.for("react.element"),k=Symbol.for("react.portal"),q=Symbol.for("react.fragment"),$=Symbol.for("react.strict_mode"),_=Symbol.for("react.profiler"),I=Symbol.for("react.provider"),C=Symbol.for("react.context"),R=Symbol.for("react.forward_ref"),L=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),S=Symbol.for("react.memo"),P=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var A=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function j(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=O&&e[O]||e["@@iterator"])?e:null}var E,F=Object.assign;function D(e){if(void 0===E)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);E=t&&t[1]||""}return"\n"+E+e}var U=!1;function G(e,t){if(!e||U)return"";U=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(c){var r=c}Reflect.construct(e,[],t)}else{try{t.call()}catch(c){r=c}e.call(t.prototype)}else{try{throw Error()}catch(c){r=c}e()}}catch(c){if(c&&r&&"string"==typeof c.stack){for(var s=c.stack.split("\n"),o=r.stack.split("\n"),i=s.length-1,a=o.length-1;1<=i&&0<=a&&s[i]!==o[a];)a--;for(;1<=i&&0<=a;i--,a--)if(s[i]!==o[a]){if(1!==i||1!==a)do{if(i--,0>--a||s[i]!==o[a]){var p="\n"+s[i].replace(" at new "," at ");return e.displayName&&p.includes("<anonymous>")&&(p=p.replace("<anonymous>",e.displayName)),p}}while(1<=i&&0<=a);break}}}finally{U=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?D(e):""}function N(e){switch(e.tag){case 5:return D(e.type);case 16:return D("Lazy");case 13:return D("Suspense");case 19:return D("SuspenseList");case 0:case 2:case 15:return e=G(e.type,!1);case 11:return e=G(e.type.render,!1);case 1:return e=G(e.type,!0);default:return""}}function z(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case q:return"Fragment";case k:return"Portal";case _:return"Profiler";case $:return"StrictMode";case L:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case I:return(e._context.displayName||"Context")+".Provider";case R:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case S:return null!==(t=e.displayName||null)?t:z(e.type)||"Memo";case P:t=e._payload,e=e._init;try{return z(e(t))}catch(n){}}return null}function B(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return z(t);case 8:return t===$?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function M(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function W(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var s=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function K(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function V(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Q(e,t){var n=t.checked;return F({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Z(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=M(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function X(e,t){null!=(t=t.checked)&&x(e,"checked",t,!1)}function Y(e,t){X(e,t);var n=M(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,M(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&V(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var s=0;s<n.length;s++)t["$"+n[s]]=!0;for(n=0;n<e.length;n++)s=t.hasOwnProperty("$"+e[n].value),e[n].selected!==s&&(e[n].selected=s),s&&r&&(e[n].defaultSelected=!0)}else{for(n=""+M(n),t=null,s=0;s<e.length;s++){if(e[s].value===n)return e[s].selected=!0,void(r&&(e[s].defaultSelected=!0));null!==t||e[s].disabled||(t=e[s])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return F({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:M(n)}}function oe(e,t){var n=M(t.value),r=M(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ae(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ae(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,me,de=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ue(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var le={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ge=["Webkit","ms","Moz","O"];function he(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||le.hasOwnProperty(e)&&le[e]?(""+t).trim():t+"px"}function fe(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),s=he(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,s):e[n]=s}}Object.keys(le).forEach((function(e){ge.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),le[t]=le[e]}))}));var ye=F({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function ve(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,qe=null,$e=null;function _e(e){if(e=xs(e)){if("function"!=typeof ke)throw Error(o(280));var t=e.stateNode;t&&(t=vs(t),ke(e.stateNode,e.type,t))}}function Ie(e){qe?$e?$e.push(e):$e=[e]:qe=e}function Ce(){if(qe){var e=qe,t=$e;if($e=qe=null,_e(e),t)for(e=0;e<t.length;e++)_e(t[e])}}function Re(e,t){return e(t)}function Le(){}var Te=!1;function Se(e,t,n){if(Te)return e(t,n);Te=!0;try{return Re(e,t,n)}finally{Te=!1,(null!==qe||null!==$e)&&(Le(),Ce())}}function Pe(e,t){var n=e.stateNode;if(null===n)return null;var r=vs(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var Ae=!1;if(m)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){Ae=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(me){Ae=!1}function je(e,t,n,r,s,o,i,a,p){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(m){this.onError(m)}}var Ee=!1,Fe=null,De=!1,Ue=null,Ge={onError:function(e){Ee=!0,Fe=e}};function Ne(e,t,n,r,s,o,i,a,p){Ee=!1,Fe=null,je.apply(Ge,arguments)}function ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Be(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Me(e){if(ze(e)!==e)throw Error(o(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=ze(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var s=n.return;if(null===s)break;var i=s.alternate;if(null===i){if(null!==(r=s.return)){n=r;continue}break}if(s.child===i.child){for(i=s.child;i;){if(i===n)return Me(s),e;if(i===r)return Me(s),t;i=i.sibling}throw Error(o(188))}if(n.return!==r.return)n=s,r=i;else{for(var a=!1,p=s.child;p;){if(p===n){a=!0,n=s,r=i;break}if(p===r){a=!0,r=s,n=i;break}p=p.sibling}if(!a){for(p=i.child;p;){if(p===n){a=!0,n=i,r=s;break}if(p===r){a=!0,r=i,n=s;break}p=p.sibling}if(!a)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?We(e):null}function We(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=We(e);if(null!==t)return t;e=e.sibling}return null}var Ke=s.unstable_scheduleCallback,Ve=s.unstable_cancelCallback,Qe=s.unstable_shouldYield,Ze=s.unstable_requestPaint,Xe=s.unstable_now,Ye=s.unstable_getCurrentPriorityLevel,Je=s.unstable_ImmediatePriority,et=s.unstable_UserBlockingPriority,tt=s.unstable_NormalPriority,nt=s.unstable_LowPriority,rt=s.unstable_IdlePriority,st=null,ot=null;var it=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(at(e)/pt|0)|0},at=Math.log,pt=Math.LN2;var ct=64,mt=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ut(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,s=e.suspendedLanes,o=e.pingedLanes,i=268435455&n;if(0!==i){var a=i&~s;0!==a?r=dt(a):0!==(o&=i)&&(r=dt(o))}else 0!==(i=n&~s)?r=dt(i):0!==o&&(r=dt(o));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&s)&&((s=r&-r)>=(o=t&-t)||16===s&&0!=(4194240&o)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)s=1<<(n=31-it(t)),r|=e[n],t&=~s;return r}function lt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function gt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ht(){var e=ct;return 0==(4194240&(ct<<=1))&&(ct=64),e}function ft(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),s=1<<r;s&t|e[r]&t&&(e[r]|=t),n&=~s}}var xt=0;function wt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var vt,kt,qt,$t,_t,It=!1,Ct=[],Rt=null,Lt=null,Tt=null,St=new Map,Pt=new Map,At=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function jt(e,t){switch(e){case"focusin":case"focusout":Rt=null;break;case"dragenter":case"dragleave":Lt=null;break;case"mouseover":case"mouseout":Tt=null;break;case"pointerover":case"pointerout":St.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Pt.delete(t.pointerId)}}function Et(e,t,n,r,s,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[s]},null!==t&&(null!==(t=xs(t))&&kt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==s&&-1===t.indexOf(s)&&t.push(s),e)}function Ft(e){var t=bs(e.target);if(null!==t){var n=ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Be(n)))return e.blockedOn=t,void _t(e.priority,(function(){qt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Dt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Qt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=xs(n))&&kt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);we=r,n.target.dispatchEvent(r),we=null,t.shift()}return!0}function Ut(e,t,n){Dt(e)&&n.delete(t)}function Gt(){It=!1,null!==Rt&&Dt(Rt)&&(Rt=null),null!==Lt&&Dt(Lt)&&(Lt=null),null!==Tt&&Dt(Tt)&&(Tt=null),St.forEach(Ut),Pt.forEach(Ut)}function Nt(e,t){e.blockedOn===t&&(e.blockedOn=null,It||(It=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,Gt)))}function zt(e){function t(t){return Nt(t,e)}if(0<Ct.length){Nt(Ct[0],e);for(var n=1;n<Ct.length;n++){var r=Ct[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Rt&&Nt(Rt,e),null!==Lt&&Nt(Lt,e),null!==Tt&&Nt(Tt,e),St.forEach(t),Pt.forEach(t),n=0;n<At.length;n++)(r=At[n]).blockedOn===e&&(r.blockedOn=null);for(;0<At.length&&null===(n=At[0]).blockedOn;)Ft(n),null===n.blockedOn&&At.shift()}var Bt=w.ReactCurrentBatchConfig,Mt=!0;function Ht(e,t,n,r){var s=xt,o=Bt.transition;Bt.transition=null;try{xt=1,Kt(e,t,n,r)}finally{xt=s,Bt.transition=o}}function Wt(e,t,n,r){var s=xt,o=Bt.transition;Bt.transition=null;try{xt=4,Kt(e,t,n,r)}finally{xt=s,Bt.transition=o}}function Kt(e,t,n,r){if(Mt){var s=Qt(e,t,n,r);if(null===s)Mr(e,t,r,Vt,n),jt(e,r);else if(function(e,t,n,r,s){switch(t){case"focusin":return Rt=Et(Rt,e,t,n,r,s),!0;case"dragenter":return Lt=Et(Lt,e,t,n,r,s),!0;case"mouseover":return Tt=Et(Tt,e,t,n,r,s),!0;case"pointerover":var o=s.pointerId;return St.set(o,Et(St.get(o)||null,e,t,n,r,s)),!0;case"gotpointercapture":return o=s.pointerId,Pt.set(o,Et(Pt.get(o)||null,e,t,n,r,s)),!0}return!1}(s,e,t,n,r))r.stopPropagation();else if(jt(e,r),4&t&&-1<Ot.indexOf(e)){for(;null!==s;){var o=xs(s);if(null!==o&&vt(o),null===(o=Qt(e,t,n,r))&&Mr(e,t,r,Vt,n),o===s)break;s=o}null!==s&&r.stopPropagation()}else Mr(e,t,r,null,n)}}var Vt=null;function Qt(e,t,n,r){if(Vt=null,null!==(e=bs(e=ve(r))))if(null===(t=ze(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Be(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Vt=e,null}function Zt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ye()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Xt=null,Yt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Yt,r=n.length,s="value"in Xt?Xt.value:Xt.textContent,o=s.length;for(e=0;e<r&&n[e]===s[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===s[o-t];t++);return Jt=s.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function sn(e){function t(t,n,r,s,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=s,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(s):s[i]);return this.isDefaultPrevented=(null!=s.defaultPrevented?s.defaultPrevented:!1===s.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return F(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,an,pn,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},mn=sn(cn),dn=F({},cn,{view:0,detail:0}),un=sn(dn),ln=F({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:_n,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==pn&&(pn&&"mousemove"===e.type?(on=e.screenX-pn.screenX,an=e.screenY-pn.screenY):an=on=0,pn=e),on)},movementY:function(e){return"movementY"in e?e.movementY:an}}),gn=sn(ln),hn=sn(F({},ln,{dataTransfer:0})),fn=sn(F({},dn,{relatedTarget:0})),yn=sn(F({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=F({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xn=sn(bn),wn=sn(F({},cn,{data:0})),vn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},qn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function $n(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=qn[e])&&!!t[e]}function _n(){return $n}var In=F({},dn,{key:function(e){if(e.key){var t=vn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:_n,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=sn(In),Rn=sn(F({},ln,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ln=sn(F({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:_n})),Tn=sn(F({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Sn=F({},ln,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Pn=sn(Sn),An=[9,13,27,32],On=m&&"CompositionEvent"in window,jn=null;m&&"documentMode"in document&&(jn=document.documentMode);var En=m&&"TextEvent"in window&&!jn,Fn=m&&(!On||jn&&8<jn&&11>=jn),Dn=String.fromCharCode(32),Un=!1;function Gn(e,t){switch(e){case"keyup":return-1!==An.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Nn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var zn=!1;var Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Hn(e,t,n,r){Ie(r),0<(t=Wr(t,"onChange")).length&&(n=new mn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,Kn=null;function Vn(e){Dr(e,0)}function Qn(e){if(K(ws(e)))return e}function Zn(e,t){if("change"===e)return t}var Xn=!1;if(m){var Yn;if(m){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}Yn=Jn}else Yn=!1;Xn=Yn&&(!document.documentMode||9<document.documentMode)}function tr(){Wn&&(Wn.detachEvent("onpropertychange",nr),Kn=Wn=null)}function nr(e){if("value"===e.propertyName&&Qn(Kn)){var t=[];Hn(t,Kn,e,ve(e)),Se(Vn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Kn=n,(Wn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function sr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qn(Kn)}function or(e,t){if("click"===e)return Qn(t)}function ir(e,t){if("input"===e||"change"===e)return Qn(t)}var ar="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function pr(e,t){if(ar(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var s=n[r];if(!d.call(t,s)||!ar(e[s],t[s]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function mr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ur(){for(var e=window,t=V();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=V((e=t.contentWindow).document)}return t}function lr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function gr(e){var t=ur(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&lr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var s=n.textContent.length,o=Math.min(r.start,s);r=void 0===r.end?o:Math.min(r.end,s),!e.extend&&o>r&&(s=r,r=o,o=s),s=mr(n,o);var i=mr(n,r);s&&i&&(1!==e.rangeCount||e.anchorNode!==s.node||e.anchorOffset!==s.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(s.node,s.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var hr=m&&"documentMode"in document&&11>=document.documentMode,fr=null,yr=null,br=null,xr=!1;function wr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xr||null==fr||fr!==V(r)||("selectionStart"in(r=fr)&&lr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&pr(br,r)||(br=r,0<(r=Wr(yr,"onSelect")).length&&(t=new mn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=fr)))}function vr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var kr={animationend:vr("Animation","AnimationEnd"),animationiteration:vr("Animation","AnimationIteration"),animationstart:vr("Animation","AnimationStart"),transitionend:vr("Transition","TransitionEnd")},qr={},$r={};function _r(e){if(qr[e])return qr[e];if(!kr[e])return e;var t,n=kr[e];for(t in n)if(n.hasOwnProperty(t)&&t in $r)return qr[e]=n[t];return e}m&&($r=document.createElement("div").style,"AnimationEvent"in window||(delete kr.animationend.animation,delete kr.animationiteration.animation,delete kr.animationstart.animation),"TransitionEvent"in window||delete kr.transitionend.transition);var Ir=_r("animationend"),Cr=_r("animationiteration"),Rr=_r("animationstart"),Lr=_r("transitionend"),Tr=new Map,Sr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Pr(e,t){Tr.set(e,t),p(t,[e])}for(var Ar=0;Ar<Sr.length;Ar++){var Or=Sr[Ar];Pr(Or.toLowerCase(),"on"+(Or[0].toUpperCase()+Or.slice(1)))}Pr(Ir,"onAnimationEnd"),Pr(Cr,"onAnimationIteration"),Pr(Rr,"onAnimationStart"),Pr("dblclick","onDoubleClick"),Pr("focusin","onFocus"),Pr("focusout","onBlur"),Pr(Lr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),p("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),p("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),p("onBeforeInput",["compositionend","keypress","textInput","paste"]),p("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),p("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),p("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var jr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Er=new Set("cancel close invalid load scroll toggle".split(" ").concat(jr));function Fr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,s,i,a,p,c){if(Ne.apply(this,arguments),Ee){if(!Ee)throw Error(o(198));var m=Fe;Ee=!1,Fe=null,De||(De=!0,Ue=m)}}(r,t,void 0,e),e.currentTarget=null}function Dr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],s=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var a=r[i],p=a.instance,c=a.currentTarget;if(a=a.listener,p!==o&&s.isPropagationStopped())break e;Fr(s,a,c),o=p}else for(i=0;i<r.length;i++){if(p=(a=r[i]).instance,c=a.currentTarget,a=a.listener,p!==o&&s.isPropagationStopped())break e;Fr(s,a,c),o=p}}}if(De)throw e=Ue,De=!1,Ue=null,e}function Ur(e,t){var n=t[hs];void 0===n&&(n=t[hs]=new Set);var r=e+"__bubble";n.has(r)||(Br(t,e,2,!1),n.add(r))}function Gr(e,t,n){var r=0;t&&(r|=4),Br(n,e,r,t)}var Nr="_reactListening"+Math.random().toString(36).slice(2);function zr(e){if(!e[Nr]){e[Nr]=!0,i.forEach((function(t){"selectionchange"!==t&&(Er.has(t)||Gr(t,!1,e),Gr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Nr]||(t[Nr]=!0,Gr("selectionchange",!1,t))}}function Br(e,t,n,r){switch(Zt(t)){case 1:var s=Ht;break;case 4:s=Wt;break;default:s=Kt}n=s.bind(null,t,n,e),s=void 0,!Ae||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(s=!0),r?void 0!==s?e.addEventListener(t,n,{capture:!0,passive:s}):e.addEventListener(t,n,!0):void 0!==s?e.addEventListener(t,n,{passive:s}):e.addEventListener(t,n,!1)}function Mr(e,t,n,r,s){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var a=r.stateNode.containerInfo;if(a===s||8===a.nodeType&&a.parentNode===s)break;if(4===i)for(i=r.return;null!==i;){var p=i.tag;if((3===p||4===p)&&((p=i.stateNode.containerInfo)===s||8===p.nodeType&&p.parentNode===s))return;i=i.return}for(;null!==a;){if(null===(i=bs(a)))return;if(5===(p=i.tag)||6===p){r=o=i;continue e}a=a.parentNode}}r=r.return}Se((function(){var r=o,s=ve(n),i=[];e:{var a=Tr.get(e);if(void 0!==a){var p=mn,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":p=Cn;break;case"focusin":c="focus",p=fn;break;case"focusout":c="blur",p=fn;break;case"beforeblur":case"afterblur":p=fn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":p=gn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":p=hn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":p=Ln;break;case Ir:case Cr:case Rr:p=yn;break;case Lr:p=Tn;break;case"scroll":p=un;break;case"wheel":p=Pn;break;case"copy":case"cut":case"paste":p=xn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":p=Rn}var m=0!=(4&t),d=!m&&"scroll"===e,u=m?null!==a?a+"Capture":null:a;m=[];for(var l,g=r;null!==g;){var h=(l=g).stateNode;if(5===l.tag&&null!==h&&(l=h,null!==u&&(null!=(h=Pe(g,u))&&m.push(Hr(g,h,l)))),d)break;g=g.return}0<m.length&&(a=new p(a,c,null,n,s),i.push({event:a,listeners:m}))}}if(0==(7&t)){if(p="mouseout"===e||"pointerout"===e,(!(a="mouseover"===e||"pointerover"===e)||n===we||!(c=n.relatedTarget||n.fromElement)||!bs(c)&&!c[gs])&&(p||a)&&(a=s.window===s?s:(a=s.ownerDocument)?a.defaultView||a.parentWindow:window,p?(p=r,null!==(c=(c=n.relatedTarget||n.toElement)?bs(c):null)&&(c!==(d=ze(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(p=null,c=r),p!==c)){if(m=gn,h="onMouseLeave",u="onMouseEnter",g="mouse","pointerout"!==e&&"pointerover"!==e||(m=Rn,h="onPointerLeave",u="onPointerEnter",g="pointer"),d=null==p?a:ws(p),l=null==c?a:ws(c),(a=new m(h,g+"leave",p,n,s)).target=d,a.relatedTarget=l,h=null,bs(s)===r&&((m=new m(u,g+"enter",c,n,s)).target=l,m.relatedTarget=d,h=m),d=h,p&&c)e:{for(u=c,g=0,l=m=p;l;l=Kr(l))g++;for(l=0,h=u;h;h=Kr(h))l++;for(;0<g-l;)m=Kr(m),g--;for(;0<l-g;)u=Kr(u),l--;for(;g--;){if(m===u||null!==u&&m===u.alternate)break e;m=Kr(m),u=Kr(u)}m=null}else m=null;null!==p&&Vr(i,a,p,m,!1),null!==c&&null!==d&&Vr(i,d,c,m,!0)}if("select"===(p=(a=r?ws(r):window).nodeName&&a.nodeName.toLowerCase())||"input"===p&&"file"===a.type)var f=Zn;else if(Mn(a))if(Xn)f=ir;else{f=sr;var y=rr}else(p=a.nodeName)&&"input"===p.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(f=or);switch(f&&(f=f(e,r))?Hn(i,f,n,s):(y&&y(e,a,r),"focusout"===e&&(y=a._wrapperState)&&y.controlled&&"number"===a.type&&ee(a,"number",a.value)),y=r?ws(r):window,e){case"focusin":(Mn(y)||"true"===y.contentEditable)&&(fr=y,yr=r,br=null);break;case"focusout":br=yr=fr=null;break;case"mousedown":xr=!0;break;case"contextmenu":case"mouseup":case"dragend":xr=!1,wr(i,n,s);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":wr(i,n,s)}var b;if(On)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else zn?Gn(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(Fn&&"ko"!==n.locale&&(zn||"onCompositionStart"!==x?"onCompositionEnd"===x&&zn&&(b=en()):(Yt="value"in(Xt=s)?Xt.value:Xt.textContent,zn=!0)),0<(y=Wr(r,x)).length&&(x=new wn(x,e,null,n,s),i.push({event:x,listeners:y}),b?x.data=b:null!==(b=Nn(n))&&(x.data=b))),(b=En?function(e,t){switch(e){case"compositionend":return Nn(t);case"keypress":return 32!==t.which?null:(Un=!0,Dn);case"textInput":return(e=t.data)===Dn&&Un?null:e;default:return null}}(e,n):function(e,t){if(zn)return"compositionend"===e||!On&&Gn(e,t)?(e=en(),Jt=Yt=Xt=null,zn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Fn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=Wr(r,"onBeforeInput")).length&&(s=new wn("onBeforeInput","beforeinput",null,n,s),i.push({event:s,listeners:r}),s.data=b))}Dr(i,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Wr(e,t){for(var n=t+"Capture",r=[];null!==e;){var s=e,o=s.stateNode;5===s.tag&&null!==o&&(s=o,null!=(o=Pe(e,n))&&r.unshift(Hr(e,o,s)),null!=(o=Pe(e,t))&&r.push(Hr(e,o,s))),e=e.return}return r}function Kr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Vr(e,t,n,r,s){for(var o=t._reactName,i=[];null!==n&&n!==r;){var a=n,p=a.alternate,c=a.stateNode;if(null!==p&&p===r)break;5===a.tag&&null!==c&&(a=c,s?null!=(p=Pe(n,o))&&i.unshift(Hr(n,p,a)):s||null!=(p=Pe(n,o))&&i.push(Hr(n,p,a))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Qr=/\r\n?/g,Zr=/\u0000|\uFFFD/g;function Xr(e){return("string"==typeof e?e:""+e).replace(Qr,"\n").replace(Zr,"")}function Yr(e,t,n){if(t=Xr(t),Xr(e)!==t&&n)throw Error(o(425))}function Jr(){}var es=null,ts=null;function ns(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var rs="function"==typeof setTimeout?setTimeout:void 0,ss="function"==typeof clearTimeout?clearTimeout:void 0,os="function"==typeof Promise?Promise:void 0,is="function"==typeof queueMicrotask?queueMicrotask:void 0!==os?function(e){return os.resolve(null).then(e).catch(as)}:rs;function as(e){setTimeout((function(){throw e}))}function ps(e,t){var n=t,r=0;do{var s=n.nextSibling;if(e.removeChild(n),s&&8===s.nodeType)if("/$"===(n=s.data)){if(0===r)return e.removeChild(s),void zt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=s}while(n);zt(t)}function cs(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ms(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var ds=Math.random().toString(36).slice(2),us="__reactFiber$"+ds,ls="__reactProps$"+ds,gs="__reactContainer$"+ds,hs="__reactEvents$"+ds,fs="__reactListeners$"+ds,ys="__reactHandles$"+ds;function bs(e){var t=e[us];if(t)return t;for(var n=e.parentNode;n;){if(t=n[gs]||n[us]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ms(e);null!==e;){if(n=e[us])return n;e=ms(e)}return t}n=(e=n).parentNode}return null}function xs(e){return!(e=e[us]||e[gs])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ws(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function vs(e){return e[ls]||null}var ks=[],qs=-1;function $s(e){return{current:e}}function _s(e){0>qs||(e.current=ks[qs],ks[qs]=null,qs--)}function Is(e,t){qs++,ks[qs]=e.current,e.current=t}var Cs={},Rs=$s(Cs),Ls=$s(!1),Ts=Cs;function Ss(e,t){var n=e.type.contextTypes;if(!n)return Cs;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var s,o={};for(s in n)o[s]=t[s];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Ps(e){return null!=(e=e.childContextTypes)}function As(){_s(Ls),_s(Rs)}function Os(e,t,n){if(Rs.current!==Cs)throw Error(o(168));Is(Rs,t),Is(Ls,n)}function js(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var s in r=r.getChildContext())if(!(s in t))throw Error(o(108,B(e)||"Unknown",s));return F({},n,r)}function Es(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Cs,Ts=Rs.current,Is(Rs,e),Is(Ls,Ls.current),!0}function Fs(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=js(e,t,Ts),r.__reactInternalMemoizedMergedChildContext=e,_s(Ls),_s(Rs),Is(Rs,e)):_s(Ls),Is(Ls,n)}var Ds=null,Us=!1,Gs=!1;function Ns(e){null===Ds?Ds=[e]:Ds.push(e)}function zs(){if(!Gs&&null!==Ds){Gs=!0;var e=0,t=xt;try{var n=Ds;for(xt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Ds=null,Us=!1}catch(s){throw null!==Ds&&(Ds=Ds.slice(e+1)),Ke(Je,zs),s}finally{xt=t,Gs=!1}}return null}var Bs=[],Ms=0,Hs=null,Ws=0,Ks=[],Vs=0,Qs=null,Zs=1,Xs="";function Ys(e,t){Bs[Ms++]=Ws,Bs[Ms++]=Hs,Hs=e,Ws=t}function Js(e,t,n){Ks[Vs++]=Zs,Ks[Vs++]=Xs,Ks[Vs++]=Qs,Qs=e;var r=Zs;e=Xs;var s=32-it(r)-1;r&=~(1<<s),n+=1;var o=32-it(t)+s;if(30<o){var i=s-s%5;o=(r&(1<<i)-1).toString(32),r>>=i,s-=i,Zs=1<<32-it(t)+s|n<<s|r,Xs=o+e}else Zs=1<<o|n<<s|r,Xs=e}function eo(e){null!==e.return&&(Ys(e,1),Js(e,1,0))}function to(e){for(;e===Hs;)Hs=Bs[--Ms],Bs[Ms]=null,Ws=Bs[--Ms],Bs[Ms]=null;for(;e===Qs;)Qs=Ks[--Vs],Ks[Vs]=null,Xs=Ks[--Vs],Ks[Vs]=null,Zs=Ks[--Vs],Ks[Vs]=null}var no=null,ro=null,so=!1,oo=null;function io(e,t){var n=Pc(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function ao(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,no=e,ro=cs(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,no=e,ro=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Qs?{id:Zs,overflow:Xs}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Pc(18,null,null,0)).stateNode=t,n.return=e,e.child=n,no=e,ro=null,!0);default:return!1}}function po(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function co(e){if(so){var t=ro;if(t){var n=t;if(!ao(e,t)){if(po(e))throw Error(o(418));t=cs(n.nextSibling);var r=no;t&&ao(e,t)?io(r,n):(e.flags=-4097&e.flags|2,so=!1,no=e)}}else{if(po(e))throw Error(o(418));e.flags=-4097&e.flags|2,so=!1,no=e}}}function mo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;no=e}function uo(e){if(e!==no)return!1;if(!so)return mo(e),so=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ns(e.type,e.memoizedProps)),t&&(t=ro)){if(po(e))throw lo(),Error(o(418));for(;t;)io(e,t),t=cs(t.nextSibling)}if(mo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ro=cs(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ro=null}}else ro=no?cs(e.stateNode.nextSibling):null;return!0}function lo(){for(var e=ro;e;)e=cs(e.nextSibling)}function go(){ro=no=null,so=!1}function ho(e){null===oo?oo=[e]:oo.push(e)}var fo=w.ReactCurrentBatchConfig;function yo(e,t){if(e&&e.defaultProps){for(var n in t=F({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var bo=$s(null),xo=null,wo=null,vo=null;function ko(){vo=wo=xo=null}function qo(e){var t=bo.current;_s(bo),e._currentValue=t}function $o(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function _o(e,t){xo=e,vo=wo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(wa=!0),e.firstContext=null)}function Io(e){var t=e._currentValue;if(vo!==e)if(e={context:e,memoizedValue:t,next:null},null===wo){if(null===xo)throw Error(o(308));wo=e,xo.dependencies={lanes:0,firstContext:e}}else wo=wo.next=e;return t}var Co=null;function Ro(e){null===Co?Co=[e]:Co.push(e)}function Lo(e,t,n,r){var s=t.interleaved;return null===s?(n.next=n,Ro(t)):(n.next=s.next,s.next=n),t.interleaved=n,To(e,r)}function To(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var So=!1;function Po(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ao(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Oo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function jo(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Lp)){var s=r.pending;return null===s?t.next=t:(t.next=s.next,s.next=t),r.pending=t,To(e,n)}return null===(s=r.interleaved)?(t.next=t,Ro(r)):(t.next=s.next,s.next=t),r.interleaved=t,To(e,n)}function Eo(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Fo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var s=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?s=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?s=o=t:o=o.next=t}else s=o=t;return n={baseState:r.baseState,firstBaseUpdate:s,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Do(e,t,n,r){var s=e.updateQueue;So=!1;var o=s.firstBaseUpdate,i=s.lastBaseUpdate,a=s.shared.pending;if(null!==a){s.shared.pending=null;var p=a,c=p.next;p.next=null,null===i?o=c:i.next=c,i=p;var m=e.alternate;null!==m&&((a=(m=m.updateQueue).lastBaseUpdate)!==i&&(null===a?m.firstBaseUpdate=c:a.next=c,m.lastBaseUpdate=p))}if(null!==o){var d=s.baseState;for(i=0,m=c=p=null,a=o;;){var u=a.lane,l=a.eventTime;if((r&u)===u){null!==m&&(m=m.next={eventTime:l,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var g=e,h=a;switch(u=t,l=n,h.tag){case 1:if("function"==typeof(g=h.payload)){d=g.call(l,d,u);break e}d=g;break e;case 3:g.flags=-65537&g.flags|128;case 0:if(null==(u="function"==typeof(g=h.payload)?g.call(l,d,u):g))break e;d=F({},d,u);break e;case 2:So=!0}}null!==a.callback&&0!==a.lane&&(e.flags|=64,null===(u=s.effects)?s.effects=[a]:u.push(a))}else l={eventTime:l,lane:u,tag:a.tag,payload:a.payload,callback:a.callback,next:null},null===m?(c=m=l,p=d):m=m.next=l,i|=u;if(null===(a=a.next)){if(null===(a=s.shared.pending))break;a=(u=a).next,u.next=null,s.lastBaseUpdate=u,s.shared.pending=null}}if(null===m&&(p=d),s.baseState=p,s.firstBaseUpdate=c,s.lastBaseUpdate=m,null!==(t=s.shared.interleaved)){s=t;do{i|=s.lane,s=s.next}while(s!==t)}else null===o&&(s.shared.lanes=0);Fp|=i,e.lanes=i,e.memoizedState=d}}function Uo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],s=r.callback;if(null!==s){if(r.callback=null,r=n,"function"!=typeof s)throw Error(o(191,s));s.call(r)}}}var Go=(new r.Component).refs;function No(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:F({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var zo={isMounted:function(e){return!!(e=e._reactInternals)&&ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=tc(),s=nc(e),o=Oo(r,s);o.payload=t,null!=n&&(o.callback=n),null!==(t=jo(e,o,s))&&(rc(t,e,s,r),Eo(t,e,s))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=tc(),s=nc(e),o=Oo(r,s);o.tag=1,o.payload=t,null!=n&&(o.callback=n),null!==(t=jo(e,o,s))&&(rc(t,e,s,r),Eo(t,e,s))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=tc(),r=nc(e),s=Oo(n,r);s.tag=2,null!=t&&(s.callback=t),null!==(t=jo(e,s,r))&&(rc(t,e,r,n),Eo(t,e,r))}};function Bo(e,t,n,r,s,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!t.prototype||!t.prototype.isPureReactComponent||(!pr(n,r)||!pr(s,o))}function Mo(e,t,n){var r=!1,s=Cs,o=t.contextType;return"object"==typeof o&&null!==o?o=Io(o):(s=Ps(t)?Ts:Rs.current,o=(r=null!=(r=t.contextTypes))?Ss(e,s):Cs),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=zo,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=o),t}function Ho(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&zo.enqueueReplaceState(t,t.state,null)}function Wo(e,t,n,r){var s=e.stateNode;s.props=n,s.state=e.memoizedState,s.refs=Go,Po(e);var o=t.contextType;"object"==typeof o&&null!==o?s.context=Io(o):(o=Ps(t)?Ts:Rs.current,s.context=Ss(e,o)),s.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(No(e,t,o,n),s.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof s.getSnapshotBeforeUpdate||"function"!=typeof s.UNSAFE_componentWillMount&&"function"!=typeof s.componentWillMount||(t=s.state,"function"==typeof s.componentWillMount&&s.componentWillMount(),"function"==typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount(),t!==s.state&&zo.enqueueReplaceState(s,s.state,null),Do(e,n,s,r),s.state=e.memoizedState),"function"==typeof s.componentDidMount&&(e.flags|=4194308)}function Ko(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var s=r,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=s.refs;t===Go&&(t=s.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function Vo(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Qo(e){return(0,e._init)(e._payload)}function Zo(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function s(e,t){return(e=Oc(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function a(t){return e&&null===t.alternate&&(t.flags|=2),t}function p(e,t,n,r){return null===t||6!==t.tag?((t=Dc(n,e.mode,r)).return=e,t):((t=s(t,n)).return=e,t)}function c(e,t,n,r){var o=n.type;return o===q?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===P&&Qo(o)===t.type)?((r=s(t,n.props)).ref=Ko(e,t,n),r.return=e,r):((r=jc(n.type,n.key,n.props,null,e.mode,r)).ref=Ko(e,t,n),r.return=e,r)}function m(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Uc(n,e.mode,r)).return=e,t):((t=s(t,n.children||[])).return=e,t)}function d(e,t,n,r,o){return null===t||7!==t.tag?((t=Ec(n,e.mode,r,o)).return=e,t):((t=s(t,n)).return=e,t)}function u(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Dc(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case v:return(n=jc(t.type,t.key,t.props,null,e.mode,n)).ref=Ko(e,null,t),n.return=e,n;case k:return(t=Uc(t,e.mode,n)).return=e,t;case P:return u(e,(0,t._init)(t._payload),n)}if(te(t)||j(t))return(t=Ec(t,e.mode,n,null)).return=e,t;Vo(e,t)}return null}function l(e,t,n,r){var s=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==s?null:p(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case v:return n.key===s?c(e,t,n,r):null;case k:return n.key===s?m(e,t,n,r):null;case P:return l(e,t,(s=n._init)(n._payload),r)}if(te(n)||j(n))return null!==s?null:d(e,t,n,r,null);Vo(e,n)}return null}function g(e,t,n,r,s){if("string"==typeof r&&""!==r||"number"==typeof r)return p(t,e=e.get(n)||null,""+r,s);if("object"==typeof r&&null!==r){switch(r.$$typeof){case v:return c(t,e=e.get(null===r.key?n:r.key)||null,r,s);case k:return m(t,e=e.get(null===r.key?n:r.key)||null,r,s);case P:return g(e,t,n,(0,r._init)(r._payload),s)}if(te(r)||j(r))return d(t,e=e.get(n)||null,r,s,null);Vo(t,r)}return null}function h(s,o,a,p){for(var c=null,m=null,d=o,h=o=0,f=null;null!==d&&h<a.length;h++){d.index>h?(f=d,d=null):f=d.sibling;var y=l(s,d,a[h],p);if(null===y){null===d&&(d=f);break}e&&d&&null===y.alternate&&t(s,d),o=i(y,o,h),null===m?c=y:m.sibling=y,m=y,d=f}if(h===a.length)return n(s,d),so&&Ys(s,h),c;if(null===d){for(;h<a.length;h++)null!==(d=u(s,a[h],p))&&(o=i(d,o,h),null===m?c=d:m.sibling=d,m=d);return so&&Ys(s,h),c}for(d=r(s,d);h<a.length;h++)null!==(f=g(d,s,h,a[h],p))&&(e&&null!==f.alternate&&d.delete(null===f.key?h:f.key),o=i(f,o,h),null===m?c=f:m.sibling=f,m=f);return e&&d.forEach((function(e){return t(s,e)})),so&&Ys(s,h),c}function f(s,a,p,c){var m=j(p);if("function"!=typeof m)throw Error(o(150));if(null==(p=m.call(p)))throw Error(o(151));for(var d=m=null,h=a,f=a=0,y=null,b=p.next();null!==h&&!b.done;f++,b=p.next()){h.index>f?(y=h,h=null):y=h.sibling;var x=l(s,h,b.value,c);if(null===x){null===h&&(h=y);break}e&&h&&null===x.alternate&&t(s,h),a=i(x,a,f),null===d?m=x:d.sibling=x,d=x,h=y}if(b.done)return n(s,h),so&&Ys(s,f),m;if(null===h){for(;!b.done;f++,b=p.next())null!==(b=u(s,b.value,c))&&(a=i(b,a,f),null===d?m=b:d.sibling=b,d=b);return so&&Ys(s,f),m}for(h=r(s,h);!b.done;f++,b=p.next())null!==(b=g(h,s,f,b.value,c))&&(e&&null!==b.alternate&&h.delete(null===b.key?f:b.key),a=i(b,a,f),null===d?m=b:d.sibling=b,d=b);return e&&h.forEach((function(e){return t(s,e)})),so&&Ys(s,f),m}return function e(r,o,i,p){if("object"==typeof i&&null!==i&&i.type===q&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case v:e:{for(var c=i.key,m=o;null!==m;){if(m.key===c){if((c=i.type)===q){if(7===m.tag){n(r,m.sibling),(o=s(m,i.props.children)).return=r,r=o;break e}}else if(m.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===P&&Qo(c)===m.type){n(r,m.sibling),(o=s(m,i.props)).ref=Ko(r,m,i),o.return=r,r=o;break e}n(r,m);break}t(r,m),m=m.sibling}i.type===q?((o=Ec(i.props.children,r.mode,p,i.key)).return=r,r=o):((p=jc(i.type,i.key,i.props,null,r.mode,p)).ref=Ko(r,o,i),p.return=r,r=p)}return a(r);case k:e:{for(m=i.key;null!==o;){if(o.key===m){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){n(r,o.sibling),(o=s(o,i.children||[])).return=r,r=o;break e}n(r,o);break}t(r,o),o=o.sibling}(o=Uc(i,r.mode,p)).return=r,r=o}return a(r);case P:return e(r,o,(m=i._init)(i._payload),p)}if(te(i))return h(r,o,i,p);if(j(i))return f(r,o,i,p);Vo(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==o&&6===o.tag?(n(r,o.sibling),(o=s(o,i)).return=r,r=o):(n(r,o),(o=Dc(i,r.mode,p)).return=r,r=o),a(r)):n(r,o)}}var Xo=Zo(!0),Yo=Zo(!1),Jo={},ei=$s(Jo),ti=$s(Jo),ni=$s(Jo);function ri(e){if(e===Jo)throw Error(o(174));return e}function si(e,t){switch(Is(ni,t),Is(ti,e),Is(ei,Jo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}_s(ei),Is(ei,t)}function oi(){_s(ei),_s(ti),_s(ni)}function ii(e){ri(ni.current);var t=ri(ei.current),n=pe(t,e.type);t!==n&&(Is(ti,e),Is(ei,n))}function ai(e){ti.current===e&&(_s(ei),_s(ti))}var pi=$s(0);function ci(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var mi=[];function di(){for(var e=0;e<mi.length;e++)mi[e]._workInProgressVersionPrimary=null;mi.length=0}var ui=w.ReactCurrentDispatcher,li=w.ReactCurrentBatchConfig,gi=0,hi=null,fi=null,yi=null,bi=!1,xi=!1,wi=0,vi=0;function ki(){throw Error(o(321))}function qi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ar(e[n],t[n]))return!1;return!0}function $i(e,t,n,r,s,i){if(gi=i,hi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ui.current=null===e||null===e.memoizedState?aa:pa,e=n(r,s),xi){i=0;do{if(xi=!1,wi=0,25<=i)throw Error(o(301));i+=1,yi=fi=null,t.updateQueue=null,ui.current=ca,e=n(r,s)}while(xi)}if(ui.current=ia,t=null!==fi&&null!==fi.next,gi=0,yi=fi=hi=null,bi=!1,t)throw Error(o(300));return e}function _i(){var e=0!==wi;return wi=0,e}function Ii(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===yi?hi.memoizedState=yi=e:yi=yi.next=e,yi}function Ci(){if(null===fi){var e=hi.alternate;e=null!==e?e.memoizedState:null}else e=fi.next;var t=null===yi?hi.memoizedState:yi.next;if(null!==t)yi=t,fi=e;else{if(null===e)throw Error(o(310));e={memoizedState:(fi=e).memoizedState,baseState:fi.baseState,baseQueue:fi.baseQueue,queue:fi.queue,next:null},null===yi?hi.memoizedState=yi=e:yi=yi.next=e}return yi}function Ri(e,t){return"function"==typeof t?t(e):t}function Li(e){var t=Ci(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=fi,s=r.baseQueue,i=n.pending;if(null!==i){if(null!==s){var a=s.next;s.next=i.next,i.next=a}r.baseQueue=s=i,n.pending=null}if(null!==s){i=s.next,r=r.baseState;var p=a=null,c=null,m=i;do{var d=m.lane;if((gi&d)===d)null!==c&&(c=c.next={lane:0,action:m.action,hasEagerState:m.hasEagerState,eagerState:m.eagerState,next:null}),r=m.hasEagerState?m.eagerState:e(r,m.action);else{var u={lane:d,action:m.action,hasEagerState:m.hasEagerState,eagerState:m.eagerState,next:null};null===c?(p=c=u,a=r):c=c.next=u,hi.lanes|=d,Fp|=d}m=m.next}while(null!==m&&m!==i);null===c?a=r:c.next=p,ar(r,t.memoizedState)||(wa=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=c,n.lastRenderedState=r}if(null!==(e=n.interleaved)){s=e;do{i=s.lane,hi.lanes|=i,Fp|=i,s=s.next}while(s!==e)}else null===s&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ti(e){var t=Ci(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,s=n.pending,i=t.memoizedState;if(null!==s){n.pending=null;var a=s=s.next;do{i=e(i,a.action),a=a.next}while(a!==s);ar(i,t.memoizedState)||(wa=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function Si(){}function Pi(e,t){var n=hi,r=Ci(),s=t(),i=!ar(r.memoizedState,s);if(i&&(r.memoizedState=s,wa=!0),r=r.queue,Mi(ji.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==yi&&1&yi.memoizedState.tag){if(n.flags|=2048,Ui(9,Oi.bind(null,n,r,s,t),void 0,null),null===Tp)throw Error(o(349));0!=(30&gi)||Ai(n,t,s)}return s}function Ai(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=hi.updateQueue)?(t={lastEffect:null,stores:null},hi.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Oi(e,t,n,r){t.value=n,t.getSnapshot=r,Ei(t)&&Fi(e)}function ji(e,t,n){return n((function(){Ei(t)&&Fi(e)}))}function Ei(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ar(e,n)}catch(r){return!0}}function Fi(e){var t=To(e,1);null!==t&&rc(t,e,1,-1)}function Di(e){var t=Ii();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ri,lastRenderedState:e},t.queue=e,e=e.dispatch=na.bind(null,hi,e),[t.memoizedState,e]}function Ui(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=hi.updateQueue)?(t={lastEffect:null,stores:null},hi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Gi(){return Ci().memoizedState}function Ni(e,t,n,r){var s=Ii();hi.flags|=e,s.memoizedState=Ui(1|t,n,void 0,void 0===r?null:r)}function zi(e,t,n,r){var s=Ci();r=void 0===r?null:r;var o=void 0;if(null!==fi){var i=fi.memoizedState;if(o=i.destroy,null!==r&&qi(r,i.deps))return void(s.memoizedState=Ui(t,n,o,r))}hi.flags|=e,s.memoizedState=Ui(1|t,n,o,r)}function Bi(e,t){return Ni(8390656,8,e,t)}function Mi(e,t){return zi(2048,8,e,t)}function Hi(e,t){return zi(4,2,e,t)}function Wi(e,t){return zi(4,4,e,t)}function Ki(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Vi(e,t,n){return n=null!=n?n.concat([e]):null,zi(4,4,Ki.bind(null,t,e),n)}function Qi(){}function Zi(e,t){var n=Ci();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&qi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Xi(e,t){var n=Ci();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&qi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Yi(e,t,n){return 0==(21&gi)?(e.baseState&&(e.baseState=!1,wa=!0),e.memoizedState=n):(ar(n,t)||(n=ht(),hi.lanes|=n,Fp|=n,e.baseState=!0),t)}function Ji(e,t){var n=xt;xt=0!==n&&4>n?n:4,e(!0);var r=li.transition;li.transition={};try{e(!1),t()}finally{xt=n,li.transition=r}}function ea(){return Ci().memoizedState}function ta(e,t,n){var r=nc(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},ra(e))sa(t,n);else if(null!==(n=Lo(e,t,n,r))){rc(n,e,r,tc()),oa(n,t,r)}}function na(e,t,n){var r=nc(e),s={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(ra(e))sa(t,s);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,a=o(i,n);if(s.hasEagerState=!0,s.eagerState=a,ar(a,i)){var p=t.interleaved;return null===p?(s.next=s,Ro(t)):(s.next=p.next,p.next=s),void(t.interleaved=s)}}catch(c){}null!==(n=Lo(e,t,s,r))&&(rc(n,e,r,s=tc()),oa(n,t,r))}}function ra(e){var t=e.alternate;return e===hi||null!==t&&t===hi}function sa(e,t){xi=bi=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function oa(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}var ia={readContext:Io,useCallback:ki,useContext:ki,useEffect:ki,useImperativeHandle:ki,useInsertionEffect:ki,useLayoutEffect:ki,useMemo:ki,useReducer:ki,useRef:ki,useState:ki,useDebugValue:ki,useDeferredValue:ki,useTransition:ki,useMutableSource:ki,useSyncExternalStore:ki,useId:ki,unstable_isNewReconciler:!1},aa={readContext:Io,useCallback:function(e,t){return Ii().memoizedState=[e,void 0===t?null:t],e},useContext:Io,useEffect:Bi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ni(4194308,4,Ki.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ni(4194308,4,e,t)},useInsertionEffect:function(e,t){return Ni(4,2,e,t)},useMemo:function(e,t){var n=Ii();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ii();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=ta.bind(null,hi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ii().memoizedState=e},useState:Di,useDebugValue:Qi,useDeferredValue:function(e){return Ii().memoizedState=e},useTransition:function(){var e=Di(!1),t=e[0];return e=Ji.bind(null,e[1]),Ii().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=hi,s=Ii();if(so){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===Tp)throw Error(o(349));0!=(30&gi)||Ai(r,t,n)}s.memoizedState=n;var i={value:n,getSnapshot:t};return s.queue=i,Bi(ji.bind(null,r,i,e),[e]),r.flags|=2048,Ui(9,Oi.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=Ii(),t=Tp.identifierPrefix;if(so){var n=Xs;t=":"+t+"R"+(n=(Zs&~(1<<32-it(Zs)-1)).toString(32)+n),0<(n=wi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=vi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},pa={readContext:Io,useCallback:Zi,useContext:Io,useEffect:Mi,useImperativeHandle:Vi,useInsertionEffect:Hi,useLayoutEffect:Wi,useMemo:Xi,useReducer:Li,useRef:Gi,useState:function(){return Li(Ri)},useDebugValue:Qi,useDeferredValue:function(e){return Yi(Ci(),fi.memoizedState,e)},useTransition:function(){return[Li(Ri)[0],Ci().memoizedState]},useMutableSource:Si,useSyncExternalStore:Pi,useId:ea,unstable_isNewReconciler:!1},ca={readContext:Io,useCallback:Zi,useContext:Io,useEffect:Mi,useImperativeHandle:Vi,useInsertionEffect:Hi,useLayoutEffect:Wi,useMemo:Xi,useReducer:Ti,useRef:Gi,useState:function(){return Ti(Ri)},useDebugValue:Qi,useDeferredValue:function(e){var t=Ci();return null===fi?t.memoizedState=e:Yi(t,fi.memoizedState,e)},useTransition:function(){return[Ti(Ri)[0],Ci().memoizedState]},useMutableSource:Si,useSyncExternalStore:Pi,useId:ea,unstable_isNewReconciler:!1};function ma(e,t){try{var n="",r=t;do{n+=N(r),r=r.return}while(r);var s=n}catch(o){s="\nError generating stack: "+o.message+"\n"+o.stack}return{value:e,source:t,stack:s,digest:null}}function da(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function ua(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var la="function"==typeof WeakMap?WeakMap:Map;function ga(e,t,n){(n=Oo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Hp||(Hp=!0,Wp=r),ua(0,t)},n}function ha(e,t,n){(n=Oo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var s=t.value;n.payload=function(){return r(s)},n.callback=function(){ua(0,t)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){ua(0,t),"function"!=typeof r&&(null===Kp?Kp=new Set([this]):Kp.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function fa(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new la;var s=new Set;r.set(t,s)}else void 0===(s=r.get(t))&&(s=new Set,r.set(t,s));s.has(n)||(s.add(n),e=Ic.bind(null,e,t,n),t.then(e,e))}function ya(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function ba(e,t,n,r,s){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Oo(-1,1)).tag=2,jo(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=s,e)}var xa=w.ReactCurrentOwner,wa=!1;function va(e,t,n,r){t.child=null===e?Yo(t,null,n,r):Xo(t,e.child,n,r)}function ka(e,t,n,r,s){n=n.render;var o=t.ref;return _o(t,s),r=$i(e,t,n,r,o,s),n=_i(),null===e||wa?(so&&n&&eo(t),t.flags|=1,va(e,t,r,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,Ha(e,t,s))}function qa(e,t,n,r,s){if(null===e){var o=n.type;return"function"!=typeof o||Ac(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=jc(n.type,null,r,t,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,$a(e,t,o,r,s))}if(o=e.child,0==(e.lanes&s)){var i=o.memoizedProps;if((n=null!==(n=n.compare)?n:pr)(i,r)&&e.ref===t.ref)return Ha(e,t,s)}return t.flags|=1,(e=Oc(o,r)).ref=t.ref,e.return=t,t.child=e}function $a(e,t,n,r,s){if(null!==e){var o=e.memoizedProps;if(pr(o,r)&&e.ref===t.ref){if(wa=!1,t.pendingProps=r=o,0==(e.lanes&s))return t.lanes=e.lanes,Ha(e,t,s);0!=(131072&e.flags)&&(wa=!0)}}return Ca(e,t,n,r,s)}function _a(e,t,n){var r=t.pendingProps,s=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Is(Op,Ap),Ap|=n;else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Is(Op,Ap),Ap|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:n,Is(Op,Ap),Ap|=r}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,Is(Op,Ap),Ap|=r;return va(e,t,s,n),t.child}function Ia(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ca(e,t,n,r,s){var o=Ps(n)?Ts:Rs.current;return o=Ss(t,o),_o(t,s),n=$i(e,t,n,r,o,s),r=_i(),null===e||wa?(so&&r&&eo(t),t.flags|=1,va(e,t,n,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,Ha(e,t,s))}function Ra(e,t,n,r,s){if(Ps(n)){var o=!0;Es(t)}else o=!1;if(_o(t,s),null===t.stateNode)Ma(e,t),Mo(t,n,r),Wo(t,n,r,s),r=!0;else if(null===e){var i=t.stateNode,a=t.memoizedProps;i.props=a;var p=i.context,c=n.contextType;"object"==typeof c&&null!==c?c=Io(c):c=Ss(t,c=Ps(n)?Ts:Rs.current);var m=n.getDerivedStateFromProps,d="function"==typeof m||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(a!==r||p!==c)&&Ho(t,i,r,c),So=!1;var u=t.memoizedState;i.state=u,Do(t,r,i,s),p=t.memoizedState,a!==r||u!==p||Ls.current||So?("function"==typeof m&&(No(t,n,m,r),p=t.memoizedState),(a=So||Bo(t,n,a,r,u,p,c))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=p),i.props=r,i.state=p,i.context=c,r=a):("function"==typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,Ao(e,t),a=t.memoizedProps,c=t.type===t.elementType?a:yo(t.type,a),i.props=c,d=t.pendingProps,u=i.context,"object"==typeof(p=n.contextType)&&null!==p?p=Io(p):p=Ss(t,p=Ps(n)?Ts:Rs.current);var l=n.getDerivedStateFromProps;(m="function"==typeof l||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(a!==d||u!==p)&&Ho(t,i,r,p),So=!1,u=t.memoizedState,i.state=u,Do(t,r,i,s);var g=t.memoizedState;a!==d||u!==g||Ls.current||So?("function"==typeof l&&(No(t,n,l,r),g=t.memoizedState),(c=So||Bo(t,n,c,r,u,g,p)||!1)?(m||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,g,p),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,g,p)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=g),i.props=r,i.state=g,i.context=p,r=c):("function"!=typeof i.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.flags|=1024),r=!1)}return La(e,t,n,r,o,s)}function La(e,t,n,r,s,o){Ia(e,t);var i=0!=(128&t.flags);if(!r&&!i)return s&&Fs(t,n,!1),Ha(e,t,o);r=t.stateNode,xa.current=t;var a=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Xo(t,e.child,null,o),t.child=Xo(t,null,a,o)):va(e,t,a,o),t.memoizedState=r.state,s&&Fs(t,n,!0),t.child}function Ta(e){var t=e.stateNode;t.pendingContext?Os(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Os(0,t.context,!1),si(e,t.containerInfo)}function Sa(e,t,n,r,s){return go(),ho(s),t.flags|=256,va(e,t,n,r),t.child}var Pa,Aa,Oa,ja,Ea={dehydrated:null,treeContext:null,retryLane:0};function Fa(e){return{baseLanes:e,cachePool:null,transitions:null}}function Da(e,t,n){var r,s=t.pendingProps,i=pi.current,a=!1,p=0!=(128&t.flags);if((r=p)||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(a=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Is(pi,1&i),null===e)return co(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(p=s.children,e=s.fallback,a?(s=t.mode,a=t.child,p={mode:"hidden",children:p},0==(1&s)&&null!==a?(a.childLanes=0,a.pendingProps=p):a=Fc(p,s,0,null),e=Ec(e,s,n,null),a.return=t,e.return=t,a.sibling=e,t.child=a,t.child.memoizedState=Fa(n),t.memoizedState=Ea,e):Ua(t,p));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,n,r,s,i,a){if(n)return 256&t.flags?(t.flags&=-257,Ga(e,t,a,r=da(Error(o(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,s=t.mode,r=Fc({mode:"visible",children:r.children},s,0,null),(i=Ec(i,s,a,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,0!=(1&t.mode)&&Xo(t,e.child,null,a),t.child.memoizedState=Fa(a),t.memoizedState=Ea,i);if(0==(1&t.mode))return Ga(e,t,a,null);if("$!"===s.data){if(r=s.nextSibling&&s.nextSibling.dataset)var p=r.dgst;return r=p,Ga(e,t,a,r=da(i=Error(o(419)),r,void 0))}if(p=0!=(a&e.childLanes),wa||p){if(null!==(r=Tp)){switch(a&-a){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}0!==(s=0!=(s&(r.suspendedLanes|a))?0:s)&&s!==i.retryLane&&(i.retryLane=s,To(e,s),rc(r,e,s,-1))}return fc(),Ga(e,t,a,r=da(Error(o(421))))}return"$?"===s.data?(t.flags|=128,t.child=e.child,t=Rc.bind(null,e),s._reactRetry=t,null):(e=i.treeContext,ro=cs(s.nextSibling),no=t,so=!0,oo=null,null!==e&&(Ks[Vs++]=Zs,Ks[Vs++]=Xs,Ks[Vs++]=Qs,Zs=e.id,Xs=e.overflow,Qs=t),t=Ua(t,r.children),t.flags|=4096,t)}(e,t,p,s,r,i,n);if(a){a=s.fallback,p=t.mode,r=(i=e.child).sibling;var c={mode:"hidden",children:s.children};return 0==(1&p)&&t.child!==i?((s=t.child).childLanes=0,s.pendingProps=c,t.deletions=null):(s=Oc(i,c)).subtreeFlags=14680064&i.subtreeFlags,null!==r?a=Oc(r,a):(a=Ec(a,p,n,null)).flags|=2,a.return=t,s.return=t,s.sibling=a,t.child=s,s=a,a=t.child,p=null===(p=e.child.memoizedState)?Fa(n):{baseLanes:p.baseLanes|n,cachePool:null,transitions:p.transitions},a.memoizedState=p,a.childLanes=e.childLanes&~n,t.memoizedState=Ea,s}return e=(a=e.child).sibling,s=Oc(a,{mode:"visible",children:s.children}),0==(1&t.mode)&&(s.lanes=n),s.return=t,s.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=s,t.memoizedState=null,s}function Ua(e,t){return(t=Fc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ga(e,t,n,r){return null!==r&&ho(r),Xo(t,e.child,null,n),(e=Ua(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Na(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),$o(e.return,t,n)}function za(e,t,n,r,s){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:s}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=s)}function Ba(e,t,n){var r=t.pendingProps,s=r.revealOrder,o=r.tail;if(va(e,t,r.children,n),0!=(2&(r=pi.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Na(e,n,t);else if(19===e.tag)Na(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Is(pi,r),0==(1&t.mode))t.memoizedState=null;else switch(s){case"forwards":for(n=t.child,s=null;null!==n;)null!==(e=n.alternate)&&null===ci(e)&&(s=n),n=n.sibling;null===(n=s)?(s=t.child,t.child=null):(s=n.sibling,n.sibling=null),za(t,!1,s,n,o);break;case"backwards":for(n=null,s=t.child,t.child=null;null!==s;){if(null!==(e=s.alternate)&&null===ci(e)){t.child=s;break}e=s.sibling,s.sibling=n,n=s,s=e}za(t,!0,n,null,o);break;case"together":za(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Ma(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Ha(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Fp|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Oc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Oc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Wa(e,t){if(!so)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ka(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var s=e.child;null!==s;)n|=s.lanes|s.childLanes,r|=14680064&s.subtreeFlags,r|=14680064&s.flags,s.return=e,s=s.sibling;else for(s=e.child;null!==s;)n|=s.lanes|s.childLanes,r|=s.subtreeFlags,r|=s.flags,s.return=e,s=s.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Va(e,t,n){var r=t.pendingProps;switch(to(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ka(t),null;case 1:case 17:return Ps(t.type)&&As(),Ka(t),null;case 3:return r=t.stateNode,oi(),_s(Ls),_s(Rs),di(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(uo(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==oo&&(ac(oo),oo=null))),Aa(e,t),Ka(t),null;case 5:ai(t);var s=ri(ni.current);if(n=t.type,null!==e&&null!=t.stateNode)Oa(e,t,n,r,s),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(o(166));return Ka(t),null}if(e=ri(ei.current),uo(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[us]=t,r[ls]=i,e=0!=(1&t.mode),n){case"dialog":Ur("cancel",r),Ur("close",r);break;case"iframe":case"object":case"embed":Ur("load",r);break;case"video":case"audio":for(s=0;s<jr.length;s++)Ur(jr[s],r);break;case"source":Ur("error",r);break;case"img":case"image":case"link":Ur("error",r),Ur("load",r);break;case"details":Ur("toggle",r);break;case"input":Z(r,i),Ur("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Ur("invalid",r);break;case"textarea":se(r,i),Ur("invalid",r)}for(var p in be(n,i),s=null,i)if(i.hasOwnProperty(p)){var c=i[p];"children"===p?"string"==typeof c?r.textContent!==c&&(!0!==i.suppressHydrationWarning&&Yr(r.textContent,c,e),s=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==i.suppressHydrationWarning&&Yr(r.textContent,c,e),s=["children",""+c]):a.hasOwnProperty(p)&&null!=c&&"onScroll"===p&&Ur("scroll",r)}switch(n){case"input":W(r),J(r,i,!0);break;case"textarea":W(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Jr)}r=s,t.updateQueue=r,null!==r&&(t.flags|=4)}else{p=9===s.nodeType?s:s.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ae(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=p.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=p.createElement(n,{is:r.is}):(e=p.createElement(n),"select"===n&&(p=e,r.multiple?p.multiple=!0:r.size&&(p.size=r.size))):e=p.createElementNS(e,n),e[us]=t,e[ls]=r,Pa(e,t,!1,!1),t.stateNode=e;e:{switch(p=xe(n,r),n){case"dialog":Ur("cancel",e),Ur("close",e),s=r;break;case"iframe":case"object":case"embed":Ur("load",e),s=r;break;case"video":case"audio":for(s=0;s<jr.length;s++)Ur(jr[s],e);s=r;break;case"source":Ur("error",e),s=r;break;case"img":case"image":case"link":Ur("error",e),Ur("load",e),s=r;break;case"details":Ur("toggle",e),s=r;break;case"input":Z(e,r),s=Q(e,r),Ur("invalid",e);break;case"option":default:s=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=F({},r,{value:void 0}),Ur("invalid",e);break;case"textarea":se(e,r),s=re(e,r),Ur("invalid",e)}for(i in be(n,s),c=s)if(c.hasOwnProperty(i)){var m=c[i];"style"===i?fe(e,m):"dangerouslySetInnerHTML"===i?null!=(m=m?m.__html:void 0)&&de(e,m):"children"===i?"string"==typeof m?("textarea"!==n||""!==m)&&ue(e,m):"number"==typeof m&&ue(e,""+m):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(a.hasOwnProperty(i)?null!=m&&"onScroll"===i&&Ur("scroll",e):null!=m&&x(e,i,m,p))}switch(n){case"input":W(e),J(e,r,!1);break;case"textarea":W(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+M(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof s.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Ka(t),null;case 6:if(e&&null!=t.stateNode)ja(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));if(n=ri(ni.current),ri(ei.current),uo(t)){if(r=t.stateNode,n=t.memoizedProps,r[us]=t,(i=r.nodeValue!==n)&&null!==(e=no))switch(e.tag){case 3:Yr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Yr(r.nodeValue,n,0!=(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[us]=t,t.stateNode=r}return Ka(t),null;case 13:if(_s(pi),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(so&&null!==ro&&0!=(1&t.mode)&&0==(128&t.flags))lo(),go(),t.flags|=98560,i=!1;else if(i=uo(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(o(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(o(317));i[us]=t}else go(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Ka(t),i=!1}else null!==oo&&(ac(oo),oo=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&pi.current)?0===jp&&(jp=3):fc())),null!==t.updateQueue&&(t.flags|=4),Ka(t),null);case 4:return oi(),Aa(e,t),null===e&&zr(t.stateNode.containerInfo),Ka(t),null;case 10:return qo(t.type._context),Ka(t),null;case 19:if(_s(pi),null===(i=t.memoizedState))return Ka(t),null;if(r=0!=(128&t.flags),null===(p=i.rendering))if(r)Wa(i,!1);else{if(0!==jp||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(p=ci(e))){for(t.flags|=128,Wa(i,!1),null!==(r=p.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(p=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=p.childLanes,i.lanes=p.lanes,i.child=p.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=p.memoizedProps,i.memoizedState=p.memoizedState,i.updateQueue=p.updateQueue,i.type=p.type,e=p.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Is(pi,1&pi.current|2),t.child}e=e.sibling}null!==i.tail&&Xe()>Bp&&(t.flags|=128,r=!0,Wa(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ci(p))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Wa(i,!0),null===i.tail&&"hidden"===i.tailMode&&!p.alternate&&!so)return Ka(t),null}else 2*Xe()-i.renderingStartTime>Bp&&1073741824!==n&&(t.flags|=128,r=!0,Wa(i,!1),t.lanes=4194304);i.isBackwards?(p.sibling=t.child,t.child=p):(null!==(n=i.last)?n.sibling=p:t.child=p,i.last=p)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Xe(),t.sibling=null,n=pi.current,Is(pi,r?1&n|2:1&n),t):(Ka(t),null);case 22:case 23:return uc(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&Ap)&&(Ka(t),6&t.subtreeFlags&&(t.flags|=8192)):Ka(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}function Qa(e,t){switch(to(t),t.tag){case 1:return Ps(t.type)&&As(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return oi(),_s(Ls),_s(Rs),di(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return ai(t),null;case 13:if(_s(pi),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));go()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return _s(pi),null;case 4:return oi(),null;case 10:return qo(t.type._context),null;case 22:case 23:return uc(),null;default:return null}}Pa=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Aa=function(){},Oa=function(e,t,n,r){var s=e.memoizedProps;if(s!==r){e=t.stateNode,ri(ei.current);var o,i=null;switch(n){case"input":s=Q(e,s),r=Q(e,r),i=[];break;case"select":s=F({},s,{value:void 0}),r=F({},r,{value:void 0}),i=[];break;case"textarea":s=re(e,s),r=re(e,r),i=[];break;default:"function"!=typeof s.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(m in be(n,r),n=null,s)if(!r.hasOwnProperty(m)&&s.hasOwnProperty(m)&&null!=s[m])if("style"===m){var p=s[m];for(o in p)p.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==m&&"children"!==m&&"suppressContentEditableWarning"!==m&&"suppressHydrationWarning"!==m&&"autoFocus"!==m&&(a.hasOwnProperty(m)?i||(i=[]):(i=i||[]).push(m,null));for(m in r){var c=r[m];if(p=null!=s?s[m]:void 0,r.hasOwnProperty(m)&&c!==p&&(null!=c||null!=p))if("style"===m)if(p){for(o in p)!p.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in c)c.hasOwnProperty(o)&&p[o]!==c[o]&&(n||(n={}),n[o]=c[o])}else n||(i||(i=[]),i.push(m,n)),n=c;else"dangerouslySetInnerHTML"===m?(c=c?c.__html:void 0,p=p?p.__html:void 0,null!=c&&p!==c&&(i=i||[]).push(m,c)):"children"===m?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(m,""+c):"suppressContentEditableWarning"!==m&&"suppressHydrationWarning"!==m&&(a.hasOwnProperty(m)?(null!=c&&"onScroll"===m&&Ur("scroll",e),i||p===c||(i=[])):(i=i||[]).push(m,c))}n&&(i=i||[]).push("style",n);var m=i;(t.updateQueue=m)&&(t.flags|=4)}},ja=function(e,t,n,r){n!==r&&(t.flags|=4)};var Za=!1,Xa=!1,Ya="function"==typeof WeakSet?WeakSet:Set,Ja=null;function ep(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(r){_c(e,t,r)}else n.current=null}function tp(e,t,n){try{n()}catch(r){_c(e,t,r)}}var np=!1;function rp(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var s=r=r.next;do{if((s.tag&e)===e){var o=s.destroy;s.destroy=void 0,void 0!==o&&tp(t,n,o)}s=s.next}while(s!==r)}}function sp(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function op(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ip(e){var t=e.alternate;null!==t&&(e.alternate=null,ip(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[us],delete t[ls],delete t[hs],delete t[fs],delete t[ys])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ap(e){return 5===e.tag||3===e.tag||4===e.tag}function pp(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ap(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cp(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(cp(e,t,n),e=e.sibling;null!==e;)cp(e,t,n),e=e.sibling}function mp(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(mp(e,t,n),e=e.sibling;null!==e;)mp(e,t,n),e=e.sibling}var dp=null,up=!1;function lp(e,t,n){for(n=n.child;null!==n;)gp(e,t,n),n=n.sibling}function gp(e,t,n){if(ot&&"function"==typeof ot.onCommitFiberUnmount)try{ot.onCommitFiberUnmount(st,n)}catch(a){}switch(n.tag){case 5:Xa||ep(n,t);case 6:var r=dp,s=up;dp=null,lp(e,t,n),up=s,null!==(dp=r)&&(up?(e=dp,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):dp.removeChild(n.stateNode));break;case 18:null!==dp&&(up?(e=dp,n=n.stateNode,8===e.nodeType?ps(e.parentNode,n):1===e.nodeType&&ps(e,n),zt(e)):ps(dp,n.stateNode));break;case 4:r=dp,s=up,dp=n.stateNode.containerInfo,up=!0,lp(e,t,n),dp=r,up=s;break;case 0:case 11:case 14:case 15:if(!Xa&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){s=r=r.next;do{var o=s,i=o.destroy;o=o.tag,void 0!==i&&(0!=(2&o)||0!=(4&o))&&tp(n,t,i),s=s.next}while(s!==r)}lp(e,t,n);break;case 1:if(!Xa&&(ep(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(a){_c(n,t,a)}lp(e,t,n);break;case 21:lp(e,t,n);break;case 22:1&n.mode?(Xa=(r=Xa)||null!==n.memoizedState,lp(e,t,n),Xa=r):lp(e,t,n);break;default:lp(e,t,n)}}function hp(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ya),t.forEach((function(t){var r=Lc.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function fp(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var s=n[r];try{var i=e,a=t,p=a;e:for(;null!==p;){switch(p.tag){case 5:dp=p.stateNode,up=!1;break e;case 3:case 4:dp=p.stateNode.containerInfo,up=!0;break e}p=p.return}if(null===dp)throw Error(o(160));gp(i,a,s),dp=null,up=!1;var c=s.alternate;null!==c&&(c.return=null),s.return=null}catch(m){_c(s,t,m)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)yp(t,e),t=t.sibling}function yp(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(fp(t,e),bp(e),4&r){try{rp(3,e,e.return),sp(3,e)}catch(f){_c(e,e.return,f)}try{rp(5,e,e.return)}catch(f){_c(e,e.return,f)}}break;case 1:fp(t,e),bp(e),512&r&&null!==n&&ep(n,n.return);break;case 5:if(fp(t,e),bp(e),512&r&&null!==n&&ep(n,n.return),32&e.flags){var s=e.stateNode;try{ue(s,"")}catch(f){_c(e,e.return,f)}}if(4&r&&null!=(s=e.stateNode)){var i=e.memoizedProps,a=null!==n?n.memoizedProps:i,p=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===p&&"radio"===i.type&&null!=i.name&&X(s,i),xe(p,a);var m=xe(p,i);for(a=0;a<c.length;a+=2){var d=c[a],u=c[a+1];"style"===d?fe(s,u):"dangerouslySetInnerHTML"===d?de(s,u):"children"===d?ue(s,u):x(s,d,u,m)}switch(p){case"input":Y(s,i);break;case"textarea":oe(s,i);break;case"select":var l=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!i.multiple;var g=i.value;null!=g?ne(s,!!i.multiple,g,!1):l!==!!i.multiple&&(null!=i.defaultValue?ne(s,!!i.multiple,i.defaultValue,!0):ne(s,!!i.multiple,i.multiple?[]:"",!1))}s[ls]=i}catch(f){_c(e,e.return,f)}}break;case 6:if(fp(t,e),bp(e),4&r){if(null===e.stateNode)throw Error(o(162));s=e.stateNode,i=e.memoizedProps;try{s.nodeValue=i}catch(f){_c(e,e.return,f)}}break;case 3:if(fp(t,e),bp(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{zt(t.containerInfo)}catch(f){_c(e,e.return,f)}break;case 4:default:fp(t,e),bp(e);break;case 13:fp(t,e),bp(e),8192&(s=e.child).flags&&(i=null!==s.memoizedState,s.stateNode.isHidden=i,!i||null!==s.alternate&&null!==s.alternate.memoizedState||(zp=Xe())),4&r&&hp(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Xa=(m=Xa)||d,fp(t,e),Xa=m):fp(t,e),bp(e),8192&r){if(m=null!==e.memoizedState,(e.stateNode.isHidden=m)&&!d&&0!=(1&e.mode))for(Ja=e,d=e.child;null!==d;){for(u=Ja=d;null!==Ja;){switch(g=(l=Ja).child,l.tag){case 0:case 11:case 14:case 15:rp(4,l,l.return);break;case 1:ep(l,l.return);var h=l.stateNode;if("function"==typeof h.componentWillUnmount){r=l,n=l.return;try{t=r,h.props=t.memoizedProps,h.state=t.memoizedState,h.componentWillUnmount()}catch(f){_c(r,n,f)}}break;case 5:ep(l,l.return);break;case 22:if(null!==l.memoizedState){kp(u);continue}}null!==g?(g.return=l,Ja=g):kp(u)}d=d.sibling}e:for(d=null,u=e;;){if(5===u.tag){if(null===d){d=u;try{s=u.stateNode,m?"function"==typeof(i=s.style).setProperty?i.setProperty("display","none","important"):i.display="none":(p=u.stateNode,a=null!=(c=u.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,p.style.display=he("display",a))}catch(f){_c(e,e.return,f)}}}else if(6===u.tag){if(null===d)try{u.stateNode.nodeValue=m?"":u.memoizedProps}catch(f){_c(e,e.return,f)}}else if((22!==u.tag&&23!==u.tag||null===u.memoizedState||u===e)&&null!==u.child){u.child.return=u,u=u.child;continue}if(u===e)break e;for(;null===u.sibling;){if(null===u.return||u.return===e)break e;d===u&&(d=null),u=u.return}d===u&&(d=null),u.sibling.return=u.return,u=u.sibling}}break;case 19:fp(t,e),bp(e),4&r&&hp(e);case 21:}}function bp(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ap(n)){var r=n;break e}n=n.return}throw Error(o(160))}switch(r.tag){case 5:var s=r.stateNode;32&r.flags&&(ue(s,""),r.flags&=-33),mp(e,pp(e),s);break;case 3:case 4:var i=r.stateNode.containerInfo;cp(e,pp(e),i);break;default:throw Error(o(161))}}catch(a){_c(e,e.return,a)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function xp(e,t,n){Ja=e,wp(e,t,n)}function wp(e,t,n){for(var r=0!=(1&e.mode);null!==Ja;){var s=Ja,o=s.child;if(22===s.tag&&r){var i=null!==s.memoizedState||Za;if(!i){var a=s.alternate,p=null!==a&&null!==a.memoizedState||Xa;a=Za;var c=Xa;if(Za=i,(Xa=p)&&!c)for(Ja=s;null!==Ja;)p=(i=Ja).child,22===i.tag&&null!==i.memoizedState?qp(s):null!==p?(p.return=i,Ja=p):qp(s);for(;null!==o;)Ja=o,wp(o,t,n),o=o.sibling;Ja=s,Za=a,Xa=c}vp(e)}else 0!=(8772&s.subtreeFlags)&&null!==o?(o.return=s,Ja=o):vp(e)}}function vp(e){for(;null!==Ja;){var t=Ja;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Xa||sp(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Xa)if(null===n)r.componentDidMount();else{var s=t.elementType===t.type?n.memoizedProps:yo(t.type,n.memoizedProps);r.componentDidUpdate(s,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Uo(t,i,r);break;case 3:var a=t.updateQueue;if(null!==a){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Uo(t,a,n)}break;case 5:var p=t.stateNode;if(null===n&&4&t.flags){n=p;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var m=t.alternate;if(null!==m){var d=m.memoizedState;if(null!==d){var u=d.dehydrated;null!==u&&zt(u)}}}break;default:throw Error(o(163))}Xa||512&t.flags&&op(t)}catch(l){_c(t,t.return,l)}}if(t===e){Ja=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ja=n;break}Ja=t.return}}function kp(e){for(;null!==Ja;){var t=Ja;if(t===e){Ja=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ja=n;break}Ja=t.return}}function qp(e){for(;null!==Ja;){var t=Ja;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{sp(4,t)}catch(p){_c(t,n,p)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var s=t.return;try{r.componentDidMount()}catch(p){_c(t,s,p)}}var o=t.return;try{op(t)}catch(p){_c(t,o,p)}break;case 5:var i=t.return;try{op(t)}catch(p){_c(t,i,p)}}}catch(p){_c(t,t.return,p)}if(t===e){Ja=null;break}var a=t.sibling;if(null!==a){a.return=t.return,Ja=a;break}Ja=t.return}}var $p,_p=Math.ceil,Ip=w.ReactCurrentDispatcher,Cp=w.ReactCurrentOwner,Rp=w.ReactCurrentBatchConfig,Lp=0,Tp=null,Sp=null,Pp=0,Ap=0,Op=$s(0),jp=0,Ep=null,Fp=0,Dp=0,Up=0,Gp=null,Np=null,zp=0,Bp=1/0,Mp=null,Hp=!1,Wp=null,Kp=null,Vp=!1,Qp=null,Zp=0,Xp=0,Yp=null,Jp=-1,ec=0;function tc(){return 0!=(6&Lp)?Xe():-1!==Jp?Jp:Jp=Xe()}function nc(e){return 0==(1&e.mode)?1:0!=(2&Lp)&&0!==Pp?Pp&-Pp:null!==fo.transition?(0===ec&&(ec=ht()),ec):0!==(e=xt)?e:e=void 0===(e=window.event)?16:Zt(e.type)}function rc(e,t,n,r){if(50<Xp)throw Xp=0,Yp=null,Error(o(185));yt(e,n,r),0!=(2&Lp)&&e===Tp||(e===Tp&&(0==(2&Lp)&&(Dp|=n),4===jp&&pc(e,Pp)),sc(e,r),1===n&&0===Lp&&0==(1&t.mode)&&(Bp=Xe()+500,Us&&zs()))}function sc(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,s=e.expirationTimes,o=e.pendingLanes;0<o;){var i=31-it(o),a=1<<i,p=s[i];-1===p?0!=(a&n)&&0==(a&r)||(s[i]=lt(a,t)):p<=t&&(e.expiredLanes|=a),o&=~a}}(e,t);var r=ut(e,e===Tp?Pp:0);if(0===r)null!==n&&Ve(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ve(n),1===t)0===e.tag?function(e){Us=!0,Ns(e)}(cc.bind(null,e)):Ns(cc.bind(null,e)),is((function(){0==(6&Lp)&&zs()})),n=null;else{switch(wt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Tc(n,oc.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function oc(e,t){if(Jp=-1,ec=0,0!=(6&Lp))throw Error(o(327));var n=e.callbackNode;if(qc()&&e.callbackNode!==n)return null;var r=ut(e,e===Tp?Pp:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=yc(e,r);else{t=r;var s=Lp;Lp|=2;var i=hc();for(Tp===e&&Pp===t||(Mp=null,Bp=Xe()+500,lc(e,t));;)try{xc();break}catch(p){gc(e,p)}ko(),Ip.current=i,Lp=s,null!==Sp?t=0:(Tp=null,Pp=0,t=jp)}if(0!==t){if(2===t&&(0!==(s=gt(e))&&(r=s,t=ic(e,s))),1===t)throw n=Ep,lc(e,0),pc(e,r),sc(e,Xe()),n;if(6===t)pc(e,r);else{if(s=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var s=n[r],o=s.getSnapshot;s=s.value;try{if(!ar(o(),s))return!1}catch(a){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(s)&&(2===(t=yc(e,r))&&(0!==(i=gt(e))&&(r=i,t=ic(e,i))),1===t))throw n=Ep,lc(e,0),pc(e,r),sc(e,Xe()),n;switch(e.finishedWork=s,e.finishedLanes=r,t){case 0:case 1:throw Error(o(345));case 2:case 5:kc(e,Np,Mp);break;case 3:if(pc(e,r),(130023424&r)===r&&10<(t=zp+500-Xe())){if(0!==ut(e,0))break;if(((s=e.suspendedLanes)&r)!==r){tc(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=rs(kc.bind(null,e,Np,Mp),t);break}kc(e,Np,Mp);break;case 4:if(pc(e,r),(4194240&r)===r)break;for(t=e.eventTimes,s=-1;0<r;){var a=31-it(r);i=1<<a,(a=t[a])>s&&(s=a),r&=~i}if(r=s,10<(r=(120>(r=Xe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*_p(r/1960))-r)){e.timeoutHandle=rs(kc.bind(null,e,Np,Mp),r);break}kc(e,Np,Mp);break;default:throw Error(o(329))}}}return sc(e,Xe()),e.callbackNode===n?oc.bind(null,e):null}function ic(e,t){var n=Gp;return e.current.memoizedState.isDehydrated&&(lc(e,t).flags|=256),2!==(e=yc(e,t))&&(t=Np,Np=n,null!==t&&ac(t)),e}function ac(e){null===Np?Np=e:Np.push.apply(Np,e)}function pc(e,t){for(t&=~Up,t&=~Dp,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function cc(e){if(0!=(6&Lp))throw Error(o(327));qc();var t=ut(e,0);if(0==(1&t))return sc(e,Xe()),null;var n=yc(e,t);if(0!==e.tag&&2===n){var r=gt(e);0!==r&&(t=r,n=ic(e,r))}if(1===n)throw n=Ep,lc(e,0),pc(e,t),sc(e,Xe()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,kc(e,Np,Mp),sc(e,Xe()),null}function mc(e,t){var n=Lp;Lp|=1;try{return e(t)}finally{0===(Lp=n)&&(Bp=Xe()+500,Us&&zs())}}function dc(e){null!==Qp&&0===Qp.tag&&0==(6&Lp)&&qc();var t=Lp;Lp|=1;var n=Rp.transition,r=xt;try{if(Rp.transition=null,xt=1,e)return e()}finally{xt=r,Rp.transition=n,0==(6&(Lp=t))&&zs()}}function uc(){Ap=Op.current,_s(Op)}function lc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ss(n)),null!==Sp)for(n=Sp.return;null!==n;){var r=n;switch(to(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&As();break;case 3:oi(),_s(Ls),_s(Rs),di();break;case 5:ai(r);break;case 4:oi();break;case 13:case 19:_s(pi);break;case 10:qo(r.type._context);break;case 22:case 23:uc()}n=n.return}if(Tp=e,Sp=e=Oc(e.current,null),Pp=Ap=t,jp=0,Ep=null,Up=Dp=Fp=0,Np=Gp=null,null!==Co){for(t=0;t<Co.length;t++)if(null!==(r=(n=Co[t]).interleaved)){n.interleaved=null;var s=r.next,o=n.pending;if(null!==o){var i=o.next;o.next=s,r.next=i}n.pending=r}Co=null}return e}function gc(e,t){for(;;){var n=Sp;try{if(ko(),ui.current=ia,bi){for(var r=hi.memoizedState;null!==r;){var s=r.queue;null!==s&&(s.pending=null),r=r.next}bi=!1}if(gi=0,yi=fi=hi=null,xi=!1,wi=0,Cp.current=null,null===n||null===n.return){jp=1,Ep=t,Sp=null;break}e:{var i=e,a=n.return,p=n,c=t;if(t=Pp,p.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var m=c,d=p,u=d.tag;if(0==(1&d.mode)&&(0===u||11===u||15===u)){var l=d.alternate;l?(d.updateQueue=l.updateQueue,d.memoizedState=l.memoizedState,d.lanes=l.lanes):(d.updateQueue=null,d.memoizedState=null)}var g=ya(a);if(null!==g){g.flags&=-257,ba(g,a,p,0,t),1&g.mode&&fa(i,m,t),c=m;var h=(t=g).updateQueue;if(null===h){var f=new Set;f.add(c),t.updateQueue=f}else h.add(c);break e}if(0==(1&t)){fa(i,m,t),fc();break e}c=Error(o(426))}else if(so&&1&p.mode){var y=ya(a);if(null!==y){0==(65536&y.flags)&&(y.flags|=256),ba(y,a,p,0,t),ho(ma(c,p));break e}}i=c=ma(c,p),4!==jp&&(jp=2),null===Gp?Gp=[i]:Gp.push(i),i=a;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Fo(i,ga(0,c,t));break e;case 1:p=c;var b=i.type,x=i.stateNode;if(0==(128&i.flags)&&("function"==typeof b.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===Kp||!Kp.has(x)))){i.flags|=65536,t&=-t,i.lanes|=t,Fo(i,ha(i,p,t));break e}}i=i.return}while(null!==i)}vc(n)}catch(w){t=w,Sp===n&&null!==n&&(Sp=n=n.return);continue}break}}function hc(){var e=Ip.current;return Ip.current=ia,null===e?ia:e}function fc(){0!==jp&&3!==jp&&2!==jp||(jp=4),null===Tp||0==(268435455&Fp)&&0==(268435455&Dp)||pc(Tp,Pp)}function yc(e,t){var n=Lp;Lp|=2;var r=hc();for(Tp===e&&Pp===t||(Mp=null,lc(e,t));;)try{bc();break}catch(s){gc(e,s)}if(ko(),Lp=n,Ip.current=r,null!==Sp)throw Error(o(261));return Tp=null,Pp=0,jp}function bc(){for(;null!==Sp;)wc(Sp)}function xc(){for(;null!==Sp&&!Qe();)wc(Sp)}function wc(e){var t=$p(e.alternate,e,Ap);e.memoizedProps=e.pendingProps,null===t?vc(e):Sp=t,Cp.current=null}function vc(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Va(n,t,Ap)))return void(Sp=n)}else{if(null!==(n=Qa(n,t)))return n.flags&=32767,void(Sp=n);if(null===e)return jp=6,void(Sp=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Sp=t);Sp=t=e}while(null!==t);0===jp&&(jp=5)}function kc(e,t,n){var r=xt,s=Rp.transition;try{Rp.transition=null,xt=1,function(e,t,n,r){do{qc()}while(null!==Qp);if(0!=(6&Lp))throw Error(o(327));n=e.finishedWork;var s=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var s=31-it(n),o=1<<s;t[s]=0,r[s]=-1,e[s]=-1,n&=~o}}(e,i),e===Tp&&(Sp=Tp=null,Pp=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Vp||(Vp=!0,Tc(tt,(function(){return qc(),null}))),i=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||i){i=Rp.transition,Rp.transition=null;var a=xt;xt=1;var p=Lp;Lp|=4,Cp.current=null,function(e,t){if(es=Mt,lr(e=ur())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var s=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(v){n=null;break e}var a=0,p=-1,c=-1,m=0,d=0,u=e,l=null;t:for(;;){for(var g;u!==n||0!==s&&3!==u.nodeType||(p=a+s),u!==i||0!==r&&3!==u.nodeType||(c=a+r),3===u.nodeType&&(a+=u.nodeValue.length),null!==(g=u.firstChild);)l=u,u=g;for(;;){if(u===e)break t;if(l===n&&++m===s&&(p=a),l===i&&++d===r&&(c=a),null!==(g=u.nextSibling))break;l=(u=l).parentNode}u=g}n=-1===p||-1===c?null:{start:p,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(ts={focusedElem:e,selectionRange:n},Mt=!1,Ja=t;null!==Ja;)if(e=(t=Ja).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Ja=e;else for(;null!==Ja;){t=Ja;try{var h=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var f=h.memoizedProps,y=h.memoizedState,b=t.stateNode,x=b.getSnapshotBeforeUpdate(t.elementType===t.type?f:yo(t.type,f),y);b.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(o(163))}}catch(v){_c(t,t.return,v)}if(null!==(e=t.sibling)){e.return=t.return,Ja=e;break}Ja=t.return}h=np,np=!1}(e,n),yp(n,e),gr(ts),Mt=!!es,ts=es=null,e.current=n,xp(n,e,s),Ze(),Lp=p,xt=a,Rp.transition=i}else e.current=n;if(Vp&&(Vp=!1,Qp=e,Zp=s),i=e.pendingLanes,0===i&&(Kp=null),function(e){if(ot&&"function"==typeof ot.onCommitFiberRoot)try{ot.onCommitFiberRoot(st,e,void 0,128==(128&e.current.flags))}catch(t){}}(n.stateNode),sc(e,Xe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)s=t[n],r(s.value,{componentStack:s.stack,digest:s.digest});if(Hp)throw Hp=!1,e=Wp,Wp=null,e;0!=(1&Zp)&&0!==e.tag&&qc(),i=e.pendingLanes,0!=(1&i)?e===Yp?Xp++:(Xp=0,Yp=e):Xp=0,zs()}(e,t,n,r)}finally{Rp.transition=s,xt=r}return null}function qc(){if(null!==Qp){var e=wt(Zp),t=Rp.transition,n=xt;try{if(Rp.transition=null,xt=16>e?16:e,null===Qp)var r=!1;else{if(e=Qp,Qp=null,Zp=0,0!=(6&Lp))throw Error(o(331));var s=Lp;for(Lp|=4,Ja=e.current;null!==Ja;){var i=Ja,a=i.child;if(0!=(16&Ja.flags)){var p=i.deletions;if(null!==p){for(var c=0;c<p.length;c++){var m=p[c];for(Ja=m;null!==Ja;){var d=Ja;switch(d.tag){case 0:case 11:case 15:rp(8,d,i)}var u=d.child;if(null!==u)u.return=d,Ja=u;else for(;null!==Ja;){var l=(d=Ja).sibling,g=d.return;if(ip(d),d===m){Ja=null;break}if(null!==l){l.return=g,Ja=l;break}Ja=g}}}var h=i.alternate;if(null!==h){var f=h.child;if(null!==f){h.child=null;do{var y=f.sibling;f.sibling=null,f=y}while(null!==f)}}Ja=i}}if(0!=(2064&i.subtreeFlags)&&null!==a)a.return=i,Ja=a;else e:for(;null!==Ja;){if(0!=(2048&(i=Ja).flags))switch(i.tag){case 0:case 11:case 15:rp(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Ja=b;break e}Ja=i.return}}var x=e.current;for(Ja=x;null!==Ja;){var w=(a=Ja).child;if(0!=(2064&a.subtreeFlags)&&null!==w)w.return=a,Ja=w;else e:for(a=x;null!==Ja;){if(0!=(2048&(p=Ja).flags))try{switch(p.tag){case 0:case 11:case 15:sp(9,p)}}catch(k){_c(p,p.return,k)}if(p===a){Ja=null;break e}var v=p.sibling;if(null!==v){v.return=p.return,Ja=v;break e}Ja=p.return}}if(Lp=s,zs(),ot&&"function"==typeof ot.onPostCommitFiberRoot)try{ot.onPostCommitFiberRoot(st,e)}catch(k){}r=!0}return r}finally{xt=n,Rp.transition=t}}return!1}function $c(e,t,n){e=jo(e,t=ga(0,t=ma(n,t),1),1),t=tc(),null!==e&&(yt(e,1,t),sc(e,t))}function _c(e,t,n){if(3===e.tag)$c(e,e,n);else for(;null!==t;){if(3===t.tag){$c(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Kp||!Kp.has(r))){t=jo(t,e=ha(t,e=ma(n,e),1),1),e=tc(),null!==t&&(yt(t,1,e),sc(t,e));break}}t=t.return}}function Ic(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=tc(),e.pingedLanes|=e.suspendedLanes&n,Tp===e&&(Pp&n)===n&&(4===jp||3===jp&&(130023424&Pp)===Pp&&500>Xe()-zp?lc(e,0):Up|=n),sc(e,t)}function Cc(e,t){0===t&&(0==(1&e.mode)?t=1:(t=mt,0==(130023424&(mt<<=1))&&(mt=4194304)));var n=tc();null!==(e=To(e,t))&&(yt(e,t,n),sc(e,n))}function Rc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Cc(e,n)}function Lc(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,s=e.memoizedState;null!==s&&(n=s.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(t),Cc(e,n)}function Tc(e,t){return Ke(e,t)}function Sc(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Pc(e,t,n,r){return new Sc(e,t,n,r)}function Ac(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Oc(e,t){var n=e.alternate;return null===n?((n=Pc(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function jc(e,t,n,r,s,i){var a=2;if(r=e,"function"==typeof e)Ac(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case q:return Ec(n.children,s,i,t);case $:a=8,s|=8;break;case _:return(e=Pc(12,n,t,2|s)).elementType=_,e.lanes=i,e;case L:return(e=Pc(13,n,t,s)).elementType=L,e.lanes=i,e;case T:return(e=Pc(19,n,t,s)).elementType=T,e.lanes=i,e;case A:return Fc(n,s,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case I:a=10;break e;case C:a=9;break e;case R:a=11;break e;case S:a=14;break e;case P:a=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Pc(a,n,t,s)).elementType=e,t.type=r,t.lanes=i,t}function Ec(e,t,n,r){return(e=Pc(7,e,r,t)).lanes=n,e}function Fc(e,t,n,r){return(e=Pc(22,e,r,t)).elementType=A,e.lanes=n,e.stateNode={isHidden:!1},e}function Dc(e,t,n){return(e=Pc(6,e,null,t)).lanes=n,e}function Uc(e,t,n){return(t=Pc(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Gc(e,t,n,r,s){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=ft(0),this.expirationTimes=ft(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ft(0),this.identifierPrefix=r,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function Nc(e,t,n,r,s,o,i,a,p){return e=new Gc(e,t,n,a,p),1===t?(t=1,!0===o&&(t|=8)):t=0,o=Pc(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Po(o),e}function zc(e){if(!e)return Cs;e:{if(ze(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ps(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(Ps(n))return js(e,n,t)}return t}function Bc(e,t,n,r,s,o,i,a,p){return(e=Nc(n,r,!0,e,0,o,0,a,p)).context=zc(null),n=e.current,(o=Oo(r=tc(),s=nc(n))).callback=null!=t?t:null,jo(n,o,s),e.current.lanes=s,yt(e,s,r),sc(e,r),e}function Mc(e,t,n,r){var s=t.current,o=tc(),i=nc(s);return n=zc(n),null===t.context?t.context=n:t.pendingContext=n,(t=Oo(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=jo(s,t,i))&&(rc(e,s,i,o),Eo(e,s,i)),i}function Hc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Wc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Kc(e,t){Wc(e,t),(e=e.alternate)&&Wc(e,t)}$p=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ls.current)wa=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return wa=!1,function(e,t,n){switch(t.tag){case 3:Ta(t),go();break;case 5:ii(t);break;case 1:Ps(t.type)&&Es(t);break;case 4:si(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,s=t.memoizedProps.value;Is(bo,r._currentValue),r._currentValue=s;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Is(pi,1&pi.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Da(e,t,n):(Is(pi,1&pi.current),null!==(e=Ha(e,t,n))?e.sibling:null);Is(pi,1&pi.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Ba(e,t,n);t.flags|=128}if(null!==(s=t.memoizedState)&&(s.rendering=null,s.tail=null,s.lastEffect=null),Is(pi,pi.current),r)break;return null;case 22:case 23:return t.lanes=0,_a(e,t,n)}return Ha(e,t,n)}(e,t,n);wa=0!=(131072&e.flags)}else wa=!1,so&&0!=(1048576&t.flags)&&Js(t,Ws,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Ma(e,t),e=t.pendingProps;var s=Ss(t,Rs.current);_o(t,n),s=$i(null,t,r,e,s,n);var i=_i();return t.flags|=1,"object"==typeof s&&null!==s&&"function"==typeof s.render&&void 0===s.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ps(r)?(i=!0,Es(t)):i=!1,t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,Po(t),s.updater=zo,t.stateNode=s,s._reactInternals=t,Wo(t,r,e,n),t=La(null,t,r,!0,i,n)):(t.tag=0,so&&i&&eo(t),va(null,t,s,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Ma(e,t),e=t.pendingProps,r=(s=r._init)(r._payload),t.type=r,s=t.tag=function(e){if("function"==typeof e)return Ac(e)?1:0;if(null!=e){if((e=e.$$typeof)===R)return 11;if(e===S)return 14}return 2}(r),e=yo(r,e),s){case 0:t=Ca(null,t,r,e,n);break e;case 1:t=Ra(null,t,r,e,n);break e;case 11:t=ka(null,t,r,e,n);break e;case 14:t=qa(null,t,r,yo(r.type,e),n);break e}throw Error(o(306,r,""))}return t;case 0:return r=t.type,s=t.pendingProps,Ca(e,t,r,s=t.elementType===r?s:yo(r,s),n);case 1:return r=t.type,s=t.pendingProps,Ra(e,t,r,s=t.elementType===r?s:yo(r,s),n);case 3:e:{if(Ta(t),null===e)throw Error(o(387));r=t.pendingProps,s=(i=t.memoizedState).element,Ao(e,t),Do(t,r,null,n);var a=t.memoizedState;if(r=a.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:a.cache,pendingSuspenseBoundaries:a.pendingSuspenseBoundaries,transitions:a.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Sa(e,t,r,n,s=ma(Error(o(423)),t));break e}if(r!==s){t=Sa(e,t,r,n,s=ma(Error(o(424)),t));break e}for(ro=cs(t.stateNode.containerInfo.firstChild),no=t,so=!0,oo=null,n=Yo(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(go(),r===s){t=Ha(e,t,n);break e}va(e,t,r,n)}t=t.child}return t;case 5:return ii(t),null===e&&co(t),r=t.type,s=t.pendingProps,i=null!==e?e.memoizedProps:null,a=s.children,ns(r,s)?a=null:null!==i&&ns(r,i)&&(t.flags|=32),Ia(e,t),va(e,t,a,n),t.child;case 6:return null===e&&co(t),null;case 13:return Da(e,t,n);case 4:return si(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Xo(t,null,r,n):va(e,t,r,n),t.child;case 11:return r=t.type,s=t.pendingProps,ka(e,t,r,s=t.elementType===r?s:yo(r,s),n);case 7:return va(e,t,t.pendingProps,n),t.child;case 8:case 12:return va(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,s=t.pendingProps,i=t.memoizedProps,a=s.value,Is(bo,r._currentValue),r._currentValue=a,null!==i)if(ar(i.value,a)){if(i.children===s.children&&!Ls.current){t=Ha(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var p=i.dependencies;if(null!==p){a=i.child;for(var c=p.firstContext;null!==c;){if(c.context===r){if(1===i.tag){(c=Oo(-1,n&-n)).tag=2;var m=i.updateQueue;if(null!==m){var d=(m=m.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),m.pending=c}}i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),$o(i.return,n,t),p.lanes|=n;break}c=c.next}}else if(10===i.tag)a=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(a=i.return))throw Error(o(341));a.lanes|=n,null!==(p=a.alternate)&&(p.lanes|=n),$o(a,n,t),a=i.sibling}else a=i.child;if(null!==a)a.return=i;else for(a=i;null!==a;){if(a===t){a=null;break}if(null!==(i=a.sibling)){i.return=a.return,a=i;break}a=a.return}i=a}va(e,t,s.children,n),t=t.child}return t;case 9:return s=t.type,r=t.pendingProps.children,_o(t,n),r=r(s=Io(s)),t.flags|=1,va(e,t,r,n),t.child;case 14:return s=yo(r=t.type,t.pendingProps),qa(e,t,r,s=yo(r.type,s),n);case 15:return $a(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,s=t.pendingProps,s=t.elementType===r?s:yo(r,s),Ma(e,t),t.tag=1,Ps(r)?(e=!0,Es(t)):e=!1,_o(t,n),Mo(t,r,s),Wo(t,r,s,n),La(null,t,r,!0,e,n);case 19:return Ba(e,t,n);case 22:return _a(e,t,n)}throw Error(o(156,t.tag))};var Vc="function"==typeof reportError?reportError:function(e){console.error(e)};function Qc(e){this._internalRoot=e}function Zc(e){this._internalRoot=e}function Xc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Yc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function em(e,t,n,r,s){var o=n._reactRootContainer;if(o){var i=o;if("function"==typeof s){var a=s;s=function(){var e=Hc(i);a.call(e)}}Mc(t,i,e,s)}else i=function(e,t,n,r,s){if(s){if("function"==typeof r){var o=r;r=function(){var e=Hc(i);o.call(e)}}var i=Bc(t,r,e,0,null,!1,0,"",Jc);return e._reactRootContainer=i,e[gs]=i.current,zr(8===e.nodeType?e.parentNode:e),dc(),i}for(;s=e.lastChild;)e.removeChild(s);if("function"==typeof r){var a=r;r=function(){var e=Hc(p);a.call(e)}}var p=Nc(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=p,e[gs]=p.current,zr(8===e.nodeType?e.parentNode:e),dc((function(){Mc(t,p,n,r)})),p}(n,t,e,s,r);return Hc(i)}Zc.prototype.render=Qc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Mc(e,t,null,null)},Zc.prototype.unmount=Qc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;dc((function(){Mc(null,e,null,null)})),t[gs]=null}},Zc.prototype.unstable_scheduleHydration=function(e){if(e){var t=$t();e={blockedOn:null,target:e,priority:t};for(var n=0;n<At.length&&0!==t&&t<At[n].priority;n++);At.splice(n,0,e),0===n&&Ft(e)}},vt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),sc(t,Xe()),0==(6&Lp)&&(Bp=Xe()+500,zs()))}break;case 13:dc((function(){var t=To(e,1);if(null!==t){var n=tc();rc(t,e,1,n)}})),Kc(e,1)}},kt=function(e){if(13===e.tag){var t=To(e,134217728);if(null!==t)rc(t,e,134217728,tc());Kc(e,134217728)}},qt=function(e){if(13===e.tag){var t=nc(e),n=To(e,t);if(null!==n)rc(n,e,t,tc());Kc(e,t)}},$t=function(){return xt},_t=function(e,t){var n=xt;try{return xt=e,t()}finally{xt=n}},ke=function(e,t,n){switch(t){case"input":if(Y(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var s=vs(r);if(!s)throw Error(o(90));K(r),Y(r,s)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Re=mc,Le=dc;var tm={usingClientEntryPoint:!1,Events:[xs,ws,vs,Ie,Ce,mc]},nm={findFiberByHostInstance:bs,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rm={bundleType:nm.bundleType,version:nm.version,rendererPackageName:nm.rendererPackageName,rendererConfig:nm.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:nm.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var sm=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!sm.isDisabled&&sm.supportsFiber)try{st=sm.inject(rm),ot=sm}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tm,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xc(t))throw Error(o(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Xc(e))throw Error(o(299));var n=!1,r="",s=Vc;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),t=Nc(e,1,!1,null,0,n,0,r,s),e[gs]=t.current,zr(8===e.nodeType?e.parentNode:e),new Qc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return e=null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return dc(e)},t.hydrate=function(e,t,n){if(!Yc(t))throw Error(o(200));return em(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Xc(e))throw Error(o(405));var r=null!=n&&n.hydratedSources||null,s=!1,i="",a=Vc;if(null!=n&&(!0===n.unstable_strictMode&&(s=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(a=n.onRecoverableError)),t=Bc(t,null,e,1,null!=n?n:null,s,0,i,a),e[gs]=t.current,zr(e),r)for(e=0;e<r.length;e++)s=(s=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,s]:t.mutableSourceEagerHydrationData.push(n,s);return new Zc(t)},t.render=function(e,t,n){if(!Yc(t))throw Error(o(200));return em(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Yc(e))throw Error(o(40));return!!e._reactRootContainer&&(dc((function(){em(null,null,e,!1,(function(){e._reactRootContainer=null,e[gs]=null}))})),!0)},t.unstable_batchedUpdates=mc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Yc(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return em(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},20745:(e,t,n)=>{"use strict";var r=n(73935);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},73935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(64448)},69590:e=>{var t="undefined"!=typeof Element,n="function"==typeof Map,r="function"==typeof Set,s="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function o(e,i){if(e===i)return!0;if(e&&i&&"object"==typeof e&&"object"==typeof i){if(e.constructor!==i.constructor)return!1;var a,p,c,m;if(Array.isArray(e)){if((a=e.length)!=i.length)return!1;for(p=a;0!=p--;)if(!o(e[p],i[p]))return!1;return!0}if(n&&e instanceof Map&&i instanceof Map){if(e.size!==i.size)return!1;for(m=e.entries();!(p=m.next()).done;)if(!i.has(p.value[0]))return!1;for(m=e.entries();!(p=m.next()).done;)if(!o(p.value[1],i.get(p.value[0])))return!1;return!0}if(r&&e instanceof Set&&i instanceof Set){if(e.size!==i.size)return!1;for(m=e.entries();!(p=m.next()).done;)if(!i.has(p.value[0]))return!1;return!0}if(s&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(i)){if((a=e.length)!=i.length)return!1;for(p=a;0!=p--;)if(e[p]!==i[p])return!1;return!0}if(e.constructor===RegExp)return e.source===i.source&&e.flags===i.flags;if(e.valueOf!==Object.prototype.valueOf&&"function"==typeof e.valueOf&&"function"==typeof i.valueOf)return e.valueOf()===i.valueOf();if(e.toString!==Object.prototype.toString&&"function"==typeof e.toString&&"function"==typeof i.toString)return e.toString()===i.toString();if((a=(c=Object.keys(e)).length)!==Object.keys(i).length)return!1;for(p=a;0!=p--;)if(!Object.prototype.hasOwnProperty.call(i,c[p]))return!1;if(t&&e instanceof Element)return!1;for(p=a;0!=p--;)if(("_owner"!==c[p]&&"__v"!==c[p]&&"__o"!==c[p]||!e.$$typeof)&&!o(e[c[p]],i[c[p]]))return!1;return!0}return e!=e&&i!=i}e.exports=function(e,t){try{return o(e,t)}catch(n){if((n.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw n}}},70405:(e,t,n)=>{"use strict";n.d(t,{B6:()=>H,ql:()=>J});var r=n(67294),s=n(45697),o=n.n(s),i=n(69590),a=n.n(i),p=n(41143),c=n.n(p),m=n(96774),d=n.n(m);function u(){return u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u.apply(this,arguments)}function l(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,g(e,t)}function g(e,t){return g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},g(e,t)}function h(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)t.indexOf(n=o[r])>=0||(s[n]=e[n]);return s}var f={BASE:"base",BODY:"body",HEAD:"head",HTML:"html",LINK:"link",META:"meta",NOSCRIPT:"noscript",SCRIPT:"script",STYLE:"style",TITLE:"title",FRAGMENT:"Symbol(react.fragment)"},y={rel:["amphtml","canonical","alternate"]},b={type:["application/ld+json"]},x={charset:"",name:["robots","description"],property:["og:type","og:title","og:url","og:image","og:image:alt","og:description","twitter:url","twitter:title","twitter:description","twitter:image","twitter:image:alt","twitter:card","twitter:site"]},w=Object.keys(f).map((function(e){return f[e]})),v={accesskey:"accessKey",charset:"charSet",class:"className",contenteditable:"contentEditable",contextmenu:"contextMenu","http-equiv":"httpEquiv",itemprop:"itemProp",tabindex:"tabIndex"},k=Object.keys(v).reduce((function(e,t){return e[v[t]]=t,e}),{}),q=function(e,t){for(var n=e.length-1;n>=0;n-=1){var r=e[n];if(Object.prototype.hasOwnProperty.call(r,t))return r[t]}return null},$=function(e){var t=q(e,f.TITLE),n=q(e,"titleTemplate");if(Array.isArray(t)&&(t=t.join("")),n&&t)return n.replace(/%s/g,(function(){return t}));var r=q(e,"defaultTitle");return t||r||void 0},_=function(e){return q(e,"onChangeClientState")||function(){}},I=function(e,t){return t.filter((function(t){return void 0!==t[e]})).map((function(t){return t[e]})).reduce((function(e,t){return u({},e,t)}),{})},C=function(e,t){return t.filter((function(e){return void 0!==e[f.BASE]})).map((function(e){return e[f.BASE]})).reverse().reduce((function(t,n){if(!t.length)for(var r=Object.keys(n),s=0;s<r.length;s+=1){var o=r[s].toLowerCase();if(-1!==e.indexOf(o)&&n[o])return t.concat(n)}return t}),[])},R=function(e,t,n){var r={};return n.filter((function(t){return!!Array.isArray(t[e])||(void 0!==t[e]&&console&&"function"==typeof console.warn&&console.warn("Helmet: "+e+' should be of type "Array". Instead found type "'+typeof t[e]+'"'),!1)})).map((function(t){return t[e]})).reverse().reduce((function(e,n){var s={};n.filter((function(e){for(var n,o=Object.keys(e),i=0;i<o.length;i+=1){var a=o[i],p=a.toLowerCase();-1===t.indexOf(p)||"rel"===n&&"canonical"===e[n].toLowerCase()||"rel"===p&&"stylesheet"===e[p].toLowerCase()||(n=p),-1===t.indexOf(a)||"innerHTML"!==a&&"cssText"!==a&&"itemprop"!==a||(n=a)}if(!n||!e[n])return!1;var c=e[n].toLowerCase();return r[n]||(r[n]={}),s[n]||(s[n]={}),!r[n][c]&&(s[n][c]=!0,!0)})).reverse().forEach((function(t){return e.push(t)}));for(var o=Object.keys(s),i=0;i<o.length;i+=1){var a=o[i],p=u({},r[a],s[a]);r[a]=p}return e}),[]).reverse()},L=function(e,t){if(Array.isArray(e)&&e.length)for(var n=0;n<e.length;n+=1)if(e[n][t])return!0;return!1},T=function(e){return Array.isArray(e)?e.join(""):e},S=function(e,t){return Array.isArray(e)?e.reduce((function(e,n){return function(e,t){for(var n=Object.keys(e),r=0;r<n.length;r+=1)if(t[n[r]]&&t[n[r]].includes(e[n[r]]))return!0;return!1}(n,t)?e.priority.push(n):e.default.push(n),e}),{priority:[],default:[]}):{default:e}},P=function(e,t){var n;return u({},e,((n={})[t]=void 0,n))},A=[f.NOSCRIPT,f.SCRIPT,f.STYLE],O=function(e,t){return void 0===t&&(t=!0),!1===t?String(e):String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")},j=function(e){return Object.keys(e).reduce((function(t,n){var r=void 0!==e[n]?n+'="'+e[n]+'"':""+n;return t?t+" "+r:r}),"")},E=function(e,t){return void 0===t&&(t={}),Object.keys(e).reduce((function(t,n){return t[v[n]||n]=e[n],t}),t)},F=function(e,t){return t.map((function(t,n){var s,o=((s={key:n})["data-rh"]=!0,s);return Object.keys(t).forEach((function(e){var n=v[e]||e;"innerHTML"===n||"cssText"===n?o.dangerouslySetInnerHTML={__html:t.innerHTML||t.cssText}:o[n]=t[e]})),r.createElement(e,o)}))},D=function(e,t,n){switch(e){case f.TITLE:return{toComponent:function(){return n=t.titleAttributes,(s={key:e=t.title})["data-rh"]=!0,o=E(n,s),[r.createElement(f.TITLE,o,e)];var e,n,s,o},toString:function(){return function(e,t,n,r){var s=j(n),o=T(t);return s?"<"+e+' data-rh="true" '+s+">"+O(o,r)+"</"+e+">":"<"+e+' data-rh="true">'+O(o,r)+"</"+e+">"}(e,t.title,t.titleAttributes,n)}};case"bodyAttributes":case"htmlAttributes":return{toComponent:function(){return E(t)},toString:function(){return j(t)}};default:return{toComponent:function(){return F(e,t)},toString:function(){return function(e,t,n){return t.reduce((function(t,r){var s=Object.keys(r).filter((function(e){return!("innerHTML"===e||"cssText"===e)})).reduce((function(e,t){var s=void 0===r[t]?t:t+'="'+O(r[t],n)+'"';return e?e+" "+s:s}),""),o=r.innerHTML||r.cssText||"",i=-1===A.indexOf(e);return t+"<"+e+' data-rh="true" '+s+(i?"/>":">"+o+"</"+e+">")}),"")}(e,t,n)}}}},U=function(e){var t=e.baseTag,n=e.bodyAttributes,r=e.encode,s=e.htmlAttributes,o=e.noscriptTags,i=e.styleTags,a=e.title,p=void 0===a?"":a,c=e.titleAttributes,m=e.linkTags,d=e.metaTags,u=e.scriptTags,l={toComponent:function(){},toString:function(){return""}};if(e.prioritizeSeoTags){var g=function(e){var t=e.linkTags,n=e.scriptTags,r=e.encode,s=S(e.metaTags,x),o=S(t,y),i=S(n,b);return{priorityMethods:{toComponent:function(){return[].concat(F(f.META,s.priority),F(f.LINK,o.priority),F(f.SCRIPT,i.priority))},toString:function(){return D(f.META,s.priority,r)+" "+D(f.LINK,o.priority,r)+" "+D(f.SCRIPT,i.priority,r)}},metaTags:s.default,linkTags:o.default,scriptTags:i.default}}(e);l=g.priorityMethods,m=g.linkTags,d=g.metaTags,u=g.scriptTags}return{priority:l,base:D(f.BASE,t,r),bodyAttributes:D("bodyAttributes",n,r),htmlAttributes:D("htmlAttributes",s,r),link:D(f.LINK,m,r),meta:D(f.META,d,r),noscript:D(f.NOSCRIPT,o,r),script:D(f.SCRIPT,u,r),style:D(f.STYLE,i,r),title:D(f.TITLE,{title:p,titleAttributes:c},r)}},G=[],N=function(e,t){var n=this;void 0===t&&(t="undefined"!=typeof document),this.instances=[],this.value={setHelmet:function(e){n.context.helmet=e},helmetInstances:{get:function(){return n.canUseDOM?G:n.instances},add:function(e){(n.canUseDOM?G:n.instances).push(e)},remove:function(e){var t=(n.canUseDOM?G:n.instances).indexOf(e);(n.canUseDOM?G:n.instances).splice(t,1)}}},this.context=e,this.canUseDOM=t,t||(e.helmet=U({baseTag:[],bodyAttributes:{},encodeSpecialCharacters:!0,htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:"",titleAttributes:{}}))},z=r.createContext({}),B=o().shape({setHelmet:o().func,helmetInstances:o().shape({get:o().func,add:o().func,remove:o().func})}),M="undefined"!=typeof document,H=function(e){function t(n){var r;return(r=e.call(this,n)||this).helmetData=new N(r.props.context,t.canUseDOM),r}return l(t,e),t.prototype.render=function(){return r.createElement(z.Provider,{value:this.helmetData.value},this.props.children)},t}(r.Component);H.canUseDOM=M,H.propTypes={context:o().shape({helmet:o().shape()}),children:o().node.isRequired},H.defaultProps={context:{}},H.displayName="HelmetProvider";var W=function(e,t){var n,r=document.head||document.querySelector(f.HEAD),s=r.querySelectorAll(e+"[data-rh]"),o=[].slice.call(s),i=[];return t&&t.length&&t.forEach((function(t){var r=document.createElement(e);for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&("innerHTML"===s?r.innerHTML=t.innerHTML:"cssText"===s?r.styleSheet?r.styleSheet.cssText=t.cssText:r.appendChild(document.createTextNode(t.cssText)):r.setAttribute(s,void 0===t[s]?"":t[s]));r.setAttribute("data-rh","true"),o.some((function(e,t){return n=t,r.isEqualNode(e)}))?o.splice(n,1):i.push(r)})),o.forEach((function(e){return e.parentNode.removeChild(e)})),i.forEach((function(e){return r.appendChild(e)})),{oldTags:o,newTags:i}},K=function(e,t){var n=document.getElementsByTagName(e)[0];if(n){for(var r=n.getAttribute("data-rh"),s=r?r.split(","):[],o=[].concat(s),i=Object.keys(t),a=0;a<i.length;a+=1){var p=i[a],c=t[p]||"";n.getAttribute(p)!==c&&n.setAttribute(p,c),-1===s.indexOf(p)&&s.push(p);var m=o.indexOf(p);-1!==m&&o.splice(m,1)}for(var d=o.length-1;d>=0;d-=1)n.removeAttribute(o[d]);s.length===o.length?n.removeAttribute("data-rh"):n.getAttribute("data-rh")!==i.join(",")&&n.setAttribute("data-rh",i.join(","))}},V=function(e,t){var n=e.baseTag,r=e.htmlAttributes,s=e.linkTags,o=e.metaTags,i=e.noscriptTags,a=e.onChangeClientState,p=e.scriptTags,c=e.styleTags,m=e.title,d=e.titleAttributes;K(f.BODY,e.bodyAttributes),K(f.HTML,r),function(e,t){void 0!==e&&document.title!==e&&(document.title=T(e)),K(f.TITLE,t)}(m,d);var u={baseTag:W(f.BASE,n),linkTags:W(f.LINK,s),metaTags:W(f.META,o),noscriptTags:W(f.NOSCRIPT,i),scriptTags:W(f.SCRIPT,p),styleTags:W(f.STYLE,c)},l={},g={};Object.keys(u).forEach((function(e){var t=u[e],n=t.newTags,r=t.oldTags;n.length&&(l[e]=n),r.length&&(g[e]=u[e].oldTags)})),t&&t(),a(e,l,g)},Q=null,Z=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(t=e.call.apply(e,[this].concat(r))||this).rendered=!1,t}l(t,e);var n=t.prototype;return n.shouldComponentUpdate=function(e){return!d()(e,this.props)},n.componentDidUpdate=function(){this.emitChange()},n.componentWillUnmount=function(){this.props.context.helmetInstances.remove(this),this.emitChange()},n.emitChange=function(){var e,t,n=this.props.context,r=n.setHelmet,s=null,o=(e=n.helmetInstances.get().map((function(e){var t=u({},e.props);return delete t.context,t})),{baseTag:C(["href"],e),bodyAttributes:I("bodyAttributes",e),defer:q(e,"defer"),encode:q(e,"encodeSpecialCharacters"),htmlAttributes:I("htmlAttributes",e),linkTags:R(f.LINK,["rel","href"],e),metaTags:R(f.META,["name","charset","http-equiv","property","itemprop"],e),noscriptTags:R(f.NOSCRIPT,["innerHTML"],e),onChangeClientState:_(e),scriptTags:R(f.SCRIPT,["src","innerHTML"],e),styleTags:R(f.STYLE,["cssText"],e),title:$(e),titleAttributes:I("titleAttributes",e),prioritizeSeoTags:L(e,"prioritizeSeoTags")});H.canUseDOM?(t=o,Q&&cancelAnimationFrame(Q),t.defer?Q=requestAnimationFrame((function(){V(t,(function(){Q=null}))})):(V(t),Q=null)):U&&(s=U(o)),r(s)},n.init=function(){this.rendered||(this.rendered=!0,this.props.context.helmetInstances.add(this),this.emitChange())},n.render=function(){return this.init(),null},t}(r.Component);Z.propTypes={context:B.isRequired},Z.displayName="HelmetDispatcher";var X=["children"],Y=["children"],J=function(e){function t(){return e.apply(this,arguments)||this}l(t,e);var n=t.prototype;return n.shouldComponentUpdate=function(e){return!a()(P(this.props,"helmetData"),P(e,"helmetData"))},n.mapNestedChildrenToProps=function(e,t){if(!t)return null;switch(e.type){case f.SCRIPT:case f.NOSCRIPT:return{innerHTML:t};case f.STYLE:return{cssText:t};default:throw new Error("<"+e.type+" /> elements are self-closing and can not contain children. Refer to our API for more information.")}},n.flattenArrayTypeChildren=function(e){var t,n=e.child,r=e.arrayTypeChildren;return u({},r,((t={})[n.type]=[].concat(r[n.type]||[],[u({},e.newChildProps,this.mapNestedChildrenToProps(n,e.nestedChildren))]),t))},n.mapObjectTypeChildren=function(e){var t,n,r=e.child,s=e.newProps,o=e.newChildProps,i=e.nestedChildren;switch(r.type){case f.TITLE:return u({},s,((t={})[r.type]=i,t.titleAttributes=u({},o),t));case f.BODY:return u({},s,{bodyAttributes:u({},o)});case f.HTML:return u({},s,{htmlAttributes:u({},o)});default:return u({},s,((n={})[r.type]=u({},o),n))}},n.mapArrayTypeChildrenToProps=function(e,t){var n=u({},t);return Object.keys(e).forEach((function(t){var r;n=u({},n,((r={})[t]=e[t],r))})),n},n.warnOnInvalidChildren=function(e,t){return c()(w.some((function(t){return e.type===t})),"function"==typeof e.type?"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.":"Only elements types "+w.join(", ")+" are allowed. Helmet does not support rendering <"+e.type+"> elements. Refer to our API for more information."),c()(!t||"string"==typeof t||Array.isArray(t)&&!t.some((function(e){return"string"!=typeof e})),"Helmet expects a string as a child of <"+e.type+">. Did you forget to wrap your children in braces? ( <"+e.type+">{``}</"+e.type+"> ) Refer to our API for more information."),!0},n.mapChildrenToProps=function(e,t){var n=this,s={};return r.Children.forEach(e,(function(e){if(e&&e.props){var r=e.props,o=r.children,i=h(r,X),a=Object.keys(i).reduce((function(e,t){return e[k[t]||t]=i[t],e}),{}),p=e.type;switch("symbol"==typeof p?p=p.toString():n.warnOnInvalidChildren(e,o),p){case f.FRAGMENT:t=n.mapChildrenToProps(o,t);break;case f.LINK:case f.META:case f.NOSCRIPT:case f.SCRIPT:case f.STYLE:s=n.flattenArrayTypeChildren({child:e,arrayTypeChildren:s,newChildProps:a,nestedChildren:o});break;default:t=n.mapObjectTypeChildren({child:e,newProps:t,newChildProps:a,nestedChildren:o})}}})),this.mapArrayTypeChildrenToProps(s,t)},n.render=function(){var e=this.props,t=e.children,n=h(e,Y),s=u({},n),o=n.helmetData;return t&&(s=this.mapChildrenToProps(t,s)),!o||o instanceof N||(o=new N(o.context,o.instances)),o?r.createElement(Z,u({},s,{context:o.value,helmetData:void 0})):r.createElement(z.Consumer,null,(function(e){return r.createElement(Z,u({},s,{context:e}))}))},t}(r.Component);J.propTypes={base:o().object,bodyAttributes:o().object,children:o().oneOfType([o().arrayOf(o().node),o().node]),defaultTitle:o().string,defer:o().bool,encodeSpecialCharacters:o().bool,htmlAttributes:o().object,link:o().arrayOf(o().object),meta:o().arrayOf(o().object),noscript:o().arrayOf(o().object),onChangeClientState:o().func,script:o().arrayOf(o().object),style:o().arrayOf(o().object),title:o().string,titleAttributes:o().object,titleTemplate:o().string,prioritizeSeoTags:o().bool,helmetData:o().object},J.defaultProps={defer:!0,encodeSpecialCharacters:!0,prioritizeSeoTags:!1},J.displayName="Helmet"},68356:(e,t,n)=>{"use strict";function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function s(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}var a=n(67294),p=n(45697),c=[],m=[];function d(e){var t=e(),n={loading:!0,loaded:null,error:null};return n.promise=t.then((function(e){return n.loading=!1,n.loaded=e,e})).catch((function(e){throw n.loading=!1,n.error=e,e})),n}function u(e){var t={loading:!1,loaded:{},error:null},n=[];try{Object.keys(e).forEach((function(r){var s=d(e[r]);s.loading?t.loading=!0:(t.loaded[r]=s.loaded,t.error=s.error),n.push(s.promise),s.promise.then((function(e){t.loaded[r]=e})).catch((function(e){t.error=e}))}))}catch(r){t.error=r}return t.promise=Promise.all(n).then((function(e){return t.loading=!1,e})).catch((function(e){throw t.loading=!1,e})),t}function l(e,t){return a.createElement((n=e)&&n.__esModule?n.default:n,t);var n}function g(e,t){var d,u;if(!t.loading)throw new Error("react-loadable requires a `loading` component");var g=i({loader:null,loading:null,delay:200,timeout:null,render:l,webpack:null,modules:null},t),h=null;function f(){return h||(h=e(g.loader)),h.promise}return c.push(f),"function"==typeof g.webpack&&m.push((function(){if((0,g.webpack)().every((function(e){return void 0!==e&&void 0!==n.m[e]})))return f()})),u=d=function(t){function n(n){var r;return o(s(s(r=t.call(this,n)||this)),"retry",(function(){r.setState({error:null,loading:!0,timedOut:!1}),h=e(g.loader),r._loadModule()})),f(),r.state={error:h.error,pastDelay:!1,timedOut:!1,loading:h.loading,loaded:h.loaded},r}r(n,t),n.preload=function(){return f()};var i=n.prototype;return i.UNSAFE_componentWillMount=function(){this._loadModule()},i.componentDidMount=function(){this._mounted=!0},i._loadModule=function(){var e=this;if(this.context.loadable&&Array.isArray(g.modules)&&g.modules.forEach((function(t){e.context.loadable.report(t)})),h.loading){var t=function(t){e._mounted&&e.setState(t)};"number"==typeof g.delay&&(0===g.delay?this.setState({pastDelay:!0}):this._delay=setTimeout((function(){t({pastDelay:!0})}),g.delay)),"number"==typeof g.timeout&&(this._timeout=setTimeout((function(){t({timedOut:!0})}),g.timeout));var n=function(){t({error:h.error,loaded:h.loaded,loading:h.loading}),e._clearTimeouts()};h.promise.then((function(){return n(),null})).catch((function(e){return n(),null}))}},i.componentWillUnmount=function(){this._mounted=!1,this._clearTimeouts()},i._clearTimeouts=function(){clearTimeout(this._delay),clearTimeout(this._timeout)},i.render=function(){return this.state.loading||this.state.error?a.createElement(g.loading,{isLoading:this.state.loading,pastDelay:this.state.pastDelay,timedOut:this.state.timedOut,error:this.state.error,retry:this.retry}):this.state.loaded?g.render(this.state.loaded,this.props):null},n}(a.Component),o(d,"contextTypes",{loadable:p.shape({report:p.func.isRequired})}),u}function h(e){return g(d,e)}h.Map=function(e){if("function"!=typeof e.render)throw new Error("LoadableMap requires a `render(loaded, props)` function");return g(u,e)};var f=function(e){function t(){return e.apply(this,arguments)||this}r(t,e);var n=t.prototype;return n.getChildContext=function(){return{loadable:{report:this.props.report}}},n.render=function(){return a.Children.only(this.props.children)},t}(a.Component);function y(e){for(var t=[];e.length;){var n=e.pop();t.push(n())}return Promise.all(t).then((function(){if(e.length)return y(e)}))}o(f,"propTypes",{report:p.func.isRequired}),o(f,"childContextTypes",{loadable:p.shape({report:p.func.isRequired}).isRequired}),h.Capture=f,h.preloadAll=function(){return new Promise((function(e,t){y(c).then(e,t)}))},h.preloadReady=function(){return new Promise((function(e,t){y(m).then(e,e)}))},e.exports=h},18790:(e,t,n)=>{"use strict";n.d(t,{H:()=>a,f:()=>i});var r=n(16550),s=n(87462),o=n(67294);function i(e,t,n){return void 0===n&&(n=[]),e.some((function(e){var s=e.path?(0,r.LX)(t,e):n.length?n[n.length-1].match:r.F0.computeRootMatch(t);return s&&(n.push({route:e,match:s}),e.routes&&i(e.routes,t,n)),s})),n}function a(e,t,n){return void 0===t&&(t={}),void 0===n&&(n={}),e?o.createElement(r.rs,n,e.map((function(e,n){return o.createElement(r.AW,{key:e.key||n,path:e.path,exact:e.exact,strict:e.strict,render:function(n){return e.render?e.render((0,s.Z)({},n,{},t,{route:e})):o.createElement(e.component,(0,s.Z)({},n,t,{route:e}))}})}))):null}},73727:(e,t,n)=>{"use strict";n.d(t,{OL:()=>x,VK:()=>m,rU:()=>f});var r=n(16550),s=n(94578),o=n(67294),i=n(99318),a=n(87462),p=n(63366),c=n(38776),m=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(t=e.call.apply(e,[this].concat(r))||this).history=(0,i.lX)(t.props),t}return(0,s.Z)(t,e),t.prototype.render=function(){return o.createElement(r.F0,{history:this.history,children:this.props.children})},t}(o.Component);o.Component;var d=function(e,t){return"function"==typeof e?e(t):e},u=function(e,t){return"string"==typeof e?(0,i.ob)(e,null,null,t):e},l=function(e){return e},g=o.forwardRef;void 0===g&&(g=l);var h=g((function(e,t){var n=e.innerRef,r=e.navigate,s=e.onClick,i=(0,p.Z)(e,["innerRef","navigate","onClick"]),c=i.target,m=(0,a.Z)({},i,{onClick:function(e){try{s&&s(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||c&&"_self"!==c||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return m.ref=l!==g&&t||n,o.createElement("a",m)}));var f=g((function(e,t){var n=e.component,s=void 0===n?h:n,m=e.replace,f=e.to,y=e.innerRef,b=(0,p.Z)(e,["component","replace","to","innerRef"]);return o.createElement(r.s6.Consumer,null,(function(e){e||(0,c.Z)(!1);var n=e.history,r=u(d(f,e.location),e.location),p=r?n.createHref(r):"",h=(0,a.Z)({},b,{href:p,navigate:function(){var t=d(f,e.location),r=(0,i.Ep)(e.location)===(0,i.Ep)(u(t));(m||r?n.replace:n.push)(t)}});return l!==g?h.ref=t||y:h.innerRef=y,o.createElement(s,h)}))})),y=function(e){return e},b=o.forwardRef;void 0===b&&(b=y);var x=b((function(e,t){var n=e["aria-current"],s=void 0===n?"page":n,i=e.activeClassName,m=void 0===i?"active":i,l=e.activeStyle,g=e.className,h=e.exact,x=e.isActive,w=e.location,v=e.sensitive,k=e.strict,q=e.style,$=e.to,_=e.innerRef,I=(0,p.Z)(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o.createElement(r.s6.Consumer,null,(function(e){e||(0,c.Z)(!1);var n=w||e.location,i=u(d($,n),n),p=i.pathname,C=p&&p.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),R=C?(0,r.LX)(n.pathname,{path:C,exact:h,sensitive:v,strict:k}):null,L=!!(x?x(R,n):R),T="function"==typeof g?g(L):g,S="function"==typeof q?q(L):q;L&&(T=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(T,m),S=(0,a.Z)({},S,l));var P=(0,a.Z)({"aria-current":L&&s||null,className:T,style:S,to:i},I);return y!==b?P.ref=t||_:P.innerRef=_,o.createElement(f,P)}))}))},16550:(e,t,n)=>{"use strict";n.d(t,{AW:()=>$,F0:()=>x,LX:()=>q,TH:()=>A,k6:()=>P,rs:()=>T,s6:()=>b});var r=n(94578),s=n(67294),o=n(45697),i=n.n(o),a=n(99318),p=n(38776),c=n(87462),m=n(14779),d=n.n(m),u=(n(50663),n(63366)),l=(n(8679),1073741823),g="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};var h=s.createContext||function(e,t){var n,o,a="__create-react-context-"+function(){var e="__global_unique_id__";return g[e]=(g[e]||0)+1}()+"__",p=function(e){function n(){for(var t,n,r,s=arguments.length,o=new Array(s),i=0;i<s;i++)o[i]=arguments[i];return(t=e.call.apply(e,[this].concat(o))||this).emitter=(n=t.props.value,r=[],{on:function(e){r.push(e)},off:function(e){r=r.filter((function(t){return t!==e}))},get:function(){return n},set:function(e,t){n=e,r.forEach((function(e){return e(n,t)}))}}),t}(0,r.Z)(n,e);var s=n.prototype;return s.getChildContext=function(){var e;return(e={})[a]=this.emitter,e},s.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,s=e.value;((o=r)===(i=s)?0!==o||1/o==1/i:o!=o&&i!=i)?n=0:(n="function"==typeof t?t(r,s):l,0!==(n|=0)&&this.emitter.set(e.value,n))}var o,i},s.render=function(){return this.props.children},n}(s.Component);p.childContextTypes=((n={})[a]=i().object.isRequired,n);var c=function(t){function n(){for(var e,n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(e=t.call.apply(t,[this].concat(r))||this).observedBits=void 0,e.state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}(0,r.Z)(n,t);var s=n.prototype;return s.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?l:t},s.componentDidMount=function(){this.context[a]&&this.context[a].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?l:e},s.componentWillUnmount=function(){this.context[a]&&this.context[a].off(this.onUpdate)},s.getValue=function(){return this.context[a]?this.context[a].get():e},s.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(s.Component);return c.contextTypes=((o={})[a]=i().object,o),{Provider:p,Consumer:c}},f=function(e){var t=h();return t.displayName=e,t},y=f("Router-History"),b=f("Router"),x=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._pendingLocation=e}))),n}(0,r.Z)(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){var e=this;this._isMounted=!0,this.unlisten&&this.unlisten(),this.props.staticContext||(this.unlisten=this.props.history.listen((function(t){e._isMounted&&e.setState({location:t})}))),this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&(this.unlisten(),this._isMounted=!1,this._pendingLocation=null)},n.render=function(){return s.createElement(b.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},s.createElement(y.Provider,{children:this.props.children||null,value:this.props.history}))},t}(s.Component);s.Component;s.Component;var w={},v=1e4,k=0;function q(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,s=n.exact,o=void 0!==s&&s,i=n.strict,a=void 0!==i&&i,p=n.sensitive,c=void 0!==p&&p;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=w[n]||(w[n]={});if(r[e])return r[e];var s=[],o={regexp:d()(e,s,t),keys:s};return k<v&&(r[e]=o,k++),o}(n,{end:o,strict:a,sensitive:c}),s=r.regexp,i=r.keys,p=s.exec(e);if(!p)return null;var m=p[0],u=p.slice(1),l=e===m;return o&&!l?null:{path:n,url:"/"===n&&""===m?"/":m,isExact:l,params:i.reduce((function(e,t,n){return e[t.name]=u[n],e}),{})}}),null)}var $=function(e){function t(){return e.apply(this,arguments)||this}return(0,r.Z)(t,e),t.prototype.render=function(){var e=this;return s.createElement(b.Consumer,null,(function(t){t||(0,p.Z)(!1);var n=e.props.location||t.location,r=e.props.computedMatch?e.props.computedMatch:e.props.path?q(n.pathname,e.props):t.match,o=(0,c.Z)({},t,{location:n,match:r}),i=e.props,a=i.children,m=i.component,d=i.render;return Array.isArray(a)&&function(e){return 0===s.Children.count(e)}(a)&&(a=null),s.createElement(b.Provider,{value:o},o.match?a?"function"==typeof a?a(o):a:m?s.createElement(m,o):d?d(o):null:"function"==typeof a?a(o):null)}))},t}(s.Component);function _(e){return"/"===e.charAt(0)?e:"/"+e}function I(e,t){if(!e)return t;var n=_(e);return 0!==t.pathname.indexOf(n)?t:(0,c.Z)({},t,{pathname:t.pathname.substr(n.length)})}function C(e){return"string"==typeof e?e:(0,a.Ep)(e)}function R(e){return function(){(0,p.Z)(!1)}}function L(){}s.Component;var T=function(e){function t(){return e.apply(this,arguments)||this}return(0,r.Z)(t,e),t.prototype.render=function(){var e=this;return s.createElement(b.Consumer,null,(function(t){t||(0,p.Z)(!1);var n,r,o=e.props.location||t.location;return s.Children.forEach(e.props.children,(function(e){if(null==r&&s.isValidElement(e)){n=e;var i=e.props.path||e.props.from;r=i?q(o.pathname,(0,c.Z)({},e.props,{path:i})):t.match}})),r?s.cloneElement(n,{location:o,computedMatch:r}):null}))},t}(s.Component);var S=s.useContext;function P(){return S(y)}function A(){return S(b).location}},30086:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,s=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,a=n?Symbol.for("react.profiler"):60114,p=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,m=n?Symbol.for("react.async_mode"):60111,d=n?Symbol.for("react.concurrent_mode"):60111,u=n?Symbol.for("react.forward_ref"):60112,l=n?Symbol.for("react.suspense"):60113,g=n?Symbol.for("react.suspense_list"):60120,h=n?Symbol.for("react.memo"):60115,f=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,b=n?Symbol.for("react.fundamental"):60117,x=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function v(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case m:case d:case o:case a:case i:case l:return e;default:switch(e=e&&e.$$typeof){case c:case u:case f:case h:case p:return e;default:return t}}case s:return t}}}function k(e){return v(e)===d}},50663:(e,t,n)=>{"use strict";n(30086)},75251:(e,t,n)=>{"use strict";var r=n(67294),s=Symbol.for("react.element"),o=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,n){var r,o={},c=null,m=null;for(r in void 0!==n&&(c=""+n),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(m=t.ref),t)i.call(t,r)&&!p.hasOwnProperty(r)&&(o[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===o[r]&&(o[r]=t[r]);return{$$typeof:s,type:e,key:c,ref:m,props:o,_owner:a.current}}t.Fragment=o,t.jsx=c,t.jsxs=c},72408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),a=Symbol.for("react.provider"),p=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),m=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),u=Symbol.for("react.lazy"),l=Symbol.iterator;var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,f={};function y(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||g}function b(){}function x(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||g}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var w=x.prototype=new b;w.constructor=x,h(w,y.prototype),w.isPureReactComponent=!0;var v=Array.isArray,k=Object.prototype.hasOwnProperty,q={current:null},$={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,r){var s,o={},i=null,a=null;if(null!=t)for(s in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,s)&&!$.hasOwnProperty(s)&&(o[s]=t[s]);var p=arguments.length-2;if(1===p)o.children=r;else if(1<p){for(var c=Array(p),m=0;m<p;m++)c[m]=arguments[m+2];o.children=c}if(e&&e.defaultProps)for(s in p=e.defaultProps)void 0===o[s]&&(o[s]=p[s]);return{$$typeof:n,type:e,key:i,ref:a,props:o,_owner:q.current}}function I(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function R(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function L(e,t,s,o,i){var a=typeof e;"undefined"!==a&&"boolean"!==a||(e=null);var p=!1;if(null===e)p=!0;else switch(a){case"string":case"number":p=!0;break;case"object":switch(e.$$typeof){case n:case r:p=!0}}if(p)return i=i(p=e),e=""===o?"."+R(p,0):o,v(i)?(s="",null!=e&&(s=e.replace(C,"$&/")+"/"),L(i,t,s,"",(function(e){return e}))):null!=i&&(I(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,s+(!i.key||p&&p.key===i.key?"":(""+i.key).replace(C,"$&/")+"/")+e)),t.push(i)),1;if(p=0,o=""===o?".":o+":",v(e))for(var c=0;c<e.length;c++){var m=o+R(a=e[c],c);p+=L(a,t,s,m,i)}else if(m=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=l&&e[l]||e["@@iterator"])?e:null}(e),"function"==typeof m)for(e=m.call(e),c=0;!(a=e.next()).done;)p+=L(a=a.value,t,s,m=o+R(a,c++),i);else if("object"===a)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return p}function T(e,t,n){if(null==e)return e;var r=[],s=0;return L(e,r,"","",(function(e){return t.call(n,e,s++)})),r}function S(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var P={current:null},A={transition:null},O={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:A,ReactCurrentOwner:q};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!I(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=s,t.Profiler=i,t.PureComponent=x,t.StrictMode=o,t.Suspense=m,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var s=h({},e.props),o=e.key,i=e.ref,a=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,a=q.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var p=e.type.defaultProps;for(c in t)k.call(t,c)&&!$.hasOwnProperty(c)&&(s[c]=void 0===t[c]&&void 0!==p?p[c]:t[c])}var c=arguments.length-2;if(1===c)s.children=r;else if(1<c){p=Array(c);for(var m=0;m<c;m++)p[m]=arguments[m+2];s.children=p}return{$$typeof:n,type:e.type,key:o,ref:i,props:s,_owner:a}},t.createContext=function(e){return(e={$$typeof:p,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:a,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=I,t.lazy=function(e){return{$$typeof:u,_payload:{_status:-1,_result:e},_init:S}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=A.transition;A.transition={};try{e()}finally{A.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return P.current.useCallback(e,t)},t.useContext=function(e){return P.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return P.current.useDeferredValue(e)},t.useEffect=function(e,t){return P.current.useEffect(e,t)},t.useId=function(){return P.current.useId()},t.useImperativeHandle=function(e,t,n){return P.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return P.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return P.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return P.current.useMemo(e,t)},t.useReducer=function(e,t,n){return P.current.useReducer(e,t,n)},t.useRef=function(e){return P.current.useRef(e)},t.useState=function(e){return P.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return P.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return P.current.useTransition()},t.version="18.2.0"},67294:(e,t,n)=>{"use strict";e.exports=n(72408)},85893:(e,t,n)=>{"use strict";e.exports=n(75251)},60053:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,s=e[r];if(!(0<o(s,t)))break e;e[r]=t,e[n]=s,n=r}}function r(e){return 0===e.length?null:e[0]}function s(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,s=e.length,i=s>>>1;r<i;){var a=2*(r+1)-1,p=e[a],c=a+1,m=e[c];if(0>o(p,n))c<s&&0>o(m,p)?(e[r]=m,e[c]=n,r=c):(e[r]=p,e[a]=n,r=a);else{if(!(c<s&&0>o(m,n)))break e;e[r]=m,e[c]=n,r=c}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var a=Date,p=a.now();t.unstable_now=function(){return a.now()-p}}var c=[],m=[],d=1,u=null,l=3,g=!1,h=!1,f=!1,y="function"==typeof setTimeout?setTimeout:null,b="function"==typeof clearTimeout?clearTimeout:null,x="undefined"!=typeof setImmediate?setImmediate:null;function w(e){for(var t=r(m);null!==t;){if(null===t.callback)s(m);else{if(!(t.startTime<=e))break;s(m),t.sortIndex=t.expirationTime,n(c,t)}t=r(m)}}function v(e){if(f=!1,w(e),!h)if(null!==r(c))h=!0,A(k);else{var t=r(m);null!==t&&O(v,t.startTime-e)}}function k(e,n){h=!1,f&&(f=!1,b(I),I=-1),g=!0;var o=l;try{for(w(n),u=r(c);null!==u&&(!(u.expirationTime>n)||e&&!L());){var i=u.callback;if("function"==typeof i){u.callback=null,l=u.priorityLevel;var a=i(u.expirationTime<=n);n=t.unstable_now(),"function"==typeof a?u.callback=a:u===r(c)&&s(c),w(n)}else s(c);u=r(c)}if(null!==u)var p=!0;else{var d=r(m);null!==d&&O(v,d.startTime-n),p=!1}return p}finally{u=null,l=o,g=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var q,$=!1,_=null,I=-1,C=5,R=-1;function L(){return!(t.unstable_now()-R<C)}function T(){if(null!==_){var e=t.unstable_now();R=e;var n=!0;try{n=_(!0,e)}finally{n?q():($=!1,_=null)}}else $=!1}if("function"==typeof x)q=function(){x(T)};else if("undefined"!=typeof MessageChannel){var S=new MessageChannel,P=S.port2;S.port1.onmessage=T,q=function(){P.postMessage(null)}}else q=function(){y(T,0)};function A(e){_=e,$||($=!0,q())}function O(e,n){I=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){h||g||(h=!0,A(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return l},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function(e){switch(l){case 1:case 2:case 3:var t=3;break;default:t=l}var n=l;l=t;try{return e()}finally{l=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=l;l=e;try{return t()}finally{l=n}},t.unstable_scheduleCallback=function(e,s,o){var i=t.unstable_now();switch("object"==typeof o&&null!==o?o="number"==typeof(o=o.delay)&&0<o?i+o:i:o=i,e){case 1:var a=-1;break;case 2:a=250;break;case 5:a=1073741823;break;case 4:a=1e4;break;default:a=5e3}return e={id:d++,callback:s,priorityLevel:e,startTime:o,expirationTime:a=o+a,sortIndex:-1},o>i?(e.sortIndex=o,n(m,e),null===r(c)&&e===r(m)&&(f?(b(I),I=-1):f=!0,O(v,o-i))):(e.sortIndex=a,n(c,e),h||g||(h=!0,A(k))),e},t.unstable_shouldYield=L,t.unstable_wrapCallback=function(e){var t=l;return function(){var n=l;l=t;try{return e.apply(this,arguments)}finally{l=n}}}},63840:(e,t,n)=>{"use strict";e.exports=n(60053)},96774:e=>{e.exports=function(e,t,n,r){var s=n?n.call(r,e,t):void 0;if(void 0!==s)return!!s;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var o=Object.keys(e),i=Object.keys(t);if(o.length!==i.length)return!1;for(var a=Object.prototype.hasOwnProperty.bind(t),p=0;p<o.length;p++){var c=o[p];if(!a(c))return!1;var m=e[c],d=t[c];if(!1===(s=n?n.call(r,m,d,c):void 0)||void 0===s&&m!==d)return!1}return!0}},36809:(e,t,n)=>{"use strict";n.d(t,{default:()=>r});const r={title:"Gitea Documentation",tagline:"Git with a cup of tea",url:"https://docs.gitea.com",baseUrl:"/",onBrokenLinks:"warn",onBrokenMarkdownLinks:"warn",favicon:"img/favicon.png",plugins:[["docusaurus-plugin-plausible",{domain:"docs.gitea.com"}]],i18n:{defaultLocale:"en-us",locales:["en-us","zh-cn"],localeConfigs:{"en-us":{label:"English",direction:"ltr"},"zh-cn":{label:"\u4e2d\u6587",direction:"ltr"}},path:"i18n"},presets:[["@docusaurus/preset-classic",{docs:{sidebarPath:"/workspace/gitea/gitea-docusaurus/sidebars.js",routeBasePath:"/",versions:{current:{label:"1.22-dev",banner:"unreleased"},1.21:{label:"1.21.7"},"1.20":{label:"1.20.6"},1.19:{label:"1.19.4"}},lastVersion:"1.21"},blog:!1,theme:{customCss:"/workspace/gitea/gitea-docusaurus/src/css/custom.css"},pages:{exclude:["api/**"]},gtag:{trackingID:"G-KHM0KYT506"}}],["redocusaurus",{specs:[{spec:"static/swagger-latest.json",route:"/api/next/"},{route:"/api/1.21/",spec:"static/swagger-21.json"},{route:"/api/1.20/",spec:"static/swagger-20.json"},{route:"/api/1.19/",spec:"static/swagger-19.json"}],theme:{primaryColor:"#1890ff"}}]],themes:[["@easyops-cn/docusaurus-search-local",{hashed:!1,language:["en","zh"],highlightSearchTermsOnTargetPage:!0,explicitSearchResultPath:!0,indexBlog:!1,docsRouteBasePath:"/"}]],themeConfig:{colorMode:{defaultMode:"light",disableSwitch:!1,respectPrefersColorScheme:!0},announcementBar:{id:"announcementBar-4",content:'<a href="https://about.gitea.com/products/cloud">Try &nbsp; Gitea Cloud &nbsp;  \u2601\ufe0f  &nbsp; for 30 days <span aria-hidden="true">&rarr;</span> Accelerate your Development & Deploys!</a>',isCloseable:!0},navbar:{title:"Gitea",logo:{alt:"Gitea Logo",src:"img/gitea.svg",href:"https://about.gitea.com/",target:"_self"},items:[{type:"doc",docId:"intro",position:"left",label:"Docs"},{to:"/api/1.20/",label:"API",position:"left",activeBaseRegex:"api/(1.19|1.20|1.21|next)/"},{position:"left",label:"Blog",href:"https://blog.gitea.com",className:"internal-href",target:"_self"},{type:"custom-apiDropdown",label:"API Version",position:"right",items:[{to:"/api/next/",label:"1.22-dev"},{to:"/api/1.21/",label:"1.21.2"},{to:"/api/1.20/",label:"1.20.6"},{to:"/api/1.19/",label:"1.19.4"}]},{href:"https://github.com/go-gitea/gitea",label:"Code",position:"left"},{position:"left",label:"Enterprise",href:"https://docs.gitea.com/enterprise",className:"internal-href",target:"_self"},{type:"search",position:"right"},{type:"localeDropdown",position:"right",dropdownItemsBefore:[],dropdownItemsAfter:[]},{type:"docsVersionDropdown",position:"right",dropdownActiveClassDisabled:!0,dropdownItemsBefore:[],dropdownItemsAfter:[]},{to:"help/support",position:"right",label:"Support",activeBaseRegex:"help/support"},{href:"https://gitea.com/user/login",label:"Sign In",position:"right",className:"internal-href signin-button",target:"_self"}],hideOnScroll:!1},footer:{style:"dark",links:[{title:"Community",items:[{label:"Awesome Gitea",to:"/awesome"},{label:"Stack Overflow",href:"https://stackoverflow.com/questions/tagged/gitea"},{label:"Discord",href:"https://discord.gg/gitea"},{label:"Matrix",href:"https://matrix.to/#/#gitea-space:matrix.org"},{label:"Forum",href:"https://forum.gitea.com/"},{label:"Twitter",href:"https://twitter.com/giteaio"},{label:"Mastodon",href:"https://social.gitea.io/@gitea"}]},{title:"Code",items:[{label:"GitHub",href:"https://github.com/go-gitea/gitea"},{label:"Gitea",href:"https://gitea.com/gitea"},{label:"Tea CLI",href:"https://gitea.com/gitea/tea"}]}]},prism:{theme:{plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]},darkTheme:{plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]},additionalLanguages:[],magicComments:[{className:"theme-code-block-highlighted-line",line:"highlight-next-line",block:{start:"highlight-start",end:"highlight-end"}}]},docs:{versionPersistence:"localStorage",sidebar:{hideable:!1,autoCollapseCategories:!1}},metadata:[],tableOfContents:{minHeadingLevel:2,maxHeadingLevel:3}},baseUrlIssueBanner:!0,onBrokenAnchors:"warn",onDuplicateRoutes:"warn",staticDirectories:["static"],customFields:{},scripts:[],headTags:[],stylesheets:[],clientModules:[],titleDelimiter:"|",noIndex:!1,markdown:{format:"mdx",mermaid:!1,mdx1Compat:{comments:!0,admonitions:!0,headingIds:!0}}}},87462:(e,t,n)=>{"use strict";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},r.apply(this,arguments)}n.d(t,{Z:()=>r})},94578:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(89611);function s(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,(0,r.Z)(e,t)}},63366:(e,t,n)=>{"use strict";function r(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}n.d(t,{Z:()=>r})},89611:(e,t,n)=>{"use strict";function r(e,t){return r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},r(e,t)}n.d(t,{Z:()=>r})},90512:(e,t,n)=>{"use strict";function r(e){var t,n,s="";if("string"==typeof e||"number"==typeof e)s+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(n=r(e[t]))&&(s&&(s+=" "),s+=n)}else for(n in e)e[n]&&(s&&(s+=" "),s+=n);return s}n.d(t,{Z:()=>s});const s=function(){for(var e,t,n=0,s="",o=arguments.length;n<o;n++)(e=arguments[n])&&(t=r(e))&&(s&&(s+=" "),s+=t);return s}},42573:(e,t,n)=>{"use strict";n.d(t,{p1:()=>C,y$:()=>ee});var r,s,o,i,a,p,c,m=n(67294),d=n(90512),u=Object.create,l=Object.defineProperty,g=Object.defineProperties,h=Object.getOwnPropertyDescriptor,f=Object.getOwnPropertyDescriptors,y=Object.getOwnPropertyNames,b=Object.getOwnPropertySymbols,x=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty,v=Object.prototype.propertyIsEnumerable,k=(e,t,n)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,q=(e,t)=>{for(var n in t||(t={}))w.call(t,n)&&k(e,n,t[n]);if(b)for(var n of b(t))v.call(t,n)&&k(e,n,t[n]);return e},$=(e,t)=>g(e,f(t)),_=(e,t)=>{var n={};for(var r in e)w.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&b)for(var r of b(e))t.indexOf(r)<0&&v.call(e,r)&&(n[r]=e[r]);return n},I=(r={"../../node_modules/.pnpm/prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu/node_modules/prismjs/prism.js"(e,t){var n=function(){var e=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,t=0,n={},r={util:{encode:function e(t){return t instanceof s?new s(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function e(t,n){var s,o;switch(n=n||{},r.util.type(t)){case"Object":if(o=r.util.objId(t),n[o])return n[o];for(var i in s={},n[o]=s,t)t.hasOwnProperty(i)&&(s[i]=e(t[i],n));return s;case"Array":return o=r.util.objId(t),n[o]?n[o]:(s=[],n[o]=s,t.forEach((function(t,r){s[r]=e(t,n)})),s);default:return t}},getLanguage:function(t){for(;t;){var n=e.exec(t.className);if(n)return n[1].toLowerCase();t=t.parentElement}return"none"},setLanguage:function(t,n){t.className=t.className.replace(RegExp(e,"gi"),""),t.classList.add("language-"+n)},isActive:function(e,t,n){for(var r="no-"+t;e;){var s=e.classList;if(s.contains(t))return!0;if(s.contains(r))return!1;e=e.parentElement}return!!n}},languages:{plain:n,plaintext:n,text:n,txt:n,extend:function(e,t){var n=r.util.clone(r.languages[e]);for(var s in t)n[s]=t[s];return n},insertBefore:function(e,t,n,s){var o=(s=s||r.languages)[e],i={};for(var a in o)if(o.hasOwnProperty(a)){if(a==t)for(var p in n)n.hasOwnProperty(p)&&(i[p]=n[p]);n.hasOwnProperty(a)||(i[a]=o[a])}var c=s[e];return s[e]=i,r.languages.DFS(r.languages,(function(t,n){n===c&&t!=e&&(this[t]=i)})),i},DFS:function e(t,n,s,o){o=o||{};var i=r.util.objId;for(var a in t)if(t.hasOwnProperty(a)){n.call(t,a,t[a],s||a);var p=t[a],c=r.util.type(p);"Object"!==c||o[i(p)]?"Array"!==c||o[i(p)]||(o[i(p)]=!0,e(p,n,a,o)):(o[i(p)]=!0,e(p,n,null,o))}}},plugins:{},highlight:function(e,t,n){var o={code:e,grammar:t,language:n};if(r.hooks.run("before-tokenize",o),!o.grammar)throw new Error('The language "'+o.language+'" has no grammar.');return o.tokens=r.tokenize(o.code,o.grammar),r.hooks.run("after-tokenize",o),s.stringify(r.util.encode(o.tokens),o.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var r in n)t[r]=n[r];delete t.rest}var s=new a;return p(s,s.head,e),i(e,s,t,s.head,0),function(e){for(var t=[],n=e.head.next;n!==e.tail;)t.push(n.value),n=n.next;return t}(s)},hooks:{all:{},add:function(e,t){var n=r.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=r.hooks.all[e];if(n&&n.length)for(var s,o=0;s=n[o++];)s(t)}},Token:s};function s(e,t,n,r){this.type=e,this.content=t,this.alias=n,this.length=0|(r||"").length}function o(e,t,n,r){e.lastIndex=t;var s=e.exec(n);if(s&&r&&s[1]){var o=s[1].length;s.index+=o,s[0]=s[0].slice(o)}return s}function i(e,t,n,a,m,d){for(var u in n)if(n.hasOwnProperty(u)&&n[u]){var l=n[u];l=Array.isArray(l)?l:[l];for(var g=0;g<l.length;++g){if(d&&d.cause==u+","+g)return;var h=l[g],f=h.inside,y=!!h.lookbehind,b=!!h.greedy,x=h.alias;if(b&&!h.pattern.global){var w=h.pattern.toString().match(/[imsuy]*$/)[0];h.pattern=RegExp(h.pattern.source,w+"g")}for(var v=h.pattern||h,k=a.next,q=m;k!==t.tail&&!(d&&q>=d.reach);q+=k.value.length,k=k.next){var $=k.value;if(t.length>e.length)return;if(!($ instanceof s)){var _,I=1;if(b){if(!(_=o(v,q,e,y))||_.index>=e.length)break;var C=_.index,R=_.index+_[0].length,L=q;for(L+=k.value.length;C>=L;)L+=(k=k.next).value.length;if(q=L-=k.value.length,k.value instanceof s)continue;for(var T=k;T!==t.tail&&(L<R||"string"==typeof T.value);T=T.next)I++,L+=T.value.length;I--,$=e.slice(q,L),_.index-=q}else if(!(_=o(v,0,$,y)))continue;C=_.index;var S=_[0],P=$.slice(0,C),A=$.slice(C+S.length),O=q+$.length;d&&O>d.reach&&(d.reach=O);var j=k.prev;if(P&&(j=p(t,j,P),q+=P.length),c(t,j,I),k=p(t,j,new s(u,f?r.tokenize(S,f):S,x,S)),A&&p(t,k,A),I>1){var E={cause:u+","+g,reach:O};i(e,t,n,k.prev,q,E),d&&E.reach>d.reach&&(d.reach=E.reach)}}}}}}function a(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function p(e,t,n){var r=t.next,s={value:n,prev:t,next:r};return t.next=s,r.prev=s,e.length++,s}function c(e,t,n){for(var r=t.next,s=0;s<n&&r!==e.tail;s++)r=r.next;t.next=r,r.prev=t,e.length-=s}return s.stringify=function e(t,n){if("string"==typeof t)return t;if(Array.isArray(t)){var s="";return t.forEach((function(t){s+=e(t,n)})),s}var o={type:t.type,content:e(t.content,n),tag:"span",classes:["token",t.type],attributes:{},language:n},i=t.alias;i&&(Array.isArray(i)?Array.prototype.push.apply(o.classes,i):o.classes.push(i)),r.hooks.run("wrap",o);var a="";for(var p in o.attributes)a+=" "+p+'="'+(o.attributes[p]||"").replace(/"/g,"&quot;")+'"';return"<"+o.tag+' class="'+o.classes.join(" ")+'"'+a+">"+o.content+"</"+o.tag+">"},r}();t.exports=n,n.default=n}},function(){return s||(0,r[y(r)[0]])((s={exports:{}}).exports,s),s.exports}),C=((e,t,n)=>(n=null!=e?u(x(e)):{},((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of y(t))w.call(e,s)||s===n||l(e,s,{get:()=>t[s],enumerable:!(r=h(t,s))||r.enumerable});return e})(!t&&e&&e.__esModule?n:l(n,"default",{value:e,enumerable:!0}),e)))(I());C.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},C.languages.markup.tag.inside["attr-value"].inside.entity=C.languages.markup.entity,C.languages.markup.doctype.inside["internal-subset"].inside=C.languages.markup,C.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(C.languages.markup.tag,"addInlined",{value:function(e,t){var n;(t=((n=((n={})["language-"+t]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:C.languages[t]},n.cdata=/^<!\[CDATA\[|\]\]>$/i,{"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:n}}))["language-"+t]={pattern:/[\s\S]+/,inside:C.languages[t]},{}))[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:n},C.languages.insertBefore("markup","cdata",t)}}),Object.defineProperty(C.languages.markup.tag,"addAttribute",{value:function(e,t){C.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[t,"language-"+t],inside:C.languages[t]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),C.languages.html=C.languages.markup,C.languages.mathml=C.languages.markup,C.languages.svg=C.languages.markup,C.languages.xml=C.languages.extend("markup",{}),C.languages.ssml=C.languages.xml,C.languages.atom=C.languages.xml,C.languages.rss=C.languages.xml,o=C,i={pattern:/\\[\\(){}[\]^$+*?|.]/,alias:"escape"},p="(?:[^\\\\-]|"+(a=/\\(?:x[\da-fA-F]{2}|u[\da-fA-F]{4}|u\{[\da-fA-F]+\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/).source+")",p=RegExp(p+"-"+p),c={pattern:/(<|')[^<>']+(?=[>']$)/,lookbehind:!0,alias:"variable"},o.languages.regex={"char-class":{pattern:/((?:^|[^\\])(?:\\\\)*)\[(?:[^\\\]]|\\[\s\S])*\]/,lookbehind:!0,inside:{"char-class-negation":{pattern:/(^\[)\^/,lookbehind:!0,alias:"operator"},"char-class-punctuation":{pattern:/^\[|\]$/,alias:"punctuation"},range:{pattern:p,inside:{escape:a,"range-punctuation":{pattern:/-/,alias:"operator"}}},"special-escape":i,"char-set":{pattern:/\\[wsd]|\\p\{[^{}]+\}/i,alias:"class-name"},escape:a}},"special-escape":i,"char-set":{pattern:/\.|\\[wsd]|\\p\{[^{}]+\}/i,alias:"class-name"},backreference:[{pattern:/\\(?![123][0-7]{2})[1-9]/,alias:"keyword"},{pattern:/\\k<[^<>']+>/,alias:"keyword",inside:{"group-name":c}}],anchor:{pattern:/[$^]|\\[ABbGZz]/,alias:"function"},escape:a,group:[{pattern:/\((?:\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,alias:"punctuation",inside:{"group-name":c}},{pattern:/\)/,alias:"punctuation"}],quantifier:{pattern:/(?:[+*?]|\{\d+(?:,\d*)?\})[?+]?/,alias:"number"},alternation:{pattern:/\|/,alias:"keyword"}},C.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},C.languages.javascript=C.languages.extend("clike",{"class-name":[C.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),C.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,C.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source+/\//.source+"(?:"+/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source+"|"+/(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+")"+/(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:C.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:C.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:C.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:C.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:C.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),C.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:C.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),C.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),C.languages.markup&&(C.languages.markup.tag.addInlined("script","javascript"),C.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),C.languages.js=C.languages.javascript,C.languages.actionscript=C.languages.extend("javascript",{keyword:/\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\b/,operator:/\+\+|--|(?:[+\-*\/%^]|&&?|\|\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/}),C.languages.actionscript["class-name"].alias="function",delete C.languages.actionscript.parameter,delete C.languages.actionscript["literal-property"],C.languages.markup&&C.languages.insertBefore("actionscript","string",{xml:{pattern:/(^|[^.])<\/?\w+(?:\s+[^\s>\/=]+=("|')(?:\\[\s\S]|(?!\2)[^\\])*\2)*\s*\/?>/,lookbehind:!0,inside:C.languages.markup}}),function(e){var t=/#(?!\{).+/,n={pattern:/#\{[^}]+\}/,alias:"variable"};e.languages.coffeescript=e.languages.extend("javascript",{comment:t,string:[{pattern:/'(?:\\[\s\S]|[^\\'])*'/,greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,greedy:!0,inside:{interpolation:n}}],keyword:/\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\b/,"class-member":{pattern:/@(?!\d)\w+/,alias:"variable"}}),e.languages.insertBefore("coffeescript","comment",{"multiline-comment":{pattern:/###[\s\S]+?###/,alias:"comment"},"block-regex":{pattern:/\/{3}[\s\S]*?\/{3}/,alias:"regex",inside:{comment:t,interpolation:n}}}),e.languages.insertBefore("coffeescript","string",{"inline-javascript":{pattern:/`(?:\\[\s\S]|[^\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:"punctuation"},script:{pattern:/[\s\S]+/,alias:"language-javascript",inside:e.languages.javascript}}},"multiline-string":[{pattern:/'''[\s\S]*?'''/,greedy:!0,alias:"string"},{pattern:/"""[\s\S]*?"""/,greedy:!0,alias:"string",inside:{interpolation:n}}]}),e.languages.insertBefore("coffeescript","keyword",{property:/(?!\d)\w+(?=\s*:(?!:))/}),delete e.languages.coffeescript["template-string"],e.languages.coffee=e.languages.coffeescript}(C),function(e){var t=e.languages.javadoclike={parameter:{pattern:/(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*@(?:arg|arguments|param)\s+)\w+/m,lookbehind:!0},keyword:{pattern:/(^[\t ]*(?:\/{3}|\*|\/\*\*)\s*|\{)@[a-z][a-zA-Z-]+\b/m,lookbehind:!0},punctuation:/[{}]/};Object.defineProperty(t,"addSupport",{value:function(t,n){(t="string"==typeof t?[t]:t).forEach((function(t){var r=function(e){e.inside||(e.inside={}),e.inside.rest=n},s="doc-comment";if(o=e.languages[t]){var o,i=o[s];if((i=i||(o=e.languages.insertBefore(t,"comment",{"doc-comment":{pattern:/(^|[^\\])\/\*\*[^/][\s\S]*?(?:\*\/|$)/,lookbehind:!0,alias:"comment"}}))[s])instanceof RegExp&&(i=o[s]={pattern:i}),Array.isArray(i))for(var a=0,p=i.length;a<p;a++)i[a]instanceof RegExp&&(i[a]={pattern:i[a]}),r(i[a]);else r(i)}}))}}),t.addSupport(["java","javascript","php"],t)}(C),function(e){var t=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;(t=(e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:"+/[^;{\s"']|\s+(?!\s)/.source+"|"+t.source+")*?"+/(?:;|(?=\s*\{))/.source),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+t.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+t.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+t.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css,e.languages.markup))&&(t.tag.addInlined("style","css"),t.tag.addAttribute("style","css"))}(C),function(e){var t=/("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,n=(t=(e.languages.css.selector={pattern:e.languages.css.selector.pattern,lookbehind:!0,inside:t={"pseudo-element":/:(?:after|before|first-letter|first-line|selection)|::[-\w]+/,"pseudo-class":/:[-\w]+/,class:/\.[-\w]+/,id:/#[-\w]+/,attribute:{pattern:RegExp("\\[(?:[^[\\]\"']|"+t.source+")*\\]"),greedy:!0,inside:{punctuation:/^\[|\]$/,"case-sensitivity":{pattern:/(\s)[si]$/i,lookbehind:!0,alias:"keyword"},namespace:{pattern:/^(\s*)(?:(?!\s)[-*\w\xA0-\uFFFF])*\|(?!=)/,lookbehind:!0,inside:{punctuation:/\|$/}},"attr-name":{pattern:/^(\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+/,lookbehind:!0},"attr-value":[t,{pattern:/(=\s*)(?:(?!\s)[-\w\xA0-\uFFFF])+(?=\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},"n-th":[{pattern:/(\(\s*)[+-]?\d*[\dn](?:\s*[+-]\s*\d+)?(?=\s*\))/,lookbehind:!0,inside:{number:/[\dn]+/,operator:/[+-]/}},{pattern:/(\(\s*)(?:even|odd)(?=\s*\))/i,lookbehind:!0}],combinator:/>|\+|~|\|\|/,punctuation:/[(),]/}},e.languages.css.atrule.inside["selector-function-argument"].inside=t,e.languages.insertBefore("css","property",{variable:{pattern:/(^|[^-\w\xA0-\uFFFF])--(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*/i,lookbehind:!0}}),{pattern:/(\b\d+)(?:%|[a-z]+(?![\w-]))/,lookbehind:!0}),{pattern:/(^|[^\w.-])-?(?:\d+(?:\.\d+)?|\.\d+)/,lookbehind:!0});e.languages.insertBefore("css","function",{operator:{pattern:/(\s)[+\-*\/](?=\s)/,lookbehind:!0},hexcode:{pattern:/\B#[\da-f]{3,8}\b/i,alias:"color"},color:[{pattern:/(^|[^\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\w-])/i,lookbehind:!0},{pattern:/\b(?:hsl|rgb)\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*\)\B|\b(?:hsl|rgb)a\(\s*\d{1,3}\s*,\s*\d{1,3}%?\s*,\s*\d{1,3}%?\s*,\s*(?:0|0?\.\d+|1)\s*\)\B/i,inside:{unit:t,number:n,function:/[\w-]+(?=\()/,punctuation:/[(),]/}}],entity:/\\[\da-f]{1,8}/i,unit:t,number:n})}(C),function(e){var t=/[*&][^\s[\]{},]+/,n=/!(?:<[\w\-%#;/?:@&=+$,.!~*'()[\]]+>|(?:[a-zA-Z\d-]*!)?[\w\-%#;/?:@&=+$.~*'()]+)?/,r="(?:"+n.source+"(?:[ \t]+"+t.source+")?|"+t.source+"(?:[ \t]+"+n.source+")?)",s=/(?:[^\s\x00-\x08\x0e-\x1f!"#%&'*,\-:>?@[\]`{|}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]|[?:-]<PLAIN>)(?:[ \t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g,(function(){return/[^\s\x00-\x08\x0e-\x1f,[\]{}\x7f-\x84\x86-\x9f\ud800-\udfff\ufffe\uffff]/.source})),o=/"(?:[^"\\\r\n]|\\.)*"|'(?:[^'\\\r\n]|\\.)*'/.source;function i(e,t){t=(t||"").replace(/m/g,"")+"m";var n=/([:\-,[{]\s*(?:\s<<prop>>[ \t]+)?)(?:<<value>>)(?=[ \t]*(?:$|,|\]|\}|(?:[\r\n]\s*)?#))/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<value>>/g,(function(){return e}));return RegExp(n,t)}e.languages.yaml={scalar:{pattern:RegExp(/([\-:]\s*(?:\s<<prop>>[ \t]+)?[|>])[ \t]*(?:((?:\r?\n|\r)[ \t]+)\S[^\r\n]*(?:\2[^\r\n]+)*)/.source.replace(/<<prop>>/g,(function(){return r}))),lookbehind:!0,alias:"string"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\-,[{\r\n?])[ \t]*(?:<<prop>>[ \t]+)?)<<key>>(?=\s*:\s)/.source.replace(/<<prop>>/g,(function(){return r})).replace(/<<key>>/g,(function(){return"(?:"+s+"|"+o+")"}))),lookbehind:!0,greedy:!0,alias:"atrule"},directive:{pattern:/(^[ \t]*)%.+/m,lookbehind:!0,alias:"important"},datetime:{pattern:i(/\d{4}-\d\d?-\d\d?(?:[tT]|[ \t]+)\d\d?:\d{2}:\d{2}(?:\.\d*)?(?:[ \t]*(?:Z|[-+]\d\d?(?::\d{2})?))?|\d{4}-\d{2}-\d{2}|\d\d?:\d{2}(?::\d{2}(?:\.\d*)?)?/.source),lookbehind:!0,alias:"number"},boolean:{pattern:i(/false|true/.source,"i"),lookbehind:!0,alias:"important"},null:{pattern:i(/null|~/.source,"i"),lookbehind:!0,alias:"important"},string:{pattern:i(o),lookbehind:!0,greedy:!0},number:{pattern:i(/[+-]?(?:0x[\da-f]+|0o[0-7]+|(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?|\.inf|\.nan)/.source,"i"),lookbehind:!0},tag:n,important:t,punctuation:/---|[:[\]{}\-,|>?]|\.\.\./},e.languages.yml=e.languages.yaml}(C),function(e){var t=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;function n(e){return e=e.replace(/<inner>/g,(function(){return t})),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var r=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,s=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,(function(){return r})),o=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source,i=(e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"front-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:e.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+s+o+"(?:"+s+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+s+o+")(?:"+s+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(r),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+s+")"+o+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+s+"$"),inside:{"table-header":{pattern:RegExp(r),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:n(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:n(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:n(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:n(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach((function(t){["url","bold","italic","strike","code-snippet"].forEach((function(n){t!==n&&(e.languages.markdown[t].inside.content.inside[n]=e.languages.markdown[n])}))})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(t){if(t&&"string"!=typeof t)for(var n=0,r=t.length;n<r;n++){var s,o=t[n];"code"!==o.type?e(o.content):(s=o.content[1],o=o.content[3],s&&o&&"code-language"===s.type&&"code-block"===o.type&&"string"==typeof s.content&&(s=s.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp"),s="language-"+(s=(/[a-z][\w-]*/i.exec(s)||[""])[0].toLowerCase()),o.alias?"string"==typeof o.alias?o.alias=[o.alias,s]:o.alias.push(s):o.alias=[s]))}}(e.tokens)})),e.hooks.add("wrap",(function(t){if("code-block"===t.type){for(var n="",r=0,s=t.classes.length;r<s;r++){var o=t.classes[r];if(o=/language-(.+)/.exec(o)){n=o[1];break}}var c,m=e.languages[n];m?t.content=e.highlight(t.content.replace(i,"").replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi,(function(e,t){var n;return"#"===(t=t.toLowerCase())[0]?(n="x"===t[1]?parseInt(t.slice(2),16):Number(t.slice(1)),p(n)):a[t]||e})),m,n):n&&"none"!==n&&e.plugins.autoloader&&(c="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random()),t.attributes.id=c,e.plugins.autoloader.loadLanguages(n,(function(){var t=document.getElementById(c);t&&(t.innerHTML=e.highlight(t.textContent,e.languages[n],n))})))}})),RegExp(e.languages.markup.tag.pattern.source,"gi")),a={amp:"&",lt:"<",gt:">",quot:'"'},p=String.fromCodePoint||String.fromCharCode;e.languages.md=e.languages.markdown}(C),C.languages.graphql={comment:/#.*/,description:{pattern:/(?:"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*")(?=\s*[a-z_])/i,greedy:!0,alias:"string",inside:{"language-markdown":{pattern:/(^"(?:"")?)(?!\1)[\s\S]+(?=\1$)/,lookbehind:!0,inside:C.languages.markdown}}},string:{pattern:/"""(?:[^"]|(?!""")")*"""|"(?:\\.|[^\\"\r\n])*"/,greedy:!0},number:/(?:\B-|\b)\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,boolean:/\b(?:false|true)\b/,variable:/\$[a-z_]\w*/i,directive:{pattern:/@[a-z_]\w*/i,alias:"function"},"attr-name":{pattern:/\b[a-z_]\w*(?=\s*(?:\((?:[^()"]|"(?:\\.|[^\\"\r\n])*")*\))?:)/i,greedy:!0},"atom-input":{pattern:/\b[A-Z]\w*Input\b/,alias:"class-name"},scalar:/\b(?:Boolean|Float|ID|Int|String)\b/,constant:/\b[A-Z][A-Z_\d]*\b/,"class-name":{pattern:/(\b(?:enum|implements|interface|on|scalar|type|union)\s+|&\s*|:\s*|\[)[A-Z_]\w*/,lookbehind:!0},fragment:{pattern:/(\bfragment\s+|\.{3}\s*(?!on\b))[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-mutation":{pattern:/(\bmutation\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},"definition-query":{pattern:/(\bquery\s+)[a-zA-Z_]\w*/,lookbehind:!0,alias:"function"},keyword:/\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\b/,operator:/[!=|&]|\.{3}/,"property-query":/\w+(?=\s*\()/,object:/\w+(?=\s*\{)/,punctuation:/[!(){}\[\]:=,]/,property:/\w+/},C.hooks.add("after-tokenize",(function(e){if("graphql"===e.language)for(var t=e.tokens.filter((function(e){return"string"!=typeof e&&"comment"!==e.type&&"scalar"!==e.type})),n=0;n<t.length;){var r=t[n++];if("keyword"===r.type&&"mutation"===r.content){var s=[];if(d(["definition-mutation","punctuation"])&&"("===m(1).content){n+=2;var o=u(/^\($/,/^\)$/);if(-1===o)continue;for(;n<o;n++){var i=m(0);"variable"===i.type&&(l(i,"variable-input"),s.push(i.content))}n=o+1}if(d(["punctuation","property-query"])&&"{"===m(0).content&&(n++,l(m(0),"property-mutation"),0<s.length)){var a=u(/^\{$/,/^\}$/);if(-1!==a)for(var p=n;p<a;p++){var c=t[p];"variable"===c.type&&0<=s.indexOf(c.content)&&l(c,"variable-input")}}}}function m(e){return t[n+e]}function d(e,t){t=t||0;for(var n=0;n<e.length;n++){var r=m(n+t);if(!r||r.type!==e[n])return}return 1}function u(e,r){for(var s=1,o=n;o<t.length;o++){var i=t[o],a=i.content;if("punctuation"===i.type&&"string"==typeof a)if(e.test(a))s++;else if(r.test(a)&&0==--s)return o}return-1}function l(e,t){var n=e.alias;n?Array.isArray(n)||(e.alias=n=[n]):e.alias=n=[],n.push(t)}})),C.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},identifier:{pattern:/(^|[^@\\])`(?:\\[\s\S]|[^`\\]|``)*`/,greedy:!0,lookbehind:!0,inside:{punctuation:/^`|`$/}},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:FALSE|NULL|TRUE)\b/i,number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){var t=e.languages.javascript["template-string"],n=t.pattern.source,r=t.inside.interpolation,s=r.inside["interpolation-punctuation"],o=r.pattern.source;function i(t,r){if(e.languages[t])return{pattern:RegExp("((?:"+r+")\\s*)"+n),lookbehind:!0,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},"embedded-code":{pattern:/[\s\S]+/,alias:t}}}}function a(t,n,r){return t={code:t,grammar:n,language:r},e.hooks.run("before-tokenize",t),t.tokens=e.tokenize(t.code,t.grammar),e.hooks.run("after-tokenize",t),t.tokens}function p(t,n,i){var p=e.tokenize(t,{interpolation:{pattern:RegExp(o),lookbehind:!0}}),c=0,m={},d=(p=a(p.map((function(e){if("string"==typeof e)return e;var n,r;for(e=e.content;-1!==t.indexOf((r=c++,n="___"+i.toUpperCase()+"_"+r+"___")););return m[n]=e,n})).join(""),n,i),Object.keys(m));return c=0,function t(n){for(var o=0;o<n.length;o++){if(c>=d.length)return;var i,p,u,l,g,h,f,y=n[o];"string"==typeof y||"string"==typeof y.content?(i=d[c],-1!==(f=(h="string"==typeof y?y:y.content).indexOf(i))&&(++c,p=h.substring(0,f),g=m[i],u=void 0,(l={})["interpolation-punctuation"]=s,3===(l=e.tokenize(g,l)).length&&((u=[1,1]).push.apply(u,a(l[1],e.languages.javascript,"javascript")),l.splice.apply(l,u)),u=new e.Token("interpolation",l,r.alias,g),l=h.substring(f+i.length),g=[],p&&g.push(p),g.push(u),l&&(t(h=[l]),g.push.apply(g,h)),"string"==typeof y?(n.splice.apply(n,[o,1].concat(g)),o+=g.length-1):y.content=g)):(f=y.content,Array.isArray(f)?t(f):t([f]))}}(p),new e.Token(i,p,"language-"+i,t)}e.languages.javascript["template-string"]=[i("css",/\b(?:styled(?:\([^)]*\))?(?:\s*\.\s*\w+(?:\([^)]*\))*)*|css(?:\s*\.\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),i("html",/\bhtml|\.\s*(?:inner|outer)HTML\s*\+?=/.source),i("svg",/\bsvg/.source),i("markdown",/\b(?:markdown|md)/.source),i("graphql",/\b(?:gql|graphql(?:\s*\.\s*experimental)?)/.source),i("sql",/\bsql/.source),t].filter(Boolean);var c={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};function m(e){return"string"==typeof e?e:Array.isArray(e)?e.map(m).join(""):m(e.content)}e.hooks.add("after-tokenize",(function(t){t.language in c&&function t(n){for(var r=0,s=n.length;r<s;r++){var o,i,a,c=n[r];"string"!=typeof c&&(o=c.content,Array.isArray(o)?"template-string"===c.type?(c=o[1],3===o.length&&"string"!=typeof c&&"embedded-code"===c.type&&(i=m(c),c=c.alias,c=Array.isArray(c)?c[0]:c,a=e.languages[c])&&(o[1]=p(i,a,c))):t(o):"string"!=typeof o&&t([o]))}}(t.tokens)}))}(C),function(e){e.languages.typescript=e.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\b/}),e.languages.typescript.keyword.push(/\b(?:abstract|declare|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete e.languages.typescript.parameter,delete e.languages.typescript["literal-property"];var t=e.languages.extend("typescript",{});delete t["class-name"],e.languages.typescript["class-name"].inside=t,e.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:t}}}}),e.languages.ts=e.languages.typescript}(C),function(e){var t=e.languages.javascript,n=/\{(?:[^{}]|\{(?:[^{}]|\{[^{}]*\})*\})+\}/.source,r="(@(?:arg|argument|param|property)\\s+(?:"+n+"\\s+)?)";e.languages.jsdoc=e.languages.extend("javadoclike",{parameter:{pattern:RegExp(r+/(?:(?!\s)[$\w\xA0-\uFFFF.])+(?=\s|$)/.source),lookbehind:!0,inside:{punctuation:/\./}}}),e.languages.insertBefore("jsdoc","keyword",{"optional-parameter":{pattern:RegExp(r+/\[(?:(?!\s)[$\w\xA0-\uFFFF.])+(?:=[^[\]]+)?\](?=\s|$)/.source),lookbehind:!0,inside:{parameter:{pattern:/(^\[)[$\w\xA0-\uFFFF\.]+/,lookbehind:!0,inside:{punctuation:/\./}},code:{pattern:/(=)[\s\S]*(?=\]$)/,lookbehind:!0,inside:t,alias:"language-javascript"},punctuation:/[=[\]]/}},"class-name":[{pattern:RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\s+(?:<TYPE>\s+)?)[A-Z]\w*(?:\.[A-Z]\w*)*/.source.replace(/<TYPE>/g,(function(){return n}))),lookbehind:!0,inside:{punctuation:/\./}},{pattern:RegExp("(@[a-z]+\\s+)"+n),lookbehind:!0,inside:{string:t.string,number:t.number,boolean:t.boolean,keyword:e.languages.typescript.keyword,operator:/=>|\.\.\.|[&|?:*]/,punctuation:/[.,;=<>{}()[\]]/}}],example:{pattern:/(@example\s+(?!\s))(?:[^@\s]|\s+(?!\s))+?(?=\s*(?:\*\s*)?(?:@\w|\*\/))/,lookbehind:!0,inside:{code:{pattern:/^([\t ]*(?:\*\s*)?)\S.*$/m,lookbehind:!0,inside:t,alias:"language-javascript"}}}}),e.languages.javadoclike.addSupport("javascript",e.languages.jsdoc)}(C),function(e){e.languages.flow=e.languages.extend("javascript",{}),e.languages.insertBefore("flow","keyword",{type:[{pattern:/\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\b/,alias:"class-name"}]}),e.languages.flow["function-variable"].pattern=/(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=\s*(?:function\b|(?:\([^()]*\)(?:\s*:\s*\w+)?|(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/i,delete e.languages.flow.parameter,e.languages.insertBefore("flow","operator",{"flow-punctuation":{pattern:/\{\||\|\}/,alias:"punctuation"}}),Array.isArray(e.languages.flow.keyword)||(e.languages.flow.keyword=[e.languages.flow.keyword]),e.languages.flow.keyword.unshift({pattern:/(^|[^$]\b)(?:Class|declare|opaque|type)\b(?!\$)/,lookbehind:!0},{pattern:/(^|[^$]\B)\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\b(?!\$)/,lookbehind:!0})}(C),C.languages.n4js=C.languages.extend("javascript",{keyword:/\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\b/}),C.languages.insertBefore("n4js","constant",{annotation:{pattern:/@+\w+/,alias:"operator"}}),C.languages.n4jsd=C.languages.n4js,function(e){function t(e,t){return RegExp(e.replace(/<ID>/g,(function(){return/(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/.source})),t)}e.languages.insertBefore("javascript","function-variable",{"method-variable":{pattern:RegExp("(\\.\\s*)"+e.languages.javascript["function-variable"].pattern.source),lookbehind:!0,alias:["function-variable","method","function","property-access"]}}),e.languages.insertBefore("javascript","function",{method:{pattern:RegExp("(\\.\\s*)"+e.languages.javascript.function.source),lookbehind:!0,alias:["function","property-access"]}}),e.languages.insertBefore("javascript","constant",{"known-class-name":[{pattern:/\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\b/,alias:"class-name"},{pattern:/\b(?:[A-Z]\w*)Error\b/,alias:"class-name"}]}),e.languages.insertBefore("javascript","keyword",{imports:{pattern:t(/(\bimport\b\s*)(?:<ID>(?:\s*,\s*(?:\*\s*as\s+<ID>|\{[^{}]*\}))?|\*\s*as\s+<ID>|\{[^{}]*\})(?=\s*\bfrom\b)/.source),lookbehind:!0,inside:e.languages.javascript},exports:{pattern:t(/(\bexport\b\s*)(?:\*(?:\s*as\s+<ID>)?(?=\s*\bfrom\b)|\{[^{}]*\})/.source),lookbehind:!0,inside:e.languages.javascript}}),e.languages.javascript.keyword.unshift({pattern:/\b(?:as|default|export|from|import)\b/,alias:"module"},{pattern:/\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\b/,alias:"control-flow"},{pattern:/\bnull\b/,alias:["null","nil"]},{pattern:/\bundefined\b/,alias:"nil"}),e.languages.insertBefore("javascript","operator",{spread:{pattern:/\.{3}/,alias:"operator"},arrow:{pattern:/=>/,alias:"operator"}}),e.languages.insertBefore("javascript","punctuation",{"property-access":{pattern:t(/(\.\s*)#?<ID>/.source),lookbehind:!0},"maybe-class-name":{pattern:/(^|[^$\w\xA0-\uFFFF])[A-Z][$\w\xA0-\uFFFF]+/,lookbehind:!0},dom:{pattern:/\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\b/,alias:"variable"},console:{pattern:/\bconsole(?=\s*\.)/,alias:"class-name"}});for(var n=["function","function-variable","method","method-variable","property-access"],r=0;r<n.length;r++){var s=n[r],o=e.languages.javascript[s];s=(o="RegExp"===e.util.type(o)?e.languages.javascript[s]={pattern:o}:o).inside||{};(o.inside=s)["maybe-class-name"]=/^[A-Z][\s\S]*/}}(C),function(e){var t=e.util.clone(e.languages.javascript),n=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,r=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,s=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function o(e,t){return e=e.replace(/<S>/g,(function(){return n})).replace(/<BRACES>/g,(function(){return r})).replace(/<SPREAD>/g,(function(){return s})),RegExp(e,t)}function i(t){for(var n=[],r=0;r<t.length;r++){var s=t[r],o=!1;"string"!=typeof s&&("tag"===s.type&&s.content[0]&&"tag"===s.content[0].type?"</"===s.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===a(s.content[0].content[1])&&n.pop():"/>"!==s.content[s.content.length-1].content&&n.push({tagName:a(s.content[0].content[1]),openedBraces:0}):0<n.length&&"punctuation"===s.type&&"{"===s.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&"punctuation"===s.type&&"}"===s.content?n[n.length-1].openedBraces--:o=!0),(o||"string"==typeof s)&&0<n.length&&0===n[n.length-1].openedBraces&&(o=a(s),r<t.length-1&&("string"==typeof t[r+1]||"plain-text"===t[r+1].type)&&(o+=a(t[r+1]),t.splice(r+1,1)),0<r&&("string"==typeof t[r-1]||"plain-text"===t[r-1].type)&&(o=a(t[r-1])+o,t.splice(r-1,1),r--),t[r]=new e.Token("plain-text",o,null,o)),s.content&&"string"!=typeof s.content&&i(s.content)}}s=o(s).source,e.languages.jsx=e.languages.extend("markup",t),e.languages.jsx.tag.pattern=o(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.jsx.tag.inside.comment=t.comment,e.languages.insertBefore("inside","attr-name",{spread:{pattern:o(/<SPREAD>/.source),inside:e.languages.jsx}},e.languages.jsx.tag),e.languages.insertBefore("inside","special-attr",{script:{pattern:o(/=<BRACES>/.source),alias:"language-javascript",inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:e.languages.jsx}}},e.languages.jsx.tag);var a=function(e){return e?"string"==typeof e?e:"string"==typeof e.content?e.content:e.content.map(a).join(""):""};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||i(e.tokens)}))}(C),function(e){var t=e.util.clone(e.languages.typescript);(t=(e.languages.tsx=e.languages.extend("jsx",t),delete e.languages.tsx.parameter,delete e.languages.tsx["literal-property"],e.languages.tsx.tag)).pattern=RegExp(/(^|[^\w$]|(?=<\/))/.source+"(?:"+t.pattern.source+")",t.pattern.flags),t.lookbehind=!0}(C),C.languages.swift={comment:{pattern:/(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/,lookbehind:!0,greedy:!0},"string-literal":[{pattern:RegExp(/(^|[^"#])/.source+"(?:"+/"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source+"|"+/"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source+")"+/(?!["#])/.source),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\\()(?:[^()]|\([^()]*\))*(?=\))/,lookbehind:!0,inside:null},"interpolation-punctuation":{pattern:/^\)|\\\($/,alias:"punctuation"},punctuation:/\\(?=[\r\n])/,string:/[\s\S]+/}},{pattern:RegExp(/(^|[^"#])(#+)/.source+"(?:"+/"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source+"|"+/"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source+")\\2"),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/,lookbehind:!0,inside:null},"interpolation-punctuation":{pattern:/^\)|\\#+\($/,alias:"punctuation"},string:/[\s\S]+/}}],directive:{pattern:RegExp(/#/.source+"(?:"+/(?:elseif|if)\b/.source+"(?:[ \t]*"+/(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source+")+|"+/(?:else|endif)\b/.source+")"),alias:"property",inside:{"directive-name":/^#\w+/,boolean:/\b(?:false|true)\b/,number:/\b\d+(?:\.\d+)*\b/,operator:/!|&&|\|\||[<>]=?/,punctuation:/[(),]/}},literal:{pattern:/#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/,alias:"constant"},"other-directive":{pattern:/#\w+\b/,alias:"property"},attribute:{pattern:/@\w+/,alias:"atrule"},"function-definition":{pattern:/(\bfunc\s+)\w+/,lookbehind:!0,alias:"function"},label:{pattern:/\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/,lookbehind:!0,alias:"important"},keyword:/\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,boolean:/\b(?:false|true)\b/,nil:{pattern:/\bnil\b/,alias:"constant"},"short-argument":/\$\d+\b/,omit:{pattern:/\b_\b/,alias:"keyword"},number:/\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,"class-name":/\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,function:/\b[a-z_]\w*(?=\s*\()/i,constant:/\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,operator:/[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,punctuation:/[{}[\]();,.:\\]/},C.languages.swift["string-literal"].forEach((function(e){e.inside.interpolation.inside=C.languages.swift})),function(e){e.languages.kotlin=e.languages.extend("clike",{keyword:{pattern:/(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,lookbehind:!0},function:[{pattern:/(?:`[^\r\n`]+`|\b\w+)(?=\s*\()/,greedy:!0},{pattern:/(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/,lookbehind:!0,greedy:!0}],number:/\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,operator:/\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/}),delete e.languages.kotlin["class-name"];var t={"interpolation-punctuation":{pattern:/^\$\{?|\}$/,alias:"punctuation"},expression:{pattern:/[\s\S]+/,inside:e.languages.kotlin}};e.languages.insertBefore("kotlin","string",{"string-literal":[{pattern:/"""(?:[^$]|\$(?:(?!\{)|\{[^{}]*\}))*?"""/,alias:"multiline",inside:{interpolation:{pattern:/\$(?:[a-z_]\w*|\{[^{}]*\})/i,inside:t},string:/[\s\S]+/}},{pattern:/"(?:[^"\\\r\n$]|\\.|\$(?:(?!\{)|\{[^{}]*\}))*"/,alias:"singleline",inside:{interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$(?:[a-z_]\w*|\{[^{}]*\})/i,lookbehind:!0,inside:t},string:/[\s\S]+/}}],char:{pattern:/'(?:[^'\\\r\n]|\\(?:.|u[a-fA-F0-9]{0,4}))'/,greedy:!0}}),delete e.languages.kotlin.string,e.languages.insertBefore("kotlin","keyword",{annotation:{pattern:/\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/,alias:"builtin"}}),e.languages.insertBefore("kotlin","function",{label:{pattern:/\b\w+@|@\w+\b/,alias:"symbol"}}),e.languages.kt=e.languages.kotlin,e.languages.kts=e.languages.kotlin}(C),C.languages.c=C.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/}),C.languages.insertBefore("c","string",{char:{pattern:/'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n]){0,32}'/,greedy:!0}}),C.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},C.languages.c.string],char:C.languages.c.char,comment:C.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:C.languages.c}}}}),C.languages.insertBefore("c","function",{constant:/\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\b/}),delete C.languages.c.boolean,C.languages.objectivec=C.languages.extend("c",{string:{pattern:/@?"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"/,greedy:!0},keyword:/\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\b/,operator:/-[->]?|\+\+?|!=?|<<?=?|>>?=?|==?|&&?|\|\|?|[~^%?*\/@]/}),delete C.languages.objectivec["class-name"],C.languages.objc=C.languages.objectivec,C.languages.reason=C.languages.extend("clike",{string:{pattern:/"(?:\\(?:\r\n|[\s\S])|[^\\\r\n"])*"/,greedy:!0},"class-name":/\b[A-Z]\w*/,keyword:/\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\b/,operator:/\.{3}|:[:=]|\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\-*\/]\.?|\b(?:asr|land|lor|lsl|lsr|lxor|mod)\b/}),C.languages.insertBefore("reason","class-name",{char:{pattern:/'(?:\\x[\da-f]{2}|\\o[0-3][0-7][0-7]|\\\d{3}|\\.|[^'\\\r\n])'/,greedy:!0},constructor:/\b[A-Z]\w*\b(?!\s*\.)/,label:{pattern:/\b[a-z]\w*(?=::)/,alias:"symbol"}}),delete C.languages.reason.function,function(e){for(var t=/\/\*(?:[^*/]|\*(?!\/)|\/(?!\*)|<self>)*\*\//.source,n=0;n<2;n++)t=t.replace(/<self>/g,(function(){return t}));t=t.replace(/<self>/g,(function(){return/[^\s\S]/.source})),e.languages.rust={comment:[{pattern:RegExp(/(^|[^\\])/.source+t),lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/b?"(?:\\[\s\S]|[^\\"])*"|b?r(#*)"(?:[^"]|"(?!\1))*"\1/,greedy:!0},char:{pattern:/b?'(?:\\(?:x[0-7][\da-fA-F]|u\{(?:[\da-fA-F]_*){1,6}\}|.)|[^\\\r\n\t'])'/,greedy:!0},attribute:{pattern:/#!?\[(?:[^\[\]"]|"(?:\\[\s\S]|[^\\"])*")*\]/,greedy:!0,alias:"attr-name",inside:{string:null}},"closure-params":{pattern:/([=(,:]\s*|\bmove\s*)\|[^|]*\||\|[^|]*\|(?=\s*(?:\{|->))/,lookbehind:!0,greedy:!0,inside:{"closure-punctuation":{pattern:/^\||\|$/,alias:"punctuation"},rest:null}},"lifetime-annotation":{pattern:/'\w+/,alias:"symbol"},"fragment-specifier":{pattern:/(\$\w+:)[a-z]+/,lookbehind:!0,alias:"punctuation"},variable:/\$\w+/,"function-definition":{pattern:/(\bfn\s+)\w+/,lookbehind:!0,alias:"function"},"type-definition":{pattern:/(\b(?:enum|struct|trait|type|union)\s+)\w+/,lookbehind:!0,alias:"class-name"},"module-declaration":[{pattern:/(\b(?:crate|mod)\s+)[a-z][a-z_\d]*/,lookbehind:!0,alias:"namespace"},{pattern:/(\b(?:crate|self|super)\s*)::\s*[a-z][a-z_\d]*\b(?:\s*::(?:\s*[a-z][a-z_\d]*\s*::)*)?/,lookbehind:!0,alias:"namespace",inside:{punctuation:/::/}}],keyword:[/\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\b/,/\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\b/],function:/\b[a-z_]\w*(?=\s*(?:::\s*<|\())/,macro:{pattern:/\b\w+!/,alias:"property"},constant:/\b[A-Z_][A-Z_\d]+\b/,"class-name":/\b[A-Z]\w*\b/,namespace:{pattern:/(?:\b[a-z][a-z_\d]*\s*::\s*)*\b[a-z][a-z_\d]*\s*::(?!\s*<)/,inside:{punctuation:/::/}},number:/\b(?:0x[\dA-Fa-f](?:_?[\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\d(?:_?\d)*)?\.)?\d(?:_?\d)*(?:[Ee][+-]?\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\b/,boolean:/\b(?:false|true)\b/,punctuation:/->|\.\.=|\.{1,3}|::|[{}[\];(),:]/,operator:/[-+*\/%!^]=?|=[=>]?|&[&=]?|\|[|=]?|<<?=?|>>?=?|[@?]/},e.languages.rust["closure-params"].inside.rest=e.languages.rust,e.languages.rust.attribute.inside.string=e.languages.rust.string}(C),C.languages.go=C.languages.extend("clike",{string:{pattern:/(^|[^\\])"(?:\\.|[^"\\\r\n])*"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,boolean:/\b(?:_|false|iota|nil|true)\b/,number:[/\b0(?:b[01_]+|o[0-7_]+)i?\b/i,/\b0x(?:[a-f\d_]+(?:\.[a-f\d_]*)?|\.[a-f\d_]+)(?:p[+-]?\d+(?:_\d+)*)?i?(?!\w)/i,/(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?[\d_]+)?i?(?!\w)/i],operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,builtin:/\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\b/}),C.languages.insertBefore("go","string",{char:{pattern:/'(?:\\.|[^'\\\r\n]){0,10}'/,greedy:!0}}),delete C.languages.go["class-name"],function(e){var t=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,n=/\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g,(function(){return t.source}));e.languages.cpp=e.languages.extend("c",{"class-name":[{pattern:RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g,(function(){return t.source}))),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:t,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:false|true)\b/}),e.languages.insertBefore("cpp","string",{module:{pattern:RegExp(/(\b(?:import|module)\s+)/.source+"(?:"+/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source+"|"+/<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g,(function(){return n}))+")"),lookbehind:!0,greedy:!0,inside:{string:/^[<"][\s\S]+/,operator:/:/,punctuation:/\./}},"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),e.languages.insertBefore("cpp","keyword",{"generic-function":{pattern:/\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,inside:{function:/^\w+/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:e.languages.cpp}}}}),e.languages.insertBefore("cpp","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}}),e.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend("cpp",{})}}),e.languages.insertBefore("inside","double-colon",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},e.languages.cpp["base-clause"])}(C),C.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},C.languages.python["string-interpolation"].inside.interpolation.inside.rest=C.languages.python,C.languages.py=C.languages.python;((e,t)=>{for(var n in t)l(e,n,{get:t[n],enumerable:!0})})({},{dracula:()=>R,duotoneDark:()=>L,duotoneLight:()=>T,github:()=>S,jettwaveDark:()=>M,jettwaveLight:()=>H,nightOwl:()=>P,nightOwlLight:()=>A,oceanicNext:()=>E,okaidia:()=>F,oneDark:()=>W,oneLight:()=>K,palenight:()=>D,shadesOfPurple:()=>U,synthwave84:()=>G,ultramin:()=>N,vsDark:()=>z,vsLight:()=>B});var R={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]},L={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]},T={plain:{backgroundColor:"#faf8f5",color:"#728fcb"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#b6ad9a"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#063289"}},{types:["property","function"],style:{color:"#b29762"}},{types:["tag-id","selector","atrule-id"],style:{color:"#2d2006"}},{types:["attr-name"],style:{color:"#896724"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","atrule"],style:{color:"#728fcb"}},{types:["placeholder","variable"],style:{color:"#93abdc"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#896724"}}]},S={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]},P={plain:{color:"#d6deeb",backgroundColor:"#011627"},styles:[{types:["changed"],style:{color:"rgb(162, 191, 252)",fontStyle:"italic"}},{types:["deleted"],style:{color:"rgba(239, 83, 80, 0.56)",fontStyle:"italic"}},{types:["inserted","attr-name"],style:{color:"rgb(173, 219, 103)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(99, 119, 119)",fontStyle:"italic"}},{types:["string","url"],style:{color:"rgb(173, 219, 103)"}},{types:["variable"],style:{color:"rgb(214, 222, 235)"}},{types:["number"],style:{color:"rgb(247, 140, 108)"}},{types:["builtin","char","constant","function"],style:{color:"rgb(130, 170, 255)"}},{types:["punctuation"],style:{color:"rgb(199, 146, 234)"}},{types:["selector","doctype"],style:{color:"rgb(199, 146, 234)",fontStyle:"italic"}},{types:["class-name"],style:{color:"rgb(255, 203, 139)"}},{types:["tag","operator","keyword"],style:{color:"rgb(127, 219, 202)"}},{types:["boolean"],style:{color:"rgb(255, 88, 116)"}},{types:["property"],style:{color:"rgb(128, 203, 196)"}},{types:["namespace"],style:{color:"rgb(178, 204, 214)"}}]},A={plain:{color:"#403f53",backgroundColor:"#FBFBFB"},styles:[{types:["changed"],style:{color:"rgb(162, 191, 252)",fontStyle:"italic"}},{types:["deleted"],style:{color:"rgba(239, 83, 80, 0.56)",fontStyle:"italic"}},{types:["inserted","attr-name"],style:{color:"rgb(72, 118, 214)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(152, 159, 177)",fontStyle:"italic"}},{types:["string","builtin","char","constant","url"],style:{color:"rgb(72, 118, 214)"}},{types:["variable"],style:{color:"rgb(201, 103, 101)"}},{types:["number"],style:{color:"rgb(170, 9, 130)"}},{types:["punctuation"],style:{color:"rgb(153, 76, 195)"}},{types:["function","selector","doctype"],style:{color:"rgb(153, 76, 195)",fontStyle:"italic"}},{types:["class-name"],style:{color:"rgb(17, 17, 17)"}},{types:["tag"],style:{color:"rgb(153, 76, 195)"}},{types:["operator","property","keyword","namespace"],style:{color:"rgb(12, 150, 155)"}},{types:["boolean"],style:{color:"rgb(188, 84, 84)"}}]},O="#c5a5c5",j="#8dc891",E={plain:{backgroundColor:"#282c34",color:"#ffffff"},styles:[{types:["attr-name"],style:{color:O}},{types:["attr-value"],style:{color:j}},{types:["comment","block-comment","prolog","doctype","cdata","shebang"],style:{color:"#999999"}},{types:["property","number","function-name","constant","symbol","deleted"],style:{color:"#5a9bcf"}},{types:["boolean"],style:{color:"#ff8b50"}},{types:["tag"],style:{color:"#fc929e"}},{types:["string"],style:{color:j}},{types:["punctuation"],style:{color:j}},{types:["selector","char","builtin","inserted"],style:{color:"#D8DEE9"}},{types:["function"],style:{color:"#79b6f2"}},{types:["operator","entity","url","variable"],style:{color:"#d7deea"}},{types:["keyword"],style:{color:O}},{types:["atrule","class-name"],style:{color:"#FAC863"}},{types:["important"],style:{fontWeight:"400"}},{types:["bold"],style:{fontWeight:"bold"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}}]},F={plain:{color:"#f8f8f2",backgroundColor:"#272822"},styles:[{types:["changed"],style:{color:"rgb(162, 191, 252)",fontStyle:"italic"}},{types:["deleted"],style:{color:"#f92672",fontStyle:"italic"}},{types:["inserted"],style:{color:"rgb(173, 219, 103)",fontStyle:"italic"}},{types:["comment"],style:{color:"#8292a2",fontStyle:"italic"}},{types:["string","url"],style:{color:"#a6e22e"}},{types:["variable"],style:{color:"#f8f8f2"}},{types:["number"],style:{color:"#ae81ff"}},{types:["builtin","char","constant","function","class-name"],style:{color:"#e6db74"}},{types:["punctuation"],style:{color:"#f8f8f2"}},{types:["selector","doctype"],style:{color:"#a6e22e",fontStyle:"italic"}},{types:["tag","operator","keyword"],style:{color:"#66d9ef"}},{types:["boolean"],style:{color:"#ae81ff"}},{types:["namespace"],style:{color:"rgb(178, 204, 214)",opacity:.7}},{types:["tag","property"],style:{color:"#f92672"}},{types:["attr-name"],style:{color:"#a6e22e !important"}},{types:["doctype"],style:{color:"#8292a2"}},{types:["rule"],style:{color:"#e6db74"}}]},D={plain:{color:"#bfc7d5",backgroundColor:"#292d3e"},styles:[{types:["comment"],style:{color:"rgb(105, 112, 152)",fontStyle:"italic"}},{types:["string","inserted"],style:{color:"rgb(195, 232, 141)"}},{types:["number"],style:{color:"rgb(247, 140, 108)"}},{types:["builtin","char","constant","function"],style:{color:"rgb(130, 170, 255)"}},{types:["punctuation","selector"],style:{color:"rgb(199, 146, 234)"}},{types:["variable"],style:{color:"rgb(191, 199, 213)"}},{types:["class-name","attr-name"],style:{color:"rgb(255, 203, 107)"}},{types:["tag","deleted"],style:{color:"rgb(255, 85, 114)"}},{types:["operator"],style:{color:"rgb(137, 221, 255)"}},{types:["boolean"],style:{color:"rgb(255, 88, 116)"}},{types:["keyword"],style:{fontStyle:"italic"}},{types:["doctype"],style:{color:"rgb(199, 146, 234)",fontStyle:"italic"}},{types:["namespace"],style:{color:"rgb(178, 204, 214)"}},{types:["url"],style:{color:"rgb(221, 221, 221)"}}]},U={plain:{color:"#9EFEFF",backgroundColor:"#2D2A55"},styles:[{types:["changed"],style:{color:"rgb(255, 238, 128)"}},{types:["deleted"],style:{color:"rgba(239, 83, 80, 0.56)"}},{types:["inserted"],style:{color:"rgb(173, 219, 103)"}},{types:["comment"],style:{color:"rgb(179, 98, 255)",fontStyle:"italic"}},{types:["punctuation"],style:{color:"rgb(255, 255, 255)"}},{types:["constant"],style:{color:"rgb(255, 98, 140)"}},{types:["string","url"],style:{color:"rgb(165, 255, 144)"}},{types:["variable"],style:{color:"rgb(255, 238, 128)"}},{types:["number","boolean"],style:{color:"rgb(255, 98, 140)"}},{types:["attr-name"],style:{color:"rgb(255, 180, 84)"}},{types:["keyword","operator","property","namespace","tag","selector","doctype"],style:{color:"rgb(255, 157, 0)"}},{types:["builtin","char","constant","function","class-name"],style:{color:"rgb(250, 208, 0)"}}]},G={plain:{backgroundColor:"linear-gradient(to bottom, #2a2139 75%, #34294f)",backgroundImage:"#34294f",color:"#f92aad",textShadow:"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3"},styles:[{types:["comment","block-comment","prolog","doctype","cdata"],style:{color:"#495495",fontStyle:"italic"}},{types:["punctuation"],style:{color:"#ccc"}},{types:["tag","attr-name","namespace","number","unit","hexcode","deleted"],style:{color:"#e2777a"}},{types:["property","selector"],style:{color:"#72f1b8",textShadow:"0 0 2px #100c0f, 0 0 10px #257c5575, 0 0 35px #21272475"}},{types:["function-name"],style:{color:"#6196cc"}},{types:["boolean","selector-id","function"],style:{color:"#fdfdfd",textShadow:"0 0 2px #001716, 0 0 3px #03edf975, 0 0 5px #03edf975, 0 0 8px #03edf975"}},{types:["class-name","maybe-class-name","builtin"],style:{color:"#fff5f6",textShadow:"0 0 2px #000, 0 0 10px #fc1f2c75, 0 0 5px #fc1f2c75, 0 0 25px #fc1f2c75"}},{types:["constant","symbol"],style:{color:"#f92aad",textShadow:"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3"}},{types:["important","atrule","keyword","selector-class"],style:{color:"#f4eee4",textShadow:"0 0 2px #393a33, 0 0 8px #f39f0575, 0 0 2px #f39f0575"}},{types:["string","char","attr-value","regex","variable"],style:{color:"#f87c32"}},{types:["parameter"],style:{fontStyle:"italic"}},{types:["entity","url"],style:{color:"#67cdcc"}},{types:["operator"],style:{color:"ffffffee"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["entity"],style:{cursor:"help"}},{types:["inserted"],style:{color:"green"}}]},N={plain:{color:"#282a2e",backgroundColor:"#ffffff"},styles:[{types:["comment"],style:{color:"rgb(197, 200, 198)"}},{types:["string","number","builtin","variable"],style:{color:"rgb(150, 152, 150)"}},{types:["class-name","function","tag","attr-name"],style:{color:"rgb(40, 42, 46)"}}]},z={plain:{color:"#9CDCFE",backgroundColor:"#1E1E1E"},styles:[{types:["prolog"],style:{color:"rgb(0, 0, 128)"}},{types:["comment"],style:{color:"rgb(106, 153, 85)"}},{types:["builtin","changed","keyword","interpolation-punctuation"],style:{color:"rgb(86, 156, 214)"}},{types:["number","inserted"],style:{color:"rgb(181, 206, 168)"}},{types:["constant"],style:{color:"rgb(100, 102, 149)"}},{types:["attr-name","variable"],style:{color:"rgb(156, 220, 254)"}},{types:["deleted","string","attr-value","template-punctuation"],style:{color:"rgb(206, 145, 120)"}},{types:["selector"],style:{color:"rgb(215, 186, 125)"}},{types:["tag"],style:{color:"rgb(78, 201, 176)"}},{types:["tag"],languages:["markup"],style:{color:"rgb(86, 156, 214)"}},{types:["punctuation","operator"],style:{color:"rgb(212, 212, 212)"}},{types:["punctuation"],languages:["markup"],style:{color:"#808080"}},{types:["function"],style:{color:"rgb(220, 220, 170)"}},{types:["class-name"],style:{color:"rgb(78, 201, 176)"}},{types:["char"],style:{color:"rgb(209, 105, 105)"}}]},B={plain:{color:"#000000",backgroundColor:"#ffffff"},styles:[{types:["comment"],style:{color:"rgb(0, 128, 0)"}},{types:["builtin"],style:{color:"rgb(0, 112, 193)"}},{types:["number","variable","inserted"],style:{color:"rgb(9, 134, 88)"}},{types:["operator"],style:{color:"rgb(0, 0, 0)"}},{types:["constant","char"],style:{color:"rgb(129, 31, 63)"}},{types:["tag"],style:{color:"rgb(128, 0, 0)"}},{types:["attr-name"],style:{color:"rgb(255, 0, 0)"}},{types:["deleted","string"],style:{color:"rgb(163, 21, 21)"}},{types:["changed","punctuation"],style:{color:"rgb(4, 81, 165)"}},{types:["function","keyword"],style:{color:"rgb(0, 0, 255)"}},{types:["class-name"],style:{color:"rgb(38, 127, 153)"}}]},M={plain:{color:"#f8fafc",backgroundColor:"#011627"},styles:[{types:["prolog"],style:{color:"#000080"}},{types:["comment"],style:{color:"#6A9955"}},{types:["builtin","changed","keyword","interpolation-punctuation"],style:{color:"#569CD6"}},{types:["number","inserted"],style:{color:"#B5CEA8"}},{types:["constant"],style:{color:"#f8fafc"}},{types:["attr-name","variable"],style:{color:"#9CDCFE"}},{types:["deleted","string","attr-value","template-punctuation"],style:{color:"#cbd5e1"}},{types:["selector"],style:{color:"#D7BA7D"}},{types:["tag"],style:{color:"#0ea5e9"}},{types:["tag"],languages:["markup"],style:{color:"#0ea5e9"}},{types:["punctuation","operator"],style:{color:"#D4D4D4"}},{types:["punctuation"],languages:["markup"],style:{color:"#808080"}},{types:["function"],style:{color:"#7dd3fc"}},{types:["class-name"],style:{color:"#0ea5e9"}},{types:["char"],style:{color:"#D16969"}}]},H={plain:{color:"#0f172a",backgroundColor:"#f1f5f9"},styles:[{types:["prolog"],style:{color:"#000080"}},{types:["comment"],style:{color:"#6A9955"}},{types:["builtin","changed","keyword","interpolation-punctuation"],style:{color:"#0c4a6e"}},{types:["number","inserted"],style:{color:"#B5CEA8"}},{types:["constant"],style:{color:"#0f172a"}},{types:["attr-name","variable"],style:{color:"#0c4a6e"}},{types:["deleted","string","attr-value","template-punctuation"],style:{color:"#64748b"}},{types:["selector"],style:{color:"#D7BA7D"}},{types:["tag"],style:{color:"#0ea5e9"}},{types:["tag"],languages:["markup"],style:{color:"#0ea5e9"}},{types:["punctuation","operator"],style:{color:"#475569"}},{types:["punctuation"],languages:["markup"],style:{color:"#808080"}},{types:["function"],style:{color:"#0e7490"}},{types:["class-name"],style:{color:"#0ea5e9"}},{types:["char"],style:{color:"#D16969"}}]},W={plain:{backgroundColor:"hsl(220, 13%, 18%)",color:"hsl(220, 14%, 71%)",textShadow:"0 1px rgba(0, 0, 0, 0.3)"},styles:[{types:["comment","prolog","cdata"],style:{color:"hsl(220, 10%, 40%)"}},{types:["doctype","punctuation","entity"],style:{color:"hsl(220, 14%, 71%)"}},{types:["attr-name","class-name","maybe-class-name","boolean","constant","number","atrule"],style:{color:"hsl(29, 54%, 61%)"}},{types:["keyword"],style:{color:"hsl(286, 60%, 67%)"}},{types:["property","tag","symbol","deleted","important"],style:{color:"hsl(355, 65%, 65%)"}},{types:["selector","string","char","builtin","inserted","regex","attr-value"],style:{color:"hsl(95, 38%, 62%)"}},{types:["variable","operator","function"],style:{color:"hsl(207, 82%, 66%)"}},{types:["url"],style:{color:"hsl(187, 47%, 55%)"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"hsl(220, 14%, 71%)"}}]},K={plain:{backgroundColor:"hsl(230, 1%, 98%)",color:"hsl(230, 8%, 24%)"},styles:[{types:["comment","prolog","cdata"],style:{color:"hsl(230, 4%, 64%)"}},{types:["doctype","punctuation","entity"],style:{color:"hsl(230, 8%, 24%)"}},{types:["attr-name","class-name","boolean","constant","number","atrule"],style:{color:"hsl(35, 99%, 36%)"}},{types:["keyword"],style:{color:"hsl(301, 63%, 40%)"}},{types:["property","tag","symbol","deleted","important"],style:{color:"hsl(5, 74%, 59%)"}},{types:["selector","string","char","builtin","inserted","regex","attr-value","punctuation"],style:{color:"hsl(119, 34%, 47%)"}},{types:["variable","operator","function"],style:{color:"hsl(221, 87%, 60%)"}},{types:["url"],style:{color:"hsl(198, 99%, 37%)"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"hsl(230, 8%, 24%)"}}]},V=(e,t)=>{const{plain:n}=e,r=e.styles.reduce(((e,n)=>{const{languages:r,style:s}=n;return r&&!r.includes(t)||n.types.forEach((t=>{const n=q(q({},e[t]),s);e[t]=n})),e}),{});return r.root=n,r.plain=$(q({},n),{backgroundColor:void 0}),r},Q=/\r\n|\r|\n/,Z=e=>{0===e.length?e.push({types:["plain"],content:"\n",empty:!0}):1===e.length&&""===e[0].content&&(e[0].content="\n",e[0].empty=!0)},X=(e,t)=>{const n=e.length;return n>0&&e[n-1]===t?e:e.concat(t)},Y=e=>{const t=[[]],n=[e],r=[0],s=[e.length];let o=0,i=0,a=[];const p=[a];for(;i>-1;){for(;(o=r[i]++)<s[i];){let e,c=t[i];const m=n[i][o];if("string"==typeof m?(c=i>0?c:["plain"],e=m):(c=X(c,m.type),m.alias&&(c=X(c,m.alias)),e=m.content),"string"!=typeof e){i++,t.push(c),n.push(e),r.push(0),s.push(e.length);continue}const d=e.split(Q),u=d.length;a.push({types:c,content:d[0]});for(let t=1;t<u;t++)Z(a),p.push(a=[]),a.push({types:c,content:d[t]})}i--,t.pop(),n.pop(),r.pop(),s.pop()}return Z(a),p},J=({children:e,language:t,code:n,theme:r,prism:s})=>{const o=t.toLowerCase(),i=((e,t)=>{const[n,r]=(0,m.useState)(V(t,e)),s=(0,m.useRef)(),o=(0,m.useRef)();return(0,m.useEffect)((()=>{t===s.current&&e===o.current||(s.current=t,o.current=e,r(V(t,e)))}),[e,t]),n})(o,r),a=(e=>(0,m.useCallback)((t=>{var n=t,{className:r,style:s,line:o}=n,i=_(n,["className","style","line"]);const a=$(q({},i),{className:(0,d.Z)("token-line",r)});return"object"==typeof e&&"plain"in e&&(a.style=e.plain),"object"==typeof s&&(a.style=q(q({},a.style||{}),s)),a}),[e]))(i),p=(e=>{const t=(0,m.useCallback)((({types:t,empty:n})=>{if(null!=e)return 1===t.length&&"plain"===t[0]?null!=n?{display:"inline-block"}:void 0:1===t.length&&null!=n?e[t[0]]:Object.assign(null!=n?{display:"inline-block"}:{},...t.map((t=>e[t])))}),[e]);return(0,m.useCallback)((e=>{var n=e,{token:r,className:s,style:o}=n,i=_(n,["token","className","style"]);const a=$(q({},i),{className:(0,d.Z)("token",...r.types,s),children:r.content,style:t(r)});return null!=o&&(a.style=q(q({},a.style||{}),o)),a}),[t])})(i),c=(({prism:e,code:t,grammar:n,language:r})=>{const s=(0,m.useRef)(e);return(0,m.useMemo)((()=>{if(null==n)return Y([t]);const e={code:t,grammar:n,language:r,tokens:[]};return s.current.hooks.run("before-tokenize",e),e.tokens=s.current.tokenize(t,n),s.current.hooks.run("after-tokenize",e),Y(e.tokens)}),[t,n,r])})({prism:s,language:o,code:n,grammar:s.languages[o]});return e({tokens:c,className:`prism-code language-${o}`,style:null!=i?i.root:{},getLineProps:a,getTokenProps:p})},ee=e=>(0,m.createElement)(J,$(q({},e),{prism:e.prism||C,theme:e.theme||z,code:e.code,language:e.language}))},38776:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=!0,s="Invariant failed";function o(e,t){if(!e){if(r)throw new Error(s);var n="function"==typeof t?t():t,o=n?"".concat(s,": ").concat(n):s;throw new Error(o)}}},57529:e=>{"use strict";e.exports={}},16887:e=>{"use strict";e.exports=JSON.parse('{"/api/1.19/-02e":{"__comp":"f0ad3fbb","__context":{"plugin":"92cd856b"},"specProps":"40019866","layoutProps":"d7daa0c0"},"/api/1.20/-4b3":{"__comp":"f0ad3fbb","__context":{"plugin":"36de4e63"},"specProps":"2bc02c69","layoutProps":"2562df19"},"/api/1.21/-3d4":{"__comp":"f0ad3fbb","__context":{"plugin":"14b152b5"},"specProps":"958fc5d1","layoutProps":"273e2073"},"/api/next/-3f6":{"__comp":"f0ad3fbb","__context":{"plugin":"66d7571d"},"specProps":"06242fb8","layoutProps":"17963394"},"/search-af1":{"__comp":"1a4e3797","__context":{"plugin":"fe0bce20"}},"/-f67":{"__comp":"5e95c892","__context":{"plugin":"bb23ad94"}},"/1.19-c8b":{"__comp":"a7bd4aaa","version":"8f18cd45"},"/1.19-0e7":{"__comp":"a94703ab"},"/1.19/-7e4":{"__comp":"17896441","content":"d8f77595"},"/1.19/administration/adding-legal-pages-4f9":{"__comp":"17896441","content":"a19a33f8"},"/1.19/administration/backup-and-restore-57a":{"__comp":"17896441","content":"86efe990"},"/1.19/administration/cmd-embedded-9b3":{"__comp":"17896441","content":"61ced07c"},"/1.19/administration/command-line-578":{"__comp":"17896441","content":"7d01a34e"},"/1.19/administration/config-cheat-sheet-eda":{"__comp":"17896441","content":"8832b266"},"/1.19/administration/customizing-gitea-604":{"__comp":"17896441","content":"4fc8d11f"},"/1.19/administration/email-setup-4c3":{"__comp":"17896441","content":"59a079a5"},"/1.19/administration/environment-variables-761":{"__comp":"17896441","content":"9f8e640c"},"/1.19/administration/external-renderers-dd8":{"__comp":"17896441","content":"f58bc905"},"/1.19/administration/fail2ban-setup-741":{"__comp":"17896441","content":"8195639c"},"/1.19/administration/git-lfs-setup-c3a":{"__comp":"17896441","content":"8604e8a9"},"/1.19/administration/https-setup-410":{"__comp":"17896441","content":"059a855e"},"/1.19/administration/logging-configuration-817":{"__comp":"17896441","content":"cf56a783"},"/1.19/administration/mail-templates-44c":{"__comp":"17896441","content":"f57d3cfa"},"/1.19/administration/repo-indexer-d6b":{"__comp":"17896441","content":"e1ca6579"},"/1.19/administration/reverse-proxies-391":{"__comp":"17896441","content":"27e65a37"},"/1.19/administration/search-engines-indexation-4e5":{"__comp":"17896441","content":"700d5b74"},"/1.19/administration/signing-4ee":{"__comp":"17896441","content":"194ee777"},"/1.19/awesome-513":{"__comp":"17896441","content":"2df8c9b4"},"/1.19/category/administration-84c":{"__comp":"14eb3368","categoryGeneratedIndex":"7b309948"},"/1.19/category/contributing-601":{"__comp":"14eb3368","categoryGeneratedIndex":"6e0571e5"},"/1.19/category/development-543":{"__comp":"14eb3368","categoryGeneratedIndex":"d01e7954"},"/1.19/category/help-e10":{"__comp":"14eb3368","categoryGeneratedIndex":"b3cb41e2"},"/1.19/category/installation-b39":{"__comp":"14eb3368","categoryGeneratedIndex":"90ea94ce"},"/1.19/category/usage-b27":{"__comp":"14eb3368","categoryGeneratedIndex":"532bb3c9"},"/1.19/contributing/guidelines-backend-984":{"__comp":"17896441","content":"dd1ba7ba"},"/1.19/contributing/guidelines-frontend-340":{"__comp":"17896441","content":"a112137f"},"/1.19/contributing/guidelines-refactoring-fe1":{"__comp":"17896441","content":"e05220f4"},"/1.19/contributing/localization-71c":{"__comp":"17896441","content":"c5baefc7"},"/1.19/development/api-usage-630":{"__comp":"17896441","content":"30a63dfc"},"/1.19/development/hacking-on-gitea-e25":{"__comp":"17896441","content":"15018e36"},"/1.19/development/integrations-8fe":{"__comp":"17896441","content":"f34d5b3a"},"/1.19/development/migrations-interfaces-97a":{"__comp":"17896441","content":"113c7499"},"/1.19/development/oauth2-provider-c93":{"__comp":"17896441","content":"d91173b9"},"/1.19/help/faq-d15":{"__comp":"17896441","content":"e43ea8b4"},"/1.19/help/seek-help-38b":{"__comp":"17896441","content":"c6d812e9"},"/1.19/installation/comparison-788":{"__comp":"17896441","content":"6f809003"},"/1.19/installation/database-prep-87c":{"__comp":"17896441","content":"adde7d79"},"/1.19/installation/install-from-binary-208":{"__comp":"17896441","content":"82860bb7"},"/1.19/installation/install-from-package-67e":{"__comp":"17896441","content":"e79608e2"},"/1.19/installation/install-from-source-c51":{"__comp":"17896441","content":"f16eac64"},"/1.19/installation/install-on-cloud-provider-7e0":{"__comp":"17896441","content":"d05a8fe2"},"/1.19/installation/install-on-kubernetes-2fe":{"__comp":"17896441","content":"41b60461"},"/1.19/installation/install-with-docker-f93":{"__comp":"17896441","content":"34e0fd35"},"/1.19/installation/install-with-docker-rootless-19d":{"__comp":"17896441","content":"e5723490"},"/1.19/installation/linux-service-76a":{"__comp":"17896441","content":"e337cd6c"},"/1.19/installation/upgrade-from-gitea-64d":{"__comp":"17896441","content":"04039183"},"/1.19/installation/upgrade-from-gogs-ce0":{"__comp":"17896441","content":"5fb069b2"},"/1.19/installation/windows-service-ed8":{"__comp":"17896441","content":"8ce82b6c"},"/1.19/packages/usage/packages/cargo-2a7":{"__comp":"17896441","content":"9c074485"},"/1.19/packages/usage/packages/chef-791":{"__comp":"17896441","content":"d04ffe0e"},"/1.19/packages/usage/packages/composer-38f":{"__comp":"17896441","content":"24093f05"},"/1.19/packages/usage/packages/conan-18f":{"__comp":"17896441","content":"920aa75b"},"/1.19/packages/usage/packages/conda-b40":{"__comp":"17896441","content":"5d26d66f"},"/1.19/packages/usage/packages/container-3ab":{"__comp":"17896441","content":"5f3636b8"},"/1.19/packages/usage/packages/generic-2bf":{"__comp":"17896441","content":"d49da0b2"},"/1.19/packages/usage/packages/helm-319":{"__comp":"17896441","content":"46daa9e8"},"/1.19/packages/usage/packages/maven-a34":{"__comp":"17896441","content":"8ebea00a"},"/1.19/packages/usage/packages/npm-cf3":{"__comp":"17896441","content":"744fcbeb"},"/1.19/packages/usage/packages/nuget-fae":{"__comp":"17896441","content":"8f08a653"},"/1.19/packages/usage/packages/overview-425":{"__comp":"17896441","content":"16727632"},"/1.19/packages/usage/packages/pub-028":{"__comp":"17896441","content":"885a2396"},"/1.19/packages/usage/packages/pypi-cd5":{"__comp":"17896441","content":"34fbd004"},"/1.19/packages/usage/packages/rubygems-404":{"__comp":"17896441","content":"e9754248"},"/1.19/packages/usage/packages/storage-cb7":{"__comp":"17896441","content":"aa8b4040"},"/1.19/packages/usage/packages/vagrant-eb1":{"__comp":"17896441","content":"9193df5c"},"/1.19/usage/agit-setup-8ce":{"__comp":"17896441","content":"602975fd"},"/1.19/usage/authentication-4b1":{"__comp":"17896441","content":"d83da57e"},"/1.19/usage/automatically-linked-references-c2b":{"__comp":"17896441","content":"ded9c0d2"},"/1.19/usage/clone-filters-7be":{"__comp":"17896441","content":"0c5922f9"},"/1.19/usage/incoming-email-01b":{"__comp":"17896441","content":"f02cd9d5"},"/1.19/usage/issue-pull-request-templates-7b8":{"__comp":"17896441","content":"b469afc7"},"/1.19/usage/labels-bc4":{"__comp":"17896441","content":"08bce0ce"},"/1.19/usage/merge-message-templates-761":{"__comp":"17896441","content":"8af8fe3b"},"/1.19/usage/permissions-221":{"__comp":"17896441","content":"9cc98a13"},"/1.19/usage/protected-tags-e3b":{"__comp":"17896441","content":"9adc65f7"},"/1.19/usage/pull-request-c84":{"__comp":"17896441","content":"7dd12aef"},"/1.19/usage/push-975":{"__comp":"17896441","content":"6585d26f"},"/1.19/usage/repo-mirror-0b0":{"__comp":"17896441","content":"57de87ea"},"/1.19/usage/template-repositories-173":{"__comp":"17896441","content":"a4214402"},"/1.19/usage/usage/secrets-95d":{"__comp":"17896441","content":"5caed40e"},"/1.19/usage/webhooks-f09":{"__comp":"17896441","content":"98e3fb2f"},"/1.20-fe0":{"__comp":"a7bd4aaa","version":"dcd04afa"},"/1.20-87b":{"__comp":"a94703ab"},"/1.20/-011":{"__comp":"17896441","content":"cd038e25"},"/1.20/administration/adding-legal-pages-176":{"__comp":"17896441","content":"6951dc00"},"/1.20/administration/backup-and-restore-911":{"__comp":"17896441","content":"af5b3356"},"/1.20/administration/cmd-embedded-859":{"__comp":"17896441","content":"d7e5089f"},"/1.20/administration/command-line-888":{"__comp":"17896441","content":"710e4696"},"/1.20/administration/config-cheat-sheet-921":{"__comp":"17896441","content":"08bd884c"},"/1.20/administration/customizing-gitea-e6d":{"__comp":"17896441","content":"95c568fa"},"/1.20/administration/email-setup-108":{"__comp":"17896441","content":"e1a20509"},"/1.20/administration/environment-variables-2fd":{"__comp":"17896441","content":"920e1310"},"/1.20/administration/external-renderers-3bd":{"__comp":"17896441","content":"d99e1e92"},"/1.20/administration/fail2ban-setup-0e8":{"__comp":"17896441","content":"2cf9491b"},"/1.20/administration/git-lfs-setup-439":{"__comp":"17896441","content":"f3ff5df3"},"/1.20/administration/https-setup-342":{"__comp":"17896441","content":"6c8959ee"},"/1.20/administration/logging-config-b95":{"__comp":"17896441","content":"5b713ba6"},"/1.20/administration/mail-templates-073":{"__comp":"17896441","content":"ed51f2a0"},"/1.20/administration/repo-indexer-2ec":{"__comp":"17896441","content":"ae545160"},"/1.20/administration/reverse-proxies-d34":{"__comp":"17896441","content":"751ec2e6"},"/1.20/administration/search-engines-indexation-ff9":{"__comp":"17896441","content":"a6ca09ab"},"/1.20/administration/signing-d22":{"__comp":"17896441","content":"3bfc0cf6"},"/1.20/awesome-5a1":{"__comp":"17896441","content":"6e66bba0"},"/1.20/category/administration-11c":{"__comp":"14eb3368","categoryGeneratedIndex":"66bddc39"},"/1.20/category/contributing-a6c":{"__comp":"14eb3368","categoryGeneratedIndex":"0466c8a8"},"/1.20/category/development-599":{"__comp":"14eb3368","categoryGeneratedIndex":"47dfdbcc"},"/1.20/category/help-cbe":{"__comp":"14eb3368","categoryGeneratedIndex":"c8f20b29"},"/1.20/category/installation-713":{"__comp":"14eb3368","categoryGeneratedIndex":"b2f1d193"},"/1.20/category/usage-4ab":{"__comp":"14eb3368","categoryGeneratedIndex":"38e83e54"},"/1.20/contributing/guidelines-backend-c6b":{"__comp":"17896441","content":"41f2b789"},"/1.20/contributing/guidelines-frontend-ab8":{"__comp":"17896441","content":"02a99f81"},"/1.20/contributing/guidelines-refactoring-8a6":{"__comp":"17896441","content":"0f7b856e"},"/1.20/contributing/localization-980":{"__comp":"17896441","content":"7776a1cf"},"/1.20/development/api-usage-cd1":{"__comp":"17896441","content":"8e3a3215"},"/1.20/development/hacking-on-gitea-9c2":{"__comp":"17896441","content":"95d4cf19"},"/1.20/development/integrations-afd":{"__comp":"17896441","content":"e2dc104f"},"/1.20/development/migrations-interfaces-97e":{"__comp":"17896441","content":"66fef31f"},"/1.20/development/oauth2-provider-892":{"__comp":"17896441","content":"cee8abde"},"/1.20/help/faq-d27":{"__comp":"17896441","content":"16b26bc3"},"/1.20/help/support-3af":{"__comp":"17896441","content":"39f93a3c"},"/1.20/installation/comparison-d55":{"__comp":"17896441","content":"753e65cb"},"/1.20/installation/database-prep-b6b":{"__comp":"17896441","content":"680c602c"},"/1.20/installation/install-from-binary-11f":{"__comp":"17896441","content":"0ab7a841"},"/1.20/installation/install-from-package-8ae":{"__comp":"17896441","content":"0eb98170"},"/1.20/installation/install-from-source-888":{"__comp":"17896441","content":"d302b7e9"},"/1.20/installation/install-on-cloud-provider-bd7":{"__comp":"17896441","content":"e6a144cf"},"/1.20/installation/install-on-kubernetes-370":{"__comp":"17896441","content":"2ed92642"},"/1.20/installation/install-with-docker-33a":{"__comp":"17896441","content":"723455e5"},"/1.20/installation/install-with-docker-rootless-1ed":{"__comp":"17896441","content":"0d410649"},"/1.20/installation/linux-service-a5a":{"__comp":"17896441","content":"8b00d406"},"/1.20/installation/upgrade-from-gitea-7c2":{"__comp":"17896441","content":"0fbf5e9a"},"/1.20/installation/upgrade-from-gogs-da2":{"__comp":"17896441","content":"5d63a1bf"},"/1.20/installation/windows-service-d68":{"__comp":"17896441","content":"a2993832"},"/1.20/usage/actions/act-runner-ef3":{"__comp":"17896441","content":"2003db85"},"/1.20/usage/actions/comparison-34c":{"__comp":"17896441","content":"348c8e41"},"/1.20/usage/actions/design-73b":{"__comp":"17896441","content":"63c6e713"},"/1.20/usage/actions/faq-879":{"__comp":"17896441","content":"907d8239"},"/1.20/usage/actions/overview-262":{"__comp":"17896441","content":"e5b7a486"},"/1.20/usage/actions/quickstart-97f":{"__comp":"17896441","content":"036204f0"},"/1.20/usage/agit-setup-9c3":{"__comp":"17896441","content":"0bfac75f"},"/1.20/usage/authentication-cab":{"__comp":"17896441","content":"6e23cbc0"},"/1.20/usage/automatically-linked-references-38f":{"__comp":"17896441","content":"fd450dee"},"/1.20/usage/clone-filters-8bb":{"__comp":"17896441","content":"9f138b7e"},"/1.20/usage/incoming-email-f97":{"__comp":"17896441","content":"953b571c"},"/1.20/usage/issue-pull-request-templates-08c":{"__comp":"17896441","content":"000362fe"},"/1.20/usage/labels-e8b":{"__comp":"17896441","content":"83fb5b4c"},"/1.20/usage/merge-message-templates-1a0":{"__comp":"17896441","content":"3711d97f"},"/1.20/usage/multi-factor-authentication-838":{"__comp":"17896441","content":"d043615f"},"/1.20/usage/packages/alpine-ade":{"__comp":"17896441","content":"714644c7"},"/1.20/usage/packages/cargo-c9a":{"__comp":"17896441","content":"594529d6"},"/1.20/usage/packages/chef-3df":{"__comp":"17896441","content":"32703ca7"},"/1.20/usage/packages/composer-cce":{"__comp":"17896441","content":"a76b4ce7"},"/1.20/usage/packages/conan-51e":{"__comp":"17896441","content":"23dd491f"},"/1.20/usage/packages/conda-323":{"__comp":"17896441","content":"a625ad90"},"/1.20/usage/packages/container-5da":{"__comp":"17896441","content":"aec4d2df"},"/1.20/usage/packages/cran-33e":{"__comp":"17896441","content":"bae42c17"},"/1.20/usage/packages/debian-d63":{"__comp":"17896441","content":"43cb725b"},"/1.20/usage/packages/generic-eba":{"__comp":"17896441","content":"bd7b2764"},"/1.20/usage/packages/go-6fe":{"__comp":"17896441","content":"6d976c0e"},"/1.20/usage/packages/helm-805":{"__comp":"17896441","content":"1c5c83a8"},"/1.20/usage/packages/maven-387":{"__comp":"17896441","content":"be8d9f32"},"/1.20/usage/packages/npm-efb":{"__comp":"17896441","content":"392a01f4"},"/1.20/usage/packages/nuget-f90":{"__comp":"17896441","content":"438b2836"},"/1.20/usage/packages/overview-129":{"__comp":"17896441","content":"c02af4fe"},"/1.20/usage/packages/pub-4b1":{"__comp":"17896441","content":"6b5553ee"},"/1.20/usage/packages/pypi-67f":{"__comp":"17896441","content":"27861d15"},"/1.20/usage/packages/rpm-d73":{"__comp":"17896441","content":"d0c053d4"},"/1.20/usage/packages/rubygems-e3d":{"__comp":"17896441","content":"24a894e3"},"/1.20/usage/packages/storage-759":{"__comp":"17896441","content":"8e7e9059"},"/1.20/usage/packages/swift-b39":{"__comp":"17896441","content":"001d867d"},"/1.20/usage/packages/vagrant-2f1":{"__comp":"17896441","content":"cfc41d03"},"/1.20/usage/permissions-bc0":{"__comp":"17896441","content":"7b3ead16"},"/1.20/usage/profile-readme-530":{"__comp":"17896441","content":"70e1815c"},"/1.20/usage/protected-tags-8f6":{"__comp":"17896441","content":"9cf31786"},"/1.20/usage/pull-request-0d2":{"__comp":"17896441","content":"7137783a"},"/1.20/usage/push-90b":{"__comp":"17896441","content":"9dcf599a"},"/1.20/usage/repo-mirror-15c":{"__comp":"17896441","content":"8cfc883c"},"/1.20/usage/secrets-432":{"__comp":"17896441","content":"05f42a77"},"/1.20/usage/template-repositories-061":{"__comp":"17896441","content":"797f46a4"},"/1.20/usage/webhooks-eb4":{"__comp":"17896441","content":"44d4472e"},"/next-b19":{"__comp":"a7bd4aaa","version":"935f2afb"},"/next-5be":{"__comp":"a94703ab"},"/next/-520":{"__comp":"17896441","content":"0e384e19"},"/next/administration/adding-legal-pages-1e8":{"__comp":"17896441","content":"9d611edf"},"/next/administration/backup-and-restore-d04":{"__comp":"17896441","content":"3588b438"},"/next/administration/cmd-embedded-5d7":{"__comp":"17896441","content":"95308d65"},"/next/administration/command-line-d6f":{"__comp":"17896441","content":"8292acd7"},"/next/administration/config-cheat-sheet-12f":{"__comp":"17896441","content":"6ced0ed6"},"/next/administration/customizing-gitea-18f":{"__comp":"17896441","content":"8443d0fa"},"/next/administration/email-setup-ad0":{"__comp":"17896441","content":"5be7f51a"},"/next/administration/environment-variables-408":{"__comp":"17896441","content":"dab090a2"},"/next/administration/external-renderers-79e":{"__comp":"17896441","content":"30eddb98"},"/next/administration/fail2ban-setup-b8c":{"__comp":"17896441","content":"9367abaa"},"/next/administration/git-lfs-setup-8f1":{"__comp":"17896441","content":"43c5c804"},"/next/administration/https-setup-446":{"__comp":"17896441","content":"ef5555b0"},"/next/administration/logging-config-faf":{"__comp":"17896441","content":"92d184bf"},"/next/administration/mail-templates-55d":{"__comp":"17896441","content":"f50c1d06"},"/next/administration/repo-indexer-90b":{"__comp":"17896441","content":"65ad8d44"},"/next/administration/reverse-proxies-604":{"__comp":"17896441","content":"216b5378"},"/next/administration/search-engines-indexation-2c7":{"__comp":"17896441","content":"e29fd564"},"/next/administration/signing-ecb":{"__comp":"17896441","content":"37ac2042"},"/next/awesome-f43":{"__comp":"17896441","content":"7591a37d"},"/next/category/administration-24f":{"__comp":"14eb3368","categoryGeneratedIndex":"caf8a924"},"/next/category/contributing-8b2":{"__comp":"14eb3368","categoryGeneratedIndex":"fc2378f2"},"/next/category/development-ccc":{"__comp":"14eb3368","categoryGeneratedIndex":"169cf1c0"},"/next/category/help-baa":{"__comp":"14eb3368","categoryGeneratedIndex":"247a242c"},"/next/category/installation-179":{"__comp":"14eb3368","categoryGeneratedIndex":"aa26ec4d"},"/next/category/usage-c00":{"__comp":"14eb3368","categoryGeneratedIndex":"156eb5fc"},"/next/contributing/guidelines-backend-e22":{"__comp":"17896441","content":"873ac124"},"/next/contributing/guidelines-frontend-c52":{"__comp":"17896441","content":"e26776dc"},"/next/contributing/guidelines-refactoring-e7e":{"__comp":"17896441","content":"1e87c929"},"/next/contributing/localization-9df":{"__comp":"17896441","content":"69d53082"},"/next/development/api-usage-1ce":{"__comp":"17896441","content":"e67e88da"},"/next/development/hacking-on-gitea-fff":{"__comp":"17896441","content":"576b7ba8"},"/next/development/integrations-dbe":{"__comp":"17896441","content":"5bcc7ba2"},"/next/development/migrations-interfaces-2bb":{"__comp":"17896441","content":"4f195978"},"/next/development/oauth2-provider-23c":{"__comp":"17896441","content":"4287cdd6"},"/next/help/faq-228":{"__comp":"17896441","content":"dd53d751"},"/next/help/support-099":{"__comp":"17896441","content":"940d9b8b"},"/next/installation/comparison-cdf":{"__comp":"17896441","content":"474a1488"},"/next/installation/database-prep-96a":{"__comp":"17896441","content":"3c5bb31d"},"/next/installation/install-from-binary-5de":{"__comp":"17896441","content":"e5a7a8a4"},"/next/installation/install-from-package-57f":{"__comp":"17896441","content":"b4366ef7"},"/next/installation/install-from-source-58d":{"__comp":"17896441","content":"760d6d76"},"/next/installation/install-on-cloud-provider-251":{"__comp":"17896441","content":"0bcabe4c"},"/next/installation/install-on-kubernetes-ba9":{"__comp":"17896441","content":"2d81ea8e"},"/next/installation/install-with-docker-c62":{"__comp":"17896441","content":"27b224e8"},"/next/installation/install-with-docker-rootless-5be":{"__comp":"17896441","content":"91368007"},"/next/installation/linux-service-eb4":{"__comp":"17896441","content":"7564934c"},"/next/installation/upgrade-from-gitea-312":{"__comp":"17896441","content":"ecf50d92"},"/next/installation/windows-service-a05":{"__comp":"17896441","content":"a369fff5"},"/next/usage/actions/act-runner-277":{"__comp":"17896441","content":"16acc14c"},"/next/usage/actions/comparison-ef6":{"__comp":"17896441","content":"b37b966a"},"/next/usage/actions/design-613":{"__comp":"17896441","content":"84ce3de8"},"/next/usage/actions/faq-12c":{"__comp":"17896441","content":"0e632177"},"/next/usage/actions/overview-747":{"__comp":"17896441","content":"f90a9751"},"/next/usage/actions/quickstart-1dd":{"__comp":"17896441","content":"89efebda"},"/next/usage/agit-setup-922":{"__comp":"17896441","content":"12a62887"},"/next/usage/authentication-bf8":{"__comp":"17896441","content":"dcafb87d"},"/next/usage/automatically-linked-references-54e":{"__comp":"17896441","content":"e266c2f6"},"/next/usage/badge-215":{"__comp":"17896441","content":"2cb10e59"},"/next/usage/blame-0e7":{"__comp":"17896441","content":"249ae2b3"},"/next/usage/blocking-user-4c6":{"__comp":"17896441","content":"5df3bec4"},"/next/usage/clone-filters-d35":{"__comp":"17896441","content":"8452fddc"},"/next/usage/code-owners-3ba":{"__comp":"17896441","content":"7354335f"},"/next/usage/incoming-email-86a":{"__comp":"17896441","content":"a2e2f47c"},"/next/usage/issue-pull-request-templates-58d":{"__comp":"17896441","content":"603cac7f"},"/next/usage/labels-792":{"__comp":"17896441","content":"1d2620c7"},"/next/usage/merge-message-templates-509":{"__comp":"17896441","content":"784e89ed"},"/next/usage/multi-factor-authentication-29a":{"__comp":"17896441","content":"25d9d665"},"/next/usage/packages/alpine-de1":{"__comp":"17896441","content":"7bdfaf2f"},"/next/usage/packages/cargo-a79":{"__comp":"17896441","content":"4697d8bb"},"/next/usage/packages/chef-4d9":{"__comp":"17896441","content":"a88e1293"},"/next/usage/packages/composer-6df":{"__comp":"17896441","content":"88dba292"},"/next/usage/packages/conan-130":{"__comp":"17896441","content":"dcbd0cd6"},"/next/usage/packages/conda-453":{"__comp":"17896441","content":"47597fea"},"/next/usage/packages/container-b54":{"__comp":"17896441","content":"f2793c32"},"/next/usage/packages/cran-b78":{"__comp":"17896441","content":"e08cd76a"},"/next/usage/packages/debian-96e":{"__comp":"17896441","content":"e660d2b0"},"/next/usage/packages/generic-3b0":{"__comp":"17896441","content":"fa9bda4f"},"/next/usage/packages/go-ce2":{"__comp":"17896441","content":"f5c6fd5d"},"/next/usage/packages/helm-3ed":{"__comp":"17896441","content":"b03837a4"},"/next/usage/packages/maven-625":{"__comp":"17896441","content":"6f8c3a2f"},"/next/usage/packages/npm-3f4":{"__comp":"17896441","content":"26407152"},"/next/usage/packages/nuget-258":{"__comp":"17896441","content":"07143415"},"/next/usage/packages/overview-eb8":{"__comp":"17896441","content":"df9610ac"},"/next/usage/packages/pub-d64":{"__comp":"17896441","content":"946202e7"},"/next/usage/packages/pypi-536":{"__comp":"17896441","content":"654acdae"},"/next/usage/packages/rpm-818":{"__comp":"17896441","content":"3637f1a8"},"/next/usage/packages/rubygems-675":{"__comp":"17896441","content":"48323df8"},"/next/usage/packages/storage-f16":{"__comp":"17896441","content":"18438858"},"/next/usage/packages/swift-44a":{"__comp":"17896441","content":"8712c912"},"/next/usage/packages/vagrant-b98":{"__comp":"17896441","content":"f3327d0e"},"/next/usage/permissions-c7c":{"__comp":"17896441","content":"e416db75"},"/next/usage/profile-readme-e55":{"__comp":"17896441","content":"0452e3d0"},"/next/usage/protected-tags-479":{"__comp":"17896441","content":"75ce391f"},"/next/usage/pull-request-bca":{"__comp":"17896441","content":"570e41d1"},"/next/usage/push-164":{"__comp":"17896441","content":"b34e5478"},"/next/usage/repo-mirror-da1":{"__comp":"17896441","content":"746e4d32"},"/next/usage/secrets-43e":{"__comp":"17896441","content":"18371c31"},"/next/usage/template-repositories-f9c":{"__comp":"17896441","content":"c7217017"},"/next/usage/webhooks-753":{"__comp":"17896441","content":"1051ae5b"},"/-baf":{"__comp":"a7bd4aaa","version":"a4230b24"},"/-a4d":{"__comp":"a94703ab"},"/administration/adding-legal-pages-0d0":{"__comp":"17896441","content":"38267a38"},"/administration/backup-and-restore-db6":{"__comp":"17896441","content":"2ffb1194"},"/administration/cmd-embedded-6d3":{"__comp":"17896441","content":"7f3bb4b3"},"/administration/command-line-416":{"__comp":"17896441","content":"71e46916"},"/administration/config-cheat-sheet-0e6":{"__comp":"17896441","content":"e57b131c"},"/administration/customizing-gitea-b2d":{"__comp":"17896441","content":"9d2956dd"},"/administration/email-setup-f74":{"__comp":"17896441","content":"b678728a"},"/administration/environment-variables-206":{"__comp":"17896441","content":"1f858c42"},"/administration/external-renderers-eb3":{"__comp":"17896441","content":"3f6a647d"},"/administration/fail2ban-setup-561":{"__comp":"17896441","content":"5acdc6b9"},"/administration/git-lfs-setup-415":{"__comp":"17896441","content":"d3a0e119"},"/administration/https-setup-066":{"__comp":"17896441","content":"d70dbc46"},"/administration/logging-config-a30":{"__comp":"17896441","content":"60640a74"},"/administration/mail-templates-f8d":{"__comp":"17896441","content":"98b4336e"},"/administration/repo-indexer-74d":{"__comp":"17896441","content":"0493ab7a"},"/administration/reverse-proxies-e8a":{"__comp":"17896441","content":"699157c4"},"/administration/search-engines-indexation-503":{"__comp":"17896441","content":"55905395"},"/administration/signing-cfb":{"__comp":"17896441","content":"b1199117"},"/awesome-84c":{"__comp":"17896441","content":"2e3ddd13"},"/category/administration-305":{"__comp":"14eb3368","categoryGeneratedIndex":"a8929721"},"/category/contributing-a52":{"__comp":"14eb3368","categoryGeneratedIndex":"534b2f09"},"/category/development-549":{"__comp":"14eb3368","categoryGeneratedIndex":"73781270"},"/category/help-9f7":{"__comp":"14eb3368","categoryGeneratedIndex":"df620f49"},"/category/installation-e8b":{"__comp":"14eb3368","categoryGeneratedIndex":"f0a1cce3"},"/category/usage-73d":{"__comp":"14eb3368","categoryGeneratedIndex":"4eef9a57"},"/contributing/guidelines-backend-9f1":{"__comp":"17896441","content":"a75fd143"},"/contributing/guidelines-frontend-70f":{"__comp":"17896441","content":"55b26081"},"/contributing/guidelines-refactoring-a83":{"__comp":"17896441","content":"8b61cc63"},"/contributing/localization-805":{"__comp":"17896441","content":"adb4af0e"},"/development/api-usage-5f4":{"__comp":"17896441","content":"988f1d90"},"/development/hacking-on-gitea-2ab":{"__comp":"17896441","content":"40aa5a46"},"/development/integrations-d6c":{"__comp":"17896441","content":"a4a66c55"},"/development/migrations-interfaces-1fc":{"__comp":"17896441","content":"390dad64"},"/development/oauth2-provider-0e5":{"__comp":"17896441","content":"831c01eb"},"/help/faq-dc5":{"__comp":"17896441","content":"2aaee83e"},"/help/support-9b8":{"__comp":"17896441","content":"554d3568"},"/installation/comparison-e42":{"__comp":"17896441","content":"3ce3cf2e"},"/installation/database-prep-a61":{"__comp":"17896441","content":"b8d52b5a"},"/installation/install-from-binary-814":{"__comp":"17896441","content":"7a4779c3"},"/installation/install-from-package-e70":{"__comp":"17896441","content":"3c6ed33a"},"/installation/install-from-source-886":{"__comp":"17896441","content":"40d76992"},"/installation/install-on-cloud-provider-afb":{"__comp":"17896441","content":"125282d8"},"/installation/install-on-kubernetes-a8b":{"__comp":"17896441","content":"8fc8a981"},"/installation/install-with-docker-27e":{"__comp":"17896441","content":"fb65ec83"},"/installation/install-with-docker-rootless-209":{"__comp":"17896441","content":"87b03a67"},"/installation/linux-service-71a":{"__comp":"17896441","content":"0a84bc75"},"/installation/upgrade-from-gitea-c5a":{"__comp":"17896441","content":"68069920"},"/installation/upgrade-from-gogs-0db":{"__comp":"17896441","content":"ae8ddd70"},"/installation/windows-service-6fd":{"__comp":"17896441","content":"780d9fe9"},"/usage/actions/act-runner-6d9":{"__comp":"17896441","content":"4ac88cac"},"/usage/actions/comparison-f76":{"__comp":"17896441","content":"13bdfb05"},"/usage/actions/design-412":{"__comp":"17896441","content":"5494109f"},"/usage/actions/faq-f85":{"__comp":"17896441","content":"25b99520"},"/usage/actions/overview-933":{"__comp":"17896441","content":"7bc40000"},"/usage/actions/quickstart-bb9":{"__comp":"17896441","content":"11042982"},"/usage/agit-setup-f89":{"__comp":"17896441","content":"4d2a9747"},"/usage/authentication-55e":{"__comp":"17896441","content":"2b1dc527"},"/usage/automatically-linked-references-f26":{"__comp":"17896441","content":"fed8654c"},"/usage/blame-99c":{"__comp":"17896441","content":"bdf20421"},"/usage/clone-filters-b2a":{"__comp":"17896441","content":"707a1404"},"/usage/code-owners-046":{"__comp":"17896441","content":"929cff94"},"/usage/incoming-email-925":{"__comp":"17896441","content":"5453c04d"},"/usage/issue-pull-request-templates-49e":{"__comp":"17896441","content":"f4b2686f"},"/usage/labels-787":{"__comp":"17896441","content":"cc6b40b0"},"/usage/merge-message-templates-61a":{"__comp":"17896441","content":"071e3419"},"/usage/multi-factor-authentication-1ad":{"__comp":"17896441","content":"a12ec3c7"},"/usage/packages/alpine-128":{"__comp":"17896441","content":"4b63b62b"},"/usage/packages/cargo-3f7":{"__comp":"17896441","content":"fc9a06f4"},"/usage/packages/chef-54b":{"__comp":"17896441","content":"b9233c9b"},"/usage/packages/composer-05d":{"__comp":"17896441","content":"16e122d4"},"/usage/packages/conan-54d":{"__comp":"17896441","content":"3ddc5947"},"/usage/packages/conda-433":{"__comp":"17896441","content":"a65c7c34"},"/usage/packages/container-468":{"__comp":"17896441","content":"a2c151bd"},"/usage/packages/cran-181":{"__comp":"17896441","content":"c8bae931"},"/usage/packages/debian-d14":{"__comp":"17896441","content":"ab5b0163"},"/usage/packages/generic-710":{"__comp":"17896441","content":"db6d46d8"},"/usage/packages/go-7ad":{"__comp":"17896441","content":"eb697d10"},"/usage/packages/helm-ef1":{"__comp":"17896441","content":"9a89b528"},"/usage/packages/maven-e4b":{"__comp":"17896441","content":"3ce40352"},"/usage/packages/npm-05e":{"__comp":"17896441","content":"35f5d803"},"/usage/packages/nuget-26f":{"__comp":"17896441","content":"4f06938f"},"/usage/packages/overview-ccd":{"__comp":"17896441","content":"cbe4b508"},"/usage/packages/pub-27d":{"__comp":"17896441","content":"6ad1c635"},"/usage/packages/pypi-420":{"__comp":"17896441","content":"5ba34e2a"},"/usage/packages/rpm-cbe":{"__comp":"17896441","content":"f907de38"},"/usage/packages/rubygems-a5d":{"__comp":"17896441","content":"8daf625c"},"/usage/packages/storage-392":{"__comp":"17896441","content":"5565945b"},"/usage/packages/swift-45d":{"__comp":"17896441","content":"198e3d52"},"/usage/packages/vagrant-b9c":{"__comp":"17896441","content":"f7f9d9cb"},"/usage/permissions-fec":{"__comp":"17896441","content":"ce7c9d24"},"/usage/profile-readme-353":{"__comp":"17896441","content":"042da145"},"/usage/protected-tags-59a":{"__comp":"17896441","content":"f0ad9594"},"/usage/pull-request-452":{"__comp":"17896441","content":"07d54999"},"/usage/push-8f3":{"__comp":"17896441","content":"d0425aae"},"/usage/repo-mirror-fad":{"__comp":"17896441","content":"0ec93a14"},"/usage/secrets-9f6":{"__comp":"17896441","content":"2b156e00"},"/usage/template-repositories-875":{"__comp":"17896441","content":"92ac261f"},"/usage/webhooks-d50":{"__comp":"17896441","content":"bb723893"},"/-3db":{"__comp":"17896441","content":"e643a4d5"}}')}},e=>{e.O(0,[532],(()=>{return t=97221,e(e.s=t);var t}));e.O()}]);